!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,(function(t){return e[t]}).bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s="6HT7")}({"6HT7":function(e,t,n){"use strict";function r(e,t,n,r){return new(n||(n=Promise))(function(a,s){function i(e){try{u(r.next(e))}catch(t){s(t)}}function o(e){try{u(r.throw(e))}catch(t){s(t)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(i,o)}u((r=r.apply(e,t||[])).next())})}n.r(t),n("8Fpi");var a=Object.defineProperty,s=e=>n("AfPn")(e),i=(e,t)=>{for(var n in(e=>{a(e,"__esModule",{value:!0})})(e),t)a(e,n,{get:t[n],enumerable:!0})};i({},{Abs:()=>je,Acos:()=>qe,Acosh:()=>Ke,AdadeltaOptimizer:()=>mp,AdagradOptimizer:()=>gp,AdamOptimizer:()=>yp,AdamaxOptimizer:()=>bp,Add:()=>Xe,AddN:()=>Ye,All:()=>Ze,Any:()=>Je,ArgMax:()=>Qe,ArgMin:()=>et,Asin:()=>tt,Asinh:()=>nt,Atan:()=>rt,Atan2:()=>st,Atanh:()=>at,AvgPool:()=>it,AvgPool3D:()=>ut,AvgPool3DGrad:()=>lt,AvgPoolGrad:()=>ot,BackendWasm:()=>XW,BatchMatMul:()=>ct,BatchToSpaceND:()=>ht,Bincount:()=>dt,BroadcastTo:()=>pt,Callback:()=>cI,CallbackList:()=>ob,Cast:()=>ft,Ceil:()=>mt,ClipByValue:()=>gt,Complex:()=>yt,ComplexAbs:()=>bt,Concat:()=>xt,Conv2D:()=>wt,Conv2DBackpropFilter:()=>vt,Conv2DBackpropInput:()=>kt,Conv3D:()=>It,Conv3DBackpropFilterV2:()=>Nt,Conv3DBackpropInputV2:()=>St,Cos:()=>Ct,Cosh:()=>Tt,CropAndResize:()=>Et,Cumsum:()=>_t,CustomCallback:()=>cb,DataStorage:()=>U,DenseBincount:()=>At,DepthToSpace:()=>$t,DepthwiseConv2dNative:()=>Ft,DepthwiseConv2dNativeBackpropFilter:()=>Rt,DepthwiseConv2dNativeBackpropInput:()=>Dt,Diag:()=>Mt,Dilation2D:()=>Ot,Dilation2DBackpropFilter:()=>Lt,Dilation2DBackpropInput:()=>zt,ENV:()=>Ue,EarlyStopping:()=>gI,Einsum:()=>Bt,Elu:()=>Wt,EluGrad:()=>Vt,Environment:()=>Pe,Equal:()=>Gt,Erf:()=>Ut,Exp:()=>Ht,ExpandDims:()=>jt,Expm1:()=>qt,FFT:()=>Kt,Fill:()=>Xt,FlipLeftRight:()=>Yt,Floor:()=>Zt,FloorDiv:()=>Jt,FromPixels:()=>jr,FusedBatchNorm:()=>Qt,FusedConv2D:()=>Xr,FusedDepthwiseConv2D:()=>Yr,GatherNd:()=>tn,GatherV2:()=>en,GraphModel:()=>qN,Greater:()=>nn,GreaterEqual:()=>rn,History:()=>lb,IFFT:()=>sn,Identity:()=>an,Imag:()=>on,InputSpec:()=>qy,IsFinite:()=>un,IsInf:()=>ln,IsNan:()=>cn,KernelBackend:()=>G,LRN:()=>vn,LRNGrad:()=>kn,LayerVariable:()=>Gy,LayersModel:()=>mx,LeakyRelu:()=>hn,Less:()=>dn,LessEqual:()=>pn,LinSpace:()=>fn,Log:()=>mn,Log1p:()=>gn,LogSoftmax:()=>wn,LogicalAnd:()=>yn,LogicalNot:()=>bn,LogicalOr:()=>xn,Max:()=>In,MaxPool:()=>Sn,MaxPool3D:()=>Tn,MaxPool3DGrad:()=>_n,MaxPoolGrad:()=>Cn,MaxPoolWithArgmax:()=>En,Maximum:()=>Nn,Mean:()=>An,Min:()=>$n,Minimum:()=>Fn,MirrorPad:()=>Rn,Mod:()=>Dn,MomentumOptimizer:()=>wp,Multinomial:()=>Mn,Multiply:()=>On,Neg:()=>zn,NonMaxSuppressionV3:()=>Pn,NonMaxSuppressionV4:()=>Bn,NonMaxSuppressionV5:()=>Wn,NotEqual:()=>Ln,OP_SCOPE_SUFFIX:()=>vs,OneHot:()=>Un,OnesLike:()=>Vn,Optimizer:()=>fp,Pack:()=>Gn,PadV2:()=>Hn,Pool:()=>jn,Pow:()=>qn,Prelu:()=>Kn,Prod:()=>Xn,RMSPropOptimizer:()=>vp,RNN:()=>vw,Range:()=>Yn,Rank:()=>Wa,Real:()=>Zn,RealDiv:()=>Pt,Reciprocal:()=>Jn,Reduction:()=>Vd,Relu:()=>Qn,Relu6:()=>sr,Reshape:()=>er,ResizeBilinear:()=>rr,ResizeBilinearGrad:()=>ar,ResizeNearestNeighbor:()=>tr,ResizeNearestNeighborGrad:()=>nr,Reverse:()=>ir,RotateWithOffset:()=>qr,Round:()=>or,Rsqrt:()=>ur,SGDOptimizer:()=>xp,ScatterNd:()=>lr,Select:()=>cr,Selu:()=>hr,Sequential:()=>bx,Sigmoid:()=>gr,Sign:()=>mr,Sin:()=>pr,Sinh:()=>fr,Slice:()=>dr,Softmax:()=>kr,Softplus:()=>yr,SpaceToBatchND:()=>wr,SparseFillEmptyRows:()=>Ir,SparseReshape:()=>Nr,SparseSegmentMean:()=>Sr,SparseSegmentSum:()=>Cr,SparseToDense:()=>Tr,SplitV:()=>vr,Sqrt:()=>br,Square:()=>Er,SquaredDifference:()=>_r,Step:()=>Hr,StridedSlice:()=>Ar,StringNGrams:()=>$r,StringSplit:()=>Fr,StringToHashBucketFast:()=>Rr,Sub:()=>Dr,Sum:()=>xr,SymbolicTensor:()=>Ky,Tan:()=>Mr,Tanh:()=>Or,Tensor:()=>La,TensorBuffer:()=>Ma,Tile:()=>zr,TopK:()=>Lr,Transform:()=>Pr,Transpose:()=>Br,Unique:()=>Wr,Unpack:()=>Vr,UnsortedSegmentSum:()=>Ur,Variable:()=>Ba,ZerosLike:()=>Gr,_FusedMatMul:()=>Kr,abs:()=>au,acos:()=>su,acosh:()=>iu,add:()=>eu,addN:()=>ou,all:()=>uu,any:()=>lu,argMax:()=>cu,argMin:()=>hu,asin:()=>du,asinh:()=>pu,atan:()=>fu,atan2:()=>mu,atanh:()=>gu,avgPool:()=>$u,avgPool3d:()=>Fu,backend:()=>Jo,backend_util:()=>Cp,basicLSTMCell:()=>zu,batchNorm:()=>Pu,batchNorm2d:()=>Bu,batchNorm3d:()=>Wu,batchNorm4d:()=>Vu,batchToSpaceND:()=>Lu,bincount:()=>Uu,booleanMaskAsync:()=>qh,broadcastTo:()=>Gu,browser:()=>Bi,buffer:()=>fi,callbacks:()=>yI,cast:()=>mi,ceil:()=>Hu,clipByValue:()=>ju,clone:()=>gi,complex:()=>Is,concat:()=>Ru,concat1d:()=>qu,concat2d:()=>Ku,concat3d:()=>Xu,concat4d:()=>Yu,constraints:()=>Em,conv1d:()=>Ju,conv2d:()=>Zu,conv2dTranspose:()=>el,conv3d:()=>tl,conv3dTranspose:()=>rl,copyRegisteredKernels:()=>ia,cos:()=>al,cosh:()=>sl,cosineWindow:()=>nd,cumsum:()=>il,customGrad:()=>Xl,data:()=>YN,denseBincount:()=>ol,deprecationWarn:()=>Oo,depthToSpace:()=>ul,depthwiseConv2d:()=>ll,deregisterOp:()=>vI,device_util:()=>ds,diag:()=>cl,dilation2d:()=>hl,disableDeprecationWarnings:()=>Mo,dispose:()=>Vo,disposeVariables:()=>zo,div:()=>nu,divNoNan:()=>bl,dot:()=>xl,dropout:()=>ed,einsum:()=>wl,elu:()=>vl,enableDebugMode:()=>Do,enableProdMode:()=>Ro,enclosingPowerOfTwo:()=>td,engine:()=>Lo,env:()=>We,equal:()=>ml,erf:()=>kl,exp:()=>Il,expandDims:()=>Nl,expm1:()=>Sl,eye:()=>Tl,fft:()=>kh,fill:()=>_l,findBackend:()=>Xo,findBackendFactory:()=>Yo,floor:()=>El,floorDiv:()=>tu,fused:()=>ad,gather:()=>Al,gatherND:()=>Qh,gather_util:()=>ji,getBackend:()=>qo,getGradient:()=>ea,getKernel:()=>Qr,getKernelsForBackend:()=>ta,grad:()=>Gl,grads:()=>Hl,greater:()=>$l,greaterEqual:()=>Fl,ifft:()=>Ih,imag:()=>Rl,image:()=>lp,inTopKAsync:()=>rd,initializers:()=>mg,input:()=>kx,io:()=>bi,irfft:()=>Nh,isFinite:()=>Dl,isInf:()=>Ml,isNaN:()=>Ol,keep:()=>Uo,kernel_impls:()=>gf,layers:()=>Dy,leakyRelu:()=>zl,less:()=>Ll,lessEqual:()=>Pl,linalg:()=>cp,linspace:()=>Bl,loadGraphModel:()=>KN,loadLayersModel:()=>vx,localResponseNormalization:()=>Wl,log:()=>Vl,log1p:()=>Ul,logSigmoid:()=>Ql,logSoftmax:()=>rc,logSumExp:()=>dc,logicalAnd:()=>pc,logicalNot:()=>fc,logicalOr:()=>mc,logicalXor:()=>gc,losses:()=>hp,matMul:()=>Oi,math:()=>Di,max:()=>ec,maxPool:()=>yc,maxPool3d:()=>bc,maxPoolWithArgmax:()=>xc,maximum:()=>wc,mean:()=>vc,memory:()=>Po,meshgrid:()=>Nc,metrics:()=>Uk,min:()=>Sc,minimum:()=>Cc,mirrorPad:()=>Tc,mod:()=>_c,model:()=>xx,models:()=>sI,moments:()=>Ac,movingAverage:()=>Yh,mul:()=>ru,multiRNNCell:()=>$c,multinomial:()=>Fc,neg:()=>Zl,nextFrame:()=>Sp,norm:()=>Xh,notEqual:()=>Rc,oneHot:()=>zi,ones:()=>Ic,onesLike:()=>Dc,op:()=>ks,outerProduct:()=>Mc,pad:()=>Oc,pad1d:()=>zc,pad2d:()=>Lc,pad3d:()=>Pc,pad4d:()=>Bc,pool:()=>Vc,pow:()=>Uc,prelu:()=>Gc,print:()=>yi,prod:()=>Hc,profile:()=>Bo,rand:()=>jc,randomGamma:()=>Xc,randomNormal:()=>Yc,randomUniform:()=>Zc,range:()=>Jc,ready:()=>jo,real:()=>Qc,reciprocal:()=>eh,registerBackend:()=>Zo,registerCallbackConstructor:()=>Ix,registerGradient:()=>ra,registerKernel:()=>na,registerOp:()=>xI,regularizers:()=>iI,relu:()=>th,relu6:()=>nh,removeBackend:()=>Ko,reshape:()=>Au,reverse:()=>rh,reverse1d:()=>ah,reverse2d:()=>sh,reverse3d:()=>ih,reverse4d:()=>oh,rfft:()=>Ch,round:()=>uh,rsqrt:()=>lh,scalar:()=>ch,scatterND:()=>Zh,scatter_util:()=>Ki,selu:()=>hh,separableConv2d:()=>dh,sequential:()=>wx,serialization:()=>go,setBackend:()=>Ho,setPlatform:()=>Qo,setWasmPath:()=>rV,setWasmPaths:()=>aV,setdiff1dAsync:()=>ph,sigmoid:()=>Du,sign:()=>fh,signal:()=>up,sin:()=>mh,sinh:()=>gh,slice:()=>Mu,slice1d:()=>yh,slice2d:()=>bh,slice3d:()=>xh,slice4d:()=>wh,slice_util:()=>Ji,softmax:()=>vh,softplus:()=>Jl,spaceToBatchND:()=>Wc,sparse:()=>dp,sparseToDense:()=>Jh,spectral:()=>op,split:()=>Sh,sqrt:()=>Th,square:()=>Ec,squaredDifference:()=>_h,squeeze:()=>Eh,stack:()=>Ah,step:()=>$h,stridedSlice:()=>Fh,string:()=>pp,sub:()=>tc,sum:()=>nc,sumOutType:()=>es,tan:()=>Rh,tanh:()=>Ou,tensor:()=>Ss,tensor1d:()=>Dh,tensor2d:()=>Mh,tensor3d:()=>Wi,tensor4d:()=>Oh,tensor5d:()=>zh,tensor6d:()=>Lh,tensor_util:()=>Za,test_util:()=>wo,tidy:()=>Wo,tile:()=>Cl,time:()=>Go,topk:()=>Ph,train:()=>Ip,transpose:()=>Li,truncatedNormal:()=>Bh,unique:()=>Wh,unregisterGradient:()=>sa,unregisterKernel:()=>aa,unsortedSegmentSum:()=>Vh,unstack:()=>Uh,upcastType:()=>Qa,util:()=>ua,valueAndGrad:()=>jl,valueAndGrads:()=>ql,variable:()=>Gh,variableGrads:()=>Kl,version:()=>wP,version_converter:()=>XN,version_core:()=>Fo,version_layers:()=>Gb,version_wasm:()=>sV,where:()=>gl,whereAsync:()=>jh,zeros:()=>kc,zerosLike:()=>yl});var o=Object.create,u=Object.defineProperty,l=Object.getOwnPropertyDescriptor,c=Object.getOwnPropertyNames,h=Object.getPrototypeOf,d=Object.prototype.hasOwnProperty,p=e=>u(e,"__esModule",{value:!0}),f=e=>s(e),m=(e,t)=>function(){return t||(0,e[Object.keys(e)[0]])((t={exports:{}}).exports,t),t.exports},g=(e,t)=>{for(var n in p(e),t)u(e,n,{get:t[n],enumerable:!0})},y=e=>((e,t,n)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let r of c(t))d.call(e,r)||"default"===r||u(e,r,{get:()=>t[r],enumerable:!(n=l(t,r))||n.enumerable});return e})(p(u(null!=e?o(h(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),b=m({"node_modules/.pnpm/long@4.0.0/node_modules/long/src/long.js"(e,t){t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(C){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=l(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function u(e,t){if(isNaN(e))return t?b:y;if(t){if(e<0)return b;if(e>=f)return I}else{if(e<=-m)return N;if(e+1>=m)return k}return e<0?u(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=u,r.fromBits=l;var c=Math.pow;function h(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return h(e.substring(1),t,n).neg();for(var a=u(c(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),l=parseInt(e.substring(i,i+o),n);if(o<8){var d=u(c(n,o));s=s.mul(d).add(u(l))}else s=(s=s.mul(a)).add(u(l))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?u(e,t):"string"==typeof e?h(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=h,r.fromValue=d;var p=4294967296,f=p*p,m=f/2,g=o(1<<24),y=o(0);r.ZERO=y;var b=o(0,!0);r.UZERO=b;var x=o(1);r.ONE=x;var w=o(1,!0);r.UONE=w;var v=o(-1);r.NEG_ONE=v;var k=l(-1,2147483647,!1);r.MAX_VALUE=k;var I=l(-1,-1,!0);r.MAX_UNSIGNED_VALUE=I;var N=l(0,-2147483648,!1);r.MIN_VALUE=N;var S=r.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(N)){var t=u(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=u(c(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),l=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(N)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(N)?N:this.not().add(x)},S.neg=S.negate,S.add=function(e){a(e)||(e=d(e));var t=0,n=0,r=0,s=0;return r+=(s+=(65535&this.low)+(65535&e.low))>>>16,n+=(r+=(this.low>>>16)+(e.low>>>16))>>>16,t+=(n+=(65535&this.high)+(65535&e.high))>>>16,t+=(this.high>>>16)+(e.high>>>16),l((r&=65535)<<16|(s&=65535),(t&=65535)<<16|(n&=65535),this.unsigned)},S.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return y;if(a(e)||(e=d(e)),n)return l(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(N))return e.isOdd()?N:y;if(e.eq(N))return this.isOdd()?N:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return u(this.toNumber()*e.toNumber(),this.unsigned);var t=65535&this.high,r=this.low>>>16,s=65535&this.low,i=65535&e.high,o=e.low>>>16,c=65535&e.low,h=0,p=0,f=0,m=0;return f+=(m+=s*c)>>>16,p+=(f+=r*c)>>>16,f&=65535,p+=(f+=s*o)>>>16,h+=(p+=t*c)>>>16,p&=65535,h+=(p+=r*o)>>>16,p&=65535,h+=(p+=s*i)>>>16,h+=(this.high>>>16)*c+t*o+r*i+s*(e.high>>>16),l((f&=65535)<<16|(m&=65535),(h&=65535)<<16|(p&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return w;s=b}else{if(this.eq(N))return e.eq(x)||e.eq(v)?N:e.eq(N)?x:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?x:v:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(N))return this.unsigned?b:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:c(2,i-48),h=u(t),p=h.mul(e);p.isNegative()||p.gt(r);)p=(h=u(t-=o,this.unsigned)).mul(e);h.isZero()&&(h=x),s=s.add(h),r=r.sub(p)}return s},S.div=S.divide,S.modulo=function(e){return a(e)||(e=d(e)),n?l((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return l(~this.low,~this.high,this.unsigned)},S.and=function(e){return a(e)||(e=d(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return a(e)||(e=d(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return a(e)||(e=d(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}}}),x=m({"(disabled):node_modules/.pnpm/node-fetch@2.6.1/node_modules/node-fetch/browser.js"(){}}),w=m({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/alea.js"(e,t){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),v=m({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xor128.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),k=m({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xorwow.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),I=m({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xorshift7.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],r[a]=n^=(e^=e<<13)^e<<9,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n&&(r[7]=-1),e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),N=m({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/xor4096.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n=a[s]=(n^=n>>>15)^(e^=e>>>12),t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(a=0==(n=o[127&s]^=r+(i=i+1640531527|0))?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,o[a]=(r^=r>>>15)^(n^=n>>>12);e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),S=m({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/lib/tychei.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),C=m({"(disabled):crypto"(){}}),T=m({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/seedrandom.js"(e,t){!function(e,r){var a,s=this,i=256,o=r.pow(i,6),u=r.pow(2,52),l=2*u,c=255;function h(t,n,c){var h=[],y=m(f((n=1==n?{entropy:!0}:n||{}).entropy?[t,g(e)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(i):(t=new Uint8Array(i),(s.crypto||s.msCrypto).getRandomValues(t)),g(t)}catch(o){var n=s.navigator,r=n&&n.plugins;return[+new Date,s,r,s.screen,g(e)]}}():t,3),h),b=new d(h),x=function(){for(var e=b.g(6),t=o,n=0;e<u;)e=(e+n)*i,t*=i,n=b.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,m(g(b.S),e),(n.pass||c||function(e,t,n,a){return a&&(a.S&&p(a,b),e.state=function(){return p(b,{})}),n?(r.random=e,t):e})(x,y,"global"in n?n.global:this==r,n.state)}function d(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(s){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(r.seedrandom=h,m(r.random(),e),"object"==typeof t&&t.exports){t.exports=h;try{a=C()}catch(y){}}else"function"==typeof define&&n("PDX0")&&define(function(){return h})}([],Math)}}),_=m({"node_modules/.pnpm/seedrandom@2.4.3/node_modules/seedrandom/index.js"(e,t){var n=w(),r=v(),a=k(),s=I(),i=N(),o=S(),u=T();u.alea=n,u.xor128=r,u.xorwow=a,u.xorshift7=s,u.xor4096=i,u.tychei=o,t.exports=u}}),E=m({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/alea.js"(e,t){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),A=m({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor128.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),$=m({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorwow.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),F=m({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorshift7.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],r[a]=n^=(e^=e<<13)^e<<9,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n&&(r[7]=-1),e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),R=m({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor4096.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n=a[s]=(n^=n>>>15)^(e^=e>>>12),t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(a=0==(n=o[127&s]^=r+(i=i+1640531527|0))?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,o[a]=(r^=r>>>15)^(n^=n>>>12);e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),D=m({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/tychei.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),M=m({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/seedrandom.js"(e,t){!function(e,r,a){var s,i=256,o=a.pow(i,6),u=a.pow(2,52),l=2*u,c=255;function h(t,n,c){var h=[],y=m(f((n=1==n?{entropy:!0}:n||{}).entropy?[t,g(r)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(i):(t=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(t)),g(t)}catch(o){var n=e.navigator,a=n&&n.plugins;return[+new Date,e,a,e.screen,g(r)]}}():t,3),h),b=new d(h),x=function(){for(var e=b.g(6),t=o,n=0;e<u;)e=(e+n)*i,t*=i,n=b.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,m(g(b.S),r),(n.pass||c||function(e,t,n,r){return r&&(r.S&&p(r,b),e.state=function(){return p(b,{})}),n?(a.random=e,t):e})(x,y,"global"in n?n.global:this==a,n.state)}function d(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(s){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(m(a.random(),r),"object"==typeof t&&t.exports){t.exports=h;try{s=C()}catch(y){}}else"function"==typeof define&&n("PDX0")?define(function(){return h}):a.seedrandom=h}("undefined"!=typeof self?self:e,[],Math)}}),O=m({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/index.js"(e,t){var n=E(),r=A(),a=$(),s=F(),i=R(),o=D(),u=M();u.alea=n,u.xor128=r,u.xorwow=a,u.xorshift7=s,u.xor4096=i,u.tychei=o,t.exports=u}}),z=m({"(disabled):node_modules/.pnpm/string_decoder@1.1.1/node_modules/string_decoder/lib/string_decoder.js"(){}}),L=m({"(disabled):path"(){}}),P=m({"(disabled):worker_threads"(){}}),B=m({"(disabled):perf_hooks"(){}}),W=m({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.7.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var r,a=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(r=r||__filename),function(e){function t(){return $.buffer!=D&&te($.buffer),M}function n(){return $.buffer!=D&&te($.buffer),O}function a(){return $.buffer!=D&&te($.buffer),z}function s(){return $.buffer!=D&&te($.buffer),W}function i(){return $.buffer!=D&&te($.buffer),V}var o,u,l=void 0!==(e=e||{})?e:{};l.ready=new Promise(function(e,t){o=e,u=t});var c,h={};for(c in l)l.hasOwnProperty(c)&&(h[c]=l[c]);var d=[],p=function(e,t){throw t},m=!1,g=!1,y=!1,b=!1;m="object"==typeof window,g="function"==typeof importScripts,y="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,b=!m&&!y&&!g;var x=l.ENVIRONMENT_IS_PTHREAD||!1;x&&(D=l.buffer);var w,v,k,I,N,S="";function C(e){return l.locateFile?l.locateFile(e,S):S+e}if(y){var T;S=g?L().dirname(S)+"/":__dirname+"/",w=function(e,t){return I||(I=f("fs")),N||(N=L()),e=N.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),G(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),d=process.argv.slice(2),process.on("uncaughtException",function(e){if(!(e instanceof ln))throw e}),process.on("unhandledRejection",we),p=function(e){process.exit(e)},l.inspect=function(){return"[Emscripten Module object]"};try{T=P()}catch(dn){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),dn}global.Worker=T.Worker}else b?("undefined"!=typeof read&&(w=function(e){return read(e)}),k=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(G("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?d=scriptArgs:void 0!==arguments&&(d=arguments),"function"==typeof quit&&(p=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(m||g)&&(g?S=self.location.href:"undefined"!=typeof document&&document.currentScript&&(S=document.currentScript.src),void 0!==r&&r&&(S=r),S=0!==S.indexOf("blob:")?S.substr(0,S.lastIndexOf("/")+1):"",y?(w=function(e,t){return I||(I=f("fs")),N||(N=L()),e=N.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),G(t.buffer),t}):(w=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},g&&(k=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),v=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));y&&"undefined"==typeof performance&&(global.performance=B().performance);var _,E=l.print||console.log.bind(console),A=l.printErr||console.warn.bind(console);for(c in h)h.hasOwnProperty(c)&&(l[c]=h[c]);h=null,l.arguments&&(d=l.arguments),l.quit&&(p=l.quit),Atomics,Atomics,Atomics,l.wasmBinary&&(_=l.wasmBinary);var $,F,R=l.noExitRuntime||!0;"object"!=typeof WebAssembly&&we("no native wasm support detected");var D,M,O,z,W,V,U=!1;function G(e,t){e||we("Assertion failed: "+t)}function H(e){var t=l["_"+e];return G(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function j(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);Z(e,t=rn(n),n)}return t},array:function(e){var t=rn(e.length);return Q(e,t),t}},i=H(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=tn()),o[l]=c(r[l])):o[l]=r[l]}var h,d=i.apply(null,o);return h=d,d="string"===t?X(h):"boolean"===t?Boolean(h):h,0!==u&&nn(u),d}function q(e,t,n,r){var a=(n=n||[]).every(function(e){return"number"===e});return"string"!==t&&a&&!r?H(e):function(){return j(e,t,n,arguments)}}function K(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var u=s-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&s)<<6|i)}else a+=String.fromCharCode(s)}return a}function X(e,t){return e?K(n(),e,t):""}function Y(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function Z(e,t,r){return Y(e,n(),t,r)}function J(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}function Q(e,n){t().set(e,n)}function ee(e,t){return e%t>0&&(e+=t-e%t),e}function te(e){D=e,l.HEAP8=M=new Int8Array(e),l.HEAP16=new Int16Array(e),l.HEAP32=z=new Int32Array(e),l.HEAPU8=O=new Uint8Array(e),l.HEAPU16=new Uint16Array(e),l.HEAPU32=W=new Uint32Array(e),l.HEAPF32=new Float32Array(e),l.HEAPF64=V=new Float64Array(e)}var ne,re=l.INITIAL_MEMORY||16777216;if(x)$=l.wasmMemory,D=l.buffer;else if(l.wasmMemory)$=l.wasmMemory;else if(!(($=new WebAssembly.Memory({initial:re/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw A("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),y&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");$&&(D=$.buffer),re=D.byteLength,te(D);var ae=[],se=[],ie=[],oe=[],ue=[];function le(){if(!x){if(l.preRun)for("function"==typeof l.preRun&&(l.preRun=[l.preRun]);l.preRun.length;)pe(l.preRun.shift());Fe(ae)}}function ce(){x||Fe(se)}function he(){x||Fe(ie)}function de(){if(!x){if(l.postRun)for("function"==typeof l.postRun&&(l.postRun=[l.postRun]);l.postRun.length;)fe(l.postRun.shift());Fe(ue)}}function pe(e){ae.unshift(e)}function fe(e){ue.unshift(e)}x||se.push({func:function(){Wt()}});var me=0,ge=null,ye=null;function be(e){G(!x,"addRunDependency cannot be used in a pthread worker"),me++,l.monitorRunDependencies&&l.monitorRunDependencies(me)}function xe(e){if(me--,l.monitorRunDependencies&&l.monitorRunDependencies(me),0==me&&(null!==ge&&(clearInterval(ge),ge=null),ye)){var t=ye;ye=null,t()}}function we(e){l.onAbort&&l.onAbort(e),x&&console.error("Pthread aborting at "+(new Error).stack),A(e+=""),U=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw u(t),t}function ve(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}l.preloadedImages={},l.preloadedAudios={};var ke="data:application/octet-stream;base64,";function Ie(e){return ve(e,ke)}var Ne="file://";function Se(e){return ve(e,Ne)}var Ce="tfjs-backend-wasm-threaded-simd.wasm";function Te(e){try{if(e==Ce&&_)return new Uint8Array(_);if(k)return k(e);throw"both async and sync fetching of the wasm failed"}catch(t){we(t)}}function _e(){if(!_&&(m||g)){if("function"==typeof fetch&&!Se(Ce))return fetch(Ce,{credentials:"same-origin"}).then(function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Ce+"'";return e.arrayBuffer()}).catch(function(){return Te(Ce)});if(v)return new Promise(function(e,t){v(Ce,function(t){e(new Uint8Array(t))},t)})}return Promise.resolve().then(function(){return Te(Ce)})}function Ee(){var e={a:Bt};function t(e,t){if(l.asm=e.exports,ne=l.asm.F,F=t,!x){var n=Le.unusedWorkers.length;Le.unusedWorkers.forEach(function(e){Le.loadWasmModuleToWorker(e,function(){--n||xe()})})}}function n(e){t(e.instance,e.module)}function r(t){return _e().then(function(t){return WebAssembly.instantiate(t,e)}).then(t,function(e){A("failed to asynchronously prepare wasm: "+e),we(e)})}if(x||be(),l.instantiateWasm)try{return l.instantiateWasm(e,t)}catch(dn){return A("Module.instantiateWasm callback failed with error: "+dn),!1}return(_||"function"!=typeof WebAssembly.instantiateStreaming||Ie(Ce)||Se(Ce)||"function"!=typeof fetch?r(n):fetch(Ce,{credentials:"same-origin"}).then(function(t){return WebAssembly.instantiateStreaming(t,e).then(n,function(e){return A("wasm streaming compile failed: "+e),A("falling back to ArrayBuffer instantiation"),r(n)})})).catch(u),{}}Ie(Ce)||(Ce=C(Ce));var Ae={9816:function(){throw"Canceled!"},9834:function(e,t){setTimeout(function(){Yt(e,t)},0)}};function $e(){Le.initRuntime()}function Fe(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?ne.get(n)():ne.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(l)}}function Re(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(a(),un>>2),s=0;if(r==e&&Atomics.compareExchange(a(),un>>2,r,0)==r&&(s=1,--n<=0))return 1;var i=Atomics.notify(a(),e>>2,n);if(i>=0)return i+s;throw"Atomics.notify returned an unexpected value "+i}function De(e){if(x)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";a()[e+12>>2]=0;var t=Le.pthreads[e];t.worker.terminate(),Le.freeThreadData(t),Le.runningWorkers.splice(Le.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function Me(e){if(x)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";Le.pthreads[e].worker.postMessage({cmd:"cancel"})}function Oe(e){if(x)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";var t=Le.pthreads[e];t&&(a()[e+12>>2]=0,Le.returnWorkerToPool(t.worker))}l._emscripten_futex_wake=Re;var ze,Le={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=Math.min(4,Math.max(1,(navigator.hardwareConcurrency||1)/2)),t=0;t<e;++t)Le.allocateUnusedWorker()},initRuntime:function(){for(var e=Vt(228),t=0;t<57;++t)s()[e/4+t]=0;a()[e+12>>2]=e;var n=e+152;a()[n>>2]=n;var r=Vt(512);for(t=0;t<128;++t)s()[r/4+t]=0;Atomics.store(s(),e+100>>2,r),Atomics.store(s(),e+40>>2,e),en(e,!g,1),Xt(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Le.threadExitHandlers.length>0;)Le.threadExitHandlers.pop()();x&&jt()&&qt()},runExitHandlersAndDeinitThread:function(e,t){Atomics.store(s(),e+56>>2,1),Atomics.store(s(),e+60>>2,0),Le.runExitHandlers(),Atomics.store(s(),e+4>>2,t),Atomics.store(s(),e+0>>2,1),Re(e+0,2147483647),en(0,0,0)},threadExit:function(e){var t=jt();t&&(Le.runExitHandlersAndDeinitThread(t,e),x&&postMessage({cmd:"exit"}))},threadCancel:function(){Le.runExitHandlersAndDeinitThread(jt(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in Le.pthreads)(r=Le.pthreads[e])&&r.worker&&Le.returnWorkerToPool(r.worker);Le.pthreads={};for(var t=0;t<Le.unusedWorkers.length;++t)(n=Le.unusedWorkers[t]).terminate();for(Le.unusedWorkers=[],t=0;t<Le.runningWorkers.length;++t){var n,r;Le.freeThreadData(r=(n=Le.runningWorkers[t]).pthread),n.terminate()}Le.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=a()[e.threadInfoStruct+100>>2];a()[e.threadInfoStruct+100>>2]=0,Ut(t),Ut(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&Ut(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){Le.runWithoutMainThreadQueuedCalls(function(){delete Le.pthreads[e.pthread.threadInfoStruct],Le.unusedWorkers.push(e),Le.runningWorkers.splice(Le.runningWorkers.indexOf(e),1),Le.freeThreadData(e.pthread),e.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(e){a()[on>>2]=0;try{e()}finally{a()[on>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(Le.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=jt()){var i=Le.pthreads[r.targetThread];return i?i.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Le.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===a)Kt();else if("spawnThread"===a)Mt(n.data);else if("cleanupThread"===a)Oe(r.thread);else if("killThread"===a)De(r.thread);else if("cancelThread"===a)Me(r.thread);else if("loaded"===a)e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread);else if("print"===a)E("Thread "+r.threadId+": "+r.text);else if("printErr"===a)A("Thread "+r.threadId+": "+r.text);else if("alert"===a)alert("Thread "+r.threadId+": "+r.text);else if("exit"===a)e.pthread&&Atomics.load(s(),e.pthread.threadInfoStruct+64>>2)&&Le.returnWorkerToPool(e);else if("exitProcess"===a)try{hn(r.returnCode)}catch(o){if(o instanceof ln)return;throw o}else"cancelDone"===a?Le.returnWorkerToPool(e):"objectTransfer"===a?Le.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):A("worker sent an unknown command "+a);Le.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){A("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},y&&(e.on("message",function(t){e.onmessage({data:t})}),e.on("error",function(t){e.onerror(t)}),e.on("exit",function(e){})),e.postMessage({cmd:"load",urlOrBlob:l.mainScriptUrlOrBlob||r,wasmMemory:$,wasmModule:F})},allocateUnusedWorker:function(){var e=C("tfjs-backend-wasm-threaded-simd.worker.js");Le.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Le.unusedWorkers.length&&(Le.allocateUnusedWorker(),Le.loadWasmModuleToWorker(Le.unusedWorkers[0])),Le.unusedWorkers.length>0?Le.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function Pe(e,t){an(e,t),nn(e)}function Be(){return R}function We(e,t){return ne.get(e)(t)}function Ve(e,t,n,r){we("Assertion failed: "+X(e)+", at: "+[t?X(t):"unknown filename",n,r?X(r):"unknown function"])}function Ue(e,t){_main(e,t)}function Ge(e){return a()[Gt()>>2]=e,e}function He(e,t){if(x)return Qe(1,1,e,t)}function je(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(x)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Le.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1}function qe(){we()}function Ke(e,t,n){var r=nt(t,n);return Ae[e].apply(null,r)}function Xe(e,t){}function Ye(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(m){if(Atomics.load(a(),e>>2)!=n)return-6;var s=performance.now(),i=s+r;for(Atomics.exchange(a(),un>>2,e);;){if((s=performance.now())>i)return Atomics.exchange(a(),un>>2,0),-73;if(0==Atomics.exchange(a(),un>>2,0))break;if(Kt(),Atomics.load(a(),e>>2)!=n)return-6;Atomics.exchange(a(),un>>2,e)}return 0}var o=Atomics.wait(a(),e>>2,n,r);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o}function Ze(e,t,r){n().copyWithin(e,t,t+r)}function Je(){return y?f("os").cpus().length:navigator.hardwareConcurrency}function Qe(e,t){for(var n=arguments.length-2,r=tn(),a=n,s=rn(8*a),o=s>>3,u=0;u<n;u++){var l=arguments[2+u];i()[o+u]=l}var c=Jt(e,a,s,t);return nn(r),c}l.establishStackSpace=Pe,l.getNoExitRuntime=Be,l.invokeEntryPoint=We,ze=y?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:x?function(){return performance.now()-l.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var et=[],tt=[];function nt(e,t){var r;for(tt.length=0,t>>=2;r=n()[e++];){var s=r<105;s&&1&t&&t++,tt.push(s?i()[t++>>1]:a()[t]),++t}return tt}function rt(e,t,n){et.length=t;for(var r=n>>3,a=0;a<t;a++)et[a]=i()[r+a];return(e<0?Ae[-e-1]:Pt[e]).apply(null,et)}function at(){return n().length}function st(e){try{return $.grow(e-D.byteLength+65535>>>16),te($.buffer),1}catch(dn){}}function it(e){var t=at();if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),st(Math.min(n,ee(Math.max(e,a),65536))))return!0}return!1}var ot={inEventHandler:0,removeAllEventListeners:function(){for(var e=ot.eventHandlers.length-1;e>=0;--e)ot._removeHandler(e);ot.eventHandlers=[],ot.deferredCalls=[]},registerRemoveEventListeners:function(){ot.removeEventListenersRegistered||(oe.push(ot.removeAllEventListeners),ot.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in ot.deferredCalls){var s=ot.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}ot.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),ot.deferredCalls.sort(function(e,t){return e.precedence<t.precedence})},removeDeferredCalls:function(e){for(var t=0;t<ot.deferredCalls.length;++t)ot.deferredCalls[t].targetFunction==e&&(ot.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return ot.inEventHandler&&ot.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(ot.canPerformEventHandlerRequests())for(var e=0;e<ot.deferredCalls.length;++e){var t=ot.deferredCalls[e];ot.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<ot.eventHandlers.length;++n)ot.eventHandlers[n].target!=e||t&&t!=ot.eventHandlers[n].eventTypeString||ot._removeHandler(n--)},_removeHandler:function(e){var t=ot.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),ot.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++ot.inEventHandler,ot.currentEventHandler=e,ot.runDeferredCalls(),e.handlerFunc(t),ot.runDeferredCalls(),--ot.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),ot.eventHandlers.push(e),ot.registerRemoveEventListeners();else for(var n=0;n<ot.eventHandlers.length;++n)ot.eventHandlers[n].target==e.target&&ot.eventHandlers[n].eventTypeString==e.eventTypeString&&ot._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,s){var i=tn(),o=rn(12);a()[o>>2]=n,a()[o+4>>2]=r,a()[o+8>>2]=s,Qt(0,e,637534208,t,r,o),nn(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Le.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function ut(e){var t=J(e)+1,n=Vt(t);return Z(e,n,t),n}function lt(e,t,n,r){var s=tn(),i=rn(12),o=0;t&&(o=ut(t)),a()[i>>2]=o,a()[i+4>>2]=n,a()[i+8>>2]=r,Qt(0,e,657457152,0,o,i),nn(s)}function ct(e,t,n,r){lt(e,t=t?X(t):"",n,r)}function ht(e){return e>2?X(e):e}var dt=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function pt(e){return e=ht(e),dt[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function ft(e){return pt(e)}function mt(e,t,n){var r=ft(e);if(!r)return-4;if(r.canvasSharedPtr&&(a()[r.canvasSharedPtr>>2]=t,a()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(ct(a()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var s=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);s=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,s&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function gt(e,t,n){return x?Qe(2,1,e,t,n):mt(e,t,n)}function yt(e,t,n){return ft(e)?mt(e,t,n):gt(e,t,n)}function bt(e){}function xt(e,t){}function wt(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)return e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)},1}function vt(e){var t=e.getExtension("OES_vertex_array_object");if(t)return e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)},1}function kt(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)return e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)},1}function It(e){return!!(e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw"))}var Nt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){Nt.lastError||(Nt.lastError=e)},getNewId:function(e){for(var t=Nt.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var s="",i=0;i<t;++i){var o=r?a()[r+4*i>>2]:-1;s+=X(a()[n+4*i>>2],o<0?void 0:o)}return s},createContext:function(e,t){var n=e.getContext("webgl",t);return n?Nt.registerContext(n,t):0},registerContext:function(e,t){var n=Vt(8);a()[n+4>>2]=jt();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),Nt.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&Nt.initExtensions(r),n},makeContextCurrent:function(e){return Nt.currentContext=Nt.contexts[e],l.ctx=_t=Nt.currentContext&&Nt.currentContext.GLctx,!(e&&!_t)},getContext:function(e){return Nt.contexts[e]},deleteContext:function(e){Nt.currentContext===Nt.contexts[e]&&(Nt.currentContext=null),"object"==typeof ot&&ot.removeAllHandlersOnTarget(Nt.contexts[e].GLctx.canvas),Nt.contexts[e]&&Nt.contexts[e].GLctx.canvas&&(Nt.contexts[e].GLctx.canvas.GLctxObject=void 0),Ut(Nt.contexts[e].handle),Nt.contexts[e]=null},initExtensions:function(e){if(e||(e=Nt.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;wt(t),vt(t),kt(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),It(t),(t.getSupportedExtensions()||[]).forEach(function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&t.getExtension(e)})}},populateUniformTable:function(e){for(var t=Nt.programs[e],n=Nt.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=_t.getProgramParameter(t,35718),s=0;s<a;++s){var i=_t.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var u=_t.getUniformLocation(t,o);if(u){var l=Nt.getNewId(Nt.uniforms);r[o]=[i.size,l],Nt.uniforms[l]=u;for(var c=1;c<i.size;++c)u=_t.getUniformLocation(t,o+"["+c+"]"),l=Nt.getNewId(Nt.uniforms),Nt.uniforms[l]=u}}}},St=["default","low-power","high-performance"];function Ct(e,t){var n=t>>2,r=a()[n+6],s={alpha:!!a()[n+0],depth:!!a()[n+1],stencil:!!a()[n+2],antialias:!!a()[n+3],premultipliedAlpha:!!a()[n+4],preserveDrawingBuffer:!!a()[n+5],powerPreference:St[r],failIfMajorPerformanceCaveat:!!a()[n+7],majorVersion:a()[n+8],minorVersion:a()[n+9],enableExtensionsByDefault:a()[n+10],explicitSwapControl:a()[n+11],proxyContextToMainThread:a()[n+12],renderViaOffscreenBackBuffer:a()[n+13]},i=ft(e);return i?s.explicitSwapControl?0:Nt.createContext(i,s):0}function Tt(e,t){return Ct(e,t)}var _t,Et={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Et.buffers[e];0===t||10===t?((1===e?E:A)(K(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Et.varargs+=4,a()[Et.varargs-4>>2]},getStr:function(e){return X(e)},get64:function(e,t){return e}};function At(e){return x?Qe(3,1,e):0}function $t(e,t,n,r,a){if(x)return Qe(4,1,e,t,n,r,a)}function Ft(e,t,r,s){if(x)return Qe(5,1,e,t,r,s);for(var i=0,o=0;o<r;o++){for(var u=a()[t+8*o>>2],l=a()[t+(8*o+4)>>2],c=0;c<l;c++)Et.printChar(e,n()[u+c]);i+=l}return a()[s>>2]=i,0}function Rt(e){var t=Le.threadExitHandlers.pop();e&&t()}function Dt(e,t){Le.threadExitHandlers.push(function(){ne.get(e)(t)})}function Mt(e){if(x)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=Le.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";Le.runningWorkers.push(t);for(var n=Vt(512),r=0;r<128;++r)a()[n+4*r>>2]=0;var i=e.stackBase+e.stackSize,o=Le.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},u=o.threadInfoStruct>>2;Atomics.store(s(),u+16,e.detached),Atomics.store(s(),u+25,n),Atomics.store(s(),u+10,o.threadInfoStruct),Atomics.store(s(),u+20,e.stackSize),Atomics.store(s(),u+19,i),Atomics.store(s(),u+26,e.stackSize),Atomics.store(s(),u+28,i),Atomics.store(s(),u+29,e.detached);var l=Ht()+40;Atomics.store(s(),u+43,l),t.pthread=o;var c={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){c.time=performance.now(),t.postMessage(c,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function Ot(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return A("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return A("pthread_create called with a null thread pointer!"),28;var i=[];if(x&&0===i.length)return Zt(687865856,e,t,n,r);var o=0,u=0,l=0;t&&-1!=t?(o=a()[t>>2],o+=81920,u=a()[t+8>>2],l=0!==a()[t+12>>2]):o=2097152;var c=0==u;c?u=sn(16,o):G((u-=o)>0);for(var h=Vt(228),d=0;d<57;++d)s()[(h>>2)+d]=0;a()[e>>2]=h,a()[h+12>>2]=h;var p=h+152;a()[p>>2]=p;var f={stackBase:u,stackSize:o,allocatedOwnStack:c,detached:l,startRoutine:n,pthread_ptr:h,arg:r,transferList:i};return x?(f.cmd="spawnThread",postMessage(f,i)):Mt(f),0}function zt(e){if(x)return Qe(6,1,e);switch(e){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ge(28),-1}x||Le.initMainThreadBlock();var Lt,Pt=[null,He,gt,At,$t,Ft,zt],Bt={e:Ve,r:Ue,x:je,b:qe,y:Ke,j:Xe,c:Ye,d:Re,f:ze,p:Ze,z:Je,u:rt,q:it,v:yt,i:bt,t:xt,w:Tt,m:At,n:$t,g:Ft,o:$e,a:$||l.wasmMemory,k:Rt,l:Dt,h:Ot,s:zt},Wt=(Ee(),l.___wasm_call_ctors=function(){return(Wt=l.___wasm_call_ctors=l.asm.A).apply(null,arguments)}),Vt=(l._init=function(){return(l._init=l.asm.B).apply(null,arguments)},l._register_tensor=function(){return(l._register_tensor=l.asm.C).apply(null,arguments)},l._dispose_data=function(){return(l._dispose_data=l.asm.D).apply(null,arguments)},l._dispose=function(){return(l._dispose=l.asm.E).apply(null,arguments)},l._Abs=function(){return(l._Abs=l.asm.G).apply(null,arguments)},l._Add=function(){return(l._Add=l.asm.H).apply(null,arguments)},l._AddN=function(){return(l._AddN=l.asm.I).apply(null,arguments)},l._All=function(){return(l._All=l.asm.J).apply(null,arguments)},l._Any=function(){return(l._Any=l.asm.K).apply(null,arguments)},l._ArgMax=function(){return(l._ArgMax=l.asm.L).apply(null,arguments)},l._AvgPool=function(){return(l._AvgPool=l.asm.M).apply(null,arguments)},l._BatchMatMul=function(){return(l._BatchMatMul=l.asm.N).apply(null,arguments)},l._Ceil=function(){return(l._Ceil=l.asm.O).apply(null,arguments)},l._ClipByValue=function(){return(l._ClipByValue=l.asm.P).apply(null,arguments)},l._Conv2D=function(){return(l._Conv2D=l.asm.Q).apply(null,arguments)},l._Conv2DBackpropInput=function(){return(l._Conv2DBackpropInput=l.asm.R).apply(null,arguments)},l._Cos=function(){return(l._Cos=l.asm.S).apply(null,arguments)},l._CropAndResize=function(){return(l._CropAndResize=l.asm.T).apply(null,arguments)},l._Cumsum=function(){return(l._Cumsum=l.asm.U).apply(null,arguments)},l._DepthToSpace=function(){return(l._DepthToSpace=l.asm.V).apply(null,arguments)},l._DepthwiseConv2dNative=function(){return(l._DepthwiseConv2dNative=l.asm.W).apply(null,arguments)},l._Equal=function(){return(l._Equal=l.asm.X).apply(null,arguments)},l._Exp=function(){return(l._Exp=l.asm.Y).apply(null,arguments)},l._FlipLeftRight=function(){return(l._FlipLeftRight=l.asm.Z).apply(null,arguments)},l._Floor=function(){return(l._Floor=l.asm._).apply(null,arguments)},l._FloorDiv=function(){return(l._FloorDiv=l.asm.$).apply(null,arguments)},l._FusedBatchNorm=function(){return(l._FusedBatchNorm=l.asm.aa).apply(null,arguments)},l._FusedConv2D=function(){return(l._FusedConv2D=l.asm.ba).apply(null,arguments)},l._FusedDepthwiseConv2D=function(){return(l._FusedDepthwiseConv2D=l.asm.ca).apply(null,arguments)},l._Gather=function(){return(l._Gather=l.asm.da).apply(null,arguments)},l._GatherNd=function(){return(l._GatherNd=l.asm.ea).apply(null,arguments)},l._Greater=function(){return(l._Greater=l.asm.fa).apply(null,arguments)},l._GreaterEqual=function(){return(l._GreaterEqual=l.asm.ga).apply(null,arguments)},l._LeakyRelu=function(){return(l._LeakyRelu=l.asm.ha).apply(null,arguments)},l._Less=function(){return(l._Less=l.asm.ia).apply(null,arguments)},l._LessEqual=function(){return(l._LessEqual=l.asm.ja).apply(null,arguments)},l._Log=function(){return(l._Log=l.asm.ka).apply(null,arguments)},l._LogicalAnd=function(){return(l._LogicalAnd=l.asm.la).apply(null,arguments)},l._Max=function(){return(l._Max=l.asm.ma).apply(null,arguments)},l._MaxPool=function(){return(l._MaxPool=l.asm.na).apply(null,arguments)},l._Maximum=function(){return(l._Maximum=l.asm.oa).apply(null,arguments)},l._Mean=function(){return(l._Mean=l.asm.pa).apply(null,arguments)},l._Min=function(){return(l._Min=l.asm.qa).apply(null,arguments)},l._Minimum=function(){return(l._Minimum=l.asm.ra).apply(null,arguments)},l._MirrorPad=function(){return(l._MirrorPad=l.asm.sa).apply(null,arguments)},l._Multiply=function(){return(l._Multiply=l.asm.ta).apply(null,arguments)},l._Neg=function(){return(l._Neg=l.asm.ua).apply(null,arguments)},l._NonMaxSuppressionV3=function(){return(l._NonMaxSuppressionV3=l.asm.va).apply(null,arguments)},l._NonMaxSuppressionV4=function(){return(l._NonMaxSuppressionV4=l.asm.wa).apply(null,arguments)},l._NonMaxSuppressionV5=function(){return(l._NonMaxSuppressionV5=l.asm.xa).apply(null,arguments)},l._NotEqual=function(){return(l._NotEqual=l.asm.ya).apply(null,arguments)},l._OneHot=function(){return(l._OneHot=l.asm.za).apply(null,arguments)},l._PadV2=function(){return(l._PadV2=l.asm.Aa).apply(null,arguments)},l._Pow=function(){return(l._Pow=l.asm.Ba).apply(null,arguments)},l._Prelu=function(){return(l._Prelu=l.asm.Ca).apply(null,arguments)},l._Prod=function(){return(l._Prod=l.asm.Da).apply(null,arguments)},l._RealDiv=function(){return(l._RealDiv=l.asm.Ea).apply(null,arguments)},l._Relu=function(){return(l._Relu=l.asm.Fa).apply(null,arguments)},l._Relu6=function(){return(l._Relu6=l.asm.Ga).apply(null,arguments)},l._ResizeBilinear=function(){return(l._ResizeBilinear=l.asm.Ha).apply(null,arguments)},l._Reverse=function(){return(l._Reverse=l.asm.Ia).apply(null,arguments)},l._RotateWithOffset=function(){return(l._RotateWithOffset=l.asm.Ja).apply(null,arguments)},l._Round=function(){return(l._Round=l.asm.Ka).apply(null,arguments)},l._Rsqrt=function(){return(l._Rsqrt=l.asm.La).apply(null,arguments)},l._ScatterNd=function(){return(l._ScatterNd=l.asm.Ma).apply(null,arguments)},l._SelectV2=function(){return(l._SelectV2=l.asm.Na).apply(null,arguments)},l._Sigmoid=function(){return(l._Sigmoid=l.asm.Oa).apply(null,arguments)},l._Sin=function(){return(l._Sin=l.asm.Pa).apply(null,arguments)},l._Softmax=function(){return(l._Softmax=l.asm.Qa).apply(null,arguments)},l._Sqrt=function(){return(l._Sqrt=l.asm.Ra).apply(null,arguments)},l._Square=function(){return(l._Square=l.asm.Sa).apply(null,arguments)},l._SquaredDifference=function(){return(l._SquaredDifference=l.asm.Ta).apply(null,arguments)},l._Step=function(){return(l._Step=l.asm.Ua).apply(null,arguments)},l._StridedSlice=function(){return(l._StridedSlice=l.asm.Va).apply(null,arguments)},l._Sub=function(){return(l._Sub=l.asm.Wa).apply(null,arguments)},l._Sum=function(){return(l._Sum=l.asm.Xa).apply(null,arguments)},l._Tan=function(){return(l._Tan=l.asm.Ya).apply(null,arguments)},l._Tanh=function(){return(l._Tanh=l.asm.Za).apply(null,arguments)},l._Tile=function(){return(l._Tile=l.asm._a).apply(null,arguments)},l._TopK=function(){return(l._TopK=l.asm.$a).apply(null,arguments)},l._Transform=function(){return(l._Transform=l.asm.ab).apply(null,arguments)},l._Transpose=function(){return(l._Transpose=l.asm.bb).apply(null,arguments)},l.__FusedMatMul=function(){return(l.__FusedMatMul=l.asm.cb).apply(null,arguments)},l._malloc=function(){return(Vt=l._malloc=l.asm.db).apply(null,arguments)}),Ut=l._free=function(){return(Ut=l._free=l.asm.eb).apply(null,arguments)},Gt=l.___errno_location=function(){return(Gt=l.___errno_location=l.asm.fb).apply(null,arguments)},Ht=l._emscripten_get_global_libc=function(){return(Ht=l._emscripten_get_global_libc=l.asm.gb).apply(null,arguments)},jt=l._pthread_self=function(){return(jt=l._pthread_self=l.asm.hb).apply(null,arguments)},qt=l.___pthread_tsd_run_dtors=function(){return(qt=l.___pthread_tsd_run_dtors=l.asm.ib).apply(null,arguments)},Kt=l._emscripten_main_thread_process_queued_calls=function(){return(Kt=l._emscripten_main_thread_process_queued_calls=l.asm.jb).apply(null,arguments)},Xt=(l._emscripten_current_thread_process_queued_calls=function(){return(l._emscripten_current_thread_process_queued_calls=l.asm.kb).apply(null,arguments)},l._emscripten_register_main_browser_thread_id=function(){return(Xt=l._emscripten_register_main_browser_thread_id=l.asm.lb).apply(null,arguments)}),Yt=l.__emscripten_do_dispatch_to_thread=function(){return(Yt=l.__emscripten_do_dispatch_to_thread=l.asm.mb).apply(null,arguments)},Zt=l._emscripten_sync_run_in_main_thread_4=function(){return(Zt=l._emscripten_sync_run_in_main_thread_4=l.asm.nb).apply(null,arguments)},Jt=l._emscripten_run_in_main_runtime_thread_js=function(){return(Jt=l._emscripten_run_in_main_runtime_thread_js=l.asm.ob).apply(null,arguments)},Qt=l.__emscripten_call_on_thread=function(){return(Qt=l.__emscripten_call_on_thread=l.asm.pb).apply(null,arguments)},en=(l._emscripten_tls_init=function(){return(l._emscripten_tls_init=l.asm.qb).apply(null,arguments)},l.__emscripten_thread_init=function(){return(en=l.__emscripten_thread_init=l.asm.rb).apply(null,arguments)}),tn=l.stackSave=function(){return(tn=l.stackSave=l.asm.sb).apply(null,arguments)},nn=l.stackRestore=function(){return(nn=l.stackRestore=l.asm.tb).apply(null,arguments)},rn=l.stackAlloc=function(){return(rn=l.stackAlloc=l.asm.ub).apply(null,arguments)},an=l._emscripten_stack_set_limits=function(){return(an=l._emscripten_stack_set_limits=l.asm.vb).apply(null,arguments)},sn=l._memalign=function(){return(sn=l._memalign=l.asm.wb).apply(null,arguments)},on=l.__emscripten_allow_main_runtime_queued_calls=9808,un=l.__emscripten_main_thread_futex=11432;function ln(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function cn(e){if(e=e||d,!(me>0)){if(x)return o(l),ce(),void postMessage({cmd:"loaded"});le(),me>0||(l.setStatus?(l.setStatus("Running..."),setTimeout(function(){setTimeout(function(){l.setStatus("")},1),t()},1)):t())}function t(){Lt||(Lt=!0,l.calledRun=!0,U||(ce(),he(),o(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),de()))}}function hn(e,t){if(!t||!R||0!==e){if(!t&&x)throw postMessage({cmd:"exitProcess",returnCode:e}),new ln(e);R||(Le.terminateAllThreads(),l.onExit&&l.onExit(e),U=!0),p(e,new ln(e))}}if(l.cwrap=q,l.PThread=Le,l.PThread=Le,l.wasmMemory=$,l.ExitStatus=ln,ye=function e(){Lt||cn(),Lt||(ye=e)},l.run=cn,l.preInit)for("function"==typeof l.preInit&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();return x&&(R=!1,Le.initWorker()),cn(),e.ready});"object"==typeof e&&"object"==typeof t?t.exports=a:"function"==typeof define&&n("PDX0")?define([],function(){return a}):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=a)}}),V=m({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.7.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var r,a=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(r=r||__filename),function(e){var t,n,a=void 0!==(e=e||{})?e:{};a.ready=new Promise(function(e,r){t=e,n=r});var s,i={};for(s in a)a.hasOwnProperty(s)&&(i[s]=a[s]);var o=[],u=!1,l=!1,c=!1,h=!1;u="object"==typeof window,l="function"==typeof importScripts,c="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,h=!u&&!c&&!l;var d,p,m,g,y,b="";function x(e){return a.locateFile?a.locateFile(e,b):b+e}c?(b=l?L().dirname(b)+"/":__dirname+"/",d=function(e,t){return g||(g=f("fs")),y||(y=L()),e=y.normalize(e),g.readFileSync(e,t?null:"utf8")},m=function(e){var t=d(e,!0);return t.buffer||(t=new Uint8Array(t)),S(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),o=process.argv.slice(2),process.on("uncaughtException",function(e){if(!(e instanceof De))throw e}),process.on("unhandledRejection",ae),a.inspect=function(){return"[Emscripten Module object]"}):h?("undefined"!=typeof read&&(d=function(e){return read(e)}),m=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(S("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?o=scriptArgs:void 0!==arguments&&(o=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(u||l)&&(l?b=self.location.href:"undefined"!=typeof document&&document.currentScript&&(b=document.currentScript.src),r&&(b=r),b=0!==b.indexOf("blob:")?b.substr(0,b.lastIndexOf("/")+1):"",d=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},l&&(m=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),p=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var w,v,k=a.print||console.log.bind(console),I=a.printErr||console.warn.bind(console);for(s in i)i.hasOwnProperty(s)&&(a[s]=i[s]);i=null,a.arguments&&(o=a.arguments),a.wasmBinary&&(w=a.wasmBinary),"object"!=typeof WebAssembly&&ae("no native wasm support detected");var N=!1;function S(e,t){e||ae("Assertion failed: "+t)}function C(e){var t=a["_"+e];return S(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function T(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);z(e,t=Re(n),n)}return t},array:function(e){var t=Re(e.length);return P(e,t),t}},i=C(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=$e()),o[l]=c(r[l])):o[l]=r[l]}var h,d=i.apply(null,o);return h=d,d="string"===t?M(h):"boolean"===t?Boolean(h):h,0!==u&&Fe(u),d}function _(e,t,n,r){var a=(n=n||[]).every(function(e){return"number"===e});return"string"!==t&&a&&!r?C(e):function(){return T(e,t,n,arguments)}}var E,A,$,F,R="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function D(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&R)return R.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function M(e,t){return e?D($,e,t):""}function O(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function z(e,t,n){return O(e,$,t,n)}function P(e,t){A.set(e,t)}function B(e,t){return e%t>0&&(e+=t-e%t),e}function W(e){E=e,a.HEAP8=A=new Int8Array(e),a.HEAP16=new Int16Array(e),a.HEAP32=F=new Int32Array(e),a.HEAPU8=$=new Uint8Array(e),a.HEAPU16=new Uint16Array(e),a.HEAPU32=new Uint32Array(e),a.HEAPF32=new Float32Array(e),a.HEAPF64=new Float64Array(e)}var V,U=[],G=[],H=[],j=[];function q(){if(a.preRun)for("function"==typeof a.preRun&&(a.preRun=[a.preRun]);a.preRun.length;)Z(a.preRun.shift());fe(U)}function K(){fe(G)}function X(){fe(H)}function Y(){if(a.postRun)for("function"==typeof a.postRun&&(a.postRun=[a.postRun]);a.postRun.length;)J(a.postRun.shift());fe(j)}function Z(e){U.unshift(e)}function J(e){j.unshift(e)}G.push({func:function(){Ee()}});var Q=0,ee=null,te=null;function ne(e){Q++,a.monitorRunDependencies&&a.monitorRunDependencies(Q)}function re(e){if(Q--,a.monitorRunDependencies&&a.monitorRunDependencies(Q),0==Q&&(null!==ee&&(clearInterval(ee),ee=null),te)){var t=te;te=null,t()}}function ae(e){a.onAbort&&a.onAbort(e),I(e+=""),N=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw n(t),t}function se(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}a.preloadedImages={},a.preloadedAudios={};var ie="data:application/octet-stream;base64,";function oe(e){return se(e,ie)}var ue="file://";function le(e){return se(e,ue)}var ce="tfjs-backend-wasm.wasm";function he(e){try{if(e==ce&&w)return new Uint8Array(w);if(m)return m(e);throw"both async and sync fetching of the wasm failed"}catch(t){ae(t)}}function de(){if(!w&&(u||l)){if("function"==typeof fetch&&!le(ce))return fetch(ce,{credentials:"same-origin"}).then(function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ce+"'";return e.arrayBuffer()}).catch(function(){return he(ce)});if(p)return new Promise(function(e,t){p(ce,function(t){e(new Uint8Array(t))},t)})}return Promise.resolve().then(function(){return he(ce)})}function pe(){var e={a:_e};function t(e,t){a.asm=e.exports,W((v=a.asm.i).buffer),V=a.asm.o,re()}function r(e){t(e.instance)}function s(t){return de().then(function(t){return WebAssembly.instantiate(t,e)}).then(t,function(e){I("failed to asynchronously prepare wasm: "+e),ae(e)})}if(ne(),a.instantiateWasm)try{return a.instantiateWasm(e,t)}catch(i){return I("Module.instantiateWasm callback failed with error: "+i),!1}return(w||"function"!=typeof WebAssembly.instantiateStreaming||oe(ce)||le(ce)||"function"!=typeof fetch?s(r):fetch(ce,{credentials:"same-origin"}).then(function(t){return WebAssembly.instantiateStreaming(t,e).then(r,function(e){return I("wasm streaming compile failed: "+e),I("falling back to ArrayBuffer instantiation"),s(r)})})).catch(n),{}}function fe(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?V.get(n)():V.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(a)}}function me(){ae()}function ge(e,t,n){$.copyWithin(e,t,t+n)}function ye(){return $.length}function be(e){try{return v.grow(e-E.byteLength+65535>>>16),W(v.buffer),1}catch(t){}}function xe(e){var t=ye(),n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),be(Math.min(n,B(Math.max(e,a),65536))))return!0}return!1}oe(ce)||(ce=x(ce));var we={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=we.buffers[e];0===t||10===t?((1===e?k:I)(D(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return we.varargs+=4,F[we.varargs-4>>2]},getStr:function(e){return M(e)},get64:function(e,t){return e}};function ve(e){return 0}function ke(e,t,n,r,a){}function Ie(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=F[t+8*s>>2],o=F[t+(8*s+4)>>2],u=0;u<o;u++)we.printChar(e,$[i+u]);a+=o}return F[r>>2]=a,0}function Ne(){return 6}function Se(e){return F[Ae()>>2]=e,e}function Ce(e){switch(e){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Se(28),-1}var Te,_e={a:me,d:ge,e:xe,f:ve,c:ke,b:Ie,g:Ne,h:Ce},Ee=(pe(),a.___wasm_call_ctors=function(){return(Ee=a.___wasm_call_ctors=a.asm.j).apply(null,arguments)}),Ae=(a._init=function(){return(a._init=a.asm.k).apply(null,arguments)},a._register_tensor=function(){return(a._register_tensor=a.asm.l).apply(null,arguments)},a._dispose_data=function(){return(a._dispose_data=a.asm.m).apply(null,arguments)},a._dispose=function(){return(a._dispose=a.asm.n).apply(null,arguments)},a._Abs=function(){return(a._Abs=a.asm.p).apply(null,arguments)},a._Add=function(){return(a._Add=a.asm.q).apply(null,arguments)},a._AddN=function(){return(a._AddN=a.asm.r).apply(null,arguments)},a._All=function(){return(a._All=a.asm.s).apply(null,arguments)},a._Any=function(){return(a._Any=a.asm.t).apply(null,arguments)},a._ArgMax=function(){return(a._ArgMax=a.asm.u).apply(null,arguments)},a._AvgPool=function(){return(a._AvgPool=a.asm.v).apply(null,arguments)},a._BatchMatMul=function(){return(a._BatchMatMul=a.asm.w).apply(null,arguments)},a._Ceil=function(){return(a._Ceil=a.asm.x).apply(null,arguments)},a._ClipByValue=function(){return(a._ClipByValue=a.asm.y).apply(null,arguments)},a._Conv2D=function(){return(a._Conv2D=a.asm.z).apply(null,arguments)},a._Conv2DBackpropInput=function(){return(a._Conv2DBackpropInput=a.asm.A).apply(null,arguments)},a._Cos=function(){return(a._Cos=a.asm.B).apply(null,arguments)},a._CropAndResize=function(){return(a._CropAndResize=a.asm.C).apply(null,arguments)},a._Cumsum=function(){return(a._Cumsum=a.asm.D).apply(null,arguments)},a._DepthToSpace=function(){return(a._DepthToSpace=a.asm.E).apply(null,arguments)},a._DepthwiseConv2dNative=function(){return(a._DepthwiseConv2dNative=a.asm.F).apply(null,arguments)},a._Equal=function(){return(a._Equal=a.asm.G).apply(null,arguments)},a._Exp=function(){return(a._Exp=a.asm.H).apply(null,arguments)},a._FlipLeftRight=function(){return(a._FlipLeftRight=a.asm.I).apply(null,arguments)},a._Floor=function(){return(a._Floor=a.asm.J).apply(null,arguments)},a._FloorDiv=function(){return(a._FloorDiv=a.asm.K).apply(null,arguments)},a._FusedBatchNorm=function(){return(a._FusedBatchNorm=a.asm.L).apply(null,arguments)},a._FusedConv2D=function(){return(a._FusedConv2D=a.asm.M).apply(null,arguments)},a._FusedDepthwiseConv2D=function(){return(a._FusedDepthwiseConv2D=a.asm.N).apply(null,arguments)},a._Gather=function(){return(a._Gather=a.asm.O).apply(null,arguments)},a._GatherNd=function(){return(a._GatherNd=a.asm.P).apply(null,arguments)},a._Greater=function(){return(a._Greater=a.asm.Q).apply(null,arguments)},a._GreaterEqual=function(){return(a._GreaterEqual=a.asm.R).apply(null,arguments)},a._LeakyRelu=function(){return(a._LeakyRelu=a.asm.S).apply(null,arguments)},a._Less=function(){return(a._Less=a.asm.T).apply(null,arguments)},a._LessEqual=function(){return(a._LessEqual=a.asm.U).apply(null,arguments)},a._Log=function(){return(a._Log=a.asm.V).apply(null,arguments)},a._LogicalAnd=function(){return(a._LogicalAnd=a.asm.W).apply(null,arguments)},a._Max=function(){return(a._Max=a.asm.X).apply(null,arguments)},a._MaxPool=function(){return(a._MaxPool=a.asm.Y).apply(null,arguments)},a._Maximum=function(){return(a._Maximum=a.asm.Z).apply(null,arguments)},a._Mean=function(){return(a._Mean=a.asm._).apply(null,arguments)},a._Min=function(){return(a._Min=a.asm.$).apply(null,arguments)},a._Minimum=function(){return(a._Minimum=a.asm.aa).apply(null,arguments)},a._MirrorPad=function(){return(a._MirrorPad=a.asm.ba).apply(null,arguments)},a._Multiply=function(){return(a._Multiply=a.asm.ca).apply(null,arguments)},a._Neg=function(){return(a._Neg=a.asm.da).apply(null,arguments)},a._NonMaxSuppressionV3=function(){return(a._NonMaxSuppressionV3=a.asm.ea).apply(null,arguments)},a._NonMaxSuppressionV4=function(){return(a._NonMaxSuppressionV4=a.asm.fa).apply(null,arguments)},a._NonMaxSuppressionV5=function(){return(a._NonMaxSuppressionV5=a.asm.ga).apply(null,arguments)},a._NotEqual=function(){return(a._NotEqual=a.asm.ha).apply(null,arguments)},a._OneHot=function(){return(a._OneHot=a.asm.ia).apply(null,arguments)},a._PadV2=function(){return(a._PadV2=a.asm.ja).apply(null,arguments)},a._Pow=function(){return(a._Pow=a.asm.ka).apply(null,arguments)},a._Prelu=function(){return(a._Prelu=a.asm.la).apply(null,arguments)},a._Prod=function(){return(a._Prod=a.asm.ma).apply(null,arguments)},a._RealDiv=function(){return(a._RealDiv=a.asm.na).apply(null,arguments)},a._Relu=function(){return(a._Relu=a.asm.oa).apply(null,arguments)},a._Relu6=function(){return(a._Relu6=a.asm.pa).apply(null,arguments)},a._ResizeBilinear=function(){return(a._ResizeBilinear=a.asm.qa).apply(null,arguments)},a._Reverse=function(){return(a._Reverse=a.asm.ra).apply(null,arguments)},a._RotateWithOffset=function(){return(a._RotateWithOffset=a.asm.sa).apply(null,arguments)},a._Round=function(){return(a._Round=a.asm.ta).apply(null,arguments)},a._Rsqrt=function(){return(a._Rsqrt=a.asm.ua).apply(null,arguments)},a._ScatterNd=function(){return(a._ScatterNd=a.asm.va).apply(null,arguments)},a._SelectV2=function(){return(a._SelectV2=a.asm.wa).apply(null,arguments)},a._Sigmoid=function(){return(a._Sigmoid=a.asm.xa).apply(null,arguments)},a._Sin=function(){return(a._Sin=a.asm.ya).apply(null,arguments)},a._Softmax=function(){return(a._Softmax=a.asm.za).apply(null,arguments)},a._Sqrt=function(){return(a._Sqrt=a.asm.Aa).apply(null,arguments)},a._Square=function(){return(a._Square=a.asm.Ba).apply(null,arguments)},a._SquaredDifference=function(){return(a._SquaredDifference=a.asm.Ca).apply(null,arguments)},a._Step=function(){return(a._Step=a.asm.Da).apply(null,arguments)},a._StridedSlice=function(){return(a._StridedSlice=a.asm.Ea).apply(null,arguments)},a._Sub=function(){return(a._Sub=a.asm.Fa).apply(null,arguments)},a._Sum=function(){return(a._Sum=a.asm.Ga).apply(null,arguments)},a._Tan=function(){return(a._Tan=a.asm.Ha).apply(null,arguments)},a._Tanh=function(){return(a._Tanh=a.asm.Ia).apply(null,arguments)},a._Tile=function(){return(a._Tile=a.asm.Ja).apply(null,arguments)},a._TopK=function(){return(a._TopK=a.asm.Ka).apply(null,arguments)},a._Transform=function(){return(a._Transform=a.asm.La).apply(null,arguments)},a._Transpose=function(){return(a._Transpose=a.asm.Ma).apply(null,arguments)},a.__FusedMatMul=function(){return(a.__FusedMatMul=a.asm.Na).apply(null,arguments)},a._malloc=function(){return(a._malloc=a.asm.Oa).apply(null,arguments)},a._free=function(){return(a._free=a.asm.Pa).apply(null,arguments)},a.___errno_location=function(){return(Ae=a.___errno_location=a.asm.Qa).apply(null,arguments)}),$e=a.stackSave=function(){return($e=a.stackSave=a.asm.Ra).apply(null,arguments)},Fe=a.stackRestore=function(){return(Fe=a.stackRestore=a.asm.Sa).apply(null,arguments)},Re=a.stackAlloc=function(){return(Re=a.stackAlloc=a.asm.Ta).apply(null,arguments)};function De(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Me(e){function n(){Te||(Te=!0,a.calledRun=!0,N||(K(),X(),t(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),Y()))}e=e||o,Q>0||(q(),Q>0||(a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),n()},1)):n()))}if(a.cwrap=_,te=function e(){Te||Me(),Te||(te=e)},a.run=Me,a.preInit)for("function"==typeof a.preInit&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();return Me(),e.ready});"object"==typeof e&&"object"==typeof t?t.exports=a:"function"==typeof define&&n("PDX0")?define([],function(){return a}):"object"==typeof e&&(e.WasmBackendModule=a)}}),U=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},G=class{refCount(e){return H("refCount")}incRef(e){return H("incRef")}timerAvailable(){return!0}time(e){return H("time")}read(e){return H("read")}readSync(e){return H("readSync")}numDataIds(){return H("numDataIds")}disposeData(e,t){return H("disposeData")}write(e,t,n){return H("write")}move(e,t,n,r,a){return H("move")}memory(){return H("memory")}floatPrecision(){return H("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return H("dispose")}};function H(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function j(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function q(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n,r,a=e.length,s=0;for(;a>0;)s=Math.random()*a|0,a--,n=e[a],r=t[a],e[a]=e[s],t[a]=t[s],e[s]=n,t[s]=r}function K(e,t,n){return Math.max(e,Math.min(t,n))}function X(e){return e%2==0?e:e+1}function Y(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function Z(e,t){const n=Math.random();return t*n+(1-n)*e}function J(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function Q(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function ee(e,t,n=""){Q(se(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function te(e){Q(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function ne(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||we(e)&&!n)for(let r=0;r<e.length;++r)ne(e[r],t,n);else t.push(e);return t}function re(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ae(e){return 0===e.length}function se(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ie(e){return e%1==0}function oe(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function ue(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function le(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return j(t),t}function ce(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function he(e,t=(e=>0),n){return new Promise((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()})}function de(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function pe(e,t){const n=t.length;return Q((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),Q(e.every(e=>ie(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function fe(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:pe(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=s){if(s[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==s[i]||s[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),s[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function me(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function ge(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function ye(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function be(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function xe(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function we(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function ve(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function ke(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function Ie(e){return"string"==typeof e||e instanceof String}function Ne(e){return"boolean"==typeof e}function Se(e){return"number"==typeof e}function Ce(e){return Array.isArray(e)?Ce(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":Se(e)?"float32":Ie(e)?"string":Ne(e)?"bool":"float32"}function Te(e){return!!(e&&e.constructor&&e.call&&e.apply)}function _e(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Ee(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Ae(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce((e,t)=>e*t)*(r?2:1);for(let t=0;t<s;t++)a[t]=Ae(e+t*o,i,n,r)}return a}function $e(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Ae(0,e,t,n)}function Fe(e,t){const n=Re(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function Re(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function De(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return $e(e,new Float32Array(n));if("int32"===t)return $e(e,new Int32Array(n));if("bool"===t)return $e(e,new Uint8Array(n));throw new Error("Unknown data type "+t)}function Me(e){e.forEach(t=>{Q(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function Oe(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function ze(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function Le(e){return e&&e.then&&"function"==typeof e.then}var Pe=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Be,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Le(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}};function Be(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}function We(){return Ue}var Ve,Ue=null;function Ge(){if(null==Ve){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Ve=e}return Ve}function He(e,t){const n=function(){const e=Ge();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}var je="Abs",qe="Acos",Ke="Acosh",Xe="Add",Ye="AddN",Ze="All",Je="Any",Qe="ArgMax",et="ArgMin",tt="Asin",nt="Asinh",rt="Atan",at="Atanh",st="Atan2",it="AvgPool",ot="AvgPoolGrad",ut="AvgPool3D",lt="AvgPool3DGrad",ct="BatchMatMul",ht="BatchToSpaceND",dt="Bincount",pt="BroadcastTo",ft="Cast",mt="Ceil",gt="ClipByValue",yt="Complex",bt="ComplexAbs",xt="Concat",wt="Conv2D",vt="Conv2DBackpropFilter",kt="Conv2DBackpropInput",It="Conv3D",Nt="Conv3DBackpropFilterV2",St="Conv3DBackpropInputV2",Ct="Cos",Tt="Cosh",_t="Cumsum",Et="CropAndResize",At="DenseBincount",$t="DepthToSpace",Ft="DepthwiseConv2dNative",Rt="DepthwiseConv2dNativeBackpropFilter",Dt="DepthwiseConv2dNativeBackpropInput",Mt="Diag",Ot="Dilation2D",zt="Dilation2DBackpropInput",Lt="Dilation2DBackpropFilter",Pt="RealDiv",Bt="Einsum",Wt="Elu",Vt="EluGrad",Ut="Erf",Gt="Equal",Ht="Exp",jt="ExpandDims",qt="Expm1",Kt="FFT",Xt="Fill",Yt="FlipLeftRight",Zt="Floor",Jt="FloorDiv",Qt="FusedBatchNorm",en="GatherV2",tn="GatherNd",nn="Greater",rn="GreaterEqual",an="Identity",sn="IFFT",on="Imag",un="IsFinite",ln="IsInf",cn="IsNan",hn="LeakyRelu",dn="Less",pn="LessEqual",fn="LinSpace",mn="Log",gn="Log1p",yn="LogicalAnd",bn="LogicalNot",xn="LogicalOr",wn="LogSoftmax",vn="LRN",kn="LRNGrad",In="Max",Nn="Maximum",Sn="MaxPool",Cn="MaxPoolGrad",Tn="MaxPool3D",_n="MaxPool3DGrad",En="MaxPoolWithArgmax",An="Mean",$n="Min",Fn="Minimum",Rn="MirrorPad",Dn="Mod",Mn="Multinomial",On="Multiply",zn="Neg",Ln="NotEqual",Pn="NonMaxSuppressionV3",Bn="NonMaxSuppressionV4",Wn="NonMaxSuppressionV5",Vn="OnesLike",Un="OneHot",Gn="Pack",Hn="PadV2",jn="Pool",qn="Pow",Kn="Prelu",Xn="Prod",Yn="Range",Zn="Real",Jn="Reciprocal",Qn="Relu",er="Reshape",tr="ResizeNearestNeighbor",nr="ResizeNearestNeighborGrad",rr="ResizeBilinear",ar="ResizeBilinearGrad",sr="Relu6",ir="Reverse",or="Round",ur="Rsqrt",lr="ScatterNd",cr="Select",hr="Selu",dr="Slice",pr="Sin",fr="Sinh",mr="Sign",gr="Sigmoid",yr="Softplus",br="Sqrt",xr="Sum",wr="SpaceToBatchND",vr="SplitV",kr="Softmax",Ir="SparseFillEmptyRows",Nr="SparseReshape",Sr="SparseSegmentMean",Cr="SparseSegmentSum",Tr="SparseToDense",_r="SquaredDifference",Er="Square",Ar="StridedSlice",$r="StringNGrams",Fr="StringSplit",Rr="StringToHashBucketFast",Dr="Sub",Mr="Tan",Or="Tanh",zr="Tile",Lr="TopK",Pr="Transform",Br="Transpose",Wr="Unique",Vr="Unpack",Ur="UnsortedSegmentSum",Gr="ZerosLike",Hr="Step",jr="FromPixels",qr="RotateWithOffset",Kr="_FusedMatMul",Xr="FusedConv2D",Yr="FusedDepthwiseConv2D",Zr=He("kernelRegistry",()=>new Map),Jr=He("gradRegistry",()=>new Map);function Qr(e,t){const n=oa(e,t);return Zr.get(n)}function ea(e){return Jr.get(e)}function ta(e){const t=Zr.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function na(e){const{kernelName:t,backendName:n}=e,r=oa(t,n);Zr.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),Zr.set(r,e)}function ra(e){const{kernelName:t}=e;Jr.has(t)&&We().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),Jr.set(t,e)}function aa(e,t){const n=oa(e,t);if(!Zr.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Zr.delete(n)}function sa(e){if(!Jr.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Jr.delete(e)}function ia(e,t){ta(e).forEach(e=>{na(Object.assign({},e,{backendName:t}))})}function oa(e,t){return`${t}_${e}`}var ua={};g(ua,{arraysEqual:()=>se,assert:()=>Q,assertNonNegativeIntegerDimensions:()=>Me,assertNonNull:()=>te,assertShapesMatch:()=>ee,bytesFromStringArray:()=>ke,bytesPerElement:()=>ve,checkConversionForErrors:()=>ye,clamp:()=>K,computeStrides:()=>Ee,createScalarValue:()=>Ia,createShuffledIndices:()=>le,decodeString:()=>_a,distSquared:()=>J,encodeString:()=>Ta,fetch:()=>Ca,fingerPrint64:()=>ka,flatten:()=>ne,getArrayFromDType:()=>ge,getTypedArrayFromDType:()=>me,hasEncodingLoss:()=>xe,hexToLong:()=>ha,indexToLoc:()=>ze,inferDtype:()=>Ce,inferFromImplicitShape:()=>de,isBoolean:()=>Ne,isFunction:()=>Te,isInt:()=>ie,isNumber:()=>Se,isPromise:()=>Le,isScalarShape:()=>ae,isString:()=>Ie,isTypedArray:()=>we,isValidDtype:()=>be,locToIndex:()=>Oe,makeOnesTypedArray:()=>Fe,makeZerosNestedTypedArray:()=>De,makeZerosTypedArray:()=>Re,nearestDivisor:()=>_e,nearestLargerEven:()=>X,now:()=>Sa,parseAxisParam:()=>pe,randUniform:()=>Z,repeatedTry:()=>he,rightPad:()=>ce,shuffle:()=>j,shuffleCombo:()=>q,sizeFromShape:()=>re,sizeToSquarishShape:()=>ue,squeezeShape:()=>fe,sum:()=>Y,tanh:()=>oe,toNestedArray:()=>$e,toTypedArray:()=>Na});var la=y(b()),ca=la.default||la;function ha(e){return ca.fromString(e,!0,16)}var da=ha("c3a5c85c97cb3127"),pa=ha("b492b66fbe98f273"),fa=ha("9ae16a3b2f90404f");function ma(e){return e.xor(e.shru(47))}function ga(e,t,n){const r=e.slice(t,t+n);return ca.fromBytes(Array.from(r),!0,!0)}function ya(e,t){return ga(e,t,8)}function ba(e,t){return ga(e,t,4)}function xa(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function wa(e,t,n=ha("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function va(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=xa(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(xa(a,44)),[a.add(r),s.add(i)]}(ya(e,t),ya(e,t+8),ya(e,t+16),ya(e,t+24),n,r)}function ka(e,t=e.length){const n=ca.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=fa.add(2*t),r=ya(e,0).add(fa),a=ya(e,t-8);return wa(xa(a,37).mul(n).add(r),xa(r,25).add(a).mul(n),n)}if(t>=4){const n=fa.add(2*t);return wa(ba(e,0).shl(3).add(t),ba(e,t-4),n)}if(t>0){const n=t+(e[t-1]<<2);return ma(fa.mul(e[0]+(e[t>>1]<<8)).xor(da.mul(n))).mul(fa)}return fa}(e,t):function(e,t=e.length){const n=fa.add(2*t),r=ya(e,0).mul(pa),a=ya(e,8),s=ya(e,t-8).mul(n),i=ya(e,t-16).mul(fa);return wa(xa(r.add(a),43).add(xa(s,30)).add(i),r.add(xa(a.add(fa),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=fa.add(2*t),r=ya(e,0).mul(fa),a=ya(e,8),s=ya(e,t-8).mul(n),i=ya(e,t-16).mul(fa),o=xa(r.add(a),43).add(xa(s,30)).add(i),u=wa(o,r.add(xa(a.add(fa),18)).add(s),n),l=ya(e,16).mul(n),c=ya(e,24),h=o.add(ya(e,t-32)).mul(n),d=u.add(ya(e,t-24)).mul(n);return wa(xa(l.add(c),43).add(xa(h,30)).add(d),l.add(xa(c.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(pa).add(113),s=ma(a.mul(fa).add(113)).mul(fa),i=[ca.UZERO,ca.UZERO],o=[ca.UZERO,ca.UZERO];r=r.mul(fa).add(ya(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=xa(r.add(a).add(i[0]).add(ya(e,u+8)),37).mul(pa),a=xa(a.add(i[1]).add(ya(e,u+48)),42).mul(pa),r=r.xor(o[1]),a=a.add(i[0]).add(ya(e,u+40)),s=xa(s.add(o[0]),33).mul(pa),i=va(e,u,i[1].mul(pa),r.add(o[0])),o=va(e,u+32,s.add(o[1]),a.add(ya(e,u+16))),[s,r]=[r,s],u+=64}while(u!==l);const h=pa.add(s.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=xa(r.add(a).add(i[0]).add(ya(e,u+8)),37).mul(h),a=xa(a.add(i[1]).add(ya(e,u+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(ya(e,u+40))),s=xa(s.add(o[0]),33).mul(h),i=va(e,u,i[1].mul(h),r.add(o[0])),o=va(e,u+32,s.add(o[1]),a.add(ya(e,u+16))),[s,r]=[r,s],wa(wa(i[0],o[0],h).add(ma(a).mul(da)).add(s),wa(i[1],o[1],h).add(r),h)}function Ia(e,t){return"string"===t?Ta(e):Na([e],t)}function Na(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ne(e)),We().getBool("DEBUG")&&ye(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function Sa(){return We().platform.now()}function Ca(e,t){return We().platform.fetch(e,t)}function Ta(e,t="utf-8"){return t=t||"utf-8",We().platform.encode(e,t)}function _a(e,t="utf-8"){return t=t||"utf-8",We().platform.decode(e,t)}function Ea(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}function Aa(e,t,n,r){const a=Ee(t),s=function(e,t,n,r){const a=re(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?Da(e):e;if(o>1)for(let l=0;l<a/s;l++){const e=l*s;for(let t=0;t<s;t++)i[t]=Math.max(i[t],$a(u[e+t],0,n).length)}return i}(e,t,n,a),i=t.length,o=Ra(e,t,n,a,s),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+i),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map(e=>"    "+e).join("\n")),u.join("\n")}function $a(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Ie(e)?`'${e}'`:"bool"===n?Fa(e):parseFloat(e.toFixed(7)).toString(),ce(r,t)}function Fa(e){return 0===e?"false":"true"}function Ra(e,t,n,r,a,s=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[$a(Da(e)[0],0,n)]:"bool"===n?[Fa(e[0])]:[e[0].toString()];if(1===u){if(o>20){let t=Array.from(e.slice(0,3*i)),r=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(t=Da(t),r=Da(r)),["["+t.map((e,t)=>$a(e,a[t],n)).join(", ")+", ..., "+r.map((e,t)=>$a(e,a[o-3+t],n)).join(", ")+"]"]}return["["+("complex64"===n?Da(e):Array.from(e)).map((e,t)=>$a(e,a[t],n)).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h;d.push(...Ra(e.slice(r,r+h),l,n,c,a,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h;d.push(...Ra(e.slice(r,r+h),l,n,c,a,t===o-1))}}else for(let m=0;m<o;m++){const t=m*h;d.push(...Ra(e.slice(t,t+h),l,n,c,a,m===o-1))}const p=2===u?",":"";d[0]="["+d[0]+p;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=",\n";for(let m=2;m<u;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function Da(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Ma=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=re(e),null!=n){const e=n.length;Q(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ge(t,this.size),this.strides=Ee(e)}set(e,...t){0===t.length&&(t=[0]),Q(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t])throw new Error(`Requested out of range element at ${e}.   Buffer shape=${this.shape}`);t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Oa().makeTensor(this.values,this.shape,this.dtype)}},Oa=null,za=null,La=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=re(e),this.strides=Ee(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return za.buffer(this.shape,this.dtype,e)}bufferSync(){return za.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return $e(this.shape,e,"complex64"===this.dtype)}arraySync(){return $e(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Oa().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map(e=>_a(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Oa().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>_a(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Oa().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Oa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return za.print(this,e)}clone(){return this.throwIfDisposed(),za.clone(this)}toString(e=!1){return Aa(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),za.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Oa().makeVariable(this,e,t,n)}};function Pa(){return He("Tensor",()=>La)}Object.defineProperty(La,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Pa();var Ba=class extends La{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!se(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Oa().disposeTensor(this),this.dataId=e.dataId,Oa().incRef(this,null)}dispose(){Oa().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Ba,Symbol.hasInstance,{value:e=>e instanceof La&&null!=e.assign&&e.assign instanceof Function});var Wa,Va,Ua,Ga,Ha,ja,qa,Ka,Xa,Ya,Za={};g(Za,{assertTypesMatch:()=>ns,getTensorsInContainer:()=>as,isTensorInList:()=>rs,makeTypesMatch:()=>ts}),(Va=Wa||(Wa={})).R0="R0",Va.R1="R1",Va.R2="R2",Va.R3="R3",Va.R4="R4",Va.R5="R5",Va.R6="R6",(Ga=Ua||(Ua={})).float32="float32",Ga.int32="int32",Ga.bool="int32",Ga.complex64="complex64",(ja=Ha||(Ha={})).float32="float32",ja.int32="int32",ja.bool="bool",ja.complex64="complex64",(Ka=qa||(qa={})).float32="float32",Ka.int32="float32",Ka.bool="float32",Ka.complex64="complex64",(Ya=Xa||(Xa={})).float32="complex64",Ya.int32="complex64",Ya.bool="complex64",Ya.complex64="complex64";var Ja={float32:qa,int32:Ua,bool:Ha,complex64:Xa};function Qa(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Ja[e][t]}function es(e){return Qa(e,"int32")}function ts(e,t){if(e.dtype===t.dtype)return[e,t];const n=Qa(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function ns(e,t){Q(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function rs(e,t){return t.some(t=>t.id===e.id)}function as(e){const t=[];return ss(e,t,new Set),t}function ss(e,t,n){if(null==e)return;if(e instanceof La)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const s in a){const e=a[s];n.has(e)||(n.add(e),ss(e,t,n))}}function is(e){return null!=e.kernelName}var os=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}},us=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new os}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void(await this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new class{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?ce(r+"ms",9):r.error,o=ce(e,25),u=t.rank,l=t.size,c=ce(t.shape.toString(),14);let h="";for(const d in a){const e=a[d];if(null!=e){const n=e.shape||t.shape,r=n.length;h+=`${d}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}})}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const i=Sa();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:Sa()-i})}if(We().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){const t=r[o];t.data().then(n=>{Ea(n,t.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then(e=>e.kernelMs),extraInfo:s.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),r,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}}(this.backendInstance),!0}setupRegisteredKernels(){ta(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){ta(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof G||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0))).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return us.nextTensorId++}nextVariableId(){return us.nextVariableId++}clone(e){const t=cs.runKernel(an,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],e=>({x:()=>cs.runKernel(ft,{x:e},{dtype:"float32"})}),[],{}),t}runKernel(e,t,n){if(null==Qr(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});const s=r-t-a-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(s>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const u=is(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(is(e)){const{kernelName:t,inputs:a,attrs:s}=e,u=Qr(t,this.backendName);Q(null!=u,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),i=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const l=i.map(e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)});if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy(()=>t(this.backend,a));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=is(e)?null:e.backwardsFunc;let d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()}),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(e=>null!=l[e]?l[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=ea(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(Q(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(t).map(e=>t[e])):s=e.map(e=>t[e]);const i=n.filter((e,t)=>a[t]);return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");r=r||this.backend;let a=e;"string"===(n=n||"float32")&&Ie(e[0])&&(a=e.map(e=>Ta(e)));const s=r.write(a,t,n),i=new La(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=ke(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a=new La(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new Ba(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*ve(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ba||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*ve(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[e])}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=ea(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=Re(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=as(e),n=new Set(t.map(e=>e.id));for(let a=0;a<this.state.activeScope.track.length;a++){const e=this.state.activeScope.track[a];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(Q(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));Q(a instanceof La,()=>"The result y returned by f() must be a tensor.");const s=function(e,t,n){const r={},a={};for(let u=0;u<t.length;u++)r[t[u].id]=!0;for(let u=0;u<e.length;u++){const n=e[u],s=n.inputs;for(const e in s){const i=s[e];let o=!1;for(let e=0;e<t.length;e++)if(r[i.id]){n.outputs.forEach(e=>r[e.id]=!0),o=!0,a[n.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let u=e.length-1;u>=0;u--){const t=e[u],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let u=0;u<e.length;u++){const t=e[u];if(a[t.id]&&i[t.id]){const e={};for(const a in t.inputs){const n=t.inputs[a];r[n.id]&&(e[a]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[a.id]=null==n?function(e){const t=Fe(re(e),"float32");return cs.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach(t=>{const n=e[t.id];i.push(null!=n?n:null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n(()=>o[t]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!se(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,e=>this.tidy(e),hs);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(e){return Q(Te(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;Q(t.every(e=>e instanceof La),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),Q(n.value instanceof La,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),Q(Te(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];Q(s.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),Q(s.every(e=>e instanceof La),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return s.forEach((e,t)=>{i[t]=()=>e}),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Sa(),n=await this.backend.time(e);return n.wallMs=Sa()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new os;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function ls(){const e=Ge();if(null==e._tfengine){const t=new Pe(e);e._tfengine=new us(t)}return Ue=e._tfengine.ENV,Oa=()=>e._tfengine,e._tfengine}us.nextTensorId=0,us.nextVariableId=0;var cs=ls();function hs(e,t){return cs.runKernel(Xe,{a:e,b:t})}var ds={};function ps(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function fs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}g(ds,{isBrowser:()=>fs,isMobile:()=>ps});var ms=We();function gs(e,t){let n=e;if(we(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||we(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&We().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ys(e,r,[]),r}function ys(e,t,n){if(n=n||[],!Array.isArray(e)&&!we(e))return void Q(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);Q(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),Q(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);const r=t.slice(1);for(let a=0;a<e.length;++a)ys(e[a],r,n.concat(a))}function bs(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function xs(e,t,n,r="numeric"){if(e instanceof La)return bs(r,e.dtype,t,n),e;let a=Ce(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),bs(r,a,t,n),null==e||!we(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${null==e?"null":e.constructor.name}'`);const s=gs(e,a);we(e)||Array.isArray(e)||(e=[e]);const i="string"!==a?Na(e,a):ne(e,[],!0);return cs.makeTensor(i,s,a)}function ws(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,a)=>xs(e,`${t}[${a}]`,n,r))}ms.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),ms.registerFlag("IS_BROWSER",()=>fs()),ms.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),ms.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),ms.registerFlag("PROD",()=>!1),ms.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ms.getBool("DEBUG")),ms.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),ms.registerFlag("IS_TEST",()=>!1),ms.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),ms.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);var vs="__op";function ks(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=vs;const a=(...e)=>{cs.startScope(n);try{const t=r(...e);return Le(t)&&console.error("Cannot return a Promise inside of tidy."),cs.endScope(t),t}catch(t){throw cs.endScope(null),t}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}var Is=ks({complex_:function(e,t){const n=xs(e,"real","complex"),r=xs(t,"imag","complex");return ee(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`),cs.runKernel(yt,{real:n,imag:r})}});function Ns(e,t,n,r){if(null==r&&(r=Ce(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!we(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Me(t);const e=re(t),r=re(n);Q(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let a=0;a<n.length;++a){const e=n[a],r=a!==n.length-1||e!==re(t.slice(a));Q(n[a]===t[a]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return we(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Na(e,r):ne(e,[],!0),cs.makeTensor(e,t,r)}function Ss(e,t,n){return Ns(e,t,gs(e,n),n)}var Cs={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Ts(e,t){const n=[],r=[],a=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise(async e=>{const t=await o.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,r=new Uint8Array(n);let a=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,a),a+=4,r.set(e,a),a+=e.length}e(r)});r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:Es(await Promise.all(r)),specs:n}}function _s(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,u=re(o);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Cs[n.dtype],c=e.slice(a,a+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++)l[e]=h[e]*n.scale+n.min}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Ms()),l=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++)l[e]=Math.round(h[e]*n.scale+n.min)}a+=u*o}else if("string"===i){const t=re(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=Cs[i],s=e.slice(a,a+u*r);if("float32"===i)l=new Float32Array(s);else if("int32"===i)l=new Int32Array(s);else if("bool"===i)l=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=Ss(e,o,"float32"),i=Ss(r,o,"float32");n[t]=Is(a,i),a.dispose(),i.dispose()}}a+=u*r}"complex64"!==i&&(n[t]=Ss(l,o,i))}return n}function Es(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)});const r=new Uint8Array(t);let a=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),r.buffer}var As="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function $s(e){return As?Buffer.byteLength(e):new Blob([e]).size}function Fs(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function Rs(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Ds(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:$s(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:$s(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Ms(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){const a=r[i];s[i]=e[n[a>>10]+(1023&a)]+t[a>>10]}return new Float32Array(a)}}var Os=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Os.instance&&(Os.instance=new Os),Os.instance}static registerSaveRouter(e){Os.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Os.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Os.getHandlers(e,"save")}static getLoadHandlers(e,t){return Os.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Os.getInstance().loadRouters:Os.getInstance().saveRouters).forEach(t=>{const a=t(e,n);null!==a&&r.push(a)}),r}},zs=e=>Os.registerSaveRouter(e),Ls=e=>Os.registerLoadRouter(e),Ps=e=>Os.getSaveHandlers(e),Bs=(e,t)=>Os.getLoadHandlers(e,t),Ws="tensorflowjs",Vs="models_store",Us="model_info_store";function Gs(){if(!We().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Hs(e){const t=e.result;t.createObjectStore(Vs,{keyPath:"modelPath"}),t.createObjectStore(Us,{keyPath:"modelPath"})}var js=class{constructor(e){if(this.indexedDB=Gs(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open(Ws,1);r.onupgradeneeded=()=>Hs(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(Vs,"readonly"),r=t.objectStore(Vs).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Ds(t),s=a.transaction(Us,"readwrite");let i=s.objectStore(Us);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(Vs,"readwrite");const o=u.objectStore(Vs).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(Us);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)})}};js.URL_SCHEME="indexeddb://";var qs=e=>{return We().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(js.URL_SCHEME)?(t=e.slice(js.URL_SCHEME.length),new js(t)):null;var t};Os.registerSaveRouter(qs),Os.registerLoadRouter(qs);var Ks="/",Xs="tensorflowjs_models",Ys="info",Zs="model_topology",Js="weight_specs",Qs="weight_data",ei="model_metadata";function ti(e){return{info:[Xs,e,Ys].join(Ks),topology:[Xs,e,Zs].join(Ks),weightSpecs:[Xs,e,Js].join(Ks),weightData:[Xs,e,Qs].join(Ks),modelMetadata:[Xs,e,ei].join(Ks)}}function ni(e){const t=e.split(Ks);if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join(Ks)}var ri=class{constructor(e){if(!We().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ti(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),a=Ds(e);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(e){if(As)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(e.weightData));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:a}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(As){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}(s),t}};ri.URL_SCHEME="localstorage://";var ai=e=>{return We().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ri.URL_SCHEME)?(t=e.slice(ri.URL_SCHEME.length),new ri(t)):null;var t};Os.registerSaveRouter(ai),Os.registerLoadRouter(ai);var si,ii="://",oi=class{constructor(){this.managers={}}static getInstance(){return null==oi.instance&&(oi.instance=new oi),oi.instance}static registerManager(e,t){Q(null!=e,()=>"scheme must not be undefined or null."),e.endsWith(ii)&&(e=e.slice(0,e.indexOf(ii))),Q(e.length>0,()=>"scheme must not be an empty string.");const n=oi.getInstance();Q(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function ui(e){if(-1===e.indexOf(ii))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+oi.getSchemes().join(","));return{scheme:e.split(ii)[0],path:e.split(ii)[1]}}async function li(e,t,n=!1){Q(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=Os.getLoadHandlers(e);Q(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),Q(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);const a=r[0],s=Os.getSaveHandlers(t);Q(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),Q(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const i=s[0],o=ui(e).scheme,u=ui(e).path,l=o===ui(e).scheme,c=await a.load();n&&l&&await oi.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await oi.getManager(o).removeModel(u),h.modelArtifactsInfo}async function ci(){const e=oi.getSchemes(),t={};for(const n of e){const e=await oi.getManager(n).listModels();for(const r in e)t[n+ii+r]=e[r]}return t}async function hi(e){const t=ui(e);return oi.getManager(t.scheme).removeModel(t.path)}async function di(e,t){return li(e,t,!1)}async function pi(e,t){return li(e,t,!0)}if(We().get("IS_BROWSER")){We().setPlatform("browser",new class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}});try{oi.registerManager(ri.URL_SCHEME,new class{constructor(){Q(We().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Q("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Xs+Ks,n=Ks+Ys;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[ni(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=ti(e=(t=e).startsWith(ri.URL_SCHEME)?t.slice(ri.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}})}catch(BG){}try{oi.registerManager(js.URL_SCHEME,new class{constructor(){this.indexedDB=Gs()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open(Ws,1);n.onupgradeneeded=()=>Hs(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(Us,"readonly"),s=a.objectStore(Us).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(js.URL_SCHEME)?t.slice(js.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open(Ws,1);r.onupgradeneeded=()=>Hs(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(Us,"readwrite"),i=s.objectStore(Us),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(Vs,"readwrite");const r=u.objectStore(Vs).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)})}})}catch(BG){}}function fi(e,t="float32",n){return t=t||"float32",Me(e),new Ma(e,t,n)}We().get("IS_NODE")&&We().setPlatform("node",new class{constructor(){this.util=f("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=We().global.fetch?We().global.fetch(e,t):(null==si&&(si=x()),si(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var mi=ks({cast_:function(e,t){const n=xs(e,"x","cast");if(!be(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");return cs.runKernel(ft,{x:n},{dtype:t})}}),gi=ks({clone_:function(e){const t=xs(e,"x","clone","string_or_numeric");return cs.runKernel(an,{x:t})}});function yi(e,t=!1){console.log(e.toString(t))}ls(),za={buffer:fi,cast:mi,clone:gi,print:yi};var bi={};function xi(e){return new Promise(e=>setTimeout(e)).then(e)}g(bi,{browserFiles:()=>vi,browserHTTPRequest:()=>Ai,concatenateArrayBuffers:()=>Fs,copyModel:()=>di,decodeWeights:()=>_s,encodeWeights:()=>Ts,fromMemory:()=>Fi,getLoadHandlers:()=>Bs,getModelArtifactsInfoForJSON:()=>Ds,getSaveHandlers:()=>Ps,http:()=>Ei,isHTTPScheme:()=>Ti,listModels:()=>ci,loadWeights:()=>Ni,moveModel:()=>pi,registerLoadRouter:()=>Ls,registerSaveRouter:()=>zs,removeModel:()=>hi,weightsLoaderFactory:()=>Si,withSaveHandler:()=>Ri});var wi=class{constructor(e){if(!We().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(wi.URL_SCHEME)&&(e=e.slice(wi.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]};null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer);const r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=r,await xi(()=>a.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await xi(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ds(e)}}}};function vi(e){return new class{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise((n,r)=>{const a=new FileReader;a.onload=a=>{const s=JSON.parse(a.target.result),i=s.modelTopology;if(null==i)return void r(new Error("modelTopology field is missing from file "+e.name));0===t.length&&n({modelTopology:i});const o=s.weightsManifest;if(null==o)return void r(new Error("weightManifest field is missing from file "+e.name));let u;try{u=this.checkManifestAndWeightFiles(o,t)}catch(BG){return void r(BG)}const l=[],c=[],h=[];o.forEach(e=>{e.paths.forEach(e=>{c.push(e),h.push(null)}),l.push(...e.weights)}),o.forEach(e=>{e.paths.forEach(e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,a=c.indexOf(e);if(h[a]=r,-1===h.indexOf(null)){const e={modelTopology:i,weightSpecs:l,weightData:Fs(h),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};null!=s.signature&&(e.signature=s.signature),null!=s.userDefinedMetadata&&(e.userDefinedMetadata=s.userDefinedMetadata),null!=s.modelInitializer&&(e.modelInitializer=s.modelInitializer),n(e)}},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(u[e])})})},a.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(e)})}checkManifestAndWeightFiles(e,t){const n=[],r=t.map(e=>Rs(e.name)),a={};for(const s of e)s.paths.forEach(e=>{const s=Rs(e);if(-1!==n.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);a[e]=t[r.indexOf(s)]});if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return a}}(e)}function ki(e,t,n,r){var a,s,i;Q(null!=(a=e)&&Array.isArray(a)&&a.length>0,()=>"promises must be a none empty array"),i=r=null==r?1:r,Q((s=n=null==n?0:n)>=0&&s<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+s),Q(i>=0&&i<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+i),Q(i>=s,()=>`startFraction must be no more than endFraction, but got startFraction ${s} and endFraction ${i}`);let o=0;return Promise.all(e.map(a=>(a.then(a=>{const s=n+ ++o/e.length*(r-n);return t(s),a}),a)))}async function Ii(e,t){null==t&&(t={});const n=null==t.fetchFunc?We().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),a=(null==t.onProgress?await Promise.all(r):await ki(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(a):await ki(a,t.onProgress,.5,1)}async function Ni(e,t="",n,r){return Si(e=>Ii(e,{requestInit:r}))(e,t,n)}function Si(e){return async(t,n="",r)=>{const a=t.map(()=>!1),s={},i=null!=r?r.map(()=>!1):[],o=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const u=Cs["quantization"in e?e.quantization.dtype:e.dtype]*re(e.shape),l=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach((t,n)=>{t===e.name&&(l(),i[n]=!0)}):l(),o.push(e.name),n+=u})}),!i.every(e=>e)){const e=r.filter((e,t)=>!i[t]);throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=a.reduce((e,t,n)=>(t&&e.push(n),e),[]),l=[];u.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)})});const c=await e(l),h={};let d=0;return u.forEach(e=>{const n=t[e].paths.length;let r=0;for(let t=0;t<n;t++)r+=c[d+t].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let t=0;t<n;t++){const e=new Uint8Array(c[d+t]);i.set(e,o),o+=e.byteLength}s[e].forEach(e=>{const t=_s(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)h[n]=t[n]}),d+=n}),h}}wi.URL_SCHEME="downloads://",Os.registerSaveRouter(e=>We().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(wi.URL_SCHEME)?function(e="model"){return new wi(e)}(e.slice(wi.URL_SCHEME.length)):null);var Ci=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Q("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=We().platform.fetch,Q(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&Q(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:[{paths:["./model.weights.bin"],weights:e.weightSpecs}]};null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Ds(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(p){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest,a=t.generatedBy,s=t.convertedBy,i=t.format,o=t.signature,u=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let l,c;if(null!=r){const e=await this.loadWeights(r);[l,c]=e}const h={modelTopology:n,weightSpecs:l,weightData:c,generatedBy:a,convertedBy:s,format:i};null!=o&&(h.signature=o),null!=u&&(h.userDefinedMetadata=u);const d=t.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const u of e)s.push(...u.weights);const i=[],o=[];for(const u of e)for(const e of u.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Fs(await Ii(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}};function Ti(e){return null!=e.match(Ci.URL_SCHEME_REGEX)}Ci.URL_SCHEME_REGEX=/^https?:\/\//;var _i=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>Ti(e)):Ti(e),n)return Ei(e,t)}return null};function Ei(e,t){return new Ci(e,t)}function Ai(e,t){return Ei(e,t)}Os.registerSaveRouter(_i),Os.registerLoadRouter(_i);var $i=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}};function Fi(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new $i(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $i({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $i({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Ri(e){return new class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}(e)}var Di={};g(Di,{confusionMatrix:()=>Pi});var Mi,Oi=ks({matMul_:function(e,t,n=!1,r=!1){let a=xs(e,"a","matMul"),s=xs(t,"b","matMul");return[a,s]=ts(a,s),cs.runKernel(ct,{a:a,b:s},{transposeA:n,transposeB:r})}}),zi=ks({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);const a=xs(e,"indices","oneHot","int32");return cs.runKernel(Un,{indices:a},{depth:t,onValue:n,offValue:r})}}),Li=ks({transpose_:function(e,t){const n=xs(e,"x","transpose");return null==t&&(t=n.shape.map((e,t)=>t).reverse()),Q(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{Q(e>=0&&e<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1?n.clone():cs.runKernel(Br,{x:n},{perm:t})}}),Pi=ks({confusionMatrix_:function(e,t,n){const r=xs(e,"labels","confusionMatrix"),a=xs(t,"predictions","confusionMatrix");Q(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),Q(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),Q(1===a.rank,()=>"Expected the rank of predictions to be 1, but got "+a.rank),Q(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),Q(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const s=zi(mi(r,"int32"),n),i=zi(mi(a,"int32"),n),o=Li(s),u=Oi(o,i);return mi(u,"int32")}}),Bi={};function Wi(e,t,n){if(te(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=gs(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ns(e,t,r,n)}function Vi(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Qr(jr,cs.backendName))return cs.runKernel(jr,{pixels:e},{numChannels:t});const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i?c=e.getContext("2d").getImageData(0,0,u,l).data:r||n?c=e.data:(s||a||o)&&(null==Mi&&(Mi=document.createElement("canvas").getContext("2d")),Mi.canvas.width=u,Mi.canvas.height=l,Mi.drawImage(e,0,0,u,l),c=Mi.getImageData(0,0,u,l).data),4===t)h=new Int32Array(c);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return Wi(h,[l,u,t],"int32")}async function Ui(e,t=3){let n=null;if(We().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Vi(n,t)}async function Gi(e,t){let n=xs(e,"img","toPixels");if(!(e instanceof La)){const e=n;n=mi(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+s);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let l=0;l<r*a;++l){const e=[0,0,0,255];for(let r=0;r<s;r++){const t=i[l*s+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===s?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[r]=t*o}const t=4*l;u[t+0]=Math.round(e[0]),u[t+1]=Math.round(e[1]),u[t+2]=Math.round(e[2]),u[t+3]=Math.round(e[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}g(Bi,{fromPixels:()=>Hi,fromPixelsAsync:()=>Ui,toPixels:()=>Gi});var Hi=ks({fromPixels_:Vi}),ji={};function qi(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===re(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let h=0;h<a.length-1;++h)i*=a[h];const o=e.shape,u=a.slice();u.pop();let l=1;for(let h=s;h<n;++h)l*=o[h],u.push(o[h]);const c=[...Ee(e.shape).map(e=>e/l),1].slice(0,s);return[u,i,l,c]}g(ji,{prepareAndValidate:()=>qi});var Ki={};function Xi(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let i=0;i<a;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==e[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function Yi(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}Xi(n,t,e)}function Zi(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let u=a;u<s;++u)i*=n[u];const o=a<1?1:a;return{sliceRank:a,numUpdates:re(t.shape)/o,sliceSize:i,strides:[...Ee(n.slice(0,a)),1],outputSize:re(n)}}g(Ki,{calculateShapes:()=>Zi,validateInput:()=>Yi,validateUpdateShape:()=>Xi});var Ji={};function Qi(e,t,n){const r=e.shape.length;Q(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),Q(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)Q(t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function eo(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function to(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function no(e,t,n,r){const a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[t]=1:(a.splice(t,0,1),a.pop());return a}function ro(e,t,n){return n<=e?n:n-(t-1)}function ao(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function so(e,t,n,r,a,s,i,o,u){const l=e.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=io(i,u,l,r,e),h=oo(o,u,l,a,e),d=no(s,u,l,e)}else for(let p=0;p<l;p++)c[p]=lo(i,r,s,e,p,u),h[p]=co(o,a,s,e,p,u),d[p]=uo(s,p,u);return{begin:c,end:h,strides:d}}function io(e,t,n,r,a){const s=[...a],i=ao(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{const a=ro(t,n,o);let i=r[a];e&1<<a&&(i=0),s[o]=i}return s}function oo(e,t,n,r,a){const s=[...a],i=ao(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{const a=ro(t,n,o);let i=r[a];e&1<<a&&(i=Number.MAX_SAFE_INTEGER),s[o]=i}for(let o=0;o<s.length;o++){const e=a[o];s[o]<0&&(s[o]+=e),s[o]=K(0,s[o],a[o])}return s}function uo(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function lo(e,t,n,r,a,s){let i=t[a];(e&1<<a||s&1<<a||null==i)&&(i=(n[a]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const o=r[a];return i<0&&(i+=o),i=K(0,i,o-1),i}function co(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=o>0?K(0,i,u):K(-1,i,u-1),i}function ho(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function po(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function fo(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach(e=>{Q(-1!==e,()=>"slice() does not support negative begin indexing.")}),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map((t,n)=>t>=0?t:(Q(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,s]}function mo(e,t,n,r,a,s,i,o,u){let l=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(l.length));const d=eo(i);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-l.length,f=eo(o),m=e.slice();f.forEach(e=>{l[e]=0,c[e]=1,m.splice(e,0,1)});const{begin:g,end:y,strides:b}=so(m,d,p,l,c,h,a,s,i);l=g,c=y,h=b;const x=eo(u);x.forEach(e=>{c[e]=l[e]+1,h[e]=1});const w=to(l,c,h),v=w.filter((e,t)=>-1===x.indexOf(t));return{nonStrided:h.every(e=>1===e),$begin:l,$end:c,$strides:h,size:w,newShape:m,outShape:v}}g(Ji,{assertParamsValid:()=>Qi,computeFlatOffset:()=>po,computeOutShape:()=>to,getNormalizedAxes:()=>so,isSliceContinous:()=>ho,maskToAxes:()=>eo,parseSliceParams:()=>fo,sliceInfo:()=>mo,startForAxis:()=>lo,startIndicesWithElidedDims:()=>io,stopForAxis:()=>co,stopIndicesWithElidedDims:()=>oo,stridesForAxis:()=>uo,stridesWithElidedDims:()=>no});var go={};g(go,{Serializable:()=>yo,SerializationMap:()=>bo,registerClass:()=>xo});var yo=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},bo=class{constructor(){this.classNameMap={}}static getMap(){return null==bo.instance&&(bo.instance=new bo),bo.instance}static register(e){bo.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function xo(e){Q(null!=e.className,()=>"Class being registered does not have the static className property defined."),Q("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),Q(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),bo.register(e)}var wo={};g(wo,{TEST_EPSILON_FLOAT16:()=>vo,encodeStrings:()=>$o,expectArrayBuffersEqual:()=>Ao,expectArraysClose:()=>ko,expectArraysEqual:()=>Co,expectNumbersClose:()=>To,expectPromiseToFail:()=>So,expectValuesInRange:()=>Eo,testEpsilon:()=>Io});var vo=.1;function ko(e,t,n){return null==n&&(n=Io()),No(e,t,(e,t)=>_o(e,t,n))}function Io(){return 32===cs.backend.floatPrecision()?.001:vo}function No(e,t,n){let r=!0;if((we(e)||we(t))&&(r=!1),we(e)&&we(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=gs(e),r=gs(t);if(!se(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=we(e)?e:ne(e),s=we(t)?t:ne(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let i=0;i<s.length;++i){const e=a[i],t=s[i];if(!n(e,t))throw new Error(`Arrays differ: actual[${i}] = ${e}, expected[${i}] = ${t}.\nActual:   ${a}.\nExpected: ${s}.`)}}function So(e,t){e().then(()=>t.fail(),()=>t())}function Co(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Ie(e)||Ie(e[0])||Ie(t)||Ie(t[0])?No(e,n,(e,t)=>e==t):No(e,t,(e,t)=>_o(e,t,0))}function To(e,t,n){if(null==n&&(n=Io()),!_o(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function _o(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Eo(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Ao(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function $o(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?$o(n):e[t]=Ta(n)}return e}var Fo="3.7.0";function Ro(){We().set("PROD",!0)}function Do(){We().set("DEBUG",!0)}function Mo(){We().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Oo(e){We().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function zo(){cs.disposeVariables()}function Lo(){return cs}function Po(){return cs.memory()}function Bo(e){return cs.profile(e)}function Wo(e,t){return cs.tidy(e,t)}function Vo(e){as(e).forEach(e=>e.dispose())}function Uo(e){return cs.keep(e)}function Go(e){return cs.time(e)}function Ho(e){return cs.setBackend(e)}function jo(){return cs.ready()}function qo(){return cs.backendName}function Ko(e){cs.removeBackend(e)}function Xo(e){return cs.findBackend(e)}function Yo(e){return cs.findBackendFactory(e)}function Zo(e,t,n=1){return cs.registerBackend(e,t,n)}function Jo(){return cs.backend}function Qo(e,t){We().setPlatform(e,t)}var eu=ks({add_:function(e,t){let n=xs(e,"a","add"),r=xs(t,"b","add");return[n,r]=ts(n,r),cs.runKernel(Xe,{a:n,b:r})}}),tu=ks({floorDiv_:function(e,t){let n=xs(e,"a","floorDiv"),r=xs(t,"b","floorDiv");return[n,r]=ts(n,r),cs.runKernel(Jt,{a:n,b:r})}}),nu=ks({div_:function(e,t){let n=xs(e,"a","div"),r=xs(t,"b","div");return[n,r]=ts(n,r),"int32"===n.dtype&&"int32"===r.dtype?tu(n,r):cs.runKernel(Pt,{a:n,b:r},{})}}),ru=ks({mul_:function(e,t){let n=xs(e,"a","mul"),r=xs(t,"b","mul");return[n,r]=ts(n,r),cs.runKernel(On,{a:n,b:r})}}),au=ks({abs_:function(e){const t=xs(e,"x","abs");return cs.runKernel("complex64"===t.dtype?bt:je,{x:t})}}),su=ks({acos_:function(e){const t=xs(e,"x","acos");return cs.runKernel(qe,{x:t})}}),iu=ks({acosh_:function(e){const t=xs(e,"x","acosh");return cs.runKernel(Ke,{x:t})}}),ou=ks({addN_:function(e){Q(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),Q(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+e.length);const t=e.map((e,t)=>xs(e,"tensors"+t,"addN")),n=t[0];return t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!se(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}),cs.runKernel(Ye,t)}}),uu=ks({all_:function(e,t=null,n=!1){const r=xs(e,"x","all","bool");return cs.runKernel(Ze,{x:r},{axis:t,keepDims:n})}}),lu=ks({any_:function(e,t=null,n=!1){const r=xs(e,"x","any","bool");return cs.runKernel(Je,{x:r},{axis:t,keepDims:n})}}),cu=ks({argMax_:function(e,t=0){const n=xs(e,"x","argMax");return cs.runKernel(Qe,{x:n},{axis:t})}}),hu=ks({argMin_:function(e,t=0){const n=xs(e,"x","argMin");return cs.runKernel(et,{x:n},{axis:t})}}),du=ks({asin_:function(e){const t=xs(e,"x","asin");return cs.runKernel(tt,{x:t})}}),pu=ks({asinh_:function(e){const t=xs(e,"x","asinh");return cs.runKernel(nt,{x:t})}}),fu=ks({atan_:function(e){const t=xs(e,"x","atan");return cs.runKernel(rt,{x:t})}}),mu=ks({atan2_:function(e,t){let n=xs(e,"a","atan2"),r=xs(t,"b","atan2");return[n,r]=ts(n,r),cs.runKernel(st,{a:n,b:r})}}),gu=ks({atanh_:function(e){const t=xs(e,"x","atanh");return cs.runKernel(at,{x:t})}});function yu(e,t,n,r,a="NHWC",s){return wu(e,[...t,e[3]],n,s,r,null,null,Eu(a))}function bu(e,t,n,r,a,s,i="channelsLast"){const[o,u]=Iu(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);l=[o,u,e[1],e[1]]}return wu(e,l,n,r,a,s,!1,i)}function xu(e,t,n,r,a,s,i="NDHWC"){const[o,u,l]=Nu(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return vu(e,c,n,r,a,!1,h,s)}function wu(e,t,n,r,a,s,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[u,h,l,c]=e}const[d,p,,f]=t,[m,g]=Iu(n),[y,b]=Iu(r),x=Su(d,y),w=Su(p,b),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,r,a,s,i,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=ku(e,t,n));const s=e[1];return[Cu((e[0]-t+2*r)/n+1,a),Cu((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);c=a[0],h=a[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),u=Math.floor(e/2),d=e-u,p=Math.floor(o/2);l={top:u,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);{const d="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Cu((t-s+d+p)/r+1,o),h=Cu((n-i+f+m)/a+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(a,l,c,m,g,x,w,s,o),N=i?f*h:f;let S;return"channelsFirst"===o?S=[u,N,k,I]:"channelsLast"===o&&(S=[u,k,I,N]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:N,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:S,filterShape:t}}function vu(e,t,n,r,a,s=!1,i="channelsLast",o){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[u,d,l,c,h]=e}const[p,f,m,,g]=t,[y,b,x]=Nu(n),[w,v,k]=Nu(r),I=Su(p,w),N=Su(f,v),S=Su(m,k),{padInfo:C,outDepth:T,outHeight:_,outWidth:E}=function(e,t,n,r,a,s,i,o,u,l,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=ku(e,t,r));const i=e[1],o=e[2];return[Cu((e[0]-t+2*a)/r+1,s),Cu((i-t+2*a)/r+1,s),Cu((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,c);d=s[0],p=s[1],f=s[2]}else if("same"===e){d=Math.ceil(t/a),p=Math.ceil(n/s),f=Math.ceil(r/i);const e=(d-1)*a+o-t,c=(p-1)*s+u-n,m=(f-1)*i+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);h={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/a),p=Math.ceil((n-u+1)/s),f=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(a,l,c,h,y,b,x,I,N,S,o),A=s?g*d:g;let $;return"channelsFirst"===i?$=[u,A,T,_,E]:"channelsLast"===i&&($=[u,T,_,E,A]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:T,outHeight:_,outWidth:E,outChannels:A,padInfo:C,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:N,effectiveFilterWidth:S,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:$,filterShape:t}}function ku(e,t,n,r=1){const a=Su(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Iu(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Nu(e){return"number"==typeof e?[e,e,e]:e}function Su(e,t){return t<=1?e:e+(e-1)*(t-1)}function Cu(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function Tu(e){const[t,n,r]=Iu(e);return 1===t&&1===n&&1===r}function _u(e,t){return Tu(e)||Tu(t)}function Eu(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}var Au=ks({reshape_:function(e,t){const n=xs(e,"x","reshape","string_or_numeric");return cs.runKernel(er,{x:n},{shape:t})}}),$u=ks({avgPool_:function(e,t,n,r,a){const s=xs(e,"x","avgPool","float32");Q(_u(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let i=s,o=!1;3===s.rank&&(o=!0,i=Au(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Q(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),null!=a&&Q(ie(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);let u=cs.runKernel(it,{x:i},{filterSize:t,strides:n,pad:r,dimRoundingMode:a});return u=mi(u,s.dtype),o?Au(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Fu=ks({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const i=xs(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=Au(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Q(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),Q("NDHWC"===s,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+s),null!=a&&Q(ie(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);let l=cs.runKernel(ut,{x:o},{filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s});return l=mi(l,o.dtype),u?Au(l,[l.shape[1],l.shape[2],l.shape[3],l.shape[4]]):l}}),Ru=ks({concat_:function(e,t=0){Q(e.length>=1,()=>"Pass at least one tensor to concat");const n=ws(e,"tensors","concat","string_or_numeric");return"complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length?gi(n[0]):cs.runKernel(xt,n,{axis:t})}}),Du=ks({sigmoid_:function(e){const t=xs(e,"x","sigmoid");return cs.runKernel(gr,{x:t})}}),Mu=ks({slice_:function(e,t,n){const r=xs(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");return cs.runKernel(dr,{x:r},{begin:t,size:n})}}),Ou=ks({tanh_:function(e){const t=xs(e,"x","tanh");return cs.runKernel(Or,{x:t})}}),zu=ks({basicLSTMCell_:function(e,t,n,r,a,s){const i=xs(e,"forgetBias","basicLSTMCell"),o=xs(t,"lstmKernel","basicLSTMCell"),u=xs(n,"lstmBias","basicLSTMCell"),l=xs(r,"data","basicLSTMCell"),c=xs(a,"c","basicLSTMCell"),h=xs(s,"h","basicLSTMCell"),d=Ru([l,h],1),p=Oi(d,o),f=eu(p,u),m=f.shape[1]/4,g=[f.shape[0],m],y=Mu(f,[0,0],g),b=Mu(f,[0,m],g),x=Mu(f,[0,2*m],g),w=Mu(f,[0,3*m],g),v=eu(ru(Du(y),Ou(b)),ru(c,Du(eu(i,x))));return[v,ru(Ou(v),Du(w))]}}),Lu=ks({batchToSpaceND_:function(e,t,n){const r=xs(e,"x","batchToSpaceND"),a=t.reduce((e,t)=>e*t);return Q(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),Q(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),Q(r.shape[0]%a==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`),cs.runKernel(ht,{x:r},{blockShape:t,crops:n})}}),Pu=ks({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const i=xs(e,"x","batchNorm"),o=xs(t,"mean","batchNorm"),u=xs(n,"variance","batchNorm");let l,c;null!=a&&(l=xs(a,"scale","batchNorm")),null!=r&&(c=xs(r,"offset","batchNorm")),Q(o.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),Q(null==c||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),Q(null==l||o.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h=function(e){let t;return t=0===e.rank||1===e.rank?Au(e,[1,1,1,e.size]):2===e.rank?Au(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Au(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),d=cs.runKernel(Qt,{x:h,scale:l,offset:c,mean:o,variance:u},{varianceEpsilon:s});return Au(d,i.shape)}}),Bu=ks({batchNorm2d_:function(e,t,n,r,a,s){const i=xs(e,"x","batchNorm"),o=xs(t,"mean","batchNorm"),u=xs(n,"variance","batchNorm");let l,c;return null!=a&&(l=xs(a,"scale","batchNorm")),null!=r&&(c=xs(r,"offset","batchNorm")),Q(2===i.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),Q(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),Q(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=l&&Q(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=c&&Q(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Pu(i,o,u,c,l,s)}}),Wu=ks({batchNorm3d_:function(e,t,n,r,a,s){const i=xs(e,"x","batchNorm"),o=xs(t,"mean","batchNorm"),u=xs(n,"variance","batchNorm");let l,c;return null!=a&&(l=xs(a,"scale","batchNorm")),null!=r&&(c=xs(r,"offset","batchNorm")),Q(3===i.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),Q(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),Q(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=l&&Q(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=c&&Q(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Pu(i,o,u,c,l,s)}}),Vu=ks({batchNorm4d_:function(e,t,n,r,a,s){const i=xs(e,"x","batchNorm"),o=xs(t,"mean","batchNorm"),u=xs(n,"variance","batchNorm");let l,c;return null!=a&&(l=xs(a,"scale","batchNorm")),null!=r&&(c=xs(r,"offset","batchNorm")),Q(4===i.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),Q(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),Q(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=l&&Q(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=c&&Q(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Pu(i,o,u,c,l,s)}}),Uu=ks({bincount_:function(e,t,n){const r=xs(e,"x","bincount"),a=xs(t,"weights","bincount");return Q("int32"===r.dtype,()=>"Error in bincount: input dtype must be int32, but got "+r.dtype),Q(n>=0,()=>`size must be non-negative, but got ${n}.`),Q(a.size===r.size||0===a.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`),cs.runKernel(dt,{x:r,weights:a},{size:n})}}),Gu=ks({broadcastTo_:function(e,t){let n=xs(e,"broadcastTo","x");const r=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Au(n,e)}const a=n.shape,s=Array.from(t);for(let i=t.length-1;i>=0;i--)if(a[i]===t[i])s[i]=1;else if(1!==n.shape[i])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);return 0===s.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length?gi(n):cs.runKernel(zr,{x:n},{reps:s})}}),Hu=ks({ceil_:function(e){const t=xs(e,"x","ceil");return cs.runKernel(mt,{x:t})}}),ju=ks({clipByValue_:function(e,t,n){const r=xs(e,"x","clipByValue");return Q(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),cs.runKernel(gt,{x:r},{clipValueMin:t,clipValueMax:n})}}),qu=ks({concat1d_:function(e){return Ru(e,0)}}),Ku=ks({concat2d_:function(e,t){return Ru(e,t)}}),Xu=ks({concat3d_:function(e,t){return Ru(e,t)}}),Yu=ks({concat4d_:function(e,t){return Ru(e,t)}}),Zu=ks({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=xs(e,"x","conv2d"),u=xs(t,"filter","conv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=Au(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Q(4===l.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),Q(4===u.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),null!=i&&Q(ie(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const h="NHWC"===a?l.shape[3]:l.shape[1];Q(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),Q(_u(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);const d=cs.runKernel(wt,{x:l,filter:u},{strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i});return c?Au(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Ju=ks({conv1d_:function(e,t,n,r,a="NWC",s=1,i){const o=xs(e,"x","conv1d"),u=xs(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=Au(o,[1,o.shape[0],o.shape[1]])),Q(3===l.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),Q(3===u.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),null!=i&&Q(ie(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),Q(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),Q(_u(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),Q("NWC"===a,()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);const h=Au(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=Au(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=Zu(d,h,[1,n],r,"NHWC",[1,s],i);return Au(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),Qu=ks({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){Q(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=Au(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Q(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),Q(4===u.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank),Q(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const c="NHWC"===s?o[3]:o[1],h="NHWC"===s?u.shape[3]:u.shape[1];Q(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),Q(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),null!=i&&Q(ie(a),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const d=cs.runKernel(kt,{dy:u,filter:n},{strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o});return l?Au(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),el=ks({conv2dTranspose_:function(e,t,n,r,a,s){const i=xs(e,"x","conv2dTranspose"),o=xs(t,"filter","conv2dTranspose");return Qu(n,i,o,r,a,"NHWC",s)}}),tl=ks({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const i=xs(e,"x","conv3d"),o=xs(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=Au(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Q(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),Q(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),Q(u.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`),Q(_u(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),Q("NDHWC"===a,()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`);const c=cs.runKernel(It,{x:u,filter:o},{strides:n,pad:r,dataFormat:a,dilations:s});return l?Au(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),nl=ks({conv3DBackpropInput_:function(e,t,n,r,a){Q(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Au(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=i.shape[4];Q(5===s.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),Q(5===i.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank),Q(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),Q(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),Q(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const c=cs.runKernel(St,{dy:i,filter:n},{pad:a,strides:r,inputShape:s});return o?Au(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),rl=ks({conv3dTranspose_:function(e,t,n,r,a){const s=xs(e,"x","conv3dTranspose"),i=xs(t,"filter","conv3dTranspose");return nl(n,s,i,r,a)}}),al=ks({cos_:function(e){const t=xs(e,"x","cos");return cs.runKernel(Ct,{x:t})}}),sl=ks({cosh_:function(e){const t=xs(e,"x","cosh");return cs.runKernel(Tt,{x:t})}}),il=ks({cumsum_:function(e,t=0,n=!1,r=!1){const a=xs(e,"x","cumsum");return cs.runKernel(_t,{x:a},{axis:t,exclusive:n,reverse:r})}}),ol=ks({denseBincount_:function(e,t,n,r=!1){const a=xs(e,"x","denseBincount"),s=xs(t,"weights","denseBincount");return Q("int32"===a.dtype,()=>"Error in denseBincount: input dtype must be int32, but got "+a.dtype),Q(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),Q(n>=0,()=>`size must be non-negative, but got ${n}.`),Q(s.size===a.size||0===s.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`),cs.runKernel(At,{x:a,weights:s},{size:n,binaryOutput:r})}}),ul=ks({depthToSpace_:function(e,t,n="NHWC"){const r=xs(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];return Q(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),Q(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`),Q(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`),cs.runKernel($t,{x:r},{blockSize:t,dataFormat:n})}}),ll=ks({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=xs(e,"x","depthwiseConv2d"),u=xs(t,"filter","depthwiseConv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=Au(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Q(4===l.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),Q(4===u.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`),Q(l.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),null!=i&&Q(ie(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const h=cs.runKernel(Ft,{x:l,filter:u},{strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i});return c?Au(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),cl=ks({diag_:function(e){const t=xs(e,"x","diag");return cs.runKernel(Mt,{x:t})}}),hl=ks({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const i=xs(e,"x","dilation2d"),o=xs(t,"filter","dilation2d");Q(3===i.rank||4===i.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),Q(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),Q("NHWC"===s,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+s);let u=i,l=!1;3===i.rank&&(u=Au(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const c=cs.runKernel(Ot,{x:u,filter:o},{strides:n,pad:r,dilations:a});return l?Au(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});function dl(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function pl(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function fl(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}var ml=ks({equal_:function(e,t){let n=xs(e,"a","equal","string_or_numeric"),r=xs(t,"b","equal","string_or_numeric");return[n,r]=ts(n,r),fl(n.shape,r.shape),cs.runKernel(Gt,{a:n,b:r})}}),gl=ks({where_:function(e,t,n){const r=xs(t,"a","where"),a=xs(n,"b","where"),s=xs(e,"condition","where","bool"),i=fl(fl(s.shape,r.shape),a.shape),o=Gu(s,i),u=Gu(r,i),l=Gu(a,i);return cs.runKernel(cr,{condition:o,t:u,e:l})}}),yl=ks({zerosLike_:function(e){const t=xs(e,"x","zerosLike");return cs.runKernel(Gr,{x:t})}}),bl=ks({divNoNan_:function(e,t){let n=xs(e,"a","div"),r=xs(t,"b","div");[n,r]=ts(n,r);const a=nu(n,r),s=yl(a),i=ml(r,s);return gl(i,s,a)}}),xl=ks({dot_:function(e,t){const n=xs(e,"t1","dot"),r=xs(t,"t2","dot");Q(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(Q(a===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`),1===n.rank&&1===r.rank){const e=Au(n,[1,-1]),t=Au(r,[-1,1]),a=Oi(e,t);return Au(a,[])}if(1===n.rank&&2===r.rank){const e=Au(n,[1,-1]),t=Au(r,[r.shape[0],r.shape[1]]),a=Oi(e,t);return Au(a,[a.size])}if(2===n.rank&&1===r.rank){const e=Au(r,[-1,1]),t=Oi(n,e);return Au(t,[t.size])}{const e=Au(r,[r.shape[0],r.shape[1]]);return Oi(n,e)}}}),wl=ks({einsum_:function(e,...t){const n=t.map((e,t)=>xs(e,"tensors"+t,"einsum"));return cs.runKernel(Bt,n,{equation:e})}}),vl=ks({elu_:function(e){const t=xs(e,"x","elu");return cs.runKernel(Wt,{x:t})}}),kl=ks({erf_:function(e){let t=xs(e,"x","erf");return Q("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=mi(t,"float32")),cs.runKernel(Ut,{x:t})}}),Il=ks({exp_:function(e){const t=xs(e,"x","exp");return cs.runKernel(Ht,{x:t})}}),Nl=ks({expandDims_:function(e,t=0){const n=xs(e,"x","expandDims","string_or_numeric");return Q(t<=n.rank,()=>"Axis must be <= rank of the tensor"),cs.runKernel(jt,{input:n},{dim:t})}}),Sl=ks({expm1_:function(e){const t=xs(e,"x","expm1");return cs.runKernel(qt,{x:t})}}),Cl=ks({tile_:function(e,t){const n=xs(e,"x","tile","string_or_numeric");return Q(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`),cs.runKernel(zr,{x:n},{reps:t})}}),Tl=ks({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=fi([e,t],r),s=e<=t?e:t;for(let o=0;o<s;++o)a.set(1,o,o);const i=Au(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Cl(Nl(i,0),[n[0],1,1]);if(2===n.length)return Cl(Nl(Nl(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Cl(Nl(Nl(Nl(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function _l(e,t,n){return cs.runKernel(Xt,{},{shape:e,value:t,dtype:n})}var El=ks({floor_:function(e){const t=xs(e,"x","floor");return cs.runKernel(Zt,{x:t})}}),Al=ks({gather_:function(e,t,n=0,r=0){const a=xs(e,"x","gather"),s=xs(t,"indices","gather","int32");return cs.runKernel(en,{x:a,indices:s},{axis:n,batchDims:r})}}),$l=ks({greater_:function(e,t){let n=xs(e,"a","greater","string_or_numeric"),r=xs(t,"b","greater","string_or_numeric");return[n,r]=ts(n,r),fl(n.shape,r.shape),cs.runKernel(nn,{a:n,b:r})}}),Fl=ks({greaterEqual_:function(e,t){let n=xs(e,"a","greaterEqual","string_or_numeric"),r=xs(t,"b","greaterEqual","string_or_numeric");return[n,r]=ts(n,r),fl(n.shape,r.shape),cs.runKernel(rn,{a:n,b:r})}}),Rl=ks({imag_:function(e){const t=xs(e,"input","imag");return cs.runKernel(on,{input:t})}}),Dl=ks({isFinite_:function(e){const t=xs(e,"x","isFinite");return cs.runKernel(un,{x:t})}}),Ml=ks({isInf_:function(e){const t=xs(e,"x","isInf");return cs.runKernel(ln,{x:t})}}),Ol=ks({isNaN_:function(e){const t=xs(e,"x","isNaN");return cs.runKernel(cn,{x:t})}}),zl=ks({leakyRelu_:function(e,t=.2){const n=xs(e,"x","leakyRelu");return cs.runKernel(hn,{x:n},{alpha:t})}}),Ll=ks({less_:function(e,t){let n=xs(e,"a","less","string_or_numeric"),r=xs(t,"b","less","string_or_numeric");return[n,r]=ts(n,r),fl(n.shape,r.shape),cs.runKernel(dn,{a:n,b:r})}}),Pl=ks({lessEqual_:function(e,t){let n=xs(e,"a","lessEqual","string_or_numeric"),r=xs(t,"b","lessEqual","string_or_numeric");return[n,r]=ts(n,r),fl(n.shape,r.shape),cs.runKernel(pn,{a:n,b:r})}});function Bl(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");return cs.runKernel(fn,{},{start:e,stop:t,num:n})}var Wl=ks({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=xs(e,"x","localResponseNormalization");Q(4===s.rank||3===s.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`),Q(ie(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;3===s.rank&&(o=!0,i=Au(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u=cs.runKernel(vn,{x:i},{depthRadius:t,bias:n,alpha:r,beta:a});return o?Au(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Vl=ks({log_:function(e){const t=xs(e,"x","log");return cs.runKernel(mn,{x:t})}}),Ul=ks({log1p_:function(e){const t=xs(e,"x","log1p");return cs.runKernel(gn,{x:t})}});function Gl(e){return Q(Te(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const r=xs(t,"x","tf.grad","string_or_numeric"),a=null!=n?xs(n,"dy","tf.grad"):null;return cs.tidy(()=>{const{value:t,grads:n}=cs.gradients(()=>e(r),[r],a);return null!=a&&ee(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Yl(n),n[0]})}}function Hl(e){return Q(Te(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{Q(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=ws(t,"args","tf.grads","string_or_numeric"),a=null!=n?xs(n,"dy","tf.grads"):null;return cs.tidy(()=>{const{value:t,grads:n}=cs.gradients(()=>e(...r),r,a);return null!=a&&ee(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Yl(n),n})}}function jl(e){return Q(Te(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{Q(t instanceof La,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),Q(null==n||n instanceof La,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:a}=cs.gradients(()=>e(t),[t],n);return Yl(r),{grad:r[0],value:a}}}function ql(e){return Q(Te(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{Q(Array.isArray(t)&&t.every(e=>e instanceof La),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),Q(null==n||n instanceof La,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=cs.gradients(()=>e(...t),t,n);return null!=n&&ee(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Yl(r.grads),r}}function Kl(e,t){Q(Te(e),()=>"The f passed in variableGrads(f) must be a function"),Q(null==t||Array.isArray(t)&&t.every(e=>e instanceof Ba),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in cs.registeredVariables)t.push(cs.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,a=t.length;Q((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);const{value:s,grads:i}=cs.gradients(e,t,null,!0);Q(i.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),Q(0===s.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`);const o={};return t.forEach((e,t)=>{null!=i[t]&&(o[e.name]=i[t])}),null!=r&&r.forEach(e=>o[e.name]=null),{value:s,grads:o}}function Xl(e){return cs.customGrad(e)}function Yl(e){if(e.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var Zl=ks({neg_:function(e){const t=xs(e,"x","neg");return cs.runKernel(zn,{x:t})}}),Jl=ks({softplus_:function(e){const t=xs(e,"x","softplus");return cs.runKernel(yr,{x:t})}}),Ql=ks({logSigmoid_:function(e){const t=xs(e,"x","logSigmoid");return Xl(e=>({value:Zl(Jl(Zl(e))),gradFunc:t=>ru(t,Du(Zl(e)))}))(t)}}),ec=ks({max_:function(e,t=null,n=!1){const r=xs(e,"x","max");return cs.runKernel(In,{x:r},{reductionIndices:t,keepDims:n})}}),tc=ks({sub_:function(e,t){let n=xs(e,"a","sub"),r=xs(t,"b","sub");return[n,r]=ts(n,r),cs.runKernel(Dr,{a:n,b:r})}}),nc=ks({sum_:function(e,t=null,n=!1){let r=xs(e,"x","sum");return"bool"===r.dtype&&(r=mi(r,"int32")),cs.runKernel(xr,{x:r},{axis:t,keepDims:n})}}),rc=ks({logSoftmax_:function(e,t=-1){const n=xs(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Xl((e,n)=>{const r=ec(e,t,!0),a=tc(e,r),s=tc(mi(a,"float32"),Vl(nc(Il(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[r]=n,a=Il(r);return tc(e,ru(nc(e,t,!0),a))}}})(n)}});function ac(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function sc(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function ic(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map(t=>e[t])]}function oc(e,t){return sc(e,t.map(e=>1),t)}function uc(e,t,n){Q(ac(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function lc(e,t){if(ac(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function cc(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function hc(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var dc=ks({logSumExp_:function(e,t=null,n=!1){const r=xs(e,"x","logSumExp"),a=pe(t,r.shape),s=ec(r,a,!0),i=tc(r,s),o=Il(i),u=nc(o,a),l=Vl(u),c=eu(Au(s,l.shape),l);if(n){const e=oc(c.shape,a);return Au(c,e)}return c}}),pc=ks({logicalAnd_:function(e,t){const n=xs(e,"a","logicalAnd","bool"),r=xs(t,"b","logicalAnd","bool");return fl(n.shape,r.shape),cs.runKernel(yn,{a:n,b:r})}}),fc=ks({logicalNot_:function(e){const t=xs(e,"x","logicalNot","bool");return cs.runKernel(bn,{x:t})}}),mc=ks({logicalOr_:function(e,t){const n=xs(e,"a","logicalOr","bool"),r=xs(t,"b","logicalOr","bool");return fl(n.shape,r.shape),cs.runKernel(xn,{a:n,b:r})}}),gc=ks({logicalXor_:function(e,t){const n=xs(e,"a","logicalXor","bool"),r=xs(t,"b","logicalXor","bool");return fl(n.shape,r.shape),pc(mc(e,t),fc(pc(e,t)))}}),yc=ks({maxPool_:function(e,t,n,r,a){const s=xs(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=Au(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Q(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),Q(_u(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=a&&Q(ie(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const u=cs.runKernel(Sn,{x:i},{filterSize:t,strides:n,pad:r,dimRoundingMode:a});return o?Au(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),bc=ks({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const i=xs(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=Au(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Q(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),Q("NDHWC"===s,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+s),null!=a&&Q(ie(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const l=cs.runKernel(Tn,{x:o},{filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s});return u?Au(l,[l.shape[1],l.shape[2],l.shape[3],l.shape[4]]):l}}),xc=ks({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s=xs(e,"x","maxPoolWithArgmax"),i=cs.runKernel(En,{x:s},{filterSize:t,strides:n,pad:r,includeBatchInIndex:a});return{result:i[0],indexes:i[1]}}}),wc=ks({maximum_:function(e,t){let n=xs(e,"a","maximum"),r=xs(t,"b","maximum");return[n,r]=ts(n,r),"bool"===n.dtype&&(n=mi(n,"int32"),r=mi(r,"int32")),fl(n.shape,r.shape),cs.runKernel(Nn,{a:n,b:r})}}),vc=ks({mean_:function(e,t=null,n=!1){const r=xs(e,"x","mean");return cs.runKernel(An,{x:r},{axis:t,keepDims:n})}});function kc(e,t="float32"){if("complex64"===t){const t=kc(e,"float32"),n=kc(e,"float32");return Is(t,n)}const n=Re(re(e),t);return cs.makeTensor(n,e,t)}function Ic(e,t="float32"){if("complex64"===t){const t=Ic(e,"float32"),n=kc(e,"float32");return Is(t,n)}const n=Fe(re(e),t);return cs.makeTensor(n,e,t)}function Nc(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(n+" is not a valid third argument to meshgrid");if(void 0===e)return[];let r=xs(e,"x","meshgrid",e instanceof La?e.dtype:"float32");if(void 0===t)return[r];let a=xs(t,"y","meshgrid",t instanceof La?t.dtype:"float32");const s=re(r.shape),i=re(a.shape);return"xy"===n?(r=Au(r,[1,-1]),a=Au(a,[-1,1]),[Oi(Ic([i,1],r.dtype),r),Oi(a,Ic([1,s],a.dtype))]):(r=Au(r,[-1,1]),a=Au(a,[1,-1]),[Oi(r,Ic([1,i],r.dtype)),Oi(Ic([s,1],a.dtype),a)])}var Sc=ks({min_:function(e,t=null,n=!1){const r=xs(e,"x","min");return cs.runKernel($n,{x:r},{axis:t,keepDims:n})}}),Cc=ks({minimum_:function(e,t){let n=xs(e,"a","minimum"),r=xs(t,"b","minimum");return[n,r]=ts(n,r),"bool"===n.dtype&&(n=mi(n,"int32"),r=mi(r,"int32")),fl(n.shape,r.shape),cs.runKernel(Fn,{a:n,b:r})}}),Tc=ks({mirrorPad_:function(e,t,n){Q("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=xs(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Q(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const a="reflect"===n?1:0;for(let s=0;s<r.rank;s++)Q(2===t[s].length,()=>"Invalid number of paddings. Must be length of 2 each."),Q(t[s][0]>=0&&t[s][0]<=r.shape[s]-a&&t[s][1]>=0&&t[s][1]<=r.shape[s]-a,()=>`Padding in dimension ${s} cannot be greater than or equal to ${r.shape[s]-a} or less than 0 for input of shape ${r.shape}`);return cs.runKernel(Rn,{x:r},{paddings:t,mode:n})}}),_c=ks({mod_:function(e,t){let n=xs(e,"a","mod"),r=xs(t,"b","mod");return[n,r]=ts(n,r),cs.runKernel(Dn,{a:n,b:r})}}),Ec=ks({square_:function(e){const t=xs(e,"x","square");return cs.runKernel("Square",{x:t},{})}}),Ac=ks({moments_:function(e,t=null,n=!1){const r=pe(t,(e=xs(e,"x","moments")).shape),a=vc(e,r,n);let s=a.shape;n||(s=oc(a.shape,r));const i=Ec(tc(mi(e,"float32"),Au(a,s)));return{mean:a,variance:vc(i,r,n)}}}),$c=ks({multiRNNCell_:function(e,t,n,r){const a=xs(t,"data","multiRNNCell"),s=ws(n,"c","multiRNNCell"),i=ws(r,"h","multiRNNCell");let o=a;const u=[];for(let h=0;h<e.length;h++){const t=e[h](o,s[h],i[h]);u.push(t[0]),u.push(t[1]),o=t[1]}const l=[],c=[];for(let h=0;h<u.length;h+=2)l.push(u[h]),c.push(u[h+1]);return[l,c]}}),Fc=ks({multinomial_:function(e,t,n,r=!1){const a=xs(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+i);n=n||Math.random();const o=1===i?Au(a,[1,-1]):a,u=cs.runKernel(Mn,{logits:o},{numSamples:t,seed:n,normalized:r});return 1===i?Au(u,[u.size]):u}}),Rc=ks({notEqual_:function(e,t){let n=xs(e,"a","notEqual","string_or_numeric"),r=xs(t,"b","notEqual","string_or_numeric");return[n,r]=ts(n,r),fl(n.shape,r.shape),cs.runKernel(Ln,{a:n,b:r})}}),Dc=ks({onesLike_:function(e){const t=xs(e,"x","onesLike");return cs.runKernel(Vn,{x:t})}}),Mc=ks({outerProduct_:function(e,t){const n=xs(e,"v1","outerProduct"),r=xs(t,"v2","outerProduct");Q(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const a=Au(n,[-1,1]),s=Au(r,[1,-1]);return Oi(a,s)}}),Oc=ks({pad_:function(e,t,n=0){const r=xs(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return cs.runKernel(Hn,{x:r},{paddings:t,constantValue:n})}}),zc=ks({pad1d_:function(e,t,n=0){return Q(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),Oc(e,[t],n)}}),Lc=ks({pad2d_:function(e,t,n=0){return Q(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Oc(e,t,n)}}),Pc=ks({pad3d_:function(e,t,n=0){return Q(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Oc(e,t,n)}}),Bc=ks({pad4d_:function(e,t,n=0){return Q(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Oc(e,t,n)}}),Wc=ks({spaceToBatchND_:function(e,t,n){const r=xs(e,"x","spaceToBatchND");return Q(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),Q(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),Q(r.shape.reduce((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`),cs.runKernel(wr,{x:r},{blockShape:t,paddings:n})}}),Vc=ks({pool_:function(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const i=xs(e,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=Au(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Q(_u(s,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`);const l=bu(o.shape,t,s,a,r),c=[l.dilationHeight,l.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),a=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],a[t]])}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(e,t,n){const r=n.map(e=>e[0]),a=n.map(e=>e[1]),s=e.concat(r,a),i=t.map((e,t)=>(e-s[t]%e)%e),o=a.map((e,t)=>e+i[t]);return[t.map((e,t)=>[r[t],o[t]]),t.map((e,t)=>[0,i[t]])]}([l.inHeight,l.inWidth],c,h),m=d?r:"valid",g=d?o:Wc(o,c,p),y=("avg"===n?()=>$u(g,t,s,m):()=>yc(g,t,s,m))(),b=d?y:Lu(y,c,f);return u?Au(b,[b.shape[1],b.shape[2],b.shape[3]]):b}}),Uc=ks({pow_:function(e,t){let n=xs(e,"base","pow"),r=xs(t,"exp","pow");return[n,r]=ts(n,r),cs.runKernel(qn,{a:n,b:r})}}),Gc=ks({prelu_:function(e,t){const n=xs(e,"x","prelu"),r=xs(t,"alpha","prelu");return cs.runKernel(Kn,{x:n,alpha:r})}}),Hc=ks({prod_:function(e,t=null,n=!1){let r=xs(e,"x","prod");return"bool"===r.dtype&&(r=mi(r,"int32")),cs.runKernel(Xn,{x:r},{axis:t,keepDims:n})}}),jc=ks({rand_:function(e,t,n){const r=re(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);a=new Uint8Array(r)}for(let s=0;s<r;s++)a[s]=t();return cs.makeTensor(a,e,n)}}),qc=y(_()),Kc=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=qc.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},Xc=ks({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const s=new class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=qc.alea(a.toString()),this.randn=new Kc(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s*=1/this.beta*this.d,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}(t,n,r,a),i=fi(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}}),Yc=ks({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const s=new Kc(t,n,r,!1,a),i=fi(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}}),Zc=ks({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=fi(e,r),i=new class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=qc.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}(t,n,null,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}});function Jc(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");return cs.runKernel(Yn,{},{start:e,stop:t,step:n,dtype:r})}var Qc=ks({real_:function(e){const t=xs(e,"input","real");return cs.runKernel(Zn,{input:t})}}),eh=ks({reciprocal_:function(e){const t=xs(e,"x","reciprocal");return cs.runKernel(Jn,{x:t})}}),th=ks({relu_:function(e){const t=xs(e,"x","relu");return cs.runKernel(Qn,{x:t})}}),nh=ks({relu6_:function(e){const t=xs(e,"x","relu6");return cs.runKernel(sr,{x:t})}}),rh=ks({reverse_:function(e,t){const n=xs(e,"x","reverse");return cs.runKernel(ir,{x:n},{dims:t})}}),ah=ks({reverse1d_:function(e){const t=xs(e,"x","reverse");return Q(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),rh(t,0)}}),sh=ks({reverse2d_:function(e,t){const n=xs(e,"x","reverse");return Q(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),rh(n,t)}}),ih=ks({reverse3d_:function(e,t){const n=xs(e,"x","reverse");return Q(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),rh(n,t)}}),oh=ks({reverse4d_:function(e,t){const n=xs(e,"x","reverse");return Q(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),rh(n,t)}}),uh=ks({round_:function(e){const t=xs(e,"x","round");return cs.runKernel(or,{x:t})}}),lh=ks({rsqrt_:function(e){const t=xs(e,"x","rsqrt");return cs.runKernel(ur,{x:t})}});function ch(e,t){if((we(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&we(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ns(e,[],[],t)}var hh=ks({selu_:function(e){const t=xs(e,"x","selu");return cs.runKernel(hr,{x:t})}}),dh=ks({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){const o=xs(e,"x","separableConv2d"),u=xs(t,"depthwiseFilter","separableConv2d"),l=xs(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Au(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Q(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),Q(4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),Q(4===l.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),Q(1===l.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),Q(1===l.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const d=u.shape[2],p=u.shape[3];Q(l.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`);const f=ll(c,u,r,a,i,s),m=Zu(f,l,1,"valid",i);return h?Au(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),ph=async function(e,t){const n=xs(e,"x","setdiff1d"),r=xs(t,"y","setdiff1d");Q(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),Q(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),Q(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const a=await n.data(),s=await r.data(),i=new Set(s);let o=0;for(let c=0;c<a.length;c++)i.has(a[c])||o++;const u=new Ma([o],n.dtype),l=new Ma([o],"int32");for(let c=0,h=0;c<a.length;c++)i.has(a[c])||(u.values[h]=a[c],l.values[h]=c,h++);return[u.toTensor(),l.toTensor()]},fh=ks({sign_:function(e){const t=xs(e,"x","sign");return cs.runKernel(mr,{x:t})}}),mh=ks({sin_:function(e){const t=xs(e,"x","sin");return cs.runKernel(pr,{x:t})}}),gh=ks({sinh_:function(e){const t=xs(e,"x","sinh");return cs.runKernel(fr,{x:t})}}),yh=ks({slice1d_:function(e,t,n){const r=xs(e,"x","slice1d");return Q(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Mu(r,[t],[n])}}),bh=ks({slice2d_:function(e,t,n){const r=xs(e,"x","slice2d");return Q(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Mu(r,t,n)}}),xh=ks({slice3d_:function(e,t,n){const r=xs(e,"x","slice3d");return Q(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Mu(r,t,n)}}),wh=ks({slice4d_:function(e,t,n){const r=xs(e,"x","slice4d");return Q(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Mu(r,t,n)}}),vh=ks({softmax_:function(e,t=-1){const n=xs(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);return cs.runKernel(kr,{logits:n},{dim:t})}}),kh=ks({fft_:function(e){return Q("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`),cs.runKernel(Kt,{input:e})}}),Ih=ks({ifft_:function(e){return Q("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`),cs.runKernel(sn,{input:e})}}),Nh=ks({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Au(e,[n,t]);r=Ih(a)}else{const a=[n,2*(t-1)],s=Au(Qc(e),[n,t]),i=Au(Rl(e),[n,t]),o=rh(Mu(s,[0,1],[n,t-2]),1),u=ru(rh(Mu(i,[0,1],[n,t-2]),1),ch(-1)),l=Ru([s,o],1),c=Ru([i,u],1),h=Au(Is(l,c),[a[0],a[1]]);r=Ih(h)}if(r=Qc(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Au(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Sh=ks({split_:function(e,t,n=0){const r=xs(e,"x","split");return cs.runKernel(vr,{x:r},{numOrSizeSplits:t,axis:n})}}),Ch=ks({rfft_:function(e,t){Q("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got "+e.dtype);let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map(e=>0),s=e.shape.map(e=>e);s[e.shape.length-1]=t,a=Mu(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,a=Ru([e,kc(r)],e.shape.length-1),n=t}else a=e;const s=yl(a),i=Au(Is(a,s),[r,n]),o=kh(i),u=Math.floor(n/2)+1,l=Qc(o),c=Rl(o),h=Sh(l,[u,n-u],l.shape.length-1),d=Sh(c,[u,n-u],c.shape.length-1),p=a.shape.slice();return p[a.shape.length-1]=u,Au(Is(h[0],d[0]),p)}}),Th=ks({sqrt_:function(e){const t=xs(e,"x","sqrt");return cs.runKernel(br,{x:t})}}),_h=ks({squaredDifference_:function(e,t){let n=xs(e,"a","squaredDifference"),r=xs(t,"b","squaredDifference");return[n,r]=ts(n,r),fl(n.shape,r.shape),cs.runKernel(_r,{a:n,b:r},{})}}),Eh=ks({squeeze_:function(e,t){const n=xs(e,"x","squeeze");return Au(n,fe(n.shape,t).newShape)}}),Ah=ks({stack_:function(e,t=0){const n=ws(e,"tensors","stack","string_or_numeric");return Q(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&Q(t<=n[0].rank,()=>"Axis must be <= rank of the tensor"),cs.runKernel(Gn,n,{axis:t})}}),$h=ks({step_:function(e,t=0){const n=xs(e,"x","step");return cs.runKernel(Hr,{x:n},{alpha:t})}}),Fh=ks({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,u=0){const l=xs(e,"x","stridedSlice","string_or_numeric");return cs.runKernel(Ar,{x:l},{begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u})}}),Rh=ks({tan_:function(e){const t=xs(e,"x","tan");return cs.runKernel(Mr,{x:t})}});function Dh(e,t){te(e);const n=gs(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ns(e,null,n,t)}function Mh(e,t,n){if(te(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=gs(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ns(e,t,r,n)}function Oh(e,t,n){if(te(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=gs(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ns(e,t,r,n)}function zh(e,t,n){if(te(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=gs(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ns(e,t,r,n)}function Lh(e,t,n){if(te(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=gs(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ns(e,t=t||r,r,n)}var Ph=ks({topk_:function(e,t=1,n=!0){const r=xs(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const s={x:r},i={k:t,sorted:n},[o,u]=cs.runKernel(Lr,s,i);return{values:o,indices:u}}}),Bh=ks({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new Kc(t,n,r,!0,a),i=fi(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}}),Wh=ks({unique_:function(e,t=0){const n=xs(e,"x","unique","string_or_numeric");Q(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},a={axis:t},[s,i]=cs.runKernel(Wr,r,a);return{values:s,indices:i}}}),Vh=ks({unsortedSegmentSum_:function(e,t,n){const r=xs(e,"x","unsortedSegmentSum"),a=xs(t,"segmentIds","unsortedSegmentSum","int32");return Q(ie(n),()=>"numSegments must be of dtype int"),cs.runKernel(Ur,{x:r,segmentIds:a},{numSegments:n})}}),Uh=ks({unstack_:function(e,t=0){const n=xs(e,"x","unstack","string_or_numeric");return Q(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`),cs.runKernel(Vr,{value:n},{axis:t})}});function Gh(e,t=!0,n,r){return cs.makeVariable(e,t,n,r)}function Hh(e,t){const n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);const r=fi(e,"int32"),a=fi([n.length,e.length],"int32");for(let s=0;s<n.length;s++){const t=r.indexToLoc(n[s]);a.values.set(t,s*e.length)}return a.toTensor()}var jh=async function(e){const t=xs(e,"condition","whereAsync","bool"),n=await t.data(),r=Hh(t.shape,n);return e!==t&&t.dispose(),r},qh=async function(e,t,n){const r=xs(e,"tensor","boolMask"),a=xs(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;Q(i>0,()=>"mask cannot be scalar"),ee(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=s;m<s+i;m++)u*=o[m];const l=o.slice(0,s).concat([u],o.slice(s+i)),c=Au(r,l),h=Au(a,[-1]),d=await jh(h),p=Eh(d,[1]),f=Al(c,p,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f};function Kh(e,t,n=null){if(0===e.rank)return au(e);if(1!==e.rank&&null===n)return Kh(Au(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return nc(au(e),n);if(t===1/0)return ec(au(e),n);if(t===-1/0)return Sc(au(e),n);if("euclidean"===t||2===t)return Th(nc(Uc(au(e),ch(2,"int32")),n));throw new Error("Error in norm: invalid ord value: "+t)}if(Array.isArray(n)&&2===n.length){if(1===t)return ec(nc(au(e),n[0]),n[1]-1);if(t===1/0)return ec(nc(au(e),n[1]),n[0]);if(t===-1/0)return Sc(nc(au(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Th(nc(Ec(e),n));throw new Error("Error in norm: invalid ord value: "+t)}throw new Error("Error in norm: invalid axis: "+n)}var Xh=ks({norm_:function(e,t="euclidean",n=null,r=!1){const a=Kh(e=xs(e,"x","norm"),t,n);let s=a.shape;if(r){const t=pe(n,e.shape);s=oc(a.shape,t)}return Au(a,s)}}),Yh=ks({movingAverage_:function(e,t,n,r,a=!0){const s=xs(e,"v","movingAverage"),i=xs(t,"x","movingAverage"),o=xs(n,"decay","movingAverage");ns(s,i),Q(se(s.shape,i.shape),()=>"Shape mismatch in v and x");const u=ch(1),l=tc(u,o);let c=ru(tc(i,s),l);if(a){Q(null!=r,()=>"When using zeroDebias: true, step is required.");const e=xs(r,"step","movingAverage");c=nu(c,tc(u,Uc(o,e)))}return eu(s,c)}}),Zh=ks({scatterND_:function(e,t,n){const r=xs(e,"indices","scatterND","int32"),a=xs(t,"updates","scatterND");return Yi(a,r,n),cs.runKernel(lr,{indices:r,updates:a},{shape:n})}}),Jh=ks({sparseToDense_:function(e,t,n,r=0){const a=xs(e,"sparseIndices","sparseToDense","int32"),s=xs(t,"sparseValues","sparseToDense"),i=xs(r,"defaultValue","sparseToDense",s.dtype);return function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);if(0!==t.rank&&(1!==t.rank||t.size!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i),cs.runKernel(Tr,{sparseIndices:a,sparseValues:s,defaultValue:i},{outputShape:n})}}),Qh=ks({gatherND_:function(e,t){const n=xs(t,"indices","gatherND","int32"),r=xs(e,"x","gatherND","string_or_numeric");return cs.runKernel(tn,{params:r,indices:n})}}),ed=ks({dropout_:function(e,t,n,r){const a=xs(e,"x","dropout");if(Q("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),Q(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof La?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(se(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)n.push(null==t[r]&&null!=e.shape[r]?e.shape[r]:t[r]);return n}return t}(a,n),i=1-t,o=nu(El(eu(Zc(s,0,1,"float32",r),i)),i);return ru(a,o)}});function td(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function nd(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Dh(a,"float32")}var rd=async function(e,t,n=1){const r=xs(e,"predictions","inTopK"),a=xs(t,"targets","inTopK");Q(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),Q(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),ee(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];Q(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);const i=await r.data(),o=await a.data(),[u,l]=[i.length/s,s],c=me("bool",u);for(let h=0;h<u;h++){const e=h*l,t=i.subarray(e,e+l),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort((e,t)=>t.value-e.value),c[h]=0;for(let a=0;a<n;a++)if(r[a].index===o[h]){c[h]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Ss(c,a.shape,"bool")},ad={};g(ad,{conv2d:()=>cd,depthwiseConv2d:()=>pd,matMul:()=>fd});var sd=ks({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=Au(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Au(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Q(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),Q(4===u.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),Q(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const l="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];return Q(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),Q(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),null!=i&&Q(ie(a),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`),cs.runKernel(vt,{x:o,dy:u},{strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n})}});function id(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return ru(e,$h(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function od(e,t){let n=t;const r=pl(e.shape,t.shape);return r.length>0&&(n=nc(n,r)),Au(n,e.shape)}function ud(e,t,n,r){if("linear"===t)return e;if("relu"===t)return th(e);if("elu"===t)return vl(e);if("relu6"===t)return nh(e);if("prelu"===t)return Gc(e,n);if("leakyrelu"===t)return zl(e,r);if("sigmoid"===t)return Du(e);throw new Error(`Unknown fused activation ${t}.`)}var ld=(e,t)=>!(e>0)||"linear"===t,cd=ks({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===ld(cs.state.gradientDepth,u=u||"linear")){let h=Zu(e,t,n,r,a,s,i);return null!=o&&(h=eu(h,o)),ud(h,u,l,c)}const h=xs(e,"x","conv2d"),d=xs(t,"filter","conv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=Au(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Q(4===p.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),Q(4===d.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),null!=i&&Q(ie(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),Q(p.shape[3]===d.shape[2],()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`),Q(_u(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),Q("NHWC"===a,()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`);const m=wu(p.shape,d.shape,n,s,r,i);let g,y;null!=o&&(g=xs(o,"bias","fused conv2d"),[g]=ts(g,h),fl(m.outShape,g.shape)),null!=l&&(y=xs(l,"prelu weights","fused conv2d"));const b=(e,t)=>{const[a,i,o,l]=t,c=id(e,o,u);Q(Tu(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const h=[Qu(i.shape,c,a,n,r),sd(i,c,a.shape,n,r)];if(null!=l){const e=od(l,c);h.push(e)}return h},x={x:p,filter:d,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};return null==o?Xl((e,t,n)=>{let r=cs.runKernel(Xr,x,w);return n([t,e,r]),f&&(r=Au(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}})(p,d):Xl((e,t,n,r)=>{let a=cs.runKernel(Xr,x,w);return r([t,e,a,n]),f&&(a=Au(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}})(p,d,g)}}),hd=ks({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=Au(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;return 3===u.rank&&(u=Au(t,[1,t.shape[0],t.shape[1],t.shape[2]])),cs.runKernel(Rt,{x:o,dy:u},{strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n})}}),dd=ks({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=Au(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l=cs.runKernel(Dt,{dy:o,filter:n},{strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e});return u?Au(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),pd=ks({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===ld(cs.state.gradientDepth,u)){let h=ll(e,t,n,r,a,s,i);return null!=o&&(h=eu(h,o)),ud(h,u,l,c)}const h=xs(e,"x","depthwiseConv2d"),d=xs(t,"filter","depthwiseConv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=Au(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Q(4===p.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),Q(4===d.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),Q(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),null==s&&(s=[1,1]),Q(_u(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),null!=i&&Q(ie(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const m=wu(p.shape,d.shape,n,s,r,i,!0);let g,y;null!=o&&(g=xs(o,"bias","fused conv2d"),[g]=ts(g,h),fl(m.outShape,g.shape)),null!=l&&(y=xs(l,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{Q(Tu(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);const[a,o,l,c]=t,h=id(e,l,u),d=dd(o.shape,h,a,n,r,s,i),p=hd(o,h,a.shape,n,r,s,i);return null!=c?[d,p,od(g,h)]:[d,p]},x={x:p,filter:d,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};return null==o?Xl((e,t,n)=>{let r=cs.runKernel(Yr,x,w);return n([t,e,r]),f&&(r=Au(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}})(p,d):Xl((e,t,n,r)=>{let a=cs.runKernel(Yr,x,w);return r([t,e,a,n]),f&&(a=Au(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}})(p,d,g)}}),fd=ks({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===ld(cs.state.gradientDepth,s)){let u=Oi(e,t,n,r);return null!=a&&(u=eu(u,a)),ud(u,s,i,o)}let u=xs(e,"a","fused matMul"),l=xs(t,"b","fused matMul");[u,l]=ts(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=re(f),y=re(m);Q(u.rank>=2&&l.rank>=2&&u.rank===l.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${l.rank}.`),Q(se(f,m),()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${u.shape} and ${l.shape} must match.`),Q(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const b=u.shape.slice(0,-2).concat([d,p]),x=Au(u,n?[g,c,d]:[g,d,c]),w=Au(l,r?[y,p,h]:[y,h,p]);let v,k;null!=a&&(v=xs(a,"bias","fused matMul"),[v]=ts(v,u),fl(b,v.shape)),null!=i&&(k=xs(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,u,l]=t,c=id(Au(e,u.shape),u,s);let h,d;return n||r?!n&&r?(h=Oi(c,o,!1,!1),d=Oi(c,i,!0,!1)):n&&!r?(h=Oi(o,c,!1,!0),d=Oi(i,c,!1,!1)):(h=Oi(o,c,!0,!0),d=Oi(c,i,!0,!0)):(h=Oi(c,o,!1,!0),d=Oi(i,c,!0,!1)),null!=a?[h,d,od(l,c)]:[h,d]},N={a:x,b:w,bias:v,preluActivationWeights:k},S={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return null==a?Xl((e,t,n)=>{const r=cs.runKernel(Kr,N,S);return n([e,t,r]),{value:Au(r,b),gradFunc:I}})(x,w):Xl((e,t,n,r)=>{const a=cs.runKernel(Kr,N,S);return r([e,t,a,n]),{value:Au(a,b),gradFunc:I}})(x,w,v)}}),md=ks({hammingWindow_:function(e){return nd(e,.54,.46)}}),gd=ks({hannWindow_:function(e){return nd(e,.5,.5)}}),yd=ks({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(Mu(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=Ru([Mu(e,s,t-r),_l([r],a)]);i.push(o),s+=n}return 0===i.length?Mh([],[0,t]):Au(Ru(i),[i.length,t])}}),bd=ks({stft_:function(e,t,n,r,a=gd){null==r&&(r=td(t));const s=yd(e,t,n),i=ru(s,a(t));return Ch(i,r)}}),xd=ks({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=xs(e,"image","cropAndResize"),o=xs(t,"boxes","cropAndResize","float32"),u=xs(n,"boxInd","cropAndResize","int32"),l=o.shape[0];return Q(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),Q(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`),Q(1===u.rank&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`),Q(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),Q(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),Q("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was "+a),cs.runKernel(Et,{image:i,boxes:o,boxInd:u},{method:a,extrapolationValue:s,cropSize:r})}}),wd=ks({flipLeftRight_:function(e){const t=xs(e,"image","flipLeftRight","float32");return Q(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),cs.runKernel(Yt,{image:t},{})}}),vd=ks({rotateWithOffset_:function(e,t,n=0,r=.5){const a=xs(e,"image","rotateWithOffset","float32");return Q(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`),cs.runKernel(qr,{image:a},{radians:t,fillValue:n,center:r})}});function kd(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),Q(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),Q(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),Q(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),Q(1===t.rank,()=>"scores must be a 1D tensor"),Q(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),Q(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var Id=ks({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=xs(e,"boxes","nonMaxSuppression"),i=xs(t,"scores","nonMaxSuppression"),o=kd(s,i,n,r,a);return cs.runKernel(Pn,{boxes:s,scores:i},{maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold})}});function Nd(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||Sd)}(e,t,n);e.splice(r<0?-(r+1):r,0,t)}function Sd(e,t){return e>t?1:e<t?-1:0}function Cd(e,t,n,r,a){return Ed(e,t,n,r,a,0)}function Td(e,t,n,r,a,s){return Ed(e,t,n,r,a,0,!1,s,!0)}function _d(e,t,n,r,a,s){return Ed(e,t,n,r,a,s,!0)}function Ed(e,t,n,r,a,s,i=!1,o=!1,u=!1){const l=[];for(let g=0;g<t.length;g++)t[g]>a&&l.push({score:t[g],boxIndex:g,suppressBeginIndex:0});l.sort(Fd);const c=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let u=h.length-1;u>=i;--u){const n=Ad(e,s,h[u]);if(n>=r){o=!0;break}if(t.score=t.score*$d(r,c,n),t.score<=a)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(s),d.push(t.score)):t.score>a&&Nd(l,t,Fd))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function Ad(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function $d(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Fd(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var Rd=ks({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=xs(e,"boxes","nonMaxSuppression"),o=xs(t,"scores","nonMaxSuppression"),u=kd(i,o,n,r,a,s),l=cs.runKernel(Wn,{boxes:i,scores:o},{maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma});return{selectedIndices:l[0],selectedScores:l[1]}}}),Dd=ks({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=xs(e,"boxes","nonMaxSuppression"),o=xs(t,"scores","nonMaxSuppression"),u=kd(i,o,n,r,a,null),l=cs.runKernel(Bn,{boxes:i,scores:o},{maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s});return{selectedIndices:l[0],validOutputs:l[1]}}}),Md=ks({resizeBilinear_:function(e,t,n=!1,r=!1){const a=xs(e,"images","resizeBilinear");Q(3===a.rank||4===a.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),Q(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),Q(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;3===a.rank&&(i=!0,s=Au(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o=cs.runKernel(rr,{images:s},{alignCorners:n,halfPixelCenters:r,size:t});return i?Au(o,[o.shape[1],o.shape[2],o.shape[3]]):o}}),Od=ks({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=xs(e,"images","resizeNearestNeighbor");Q(3===a.rank||4===a.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),Q(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),Q("float32"===a.dtype||"int32"===a.dtype,()=>"`images` must have `int32` or `float32` as dtype"),Q(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;3===a.rank&&(i=!0,s=Au(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o=cs.runKernel(tr,{images:s},{alignCorners:n,halfPixelCenters:r,size:t});return i?Au(o,[o.shape[1],o.shape[2],o.shape[3]]):o}}),zd=ks({threshold_:function(e,t="binary",n=!1,r=.5){const a=xs(e,"image","threshold"),s=a.shape[0]*a.shape[1];let i,o,u,l,c=ru(Dh([r]),255);if(Q(3===a.rank,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),Q(3===a.shape[2]||1===a.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),Q("int32"===a.dtype||"float32"===a.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),Q("otsu"===t||"binary"===t,()=>"Method must be binary or otsu, but was "+t),3===a.shape[2]){[i,o,u]=Sh(a,[1,1,1],-1);const e=ru(i,.2989),t=ru(o,.587),n=ru(u,.114);l=eu(eu(e,t),n)}else l=e;"otsu"===t&&(c=function(e,t){let n,r,a,s,i,o,u=Dh([-1]),l=Dh([0]),c=Dh([0]);for(let h=0;h<e.size-1;h++){n=Mu(e,0,h+1),r=Mu(e,h+1),i=nu(nc(n),t),o=nu(nc(r),t);const d=nc(ru(n,Jc(0,n.size)));a=nu(d,nc(n));const p=_l(r.shape,n.size),f=eu(Jc(0,r.size),p),m=ru(r,f);s=nu(nc(m),nc(r));const g=tc(a,s),y=tc(a,s),b=ru(i,o);c=ru(ru(b,g),y);const x=$l(c,l);l=gl(x,c,l),u=gl(x,Dh([h]),u)}return u}(Uu(mi(uh(l),"int32"),Ss([]),256),s));const h=n?Pl(l,c):$l(l,c);return mi(ru(h,255),"int32")}}),Ld=ks({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=xs(e,"image","transform","float32"),o=xs(t,"transforms","transform","float32");return Q(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),Q(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),Q(null==s||2===s.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`),cs.runKernel(Pr,{image:i,transforms:o},{interpolation:n,fillMode:r,fillValue:a,outputShape:s})}}),Pd=ks({bandPart_:function(e,t,n){Q(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),Q(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=xs(e,"a","bandPart");Q(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=Au(Jc(0,s,1,"int32"),[-1,1]),u=Jc(0,i,1,"int32"),l=tc(o,u),c=pc(Pl(l,ch(+t,"int32")),Fl(l,ch(-n,"int32"))),h=kc([s,i],r.dtype);return Au(Ah(Uh(Au(r,[-1,s,i])).map(e=>gl(c,e,h))),a)}}),Bd=ks({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Q(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)Q(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=Sh(e,e.shape[0],0).map(e=>Eh(e,[0]));Q(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let a=0;a<e.length;++a)n.push(cs.tidy(()=>{let e=r[a];if(a>0)for(let t=0;t<a;++t){const r=ru(nc(ru(n[t],e)),n[t]);e=tc(e,r)}return nu(e,Xh(e,"euclidean"))}));return t?Ah(n,0):n}});function Wd(e,t=!1){return cs.tidy(()=>{Q(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let a=Tl(n),s=gi(e);const i=Mh([[1]],[1,1]);let o=gi(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,l=a;[o,s,a]=cs.tidy(()=>{const t=Mu(s,[e,e],[n-e,1]),u=Xh(t),l=Mu(s,[e,e],[1,1]),c=gl($l(l,0),Mh([[-1]]),Mh([[1]])),h=tc(l,ru(c,u)),d=nu(t,h);o=1===d.shape[0]?gi(i):Ru([i,Mu(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Zl(nu(Oi(c,h),u)),f=Mu(s,[e,0],[n-e,r]),m=ru(p,o),g=Li(o);if(0===e)s=tc(f,Oi(m,Oi(g,f)));else{const t=tc(f,Oi(m,Oi(g,f)));s=Ru([Mu(s,[0,0],[e,r]),t],0)}const y=Li(m),b=Mu(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=tc(b,Oi(Oi(b,o),y));else{const t=tc(b,Oi(Oi(b,o),y));a=Ru([Mu(a,[0,0],[n,e]),t],1)}return[o,s,a]}),Vo([t,u,l])}return!t&&n>r&&(a=Mu(a,[0,0],[n,r]),s=Mu(s,[0,0],[r,r])),[a,s]})}var Vd,Ud,Gd=ks({qr_:function(e,t=!1){if(Q(e.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank),2===e.rank)return Wd(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=Uh(Au(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach(e=>{const[n,r]=Wd(e,t);a.push(n),s.push(r)}),[Au(Ah(a,0),e.shape),Au(Ah(s,0),e.shape)]}}});(Ud=Vd||(Vd={}))[Ud.NONE=0]="NONE",Ud[Ud.MEAN=1]="MEAN",Ud[Ud.SUM=2]="SUM",Ud[Ud.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";var Hd=ks({computeWeightedLoss_:function(e,t,n=Vd.SUM_BY_NONZERO_WEIGHTS){const r=xs(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=xs(t,"weights","computeWeightedLoss"));const s=null==a?r:ru(r,a);if(n===Vd.NONE)return s;if(n===Vd.SUM)return nc(s);if(n===Vd.MEAN){if(null==a)return vc(s);{const e=r.size/a.size,t=nu(nc(s),nc(a));return e>1?nu(t,ch(e)):t}}if(n===Vd.SUM_BY_NONZERO_WEIGHTS){if(null==a)return nu(nc(s),ch(r.size));{const e=ru(a,Ic(r.shape)),t=mi(nc(Rc(e,ch(0))),"float32");return nu(nc(s),t)}}throw Error("Unknown reduction: "+n)}}),jd=ks({absoluteDifference_:function(e,t,n,r=Vd.SUM_BY_NONZERO_WEIGHTS){const a=xs(e,"labels","absoluteDifference"),s=xs(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=xs(n,"weights","absoluteDifference")),ee(a.shape,s.shape,"Error in absoluteDifference: ");const o=au(tc(a,s));return Hd(o,i,r)}}),qd=ks({cosineDistance_:function(e,t,n,r,a=Vd.SUM_BY_NONZERO_WEIGHTS){const s=xs(e,"labels","cosineDistance"),i=xs(t,"predictions","cosineDistance");let o=null;null!=r&&(o=xs(r,"weights","cosineDistance")),ee(s.shape,i.shape,"Error in cosineDistance: ");const u=ch(1),l=tc(u,nc(ru(s,i),n,!0));return Hd(l,o,a)}}),Kd=ks({hingeLoss_:function(e,t,n,r=Vd.SUM_BY_NONZERO_WEIGHTS){let a=xs(e,"labels","hingeLoss");const s=xs(t,"predictions","hingeLoss");let i=null;null!=n&&(i=xs(n,"weights","hingeLoss")),ee(a.shape,s.shape,"Error in hingeLoss: ");const o=ch(1);a=tc(ru(ch(2),a),o);const u=th(tc(o,ru(a,s)));return Hd(u,i,r)}}),Xd=ks({huberLoss_:function(e,t,n,r=1,a=Vd.SUM_BY_NONZERO_WEIGHTS){const s=xs(e,"labels","huberLoss"),i=xs(t,"predictions","huberLoss");let o=null;null!=n&&(o=xs(n,"weights","huberLoss")),ee(s.shape,i.shape,"Error in huberLoss: ");const u=ch(r),l=au(tc(i,s)),c=Cc(l,u),h=tc(l,c),d=eu(ru(ch(.5),Ec(c)),ru(u,h));return Hd(d,o,a)}}),Yd=ks({logLoss_:function(e,t,n,r=1e-7,a=Vd.SUM_BY_NONZERO_WEIGHTS){const s=xs(e,"labels","logLoss"),i=xs(t,"predictions","logLoss");let o=null;null!=n&&(o=xs(n,"weights","logLoss")),ee(s.shape,i.shape,"Error in logLoss: ");const u=ch(1),l=ch(r),c=Zl(ru(s,Vl(eu(i,l)))),h=ru(tc(u,s),Vl(eu(tc(u,i),l))),d=tc(c,h);return Hd(d,o,a)}}),Zd=ks({meanSquaredError_:function(e,t,n,r=Vd.SUM_BY_NONZERO_WEIGHTS){const a=xs(e,"labels","meanSquaredError"),s=xs(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=xs(n,"weights","meanSquaredError")),ee(a.shape,s.shape,"Error in meanSquaredError: ");const o=_h(a,s);return Hd(o,i,r)}}),Jd=ks({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Vd.SUM_BY_NONZERO_WEIGHTS){let s=xs(e,"multiClassLabels","sigmoidCrossEntropy");const i=xs(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=xs(n,"weights","sigmoidCrossEntropy")),ee(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=ch(r),t=ch(1),n=ch(.5);s=eu(ru(s,tc(t,e)),ru(n,e))}const u=function(e,t){const n=xs(e,"labels","sigmoidCrossEntropyWithLogits"),r=xs(t,"logits","sigmoidCrossEntropyWithLogits");ee(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=th(r),s=ru(r,n),i=Ul(Il(Zl(au(r))));return eu(tc(a,s),i)}(s,i);return Hd(u,o,a)}}),Qd=ks({softmaxCrossEntropy_:function(e,t,n,r=0,a=Vd.SUM_BY_NONZERO_WEIGHTS){let s=xs(e,"onehotLabels","softmaxCrossEntropy");const i=xs(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=xs(n,"weights","softmaxCrossEntropy")),ee(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=ch(r),t=ch(1),n=ch(s.shape[1]);s=eu(ru(s,tc(t,e)),nu(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Xl((e,t,r)=>{const a=dc(t,[n],!0),s=tc(mi(t,"float32"),a);r([e,s]);const i=Zl(ru(s,e));return{value:nc(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=oc(e.shape,[n]);return[ru(Au(e,s),tc(mi(r,"float32"),Il(a))),ru(Au(e,s),tc(Il(a),mi(r,"float32")))]}}})(e,t)}(s,i);return Hd(u,o,a)}}),ep=ks({sparseFillEmptyRows_:function(e,t,n,r){const a=xs(e,"indices","sparseFillEmptyRows"),s=xs(t,"values","sparseFillEmptyRows"),i=xs(n,"denseShape","sparseFillEmptyRows"),o=xs(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error("Indices should be Tensor2D but received shape\n        "+a.shape);if(1!==s.rank)throw new Error("Values should be Tensor1D but received shape "+s.shape);if(1!==i.rank)throw new Error("Dense shape should be Tensor1D but received shape "+i.shape);if(0!==o.rank)throw new Error("Default value should be a scalar but received shape "+o.shape);const u=cs.runKernel(Ir,{indices:a,values:s,denseShape:i,defaultValue:o});return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),tp=ks({sparseReshape_:function(e,t,n){const r=xs(e,"inputIndices","sparseReshape"),a=xs(t,"inputShape","sparseReshape"),s=xs(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error("Input indices should be Tensor2D but received shape\n        "+r.shape);if(1!==a.rank)throw new Error("Input shape should be Tensor1D but received shape "+a.shape);if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape "+s.shape);const i=cs.runKernel(Nr,{inputIndices:r,inputShape:a,newShape:s});return{outputIndices:i[0],outputShape:i[1]}}}),np=ks({sparseSegmentMean_:function(e,t,n){const r=xs(e,"data","sparseSegmentMean"),a=xs(t,"indices","sparseSegmentMean"),s=xs(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error("Indices should be Tensor1D but received shape\n          "+a.shape);if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          "+s.shape);return cs.runKernel(Sr,{data:r,indices:a,segmentIds:s})}}),rp=ks({sparseSegmentSum_:function(e,t,n){const r=xs(e,"data","sparseSegmentSum"),a=xs(t,"indices","sparseSegmentSum"),s=xs(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error("Indices should be Tensor1D but received shape\n         "+a.shape);if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         "+s.shape);return cs.runKernel(Cr,{data:r,indices:a,segmentIds:s})}}),ap=ks({stringNGrams_:function(e,t,n,r,a,s,i,o){const u=xs(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error("Data must be a vector, saw: "+u.shape);const l=xs(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c=cs.runKernel($r,{data:u,dataSplits:l},{separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o});return{nGrams:c[0],nGramsSplits:c[1]}}}),sp=ks({stringSplit_:function(e,t,n=!0){const r=xs(e,"input","stringSplit","string"),a=xs(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error("Input should be Tensor1D but received shape "+r.shape);if(0!==a.rank)throw new Error("Delimiter should be a scalar but received shape "+a.shape);const s=cs.runKernel(Fr,{input:r,delimiter:a},{skipEmpty:n});return{indices:s[0],values:s[1],shape:s[2]}}}),ip=ks({stringToHashBucketFast_:function(e,t){const n=xs(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");return cs.runKernel(Rr,{input:n},r)}}),op={fft:kh,ifft:Ih,rfft:Ch,irfft:Nh},up={hammingWindow:md,hannWindow:gd,frame:yd,stft:bd},lp={flipLeftRight:wd,resizeNearestNeighbor:Od,resizeBilinear:Md,rotateWithOffset:vd,cropAndResize:xd,nonMaxSuppression:Id,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=xs(e,"boxes","nonMaxSuppressionAsync"),i=xs(t,"scores","nonMaxSuppressionAsync"),o=kd(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=Cd(l,c,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Dh(h,"int32")},nonMaxSuppressionWithScore:Rd,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=xs(e,"boxes","nonMaxSuppressionAsync"),o=xs(t,"scores","nonMaxSuppressionAsync"),u=kd(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=_d(c,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Dh(d,"int32"),selectedScores:Dh(p)}},nonMaxSuppressionPadded:Dd,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=xs(e,"boxes","nonMaxSuppressionAsync"),o=xs(t,"scores","nonMaxSuppressionAsync"),u=kd(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Td(d,p,l,c,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Dh(f,"int32"),validOutputs:ch(m,"int32")}},threshold:zd,transform:Ld},cp={bandPart:Pd,gramSchmidt:Bd,qr:Gd},hp={absoluteDifference:jd,computeWeightedLoss:Hd,cosineDistance:qd,hingeLoss:Kd,huberLoss:Xd,logLoss:Yd,meanSquaredError:Zd,sigmoidCrossEntropy:Jd,softmaxCrossEntropy:Qd},dp={sparseFillEmptyRows:ep,sparseReshape:tp,sparseSegmentMean:np,sparseSegmentSum:rp},pp={stringNGrams:ap,stringSplit:sp,stringToHashBucketFast:ip},fp=class extends yo{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:a[e.name]}));this.applyGradients(e)}else this.applyGradients(a);return Vo(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Kl(e,t)}dispose(){null!=this.iterations_&&Vo(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ch(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(fp,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var mp=class extends fp{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=cs.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=cs.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:Wo(()=>yl(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:Wo(()=>yl(r).variable(!1))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Wo(()=>{const e=eu(ru(s,this.rho),ru(Ec(a),1-this.rho)),t=ru(nu(Th(eu(i,this.epsilon)),Th(eu(s,this.epsilon))),a),n=eu(ru(i,this.rho),ru(Ec(t),1-this.rho));s.assign(e),i.assign(n);const o=eu(ru(t,-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Vo(this.accumulatedGrads.map(e=>e.variable)),Vo(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};mp.className="Adadelta",xo(mp);var gp=class extends fp{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=cs.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:Wo(()=>_l(r.shape,this.initialAccumulatorValue).variable(e))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;Wo(()=>{const e=eu(s,Ec(a));s.assign(e);const t=eu(ru(nu(a,Th(eu(e,cs.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Vo(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};gp.className="Adagrad",xo(gp);var yp=class extends fp{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Wo(()=>{this.accBeta1=ch(t).variable(),this.accBeta2=ch(n).variable()}),null==r&&(this.epsilon=cs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Wo(()=>{const n=tc(1,this.accBeta1),r=tc(1,this.accBeta2);t.forEach((t,a)=>{const s=cs.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:Wo(()=>yl(s).variable(!1))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:t+"/v",variable:Wo(()=>yl(s).variable(!1))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=eu(ru(o,this.beta1),ru(i,1-this.beta1)),c=eu(ru(u,this.beta2),ru(Ec(i),1-this.beta2)),h=nu(l,n),d=nu(c,r);o.assign(l),u.assign(c);const p=eu(ru(nu(h,eu(Th(d),this.epsilon)),-this.learningRate),s);s.assign(p)}),this.accBeta1.assign(ru(this.accBeta1,this.beta1)),this.accBeta2.assign(ru(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Vo(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&Vo(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),Wo(()=>{this.accBeta1.assign(Uc(this.beta1,this.iterations_+1)),this.accBeta2.assign(Uc(this.beta2,this.iterations_+1))});const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};yp.className="Adam",xo(yp);var bp=class extends fp{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Wo(()=>{this.iteration=ch(0).variable(),this.accBeta1=ch(t).variable()}),null==r&&(this.epsilon=cs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Wo(()=>{const n=tc(1,this.accBeta1),r=nu(-this.learningRate,eu(ru(this.iteration,this.decay),1));t.forEach((t,a)=>{const s=cs.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:yl(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:t+"/v",variable:yl(s).variable(!1)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=eu(ru(o,this.beta1),ru(i,1-this.beta1)),c=ru(u,this.beta2),h=au(i),d=wc(c,h);o.assign(l),u.assign(d);const p=eu(ru(nu(r,n),nu(l,eu(d,this.epsilon))),s);s.assign(p)}),this.iteration.assign(eu(this.iteration,1)),this.accBeta1.assign(ru(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Vo(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&Vo(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};bp.className="Adamax",xo(bp);var xp=class extends fp{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=cs.registeredVariables[t];Wo(()=>{const e=eu(ru(this.c,r),a);a.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Uo(ch(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};xp.className="SGD",xo(xp);var wp=class extends xp{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ch(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=cs.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:t+"/momentum",variable:Wo(()=>yl(r).variable(e))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Wo(()=>{let e;const t=eu(ru(this.m,a),s);e=eu(ru(this.c,this.useNesterov?eu(s,ru(t,this.m)):t),r),a.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Vo(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};wp.className="Momentum",xo(wp);var vp=class extends fp{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=cs.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=cs.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:Wo(()=>yl(r).variable(a))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:Wo(()=>yl(r).variable(a))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:Wo(()=>yl(r).variable(a))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Wo(()=>{const e=eu(ru(i,this.decay),ru(Ec(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=eu(ru(t,this.decay),ru(s,1-this.decay)),u=nu(ru(s,this.learningRate),Th(tc(e,eu(Ec(a),this.epsilon)))),l=eu(ru(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(l);const c=tc(r,l);r.assign(c)}else{const e=eu(ru(i,this.decay),ru(Ec(s),1-this.decay)),t=eu(ru(o,this.momentum),nu(ru(s,this.learningRate),Th(eu(e,this.epsilon))));i.assign(e),o.assign(t);const n=tc(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Vo(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Vo(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&Vo(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};vp.className="RMSProp",xo(vp);var kp=class{static sgd(e){return new xp(e)}static momentum(e,t,n=!1){return new wp(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new vp(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new yp(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new mp(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new bp(e,t,n,r,a)}static adagrad(e,t=.1){return new gp(e,t)}},Ip={sgd:kp.sgd,momentum:kp.momentum,adadelta:kp.adadelta,adagrad:kp.adagrad,rmsprop:kp.rmsprop,adamax:kp.adamax,adam:kp.adam},Np="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Sp(){return new Promise(e=>Np(()=>e()))}var Cp={};function Tp(e,t){const n=e[0].length;e.forEach((e,t)=>{Q(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),Q(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,a)=>{for(let s=0;s<n;s++)Q(s===t||e[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function _p(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}g(Cp,{ERF_A1:()=>Bp,ERF_A2:()=>Wp,ERF_A3:()=>Vp,ERF_A4:()=>Up,ERF_A5:()=>Gp,ERF_P:()=>Pp,PARALLELIZE_THRESHOLD:()=>Ep,SELU_SCALE:()=>Lp,SELU_SCALEALPHA:()=>zp,applyActivation:()=>ud,assertAndGetBroadcastShape:()=>fl,assertAxesAreInnerMostDims:()=>uc,assertParamsConsistent:()=>Tp,assignToTypedArray:()=>Jp,axesAreInnerMostDims:()=>ac,calculateShapes:()=>Zi,checkEinsumDimSizes:()=>af,combineLocations:()=>sc,complexWithEvenIndex:()=>Xp,complexWithOddIndex:()=>Yp,computeConv2DInfo:()=>wu,computeConv3DInfo:()=>vu,computeDefaultPad:()=>ku,computeDilation2DInfo:()=>yu,computeOptimalWindowSize:()=>Ap,computeOutAndReduceShapes:()=>ic,computeOutShape:()=>_p,computePool2DInfo:()=>bu,computePool3DInfo:()=>xu,convertConv2DDataFormat:()=>Eu,decodeEinsumEquation:()=>nf,eitherStridesOrDilationsAreOne:()=>_u,expandShapeToKeepDim:()=>oc,exponent:()=>ef,exponents:()=>Qp,fromStringArrayToUint8:()=>mf,fromUint8ToStringArray:()=>ff,getAxesPermutation:()=>lc,getBroadcastDims:()=>dl,getComplexWithIndex:()=>Zp,getEinsumComputePath:()=>sf,getEinsumPermutation:()=>rf,getFusedBiasGradient:()=>od,getFusedDyActivation:()=>id,getImageCenter:()=>$p,getInnerMostAxes:()=>hc,getPermuted:()=>Rp,getReductionAxes:()=>pl,getReshaped:()=>Fp,getReshapedPermuted:()=>Dp,getSliceBeginCoords:()=>Mp,getSliceSize:()=>Op,getUndoAxesPermutation:()=>cc,isIdentityPermutation:()=>of,log:()=>jp,mergeRealAndImagArrays:()=>qp,prepareAndValidate:()=>qi,prepareSplitSize:()=>lf,segment_util:()=>cf,shouldFuse:()=>ld,slice_util:()=>Ji,splitRealAndImagArrays:()=>Kp,tupleValuesAreOne:()=>Tu,upcastType:()=>Qa,validateInput:()=>Yi,validateUpdateShape:()=>Xi,warn:()=>Hp});var Ep=30;function Ap(e){return e<=Ep?e:_e(e,Math.floor(Math.sqrt(e)))}function $p(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Fp(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Rp(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Dp(e,t,n,r=!0){const a=[];a.push(r?e[0]/n:e[0]*n);for(let s=1;s<e.length;++s)a.push(s<=t.length?r?t[s-1]*e[s]:e[s]/t[s-1]:e[s]);return a}function Mp(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Op(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var zp=1.7580993408473768,Lp=1.0507009873554805,Pp=.3275911,Bp=.254829592,Wp=-.284496736,Vp=1.421413741,Up=-1.453152027,Gp=1.061405429;function Hp(...e){We().getBool("IS_TEST")||console.warn(...e)}function jp(...e){We().getBool("IS_TEST")||console.log(...e)}function qp(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Kp(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Xp(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function Yp(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function Zp(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Jp(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Qp(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function ef(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var tf=/->/g;function nf(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(tf,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split("->");Q(-1===r.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let h=0;h<a.length;++h){const e=a[h];if(!s.some(t=>-1!==t.indexOf(e)))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let h=0;h<r.length;++h){const e=r[h];-1===o.indexOf(e)&&","!==e&&o.push(e)}const u=new Array(s.length);for(let h=0;h<i;++h){if(new Set(s[h].split("")).size!==s[h].length)throw new Error(`Found duplicate axes in input component ${s[h]}. Support for duplicate axes in input is not implemented yet.`);u[h]=[];for(let e=0;e<s[h].length;++e)u[h].push(o.indexOf(s[h][e]))}const l=o.length,c=[];for(let h=a.length;h<l;++h)c.push(h);return{allDims:o,summedDims:c,idDims:u}}function rf(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;const r=[];for(let a=0;a<e;++a)-1===n[a]&&r.push(a);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:r}}function af(e,t,n){const r=new Array(e);for(let a=0;a<n.length;++a){const e=n[a].shape;for(let n=0;n<t[a].length;++n)void 0===r[t[a][n]]?r[t[a][n]]=e[n]:Q(r[t[a][n]]===e[n],()=>`Expected dimension ${r[t[a][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`)}}function sf(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let i=0;i<a;++i)r.push([]);const s=[];for(let i=0;i<n.length;++i){const e=uf(t,n[i]);for(const t of e)-1===s.indexOf(t)&&(r[i].push(t),s.push(t))}return{path:n,steps:r}}function of(e){return e.every((e,t)=>e===t)}function uf(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function lf(e,t,n=0){let r=[];if("number"==typeof t)Q(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{Q(t.reduce((e,t)=>(-1===t&&(e+=1),e),0)<=1,()=>"There should be only one negative value in split array.");const a=t.indexOf(-1);if(-1!==a){const r=t.reduce((e,t)=>t>0?e+t:e);t[a]=e.shape[n]-r}Q(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}var cf={};function hf(e,t){let n,r=!1;for(e<=Ep?(n=e,r=!0):n=_e(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=_e(e,n+1);return n}function df(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)r.push(s!==t?e[s]:n);return r}function pf(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let h=0;h<r;++h)o.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<a;h++)o.push(t.shape[h]);for(let h=n+1;h<s;h++)o.push(e.shape[h]),c*=e.shape[h];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function ff(e){try{return e.map(e=>_a(e))}catch(BG){throw new Error("Failed to decode encoded string bytes into utf-8, error: "+BG)}}function mf(e){return e.map(e=>Ta(e))}g(cf,{collectGatherOpShapeInfo:()=>pf,computeOutShape:()=>df,segOpComputeOptimalWindowSize:()=>hf});var gf={};g(gf,{nonMaxSuppressionV3Impl:()=>Cd,nonMaxSuppressionV4Impl:()=>Td,nonMaxSuppressionV5Impl:()=>_d,whereImpl:()=>Hh});var yf={kernelName:je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(e,$h(mi(n,"float32"),-1))}}},bf={kernelName:qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ec(mi(n,"float32")),r=Th(tc(ch(1),t));return Zl(nu(e,r))}}}},xf={kernelName:Ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Th(tc(Ec(mi(n,"float32")),1));return nu(e,t)}}}},wf={kernelName:Xe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=fl(n.shape,r.shape);return{a:()=>{let t=e;const r=pl(n.shape,a);return r.length>0&&(t=nc(t,r)),Au(t,n.shape)},b:()=>{let t=e;const n=pl(r.shape,a);return n.length>0&&(t=nc(t,n)),Au(t,r.shape)}}}},vf={kernelName:Ye,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}},kf={kernelName:Qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yl(n)}}},If={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yl(n)}}},Nf={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nu(e,Th(tc(ch(1),Ec(mi(n,"float32")))))}}},Sf={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Th(eu(ch(1),Ec(mi(n,"float32"))));return nu(e,t)}}}},Cf={kernelName:st,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=fl(n.shape,r.shape);return{a:()=>{const t=eu(Ec(n),Ec(r));let s=ru(e,nu(r,t));const i=pl(n.shape,a);return i.length>0&&(s=nc(s,i)),Au(s,n.shape)},b:()=>{const t=eu(Ec(n),Ec(r));let s=Zl(ru(e,nu(n,t)));const i=pl(r.shape,a);return i.length>0&&(s=nc(s,i)),Au(s,r.shape)}}}},Tf={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nu(e,eu(Ec(mi(n,"float32")),1))}}},_f={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nu(e,tc(ch(1),Ec(mi(n,"float32"))))}}},Ef=ks({avgPool3dGrad_:function(e,t,n,r,a,s){const i=xs(e,"dy","avgPool3dGrad"),o=xs(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=Au(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=Au(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Q(5===u.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),Q(5===l.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),null!=s&&Q(ie(a),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`);const h=cs.runKernel(lt,{dy:u,input:l},{filterSize:n,strides:r,pad:a,dimRoundingMode:s});return c?Au(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Af={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>Ef(e,r,a,s,i,o)}}},$f=ks({avgPoolGrad_:function(e,t,n,r,a){const s=xs(e,"dy","avgPoolGrad"),i=xs(t,"input","avgPoolGrad");Q(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,u=s,l=!1;3===i.rank&&(l=!0,o=Au(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Au(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Q(4===u.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),Q(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const c=cs.runKernel(ot,{dy:u,input:o},{filterSize:n,strides:r,pad:a});return l?Au(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ff={kernelName:it,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>$f(e,r,a,s,i)}}},Rf={kernelName:ct,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Oi(e,a,!1,!1),b:()=>Oi(e,r,!0,!1)}:s&&!i?{a:()=>Oi(a,e,!1,!0),b:()=>Oi(r,e,!1,!1)}:{a:()=>Oi(a,e,!0,!0),b:()=>Oi(e,r,!0,!0)}:{a:()=>Oi(e,a,!1,!0),b:()=>Oi(r,e,!0,!1)}}},Df={kernelName:ht,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Wc(e,r,a)}}},Mf={kernelName:pt,gradFunc:(e,t,n)=>{const r=n.inputShape,a=n.shape,s=Array.from(a);for(let o=r.length-1;o>=0;o--)if(r[o]===a[o])s[o]=1;else if(1!==r[o])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const i=[];for(let o=0;o<s.length;o++)s[o]>1&&i.push(o);return{x:()=>nc(e,i,!0)}}},Of={kernelName:ft,gradFunc:e=>({x:()=>e.clone()})},zf={kernelName:mt,gradFunc:e=>({x:()=>yl(e)})},Lf={kernelName:gt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>gl(pc(Fl(r,a),Pl(r,s)),e,yl(e))}}},Pf={kernelName:bt,inputsToSave:["x"],gradFunc:yf.gradFunc},Bf={kernelName:xt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:a}=n,s=pe(a,t[0].shape)[0],i=r.map(e=>e[s]);return Sh(e,i,s).map(e=>()=>e)}},Wf={kernelName:wt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return Q(Tu(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Qu(r.shape,e,a,i,o,u),filter:()=>sd(r,e,a.shape,i,o,u)}}},Vf={kernelName:kt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Zu(e,a,s,i,o,1,u),filter:()=>sd(e,r,a.shape,s,i,o,u)}}},Uf=ks({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Au(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;return 4===i.rank&&(i=Au(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Q(5===s.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),Q(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),Q(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),Q(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),Q(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`),cs.runKernel(Nt,{x:s,dy:i},{strides:r,pad:a,filterShape:n})}}),Gf={kernelName:It,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;Q(Tu(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,o]=t;return{x:()=>nl(i.shape,e,o,a,s),filter:()=>Uf(i,e,o.shape,a,s)}}},Hf={kernelName:Ct,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(Zl(mh(mi(n,"float32"))),e)}}},jf={kernelName:Tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(gh(mi(n,"float32")),e)}}},qf={kernelName:_t,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=lc([a],r.rank);let n=il(e,a,s,!i);return null!=t&&(n=Li(n,t)),n}}}},Kf={kernelName:Ft,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;Q(Tu(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[u,l]=t;return Q(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),Q(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),Q(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),Q(_u(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),null!=i&&Q(ie(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`),{x:()=>dd(u.shape,e,l,a,s,r,i),filter:()=>hd(u,e,l.shape,a,s,r,i)}}},Xf={kernelName:Ot,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>cs.runKernel(zt,s,n),filter:()=>cs.runKernel(Lt,i,n)}}},Yf={kernelName:Wt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>cs.runKernel(Vt,r)}}},Zf={kernelName:Ut,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=ru(Il(Zl(Ec(n))),2/Math.sqrt(Math.PI));return{x:()=>ru(e,r)}}},Jf={kernelName:Ht,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(e,n)}}},Qf={kernelName:jt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Au(e,n.shape)}}},em={kernelName:qt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(e,Il(n))}}},tm={kernelName:Zt,gradFunc:e=>({x:()=>yl(e)})},nm={kernelName:Jt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=fl(n.shape,r.shape);return{a:()=>{const t=nu(e,mi(r,"float32")),s=pl(n.shape,a);return s.length>0?Au(nc(t,s),n.shape):t},b:()=>{let t=ru(e,mi(n,"float32"));const s=pl(r.shape,a);s.length>0&&(t=Au(nc(t,s),r.shape));const i=Ec(r);return Zl(nu(t,mi(i,"float32")))}}}},rm={kernelName:Qt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?ch(1):o,l=pl(s.shape,a.shape),c=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const h=tc(a,s),d=ru(e,u),p=lh(eu(i,ch(r))),f=ru(ru(ru(p,p),p),ch(-.5));return{x:()=>Au(ru(ru(e,1===s.rank?Cl(Au(p,[1,1,1,s.shape[0]]),c):p),u),a.shape),mean:()=>{let e=ru(ru(p,ch(-1)),d);return 1===s.rank&&(e=nc(e,l)),Au(e,s.shape)},variance:()=>{let e=ru(ru(f,h),d);return 1===s.rank&&(e=nc(e,l)),Au(e,s.shape)},scale:()=>{const t=ru(h,p);let n=ru(e,t);return 1===s.rank&&(n=nc(n,l)),Au(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=nc(t,l)),Au(t,s.shape)}}}},am={kernelName:en,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=pe(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),u=o.length,l=t.slice(s,t.length).slice(1),c=l.length,h=sm(0,u),d=sm(u+1,u+1+c),p=im([o,[n],l]),f=Au(e,p),m=Au(a,[n]),g=im([[u],h,d]),y=Li(f,g);let b=Vh(y,m,r.shape[i]);const x=cc(g);return b=Li(b,x),b},indices:()=>a}}};function sm(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function im(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var om={kernelName:rn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>yl(n),b:()=>yl(r)}}},um={kernelName:an,gradFunc:e=>({x:()=>mi(e,"float32")})},lm={kernelName:un,gradFunc:e=>({x:()=>yl(e)})},cm={kernelName:ln,gradFunc:e=>({x:()=>yl(e)})},hm={kernelName:cn,gradFunc:e=>({x:()=>yl(e)})},dm={kernelName:hn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=$l(r,0);return{x:()=>gl(s,e,ru(e,a))}}},pm={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nu(e,eu(n,1))}}},fm={kernelName:mn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nu(e,mi(n,"float32"))}}},mm={kernelName:wn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=Il(r);return tc(e,ru(nc(e,a,!0),t))}}}},gm=ks({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){return cs.runKernel(kn,{x:e,y:t,dy:n},{depthRadius:r,bias:a,alpha:s,beta:i})}}),ym={kernelName:vn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>gm(r,a,e,s,i,o,u)}}};function bm(e,t,n,r){return t.rank<n.rank&&(t=Au(t,oc(t.shape,r))),e.rank<n.rank&&(e=Au(e,oc(e.shape,r))),{x:()=>ru(e,mi(ml(n,t),e.dtype))}}var xm={kernelName:In,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=bm(e,t[1],s,pe(a,s.shape));return{x:()=>i.x()}}},wm={kernelName:Nn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>ru(e,mi(Fl(n,r),"float32")),b:()=>ru(e,mi(Ll(n,r),"float32"))}}},vm=ks({maxPool3dGrad_:function(e,t,n,r,a,s,i){const o=xs(e,"dy","maxPool3dGrad"),u=xs(t,"input","maxPool3dGrad"),l=xs(n,"output","maxPool3dGrad");let c=o,h=u,d=l,p=!1;4===u.rank&&(p=!0,c=Au(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Au(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=Au(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),Q(5===c.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),Q(5===h.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),Q(5===d.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),null!=i&&Q(ie(s),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const f=cs.runKernel(_n,{dy:c,input:h,output:d},{filterSize:r,strides:a,pad:s,dimRoundingMode:i});return p?Au(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),km={kernelName:Tn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>vm(e,r,a,s,i,o,u)}}},Im=ks({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=xs(e,"dy","maxPoolGrad"),u=xs(t,"input","maxPoolGrad"),l=xs(n,"output","maxPoolGrad");return Q(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`),Q(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),Q(4===u.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),null!=i&&Q(ie(s),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`),cs.runKernel(Cn,{dy:o,input:u,output:l},{filterSize:r,strides:a,pad:s,dimRoundingMode:i})}}),Nm={kernelName:Hn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>Mu(e,s,r.shape)}}},Sm={kernelName:wr,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Lu(e,r,a)}}},Cm={kernelName:vr,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Ru(e,r)}}},Tm=[yf,bf,xf,wf,vf,kf,If,Nf,Sf,Cf,Tf,_f,Af,Ff,Rf,Df,Mf,Of,zf,Lf,Pf,Bf,Vf,Wf,Gf,Hf,jf,qf,Kf,Xf,{kernelName:Pt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=fl(n.shape,r.shape);return{a:()=>{const t=nu(e,mi(r,"float32")),s=pl(n.shape,a);return s.length>0?Au(nc(t,s),n.shape):t},b:()=>{let t=ru(e,mi(n,"float32"));const s=pl(r.shape,a);s.length>0&&(t=Au(nc(t,s),r.shape));const i=Ec(r);return Zl(nu(t,mi(i,"float32")))}}}},Yf,Zf,Jf,Qf,em,nm,tm,rm,am,om,um,lm,cm,hm,dm,pm,fm,mm,ym,xm,xm,wm,km,{kernelName:Sn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>Im(e,r,a,s,i,o)}}},{kernelName:An,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=pe(a,r.shape),i=re(ic(r.shape,s)[1]);return{x:()=>{const t=r.shape.slice();s.forEach(e=>{t[e]=1});const n=Au(e,t);return nu(ru(n,Ic(r.shape,"float32")),i)}}}},{kernelName:$n,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=bm(e,i,s,pe(a,s.shape));return{x:()=>o.x()}}},{kernelName:Fn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>ru(e,mi(Pl(n,r),"float32")),b:()=>ru(e,mi($l(n,r),"float32"))}}},{kernelName:Rn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>Mu(e,s,r.shape)}}},{kernelName:Dn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=fl(n.shape,r.shape);return{a:()=>{const t=pl(n.shape,a);return t.length>0?Au(nc(e,t),n.shape):e},b:()=>{const t=ru(e,Zl(El(nu(n,r)))),s=pl(r.shape,a);return s.length>0?Au(nc(t,s),r.shape):t}}}},{kernelName:On,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=fl(n.shape,r.shape);return{a:()=>{const t=ru(e,mi(r,"float32")),s=pl(n.shape,a);return s.length>0?Au(nc(t,s),n.shape):t},b:()=>{const t=ru(e,mi(n,"float32")),s=pl(r.shape,a);return s.length>0?Au(nc(t,s),r.shape):t}}}},{kernelName:zn,gradFunc:e=>({x:()=>Zl(e)})},{kernelName:Un,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>kc(n.shape,"float32")}}},{kernelName:Vn,gradFunc:e=>({x:()=>yl(e)})},{kernelName:Gn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Uh(e,r).map(e=>()=>e)}},Nm,Nm,{kernelName:qn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=fl(s.shape,i.shape);return{a:()=>{const t=mi(i,"float32");let n=ru(e,ru(t,Uc(s,tc(t,ch(1)))));const r=pl(s.shape,o);return r.length>0&&(n=nc(n,r)),Au(n,s.shape)},b:()=>{const t=$l(s,0),n=gl(t,Vl(s),yl(s));let r=ru(e,ru(a,n));const u=pl(i.shape,o);return u.length>0&&(r=nc(r,u)),Au(r,i.shape)}}}},{kernelName:Kn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=$l(n,0);return{x:()=>gl(a,e,ru(e,r)),alpha:()=>{let t=gl(a,yl(e),ru(e,n));const s=pl(r.shape,e.shape);return s.length>0&&(t=nc(t,s)),Au(t,r.shape)}}}},{kernelName:Jn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nu(e,Zl(Ec(n)))}}},{kernelName:sr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=ru(Pl(n,6),$h(n));return{x:()=>ru(e,mi(r,"float32"))}}},{kernelName:Qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(e,mi($h(n),"float32"))}}},{kernelName:er,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Au(e,n.shape)}}},{kernelName:rr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>cs.runKernel(ar,a,n)}}},{kernelName:tr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>cs.runKernel(nr,a,n)}}},{kernelName:ir,gradFunc:(e,t,n)=>{const{dims:r}=n,a=pe(r,e.shape);return{x:()=>rh(e,a)}}},{kernelName:or,gradFunc:e=>({x:()=>yl(e)})},{kernelName:ur,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Zl(nu(e,ru(Uc(n,1.5),2)))}}},{kernelName:cr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>mi(yl(n),"float32"),t:()=>ru(e,mi(n,e.dtype)),e:()=>ru(e,mi(fc(n),e.dtype))}}},{kernelName:hr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=$l(n,ch(0)),r=ch(zp),a=ch(Lp),s=ru(e,a),i=ru(ru(e,r),Il(mi(n,"float32")));return gl(t,s,i)}}}},{kernelName:gr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(e,ru(n,tc(ch(1),n)))}}},{kernelName:mr,gradFunc:e=>({x:()=>yl(e)})},{kernelName:pr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(al(mi(n,"float32")),e)}}},{kernelName:fr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(sl(mi(n,"float32")),e)}}},{kernelName:dr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=fo(r,a,s),l=[];for(let c=0;c<e.rank;c++)l.push([o[c],i[c]-o[c]-u[c]]);return{x:()=>Oc(e,l)}}},{kernelName:kr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=ru(e,r);return{logits:()=>tc(s,ru(nc(s,[a],!0),r))}}},{kernelName:yr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(e,Du(n))}}},Sm,Sm,Cm,Cm,{kernelName:br,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nu(e,ru(Th(mi(n,"float32")),2))}}},{kernelName:_r,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=ch(2);return{a:()=>ru(e,ru(a,tc(n,r))),b:()=>ru(e,ru(a,tc(r,n)))}}},{kernelName:Er,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(e,ru(mi(n,"float32"),2))}}},{kernelName:Hr,gradFunc:e=>({x:()=>yl(e)})},{kernelName:Dr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=fl(n.shape,r.shape);return{a:()=>{let t=e;const r=pl(n.shape,a);return r.length>0&&(t=nc(t,r)),Au(t,n.shape)},b:()=>{let t=e;const n=pl(r.shape,a);return n.length>0&&(t=nc(t,n)),Au(Zl(t),r.shape)}}}},{kernelName:xr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;pe(s,r.shape).forEach(e=>{a[e]=1});const i=Au(e,a),o=ru(i,Ic(r.shape,"float32"));return{x:()=>o}}},{kernelName:Mr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nu(e,Ec(al(n)))}}},{kernelName:Or,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(tc(ch(1),Ec(n)),e)}}},{kernelName:zr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=yl(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=eu(t,Mu(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=eu(t,Mu(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=eu(t,Mu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=eu(t,Mu(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Br,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=cc(a);return{x:()=>Li(e,s)}}},{kernelName:Vr,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Ah(e,a)}}},{kernelName:Ur,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=wc(t,yl(t)),r=Al(e,n);let a=Fl(t,ch(0,"int32"));const s=r.rank-a.rank;for(let o=0;o<s;++o)a=Nl(a,o+1);a=pc(a,Ic(r.shape,"bool"));const i=yl(r);return gl(a,r,i)}(e,n)}}},{kernelName:Gr,gradFunc:e=>({x:()=>yl(e)})}];for(const WG of Tm)ra(WG);Pa().prototype.abs=function(){return this.throwIfDisposed(),au(this)},Pa().prototype.acos=function(){return this.throwIfDisposed(),su(this)},Pa().prototype.acosh=function(){return this.throwIfDisposed(),iu(this)},Pa().prototype.add=function(e){return this.throwIfDisposed(),eu(this,e)},Pa().prototype.all=function(e,t){return this.throwIfDisposed(),uu(this,e,t)},Pa().prototype.any=function(e,t){return this.throwIfDisposed(),lu(this,e,t)},Pa().prototype.argMax=function(e){return this.throwIfDisposed(),cu(this,e)},Pa().prototype.argMin=function(e){return this.throwIfDisposed(),hu(this,e)},Pa().prototype.asScalar=function(){return this.throwIfDisposed(),Q(1===this.size,()=>"The array must have only 1 element."),Au(this,[])},Pa().prototype.asType=function(e){return this.throwIfDisposed(),mi(this,e)},Pa().prototype.as1D=function(){return this.throwIfDisposed(),Au(this,[this.size])},Pa().prototype.as2D=function(e,t){return this.throwIfDisposed(),Au(this,[e,t])},Pa().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Au(this,[e,t,n])},Pa().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Au(this,[e,t,n,r])},Pa().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Au(this,[e,t,n,r,a])},Pa().prototype.asin=function(){return this.throwIfDisposed(),du(this)},Pa().prototype.asinh=function(){return this.throwIfDisposed(),pu(this)},Pa().prototype.atan=function(){return this.throwIfDisposed(),fu(this)},Pa().prototype.atan2=function(e){return this.throwIfDisposed(),mu(this,e)},Pa().prototype.atanh=function(){return this.throwIfDisposed(),gu(this)},Pa().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),$u(this,e,t,n,r)},Pa().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Lu(this,e,t)},Pa().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Pu(this,e,t,n,r,a)},Pa().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Gu(this,e)},Pa().prototype.cast=function(e){return this.throwIfDisposed(),mi(this,e)},Pa().prototype.ceil=function(){return this.throwIfDisposed(),Hu(this)},Pa().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),ju(this,e,t)},Pa().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof La&&(e=[e]),Ru([this,...e],t)},Pa().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Ju(this,e,t,n,r,a,s)},Pa().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),el(this,e,t,n,r,a)},Pa().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Zu(this,e,t,n,r,a,s)},Pa().prototype.cos=function(){return this.throwIfDisposed(),al(this)},Pa().prototype.cosh=function(){return this.throwIfDisposed(),sl(this)},Pa().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),il(this,e,t,n)},Pa().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),ul(this,e,t)},Pa().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),ll(this,e,t,n,r,a,s)},Pa().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),hl(this,e,t,n,r,a)},Pa().prototype.divNoNan=function(e){return this.throwIfDisposed(),bl(this,e)},Pa().prototype.div=function(e){return this.throwIfDisposed(),nu(this,e)},Pa().prototype.dot=function(e){return this.throwIfDisposed(),xl(this,e)},Pa().prototype.elu=function(){return this.throwIfDisposed(),vl(this)},Pa().prototype.equal=function(e){return this.throwIfDisposed(),ml(this,e)},Pa().prototype.erf=function(){return this.throwIfDisposed(),kl(this)},Pa().prototype.exp=function(){return this.throwIfDisposed(),Il(this)},Pa().prototype.expandDims=function(e){return this.throwIfDisposed(),Nl(this,e)},Pa().prototype.expm1=function(){return this.throwIfDisposed(),Sl(this)},Pa().prototype.fft=function(){return this.throwIfDisposed(),kh(this)},Pa().prototype.flatten=function(){return this.throwIfDisposed(),Au(this,[this.size])},Pa().prototype.floor=function(){return this.throwIfDisposed(),El(this)},Pa().prototype.floorDiv=function(e){return this.throwIfDisposed(),tu(this,e)},Pa().prototype.gather=function(e,t){return this.throwIfDisposed(),Al(this,e,t)},Pa().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Fl(this,e)},Pa().prototype.greater=function(e){return this.throwIfDisposed(),$l(this,e)},Pa().prototype.ifft=function(){return this.throwIfDisposed(),Ih(this)},Pa().prototype.irfft=function(){return this.throwIfDisposed(),Nh(this)},Pa().prototype.isFinite=function(){return this.throwIfDisposed(),Dl(this)},Pa().prototype.isInf=function(){return this.throwIfDisposed(),Ml(this)},Pa().prototype.isNaN=function(){return this.throwIfDisposed(),Ol(this)},Pa().prototype.leakyRelu=function(e){return this.throwIfDisposed(),zl(this,e)},Pa().prototype.lessEqual=function(e){return this.throwIfDisposed(),Pl(this,e)},Pa().prototype.less=function(e){return this.throwIfDisposed(),Ll(this,e)},Pa().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Wl(this,e,t,n,r)},Pa().prototype.logSigmoid=function(){return this.throwIfDisposed(),Ql(this)},Pa().prototype.logSoftmax=function(e){return this.throwIfDisposed(),rc(this,e)},Pa().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),dc(this,e,t)},Pa().prototype.log=function(){return this.throwIfDisposed(),Vl(this)},Pa().prototype.log1p=function(){return this.throwIfDisposed(),Ul(this)},Pa().prototype.logicalAnd=function(e){return this.throwIfDisposed(),pc(this,e)},Pa().prototype.logicalNot=function(){return this.throwIfDisposed(),fc(this)},Pa().prototype.logicalOr=function(e){return this.throwIfDisposed(),mc(this,e)},Pa().prototype.logicalXor=function(e){return this.throwIfDisposed(),gc(this,e)},Pa().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Oi(this,e,t,n)},Pa().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),yc(this,e,t,n,r)},Pa().prototype.max=function(e,t){return this.throwIfDisposed(),ec(this,e,t)},Pa().prototype.maximum=function(e){return this.throwIfDisposed(),wc(this,e)},Pa().prototype.mean=function(e,t){return this.throwIfDisposed(),vc(this,e,t)},Pa().prototype.min=function(e,t){return this.throwIfDisposed(),Sc(this,e,t)},Pa().prototype.minimum=function(e){return this.throwIfDisposed(),Cc(this,e)},Pa().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Tc(this,e,t)},Pa().prototype.mod=function(e){return this.throwIfDisposed(),_c(this,e)},Pa().prototype.mul=function(e){return this.throwIfDisposed(),ru(this,e)},Pa().prototype.neg=function(){return this.throwIfDisposed(),Zl(this)},Pa().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Xh(this,e,t,n)},Pa().prototype.notEqual=function(e){return this.throwIfDisposed(),Rc(this,e)},Pa().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),zi(this,e,t,n)},Pa().prototype.onesLike=function(){return this.throwIfDisposed(),Dc(this)},Pa().prototype.pad=function(e,t){return this.throwIfDisposed(),Oc(this,e,t)},Pa().prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),Vc(this,e,t,n,r,a)},Pa().prototype.pow=function(e){return this.throwIfDisposed(),Uc(this,e)},Pa().prototype.prelu=function(e){return this.throwIfDisposed(),Gc(this,e)},Pa().prototype.prod=function(e,t){return this.throwIfDisposed(),Hc(this,e,t)},Pa().prototype.reciprocal=function(){return this.throwIfDisposed(),eh(this)},Pa().prototype.relu=function(){return this.throwIfDisposed(),th(this)},Pa().prototype.relu6=function(){return this.throwIfDisposed(),nh(this)},Pa().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Au(this,e.shape)},Pa().prototype.reshape=function(e){return this.throwIfDisposed(),Au(this,e)},Pa().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Md(this,e,t,n)},Pa().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Od(this,e,t,n)},Pa().prototype.reverse=function(e){return this.throwIfDisposed(),rh(this,e)},Pa().prototype.rfft=function(){return this.throwIfDisposed(),Ch(this)},Pa().prototype.round=function(){return this.throwIfDisposed(),uh(this)},Pa().prototype.rsqrt=function(){return this.throwIfDisposed(),lh(this)},Pa().prototype.selu=function(){return this.throwIfDisposed(),hh(this)},Pa().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),dh(this,e,t,n,r,a,s)},Pa().prototype.sigmoid=function(){return this.throwIfDisposed(),Du(this)},Pa().prototype.sign=function(){return this.throwIfDisposed(),fh(this)},Pa().prototype.sin=function(){return this.throwIfDisposed(),mh(this)},Pa().prototype.sinh=function(){return this.throwIfDisposed(),gh(this)},Pa().prototype.slice=function(e,t){return this.throwIfDisposed(),Mu(this,e,t)},Pa().prototype.softmax=function(e){return this.throwIfDisposed(),vh(this,e)},Pa().prototype.softplus=function(){return this.throwIfDisposed(),Jl(this)},Pa().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Wc(this,e,t)},Pa().prototype.split=function(e,t){return this.throwIfDisposed(),Sh(this,e,t)},Pa().prototype.sqrt=function(){return this.throwIfDisposed(),Th(this)},Pa().prototype.square=function(){return this.throwIfDisposed(),Ec(this)},Pa().prototype.squaredDifference=function(e){return this.throwIfDisposed(),_h(this,e)},Pa().prototype.squeeze=function(e){return this.throwIfDisposed(),Eh(this,e)},Pa().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof La?[this,e]:[this,...e];return Ah(n,t)},Pa().prototype.step=function(e){return this.throwIfDisposed(),$h(this,e)},Pa().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Fh(this,e,t,n,r,a,s,i,o)},Pa().prototype.sub=function(e){return this.throwIfDisposed(),tc(this,e)},Pa().prototype.sum=function(e,t){return this.throwIfDisposed(),nc(this,e,t)},Pa().prototype.tan=function(){return this.throwIfDisposed(),Rh(this)},Pa().prototype.tanh=function(){return this.throwIfDisposed(),Ou(this)},Pa().prototype.tile=function(e){return this.throwIfDisposed(),Cl(this,e)},Pa().prototype.toBool=function(){return this.throwIfDisposed(),mi(this,"bool")},Pa().prototype.toFloat=function(){return this.throwIfDisposed(),mi(this,"float32")},Pa().prototype.toInt=function(){return this.throwIfDisposed(),mi(this,"int32")},Pa().prototype.topk=function(e,t){return this.throwIfDisposed(),Ph(this,e,t)},Pa().prototype.transpose=function(e){return this.throwIfDisposed(),Li(this,e)},Pa().prototype.unique=function(e){return this.throwIfDisposed(),Wh(this,e)},Pa().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Vh(this,e,t)},Pa().prototype.unstack=function(e){return this.throwIfDisposed(),Uh(this,e)},Pa().prototype.where=function(e,t){return this.throwIfDisposed(),gl(e,this,t)},Pa().prototype.zerosLike=function(){return this.throwIfDisposed(),yl(this)};var _m,Em={};function Am(){return null==_m&&(_m=Jo().epsilon()),_m}g(Em,{maxNorm:()=>hg,minMaxNorm:()=>fg,nonNeg:()=>pg,unitNorm:()=>dg});var $m=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,$m.prototype)}},Fm=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Fm.prototype)}},Rm=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Rm.prototype)}},Dm=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Dm.prototype)}},Mm=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Mm.prototype)}};function Om(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function zm(e,t){if(!e)throw new Mm(t)}function Lm(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Pm(e){return 1===e.length?e[0]:e}function Bm(e){return Array.isArray(e)?e:[e]}function Wm(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Vm(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var Um={};function Gm(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Hm(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>Hm(e));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Hm(t):e[n]=t.value)}}}function jm(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in Um)s=Um[a];else if(s=t[a],null==s)throw new Rm(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new Rm(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in Um?[o,u]=Um.className:i in t&&([o,u]=t[i]),null==o)throw new Rm(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const n of Object.keys(Um))e[n]=Um[n];for(const a of Object.keys(n))e[a]=n[a];s.config.customObjects=e;const t=Object.assign({},Um);for(const a of Object.keys(n))Um[a]=n[a];Hm(s.config);const r=u(o,s.config,n,a);return Um=Object.assign({},t),r}{const e=Object.assign({},Um);for(const r of Object.keys(n))Um[r]=n[r];const t=new o(s.config);return Um=Object.assign({},e),t}}}function qm(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Km(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Xm(e){if(null==e)throw new Rm("Invalid value in obj: "+JSON.stringify(e));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Ym(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Rm(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Zm(e,t,n=0,r=1/0){return zm(n>=0),zm(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function Jm(e,t){Array.isArray(e)?(ua.assert(e.length>0,()=>t+" is unexpectedly an empty array."),e.forEach((e,n)=>Jm(e,`element ${n+1} of ${t}`))):ua.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${Qm(e)}.`)}function Qm(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>Qm(e)).join(",")+"]":"string"==typeof e?`"${e}"`:""+e}function eg(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function tg(e,t){return Wo(()=>Th(nc(ru(e,e),t,!0)))}var ng=class extends go.Serializable{getConfig(){return{}}},rg=class extends ng{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Wo(()=>{const t=tg(e,this.axis),n=ju(t,0,this.maxValue);return ru(e,nu(n,eu(Am(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};rg.className="MaxNorm",go.registerClass(rg);var ag=class extends ng{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Wo(()=>nu(e,eu(Am(),tg(e,this.axis))))}getConfig(){return{axis:this.axis}}};ag.className="UnitNorm",go.registerClass(ag);var sg=class extends ng{apply(e){return th(e)}};sg.className="NonNeg",go.registerClass(sg);var ig=class extends ng{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Wo(()=>{const t=tg(e,this.axis),n=eu(ru(this.rate,ju(t,this.minValue,this.maxValue)),ru(1-this.rate,t));return ru(e,nu(n,eu(Am(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};ig.className="MinMaxNorm",go.registerClass(ig);var og={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ug(e){return Gm(e)}function lg(e,t={}){return jm(e,go.SerializationMap.getMap().classNameMap,t,"constraint")}function cg(e){return null==e?null:"string"==typeof e?lg({className:e in og?og[e]:e,config:{}}):e instanceof ng?e:lg(e)}function hg(e){return new rg(e)}function dg(e){return new ag(e)}function pg(){return new sg}function fg(e){return new ig(e)}var mg={};g(mg,{constant:()=>vy,glorotNormal:()=>_y,glorotUniform:()=>Ty,heNormal:()=>Ey,heUniform:()=>Ay,identity:()=>Sy,leCunNormal:()=>$y,leCunUniform:()=>Fy,ones:()=>wy,orthogonal:()=>Ry,randomNormal:()=>Iy,randomUniform:()=>ky,truncatedNormal:()=>Ny,varianceScaling:()=>Cy,zeros:()=>xy});var gg=["channelsFirst","channelsLast"],yg=["nearest","bilinear"],bg=["valid","same","causal"],xg=["max","avg"],wg=["sum","mul","concat","ave"],vg=new Map;function kg(e){Ym(gg,"DataFormat",e)}function Ig(e){Ym(bg,"PaddingMode",e)}function Ng(e){Ym(xg,"PoolMode",e)}var Sg=[];function Cg(e,t){Sg.push(e);try{const e=t();return Sg.pop(),e}catch(n){throw Sg.pop(),n}}function Tg(e){if(!Ag(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Sg.length?"":Sg.join("/")+"/")+e}function _g(e){if(!Ag(e))throw new Error("Not a valid tensor name: '"+e+"'");vg.has(e)||vg.set(e,0);const t=vg.get(e);if(vg.set(e,vg.get(e)+1),t>0){const n=`${e}_${t}`;return vg.set(n,1),n}return e}var Eg=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Ag(e){return!!e.match(Eg)}function $g(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Fg(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function Rg(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Dg(e,t){if(t<e)throw new Rm(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Mg(e,t){return e.asType(t)}function Og(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function zg(e,t,n){return Wo(()=>{switch(e.rank){case 1:return yh(e,t,n);case 2:return bh(e,[t,0],[n,e.shape[1]]);case 3:return xh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return wh(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Mu(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Mu(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Rm("sliceAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}})}function Lg(e,t,n){return Wo(()=>{switch(e.rank){case 1:return yh(e,t,n);case 2:return bh(e,[0,t],[e.shape[0],n]);case 3:return xh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return wh(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Rm("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}})}function Pg(e,t,n,r){return Wo(()=>{switch(e.rank){case 1:return yh(e,t,n);case 2:switch(r){case 1:return zg(e,t,n);case 2:return Lg(e,t,n);default:throw new Rm("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return zg(e,t,n);case 2:return xh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Lg(e,t,n);default:throw new Rm("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return zg(e,t,n);case 2:return wh(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return wh(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Lg(e,t,n);default:throw new Rm("The axis is not within the rank of the tensor "+r)}default:throw new Rm("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}})}function Bg(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Ru(e,t)}function Wg(e,t){switch(e.rank){case 1:return qu([e,t]);case 2:return Ku([e,t],0);case 3:return Xu([e,t],0);case 4:return Yu([e,t],0);default:throw new Rm("concatAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}}function Vg(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Rm(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Cl(e,t)}function Ug(e,t=0,n=1,r,a){return Yc(e,t,n,r,a)}function Gg(e,t,n,r){if(e.rank<2||t.rank<2)throw new Dm(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Dm(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return ad.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?qg(e.rank,r,"channelsLast"):null,activation:n});{const a=e.shape.slice(),s=a.pop();e=e.reshape([-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=t.transpose(c).reshape([u,-1]);const h=[...a,...l];return ad.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?qg(e.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function Hg(e,t,n){return Wo(()=>(t=Array.isArray(t)?Dh(t,"int32"):t.toInt(),Al(e,t,n)))}function jg(e){return ru(e,e)}function qg(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Rm(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return t.reshape(1===r.length?[1,r[0],1,1,1]:[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return t.reshape(1===r.length?[1,1,1,1,r[0]]:[1].concat(r))}else if(4===e){if("channelsFirst"===n)return t.reshape(1===r.length?[1,r[0],1,1]:[1,r[2],r[0],r[1]]);if("channelsLast"===n)return t.reshape(1===r.length?[1,1,1,r[0]]:[1].concat(r))}else if(3===e){if("channelsFirst"===n)return t.reshape(1===r.length?[1,r[0],1]:[1,r[1],r[0]]);if("channelsLast"===n)return t.reshape(1===r.length?[1,1,r[0]]:[1].concat(r))}else if(e<3)return t;throw new Rm("Unsupported input rank by biasAdd: "+t.rank)}function Kg(e,t,n){return Wo(()=>(null==n&&(n="channelsLast"),kg(n),e.add(qg(e.rank,t,n))))}function Xg(e,t,n,r){return Wo(()=>ed(e,t,n,r))}function Yg(e,t,n=!1){return n?e():t()}var Zg=["fanIn","fanOut","fanAvg"],Jg=["normal","uniform","truncatedNormal"],Qg=class extends go.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},ey=class extends Qg{apply(e,t){return kc(e,t)}};ey.className="Zeros",go.registerClass(ey);var ty=class extends Qg{apply(e,t){return Ic(e,t)}};ty.className="Ones",go.registerClass(ty);var ny=class extends Qg{constructor(e){if(super(),"object"!=typeof e)throw new Rm("Expected argument of type ConstantConfig but got "+e);if(void 0===e.value)throw new Rm("config must have value set but got "+e);this.value=e.value}apply(e,t){return Wo(()=>ru(ch(this.value),Ic(e,t)))}getConfig(){return{value:this.value}}};ny.className="Constant",go.registerClass(ny);var ry=class extends Qg{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Zc(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};ry.className="RandomUniform",go.registerClass(ry);var ay=class extends Qg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Dm(`randomNormal does not support dType ${t}.`);return Ug(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};ay.className="RandomNormal",go.registerClass(ay);var sy=class extends Qg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Dm(`truncatedNormal does not support dType ${t}.`);return Bh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};sy.className="TruncatedNormal",go.registerClass(sy);var iy=class extends Qg{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Wo(()=>{if(2!==e.length||e[0]!==e[1])throw new Rm("Identity matrix initializer can only be used for 2D square matrices.");return ru(this.gain,Tl(e[0]))})}getConfig(){return{gain:this.gain}}};iy.className="Identity",go.registerClass(iy);var oy=class extends Qg{constructor(e){if(super(),e.scale<0)throw new Rm("scale must be a positive float. Got: "+e.scale);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,Ym(Zg,"FanMode",this.mode),this.distribution=null==e.distribution?"normal":e.distribution,Ym(Jg,"Distribution",this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(kg(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=$g(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=$g(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=$g(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let s=this.scale;if(s/="fanIn"===this.mode?Math.max(1,r):"fanOut"===this.mode?Math.max(1,a):Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Dm(`${this.getClassName()} does not support dType ${t}.`);return Bh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return Zc(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};oy.className="VarianceScaling",go.registerClass(oy);var uy=class extends oy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return oy.className}};uy.className="GlorotUniform",go.registerClass(uy);var ly=class extends oy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return oy.className}};ly.className="GlorotNormal",go.registerClass(ly);var cy=class extends oy{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return oy.className}};cy.className="HeNormal",go.registerClass(cy);var hy=class extends oy{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return oy.className}};hy.className="HeUniform",go.registerClass(hy);var dy=class extends oy{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return oy.className}};dy.className="LeCunNormal",go.registerClass(dy);var py=class extends oy{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return oy.className}};py.className="LeCunNormal",go.registerClass(py);var fy=class extends Qg{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Dm("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Wo(()=>{if(e.length<2)throw new Dm("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Ug(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=cp.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),ru(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}};fy.className="Orthogonal",go.registerClass(fy);var my={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function gy(e,t={}){return jm(e,go.SerializationMap.getMap().classNameMap,t,"initializer")}function yy(e){return Gm(e)}function by(e){if("string"==typeof e){const t=e in my?my[e]:e;if("GlorotNormal"===t)return new ly;if("GlorotUniform"===t)return new uy;if("HeNormal"===t)return new cy;if("HeUniform"===t)return new hy;if("LeCunNormal"===t)return new dy;if("LeCunUniform"===t)return new py;{const e={};return e.className=t,e.config={},gy(e)}}return e instanceof Qg?e:gy(e)}function xy(){return new ey}function wy(){return new ty}function vy(e){return new ny(e)}function ky(e){return new ry(e)}function Iy(e){return new ay(e)}function Ny(e){return new sy(e)}function Sy(e){return new iy(e)}function Cy(e){return new oy(e)}function Ty(e){return new uy(e)}function _y(e){return new ly(e)}function Ey(e){return new cy(e)}function Ay(e){return new hy(e)}function $y(e){return new dy(e)}function Fy(e){return new py(e)}function Ry(e){return new fy(e)}var Dy={};g(Dy,{Layer:()=>Jy,RNN:()=>vw,RNNCell:()=>kw,activation:()=>Vv,add:()=>Zv,alphaDropout:()=>Wk,average:()=>Jv,averagePooling1d:()=>ok,averagePooling2d:()=>ck,averagePooling3d:()=>pk,avgPool1d:()=>uk,avgPool2d:()=>hk,avgPool3d:()=>fk,avgPooling1d:()=>lk,avgPooling2d:()=>dk,avgPooling3d:()=>mk,batchNormalization:()=>ak,bidirectional:()=>Rk,concatenate:()=>Qv,conv1d:()=>Rv,conv2d:()=>Dv,conv2dTranspose:()=>Mv,conv3d:()=>Ov,conv3dTranspose:()=>zv,convLstm2d:()=>Ek,convLstm2dCell:()=>Ak,cropping2D:()=>Pv,dense:()=>Uv,depthwiseConv2d:()=>Wv,dot:()=>rk,dropout:()=>Gv,elu:()=>Tv,embedding:()=>Yv,flatten:()=>jv,gaussianDropout:()=>Bk,gaussianNoise:()=>Pk,globalAveragePooling1d:()=>gk,globalAveragePooling2d:()=>yk,globalMaxPool1d:()=>Mk,globalMaxPool2d:()=>Ok,globalMaxPooling1d:()=>bk,globalMaxPooling2d:()=>xk,gru:()=>Ik,gruCell:()=>Nk,input:()=>kx,inputLayer:()=>Cv,layerNormalization:()=>sk,leakyReLU:()=>Ev,lstm:()=>Sk,lstmCell:()=>Ck,masking:()=>Vk,maxPool1d:()=>zk,maxPool2d:()=>Lk,maxPooling1d:()=>wk,maxPooling2d:()=>vk,maxPooling3d:()=>kk,maximum:()=>ek,minimum:()=>tk,multiply:()=>nk,permute:()=>Xv,prelu:()=>Av,reLU:()=>_v,repeatVector:()=>qv,reshape:()=>Kv,rnn:()=>$k,separableConv2d:()=>Lv,simpleRNN:()=>Tk,simpleRNNCell:()=>_k,softmax:()=>$v,spatialDropout1d:()=>Hv,stackedRNNCells:()=>Fk,thresholdedReLU:()=>Fv,timeDistributed:()=>Dk,upSampling2d:()=>Bv,zeroPadding2d:()=>ik});var My=0;function Oy(){return My++}var zy={};function Ly(e=""){return e in zy||(zy[e]=0),zy[e]+=1,e+zy[e].toString()}function Py(e){return Array.isArray(e)&&Array.isArray(e[0])}function By(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Wy(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Rm("Expected Tensor length to be 1; got "+e.length);t=e[0]}else t=e;return t}function Vy(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new Rm("Expected exactly 1 Shape; got "+e.length)}return e}function Uy(e){let t=0;for(const n of e)t+=0===n.shape.length?1:n.shape.reduce((e,t)=>e*t);return t}var Gy=class{constructor(e,t="float32",n="Variable",r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Oy(),this.originalName=Tg(n=null==n?"Variable":n),this.name=_g(this.originalName),this.trainable_=r,this.constraint=a,this.val=Gh(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function Hy(e){return e.map(e=>e.read())}function jy(e){e.forEach(e=>{e[0].write(e[1])})}var qy=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,this.ndim=null!=e.shape?e.shape.length:e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Ky=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=Oy(),null!=s&&(this.originalName=Tg(s),this.name=_g(this.originalName)),this.rank=t.length}},Xy=0,Yy=class{constructor(e,t){this.callArgs=t,this.id=Xy++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)e.push(null!=t?t.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},Zy=0,Jy=class extends go.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Zy++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Wm(e)+"_"+Ly(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}this.initialWeights=null!=e.weights?e.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Fm(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Rm(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Pm(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Pm(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new $m(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new $m(`Layer ${this.name} is not connected, no input to return.`);return Pm(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new $m(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new $m(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Pm(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Bm(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Bm(this.inputSpec);if(e.length!==t.length)throw new Rm(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new Rm(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new Rm(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new Rm(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new Rm(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new Rm(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new Rm(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Bm(e);let r=!0;for(const s of n)if(!(s instanceof Ky)){r=!1;break}let a=!0;for(const s of n)if(s instanceof Ky){a=!1;break}if(r===a)throw new Rm("Arguments to apply() must be all SymbolicTensors or all Tensors");return Cg(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Bm(e))t.push(n.shape);this.build(Pm(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=Bm(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=Pm(s),null!=this.activityRegularizer)throw new Dm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Bm(e);const t=[];for(const n of e)t.push(n.shape);return Pm(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new Ky(s,n,this,Bm(e),t,this.name,r)):new Ky(s,r,this,Bm(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Dm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new $m(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new $m(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Fm(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Uy(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Hy(e?this.trainableWeights:this.weights)}setWeights(e){Wo(()=>{const t=this.weights;if(t.length!==e.length)throw new Rm(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Hy(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!ua.arraysEqual(s.shape,o.shape))throw new Rm(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}jy(n)})}addWeight(e,t,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Rm(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=by("zeros"));const o=r.apply(t,n),u=new Gy(o,n,e,s,i);return o.dispose(),null!=a&&this.addLoss(()=>a.apply(u.read())),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Bm(e),null!=this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach(e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=Bm(e);t=Bm(t),n=Bm(n),r=Bm(r),a=By(a),s=By(s);const u=[],l=[],c=[];for(const h of o)u.push(h.sourceLayer),l.push(h.nodeIndex),c.push(h.tensorIndex);new Yy({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function Qy(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Qy(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}var eb,tb,nb=class extends Jy{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Ly("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Rm("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Rm("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Rm("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Ky(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Yy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Rm("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function rb(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Rm("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new nb({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function ab(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];Vo(r)}}function sb(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}nb.className="InputLayer",go.registerClass(nb),(tb=eb||(eb={}))[tb.SILENT=0]="SILENT",tb[tb.VERBOSE=1]="VERBOSE";var ib=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},ob=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}},ub=class extends ib{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"==typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const a=Wo(()=>eu(this.totals[r],ru(e,n)));this.totals[r]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?t[n]=this.totals[n]/this.seen:Wo(()=>{const e=ru(nu(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),Uo(t[n])}))}},lb=class extends ib{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const a in this.history){const r=this.history[a];for(let s=0;s<r.length;++s)"number"!=typeof r[s]&&(e.push(r[s].data()),t.push(a),n.push(s))}const r=await Promise.all(e);for(let a=0;a<r.length;++a)this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=r[a][0]}},cb=class extends ib{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ua.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=ua.now();return(...a)=>{const s=ua.now();return s-r<t||(r=s,n=e(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await ab(n),r.push(this.yield(e,t,n))),r.push(Sp()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await ab(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await ab(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(Sp()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await ab(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await ab(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(Sp()):ua.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await ab(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await ab(e),await this.trainEnd(e))}};function hb(e,t){return null==e&&(e={}),e instanceof ib?[e]:Array.isArray(e)&&e[0]instanceof ib?e:Bm(e).map(e=>new cb(e,t))}var db=class{constructor(){}static registerCallbackConstructor(e,t){ua.assert(e>=0&&Number.isInteger(e),()=>"Verbosity level is expected to be an integer >= 0, but got "+e),db.checkForDuplicate(t),null==db.constructors[e]&&(db.constructors[e]=[]),db.constructors[e].push(t)}static checkForDuplicate(e){for(const t in db.constructors)db.constructors[+t].forEach(t=>{if(t===e)throw new Rm("Duplicate callback constructor.")})}static clear(){db.constructors={}}static createCallbacks(e){const t=[];for(const n in db.constructors){const r=+n;e>=r&&t.push(...db.constructors[r])}return t.map(e=>new e)}};function pb(e,t,n,r,a,s,i,o,u){const l=new lb,c=[new ub,...db.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new ob(c);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function fb(e,t={},n=!1){return jm(e,go.SerializationMap.getMap().classNameMap,t,"layer",n)}function mb(e,t){return Wo(()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=nc(jg(e),t,!0),r=_l(n.shape,Am()),a=Th(wc(n,r));return nu(e,a)})}function gb(e,t){return Wo(()=>vc(jg(tc(t,e)),-1))}function yb(e,t){return Wo(()=>vc(au(tc(t,e)),-1))}function bb(e,t){return Wo(()=>{const n=tc(e,t),r=ju(au(e),Am(),Number.MAX_VALUE),a=au(nu(n,r));return ru(100,vc(a,-1))})}function xb(e,t,n=!1){return Wo(()=>{if(n)t=vh(t);else{const e=nc(t,t.shape.length-1,!0);t=nu(t,e)}return t=ju(t,Am(),1-Am()),Zl(nc(ru(e.toFloat(),Vl(t)),t.shape.length-1))})}function wb(e,t,n=!1){return Wo(()=>{const r=El(function(e){const t=[$g(e.shape)];return e.reshape(t)}(e)).toInt(),a=(t=ju(t,Am(),1-Am())).shape;return xb(zi(r,a[a.length-1]).reshape(a),t,n)})}function vb(e,t){return Wo(()=>{let n;return n=ju(t,Am(),1-Am()),n=Vl(nu(n,tc(1,n))),vc(function(e,t){if(!ua.arraysEqual(e.shape,t.shape))throw new Rm(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Wo(()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())})}(e,n),-1)})}function kb(e,t){return Wo(()=>{const n=mb(e,-1),r=mb(t,-1),a=ru(n,r);return Zl(nc(a,-1))})}db.constructors={};var Ib={meanSquaredError:gb,meanAbsoluteError:yb,meanAbsolutePercentageError:bb,meanSquaredLogarithmicError:function(e,t){return Wo(()=>{const n=ju(t,Am(),Number.MAX_VALUE),r=Vl(eu(1,n)),a=ju(e,Am(),Number.MAX_VALUE),s=Vl(eu(1,a));return vc(jg(tc(r,s)),-1)})},squaredHinge:function(e,t){return Wo(()=>{const n=wc(0,tc(1,ru(e,t)));return vc(jg(n),-1)})},hinge:function(e,t){return Wo(()=>{const n=wc(0,tc(1,ru(e,t)));return vc(n,-1)})},categoricalHinge:function(e,t){return Wo(()=>{const n=nc(ru(e,t),-1),r=ec(ru(tc(1,e),t),-1);return wc(0,eu(1,tc(r,n)))})},logcosh:function(e,t){return Wo(()=>{const n=Math.log(2),r=tc(t,e),a=tc(eu(r,Jl(ru(-2,r))),n);return vc(a,-1)})},categoricalCrossentropy:xb,sparseCategoricalCrossentropy:wb,binaryCrossentropy:vb,kullbackLeiblerDivergence:function(e,t){return Wo(()=>{const n=ju(e,Am(),1),r=ju(t,Am(),1);return nc(ru(e,Vl(nu(n,r))),-1)})},poisson:function(e,t){return Wo(()=>{const n=Vl(eu(Am(),t));return vc(tc(t,ru(e,n)),-1)})},cosineProximity:kb};function Nb(e){if("string"==typeof e){if(e in Ib)return Ib[e];let t="Unknown loss "+e;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Rm(t)}return e}function Sb(e,t){return Wo(()=>{const n=ru(.5,Dc(t)),r=Mg($l(t,n),e.dtype);return vc(ml(e,r),-1)})}function Cb(e,t){return Wo(()=>Mg(ml(cu(e,-1),cu(t,-1)),"float32"))}function Tb(e,t){return Wo(()=>pc(e.equal(1),t.equal(1)).sum().cast("float32"))}function _b(e,t){return Wo(()=>{const n=Tb(e,t),r=function(e,t){return Wo(()=>pc(e.equal(0),t.equal(1)).sum().cast("float32"))}(e,t),a=n.add(r);return gl($l(a,0),n.div(a),0).cast("float32")})}function Eb(e,t){return vb(e,t)}function Ab(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),ml(e,t).asType("float32")}var $b=xb,Fb=wb,Rb={binaryAccuracy:Sb,categoricalAccuracy:Cb,precision:_b,categoricalCrossentropy:$b,sparseCategoricalCrossentropy:Fb,mse:gb,MSE:gb,mae:yb,MAE:yb,mape:bb,MAPE:bb,cosine:kb};function Db(e){if("string"==typeof e&&e in Rb)return Rb[e];if("string"!=typeof e&&null!=e)return e;throw new Rm("Unknown metric "+e)}function Mb(e){if(zm(null!==e,"Unknown LossOrMetricFn "+e),"string"==typeof e)return e;{let t;for(const n of Object.keys(Ib))if(Ib[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Rb))if(Rb[n]===e){t=n;break}return void 0!==t?t:e.name}}function Ob(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!zb(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function zb(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!zb(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!zb(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Lb(e,t,n=console.log){let r="";for(let a=0;a<e.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=e[a],r=r.slice(0,t[a]),r+=" ".repeat(t[a]-r.length);n(r)}function Pb(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(BG){r="multiple"}Lb([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Bb(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(BG){a="multiple"}const s=[];for(const l of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(l)))for(let e=0;e<l.inboundLayers.length;++e)s.push(`${l.inboundLayers[e].name}[${l.nodeIndices[e]}][${l.tensorIndices[e]}]`);const i=e.name,o=e.getClassName(),u=0===s.length?"":s[0];Lb([`${i} (${o})`,a,e.countParams().toString(),u],t,r);for(let l=1;l<s.length;++l)Lb(["","","",s[l]],t,r)}function Wb(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Vb(e,t){if(null===e)return null;if("string"==typeof e)return Vm(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];Wb(t,a,r)?n.push(r):n.push(Vb(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Vm(n);t[e]=Vb(r,e)}}return t}}function Ub(e,t){if(null==e)return null;if("string"==typeof e)return Wm(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];Wb(t,a,r)?n.push(r):n.push(Ub(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[Wm(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Ub(r,n):r}return t}}var Gb="3.7.0",Hb=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Hb)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Rm(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return mi(t,e.dtype)}catch(BG){throw new Rm(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ky){if(null==this.id2Value[e.id])throw new Rm("Nonexistent key: "+e.name);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Rm("Feed dict has no SymbolicTensor name: "+e);return this.id2Value[t]}}getMask(e){if(e instanceof Ky){if(null==this.id2Value[e.id])throw new Rm("Nonexistent key: "+e.name);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Rm("Feed dict has no SymbolicTensor name: "+e);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Vo(this.id2Mask)}},jb={},qb={};function Kb(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map(e=>e.name),u=[],l=t.names();for(const f of o)-1!==l.indexOf(f)?u.push(t.getValue(f)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,d;if(null==jb[c]){const e=function(e,t){ua.assert(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===e.length){const a=Yb(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=Yb(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const t in i)null==r[t]&&(r[t]=new Set),i[t].forEach(e=>r[t].add(e))}}return{sorted:n,recipientCounts:Xb(r)}}(i,t);h=e.sorted,d=e.recipientCounts,jb[c]=h,qb[c]=d}h=jb[c],d={},a||Object.assign(d,qb[c]);const p=new Hb(t);for(let f=0;f<h.length;++f){if(null!=r){const e=Po().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const e=h[f],s=e.sourceLayer;if(s instanceof nb)continue;const i=[],l=[],c=[];let m=!1;for(const n of e.inputs){const e=p.getValue(n),r=p.getMask(n);i.push(e),l.push(r),null!=r&&(m=!0),a||(d[n.name]--,0!==d[n.name]||t.hasKey(n)||-1!==o.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||c.push(e))}m&&((n=n||{}).mask=l[0]);const g=Bm(s.apply(i,n));let y=null;s.supportsMasking&&(y=s.computeMask(i,l));const b=Zb(e),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){p.hasKey(x[t])||p.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(x[t].name);-1!==e&&(u[e]=g[t])}a||Vo(c)}return p.disposeMasks(),s?u:u[0]}function Xb(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Yb(e,t){const n=new Set,r=[],a={};for(const o of t.names())n.add(o);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function Zb(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}var Jb=class extends Jy{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Ly(e)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(e.inputs)?e.inputs.slice():[e.inputs],this.outputs=Array.isArray(e.outputs)?e.outputs.slice():[e.outputs],Km(this.inputs).length!==this.inputs.length)throw new Rm("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map(e=>e.name));Km(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map(e=>e.name)),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.nodeIndex,t=y.tensorIndex;this.outputLayers.push(y.sourceLayer),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(t)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;zm(0===t,"input layer has >1 nodes"),zm(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof nb))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new Fm(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(Jb.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let s=0;s<c;s++)o(l.inputTensors[s],t,n,l.inboundLayers[s],l.nodeIndices[s],l.tensorIndices[s]);for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const y of this.outputs)o(y,u,l);const c=i.slice().reverse();for(const y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];e=Math.max(e,null==r[y.outboundLayer.id]?0:r[y.outboundLayer.id]),r[y.outboundLayer.id]=e,a[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let r=0;r<y.inboundLayers.length;r++){const a=y.inboundLayers[r].inboundNodes[y.nodeIndices[r]];t[a.id]=Math.max(e+1,null==t[a.id]?0:t[a.id]),n[a.id]=a}}const h={};for(const y in t){const e=t[y];e in h||(h[e]=[]),h[e].push(n[y])}const d={};for(const y in r){const e=r[y];e in d||(d[e]=[]),d[e].push(a[y])}let p=Object.keys(d).map(e=>parseInt(e,10)).sort(qm);this.layers=[];for(const y of p){const e=d[y];e.sort((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0});for(const t of e)t instanceof Jb&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map(e=>parseInt(e,10)).sort(qm);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of h[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Fm(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map(e=>e.name);for(const y of g){const e=g.filter(e=>e===y).length;if(1!==e)throw new Fm(`The name "${y}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Yy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Rm("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const s of this.layers)for(const e of s.weights){if(null!=n[e.originalName])throw new Rm("Duplicate weight name: "+e.originalName);n[e.originalName]=e,r++}const a=[];for(const s in e){let r=s;if(null==n[s]){const e=s.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])a.push([n[r],e[s]]);else if(t)throw new Rm("Provided weight data has no target variable: "+s);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Rm(`${e.length} of ${r} weights are not set: ${e}`)}jy(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers "+Gb,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Ub(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Wo(()=>{e=Bm(e);const n=new Hb;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Kb(this.outputs,n,t)})}computeMask(e,t){return Wo(()=>{let n;return e=Bm(e),n=null==t?Om(null,e.length):Bm(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){const t=By(e);if(t.length!==this.inputLayers.length)throw new Rm(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++)n[this.inputLayers[i].name+"_0_0"]=t[i];const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(qm);if(r.length>1)for(const i of r){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(e.id))continue;const r=[];for(let i=0;i<t.inboundLayers.length;i++)r.push(n[`${t.inboundLayers[i].name}_${t.nodeIndices[i]}_${t.tensorIndices[i]}`]);const a=By(e.computeOutputShape(Pm(r))),s=e.inboundNodes.indexOf(t);for(let t=0;t<a.length;t++)n[`${e.name}_${s}_${t}`]=a[t]}}const a=[],s=[];for(let i=0;i<this.outputLayers.length;i++)s.push(`${this.outputLayers[i].name}_${this.outputLayersNodeIndices[i]}_${this.outputLayersTensorIndices[i]}`);for(let i=0;i<s.length;i++){const e=s[i];zm(e in n),a.push(n[e])}return Pm(a)}runInternalGraph(e,t){null==t&&(t=Om(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o)n[this.inputs[o].id]=[e[o],t[o]];const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(qm);for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,a=t.outputTensors,s=new Array;for(const t of r)t.id in n&&s.push(n[t.id]);if(s.length===r.length){let r,i,o,u,l={};if(null!=t.callArgs&&(l=t.callArgs),1===s.length){const[t,n]=s[0];null==l.mask&&(l.mask=n),o=Bm(e.call(t,l)),u=Bm(e.computeMask(t,n)),r=[t],i=[n]}else r=s.map(e=>e[0]),i=s.map(e=>e[1]),null==l.mask&&(l.mask=i),o=Bm(e.call(r,l)),u=Bm(e.computeMask(r,i));if(e.activityRegularizer)throw new Dm("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e)n[a[e].id]=[o[e],u[e]]}}}const a=[],s=[],i=[];for(const o of this.outputs){zm(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];i.push(e.shape),a.push(e),s.push(t)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof Jb?1:0;for(let e=0;e<r.inboundNodes.length;e++){const a=Jb.nodeKey(r,e);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Rm(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Rm("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===e)return n;throw new Rm("No such layer: "+e)}calculateLosses(){return Wo(()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Jb.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const s of this.layers){const e=s.getClassName(),r=s.getConfig(),a=[];for(let n=0;n<s.inboundNodes.length;n++){const e=s.inboundNodes[n],r=Jb.nodeKey(s,n);let i={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch(BG){console.warn(`Layer ${s.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],s=e.tensorIndices[r];let o=t[Jb.nodeKey(a,e.nodeIndices[r])];null==o&&(o=0),n.push([a.name,o,s,i])}a.push(n)}}}const i={};i.name=s.name,i.className=e,i.config=r,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let s=0;s<this.inputLayers.length;s++){const e=this.inputLayers[s],n=Jb.nodeKey(e,this.inputLayersNodeIndices[s]);if(!this.containerNodes.has(n))continue;let a=t[n];null==a&&(a=0),r.push([e.name,a,this.inputLayersTensorIndices[s]])}e.inputLayers=r;const a=[];for(let s=0;s<this.outputLayers.length;s++){const e=this.outputLayers[s],n=Jb.nodeKey(e,this.outputLayersNodeIndices[s]);if(!this.containerNodes.has(n))continue;let r=t[n];null==r&&(r=0),a.push([e.name,r,this.outputLayersTensorIndices[s]])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],u=s[1],l=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const c=a[o];if(c.inboundNodes.length<=u)return void i(e,t);n.push(c.inboundNodes[u].outputTensors[l])}n.length>0&&e.apply(Pm(n),r)}function u(e){const n=e.name,s=fb(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new Rm("Corrupted configuration, expected array for nodeData: "+e);i(s,e)})}const l=t.name,c=t.layers;for(const m of c)u(m);for(;!Xm(s);)for(const e of c){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const m of p){const e=m[0],t=m[1],n=m[2];zm(e in a),h.push(a[e].inboundNodes[t].outputTensors[n])}const f=t.outputLayers;for(const m of f){const e=m[0],t=m[1],n=m[2];zm(e in a),d.push(a[e].inboundNodes[t].outputTensors[n])}return new e({inputs:h,outputs:d,name:l})}get stateful(){if(this._stateful)throw new Rm("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Wo(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function Qb(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided classWeight is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach(t=>{n.push(t in e?e[t]:null)}),n}throw new Error(`The model has multiple (${r}) outputs, so classWeight must be either an array with ${r} elements or an object with ${t} keys. Provided classWeight not understood: ${JSON.stringify(e)}`)}(e,t)}async function ex(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Wo(()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1)return e.argMax(1);if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await t.data());Vo(t);const a=[];return r.forEach(e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])}),Dh(a,"float32")}return null}function tx(e,t){return ru(e,t)}function nx(e,t){let n,r;n=t.xs,r=t.ys,ua.assert(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+t);const a=rx("input",e.inputNames,n),s=rx("output",e.outputNames,r),i=a[0].shape[0];ua.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),ua.assert(s.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${s.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let o=0;o<a.length;o++)ua.assert(a[o].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[o]} has ${a[o].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let o=0;o<s.length;o++)ua.assert(s[o].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[o]} has ${s[o].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:s}}function rx(e,t,n){if(n instanceof La)return[n];if(Array.isArray(n))return ua.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{const r=[];for(const a of t){if(null==n[a])throw new Rm(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function ax(e){return"function"==typeof e.iterator}function sx(e){ua.assert(e>0&&Number.isInteger(e),()=>"batchSize is required to be a positive integer, but got "+e)}function ix(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>zg(e,t,n-t)):zg(e,t,n-t)}function ox(e,t){return Wo(()=>null==e?null:Array.isArray(e)?e.map(e=>ox(e,t)):Hg(e,"int32"===t.dtype?t:t.toInt()))}function ux(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function lx(e){const t=[];e instanceof La&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Og(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function cx(e,t){if(null==e)return;const n=[];if(t instanceof La)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(const a in t)n.push(t[a].id);const r=[];if(e instanceof La)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&r.push(e)});else if(null!=e)for(const a in e){const t=e[a];-1===n.indexOf(t.id)&&r.push(t)}r.forEach(e=>{e.isDisposed||e.dispose()})}function hx(e){return Array.isArray(e)}function dx(e){return!function(e){return e instanceof La}(e)&&!hx(e)}function px(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(hx(e)&&e.length>0)t=!0;else if(dx(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Rm(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map(e=>null);let s;if(dx(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new Rm(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(hx(e)){if((e=e).length!==t.length)throw new Rm(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new Rm(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=lx(s),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=s[i];if(e.shape.length!==n[i].length)throw new Rm(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${e.shape}`);for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;const o=e.shape[s],u=n[i][s];if(null!=u&&u>=0&&o!==u)throw new Rm(`Error when checking ${a}: expected ${t[i]} to have shape [${n[i]}], but got array with shape [${e.shape}].`)}}return s}function fx(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new Rm(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new Rm(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=s[i];if(e.shape.length!==n[i].length)throw new Rm(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;const o=e.shape[s],u=n[i][s];if(null!=u&&u!==o)throw new Rm(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}var mx=class extends Jb{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Rm("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(const a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){t=!1;break}r.push(...a)}if(t)for(const a of e.layers){let e=!1;for(const n of a.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Lb(s,n,r),r("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)a?Pb(o[c],n,r):Bb(o[c],n,i,r),r((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=Uy(null!=e.collectedTrainableWeights?e.collectedTrainableWeights:e.trainableWeights),t}(e),l=Uy(e.nonTrainableWeights);r("Total params: "+(u+l)),r("Trainable params: "+u),r("Non-trainable params: "+l),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Ip.adagrad(.01),Adadelta:()=>Ip.adadelta(1,.95,Am()),Adam:()=>Ip.adam(.001,.9,.999,Am()),Adamax:()=>Ip.adamax(.002,.9,.999,Am(),0),RMSProp:()=>Ip.rmsprop(.001,.9,0,Am()),SGD:()=>Ip.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Rm("Unknown Optimizer "+e)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof fp))throw new Rm("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Rm(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(e=>Nb(e))}else{const n=Nb(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Rm(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Nb(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const e=this.internalOutputShapes[s];this.feedOutputNames.push(this.outputNames[s]),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Cg("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+e);n=e}if(Array.isArray(n))return t.map(e=>n);{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Cg("metric",()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===vb?-1!==["accuracy","acc"].indexOf(i)?r=Sb:-1!==["crossentropy","ce"].indexOf(i)&&(r=Eb):this.lossFunctions[e]===wb?-1!==["accuracy","acc"].indexOf(i)?r=Ab:-1!==["crossentropy","ce"].indexOf(i)&&(r=Fb):-1!==["accuracy","acc"].indexOf(i)?r=Cb:-1!==["crossentropy","ce"].indexOf(i)&&(r=$b),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=Db(i);s=e,n=""+Mb(i)}let t;Cg(n,()=>{t=s}),a(e,n,t)}})(r[e])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;sx(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);return this.makeTestFunction(),Pm(this.testLoop(this.testFunction,s,r,n.verbose,n.steps))}finally{cx(a[0],e),cx(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new Dm("Verbose mode is not implemented yet.");ua.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(s=Wo(()=>{if(t.value){const{xs:n,ys:r}=nx(e,t.value),i=n.concat(r),l=Wo(()=>a(i));if(Vo(i),0===u)for(let e=0;e<l.length;++e)s.push(ch(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=Wo(()=>eu(s[e],ru(c,t))),u>0&&Vo(n)}Vo(l),o+=c,++u}return s}),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<s.length;++l){const e=s[l];s[l]=nu(s[l],o),Vo(e)}return Pm(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new Rm(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Rm(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Rm("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=this.retrieveSymbolicTensors(n?t:[t]),a=new Hb;if(e instanceof La&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Rm(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new Rm("No value is provided for the model's input "+i.name);a.add(i,t)}const s=Kb(r,a);return n?s:s[0]}retrieveSymbolicTensors(e){const t=Om(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map(e=>e.name);for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach((t,r)=>{null==t&&n.push(e[r])}),new Rm("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return t}predictLoop(e,t=32,n=!1){return Wo(()=>{const r=this.checkNumSamples(e);if(n)throw new Dm("Verbose predictLoop() is not implemented yet.");const a=ux(r,t),s=this.outputs.map(e=>[]);for(let t=0;t<a.length;++t)Wo(()=>{const n=ix(e,a[t][0],a[t][1]),r=[];if(Array.isArray(n))for(let e=0;e<n.length;++e)r.push({key:this.inputs[e],value:n[e]});else r.push({key:this.inputs[0],value:n});const s=new Hb(r);return Kb(this.outputs,s)}).forEach((e,t)=>s[t].push(e));return Pm(s.map(e=>Ru(e,0)))})}predict(e,t={}){const n=lx(e);fx(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return sx(r),this.predictLoop(n,r)}finally{cx(n,e)}}predictOnBatch(e){fx(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Fm("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let s=0;s<this.feedOutputShapes.length;++s){const e=this.feedOutputShapes[s];a.push(this.feedLossFns[s]===wb?e.slice(0,e.length-1).concat([1]):e)}if(function(e,t,n){const r=Km(e.map(e=>e.shape[0]));r.sort();const a=Km(t.map(e=>e.shape[0]));if(a.sort(),r.length>1)throw new Rm("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map(e=>e.shape)));if(a.length>1)throw new Rm("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map(e=>e.shape)));if(r.length>0&&a.length>0&&!ua.arraysEqual(r,a))throw new Rm(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=px(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=px(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[gb,vb,xb];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===xb&&1===s.shape[s.shape.length-1])throw new Rm(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new Rm(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Rm(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=Qb(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await ex(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,a){return Wo(()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new Dm("Verbose mode is not implemented yet.");if(null!=a)throw new Dm("steps mode in testLoop() is not implemented yet");{const r=ux(s,n),a=Dh(Dg(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=zg(a,s,o-s),l=ox(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(ch(0));for(let e=0;e<c.length;++e)i[e]=eu(i[e],ru(o-s,c[e]))}for(let e=0;e<i.length;++e)i[e]=nu(i[e],s)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;Lm(e,r)>1&&(a+="_"+Lm(e.slice(0,n),r)),t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Hb(e),o=Kb(this.outputs,i,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(r[n],o[n]);null!=a[n]&&(e=tx(e,a[n]));const s=vc(e);t.push(s),u=0===n?e:eu(u,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][1];e=vc((0,this.metricsTensors[n][0])(r[t],o[t]))}Uo(e),s.push(e)}return u=vc(u),this.calculateLosses().forEach(e=>{u=eu(u,e)}),u},!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>Wo(()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new Hb(s),o=Kb(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=vc((0,this.lossFunctions[e])(a[e],o[e]));n=0===e?r:eu(n,r),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][1],r=vc((0,this.metricsTensors[e][0])(a[n],o[n]));t.push(r)}return t})}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,l,c;e.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;sx(h);const d=!1,p=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,d,h);a=p[0],s=p[1],c=p[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Dm("validationData including sample weights is not supported yet."):new Rm(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,h);u=n[0],l=n[1],f=u.concat(l)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];u=ix(a,e,t),a=ix(a,0,e),l=ix(s,e,t),s=ix(s,0,e),f=u.concat(l)}else null!=r.validationSteps&&(m=!0);const g=a.concat(s).concat(c);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),b=e.getDedupedMetricsNames();let x,w;m?(e.makeTestFunction(),x=e.testFunction,w=b.slice().concat(b.map(e=>"val_"+e))):(x=null,f=[],w=b.slice());const v=hb(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,a,s,i,o,u,l,c,h,d,p,f){null==a&&(a=32),null==s&&(s=1),null==c&&(c=!0),null==d&&(d=0);let m=!1;null!=u&&null!=l&&(m=!0);const g=e.checkNumSamples(n,a,null,"steps_per_epoch");let y;null!=g&&(y=Dg(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=pb(o,i,s,d,g,null,a,m,h);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let w=d;w<s;++w){await b.onEpochBegin(w);const s={};{if("batch"===c)throw new Dm("batch shuffling is not implemneted yet");c&&ua.shuffle(y);const i=Dh(y),o=ux(g,a);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),Wo(()=>{const d=o[c][0],p=o[c][1],f=zg(i,d,p-d);h.batch=c,h.size=p-d;const g=ox(n,f),y=t(g);for(let e=0;e<r.length;++e){const t=y[e];h[r[e]]=t,Uo(t)}if(c===o.length-1&&m){const t=e.testLoop(u,l,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];Uo(a),s["val_"+n]=a}}}),await b.onBatchEnd(c,h),sb(h),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(w,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,y,g,b,h,r.epochs,r.verbose,v,x,f,r.shuffle,w,r.initialEpoch)}finally{e.isTraining=!1,cx(a,t),cx(s,n),cx(u,i),cx(l,o),null!=c&&Vo(c)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(ua.assert(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),ua.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),ua.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs),ua.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch),ua.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(ax(n.validationData))ua.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches);else{const e=function(e){if(3===e.length)throw new Dm("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=a?u.slice().concat(u.map(e=>"val_"+e)):u.slice();const c=hb(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=pb(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){const{xs:r,ys:a}=nx(e,t.value),s={};s.batch=h,s.size=r[0].shape[0],await d.onBatchBegin(h,s);const i=[];if(null!=n.classWeight){const t=Qb(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await ex(a[e],null,t[e]))}const l=r.concat(a).concat(i),p=o(l);Vo(l);for(let e=0;e<u.length;++e){const t=p[e];s[u[e]]=t,Uo(t)}await d.onBatchEnd(h,s),sb(s),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(a){let t;t=ax(n.validationData)?Bm(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Bm(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l["val_"+e.metricsNames[n]]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,l),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const o of s){const e=await o.data();i.push(e[0])}return Vo(s),Pm(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||t.push({name:r[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Po().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Po().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Wm(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>Wm(e))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Wm(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Wm(Mb(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Wm(Mb(e)));{const e={};for(const t in this.metrics)e[t]=Wm(Mb(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=fb(Vb(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Vm(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(e=>Vm(e));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Vm(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map(e=>Vm(e));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Vm(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=bi.getSaveHandlers(e);if(0===t.length)throw new Rm(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Rm(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Rm("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await bi.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v"+Gb,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await bi.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=bi.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&(Ob(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Ob(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};mx.className="Model",go.registerClass(mx);var gx=class extends mx{};async function yx(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);const r=fb(Vb(n),t);if(null!=e.weightsManifest){const t=await bi.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(e=>e.originalName)),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),Vo(t)}return r}gx.className="Functional",go.registerClass(gx);var bx=class extends mx{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Ly("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new Rm(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof bx||e instanceof mx;let n;if(t){if(n=e,1!==n.outputs.length)throw new Rm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Rm("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Rm("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=rb({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Rm(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Rm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Qy(this.outputs[0])}this.inboundNodes=[],new Yy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Om(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Vy(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new mx({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Fm("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Fm("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Fm("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Fm("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Rm("Legacy serialization format not supported yet.");a=t}else ua.assert(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof bx))throw new Dm("Sequential.fromConfig called on non-Sequential input: "+i);for(const o of a){const e=fb(o,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(e){if(null==this.model)throw new Rm("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Rm("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function xx(e){return new mx(e)}function wx(e){return new bx(e)}function vx(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=bi.getLoadHandlers(e,t);if(0===n.length)n.push(bi.browserHTTPRequest(e,t));else if(n.length>1)throw new Rm(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new Rm("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let a=r.modelTopology;null!=a.model_config&&(a=a.model_config);const s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=fb(Vb(a),void 0,i),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new Rm("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=bi.decodeWeights(e,t),r={},a=[];return t.forEach(e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]}),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Vo(e),Vo(t.map(e=>e.tensor))}return o}(e,0,t)}(e,t)}function kx(e){return rb(e)}function Ix(e,t){db.registerCallbackConstructor(e,t)}bx.className="Sequential",go.registerClass(bx);var Nx=class extends go.Serializable{getConfig(){return{}}},Sx=class extends Nx{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Dm(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return vl(e)}(e,t)}};Sx.className="elu",go.registerClass(Sx);var Cx=class extends Nx{apply(e){return hh(e)}};Cx.className="selu",go.registerClass(Cx);var Tx=class extends Nx{apply(e){return th(e)}};Tx.className="relu",go.registerClass(Tx);var _x=class extends Nx{apply(e){return Wo(()=>Cc(6,th(e)))}};_x.className="relu6",go.registerClass(_x);var Ex=class extends Nx{apply(e){return e}};Ex.className="linear",go.registerClass(Ex);var Ax=class extends Nx{apply(e){return Du(e)}};Ax.className="sigmoid",go.registerClass(Ax);var $x=class extends Nx{apply(e){return function(e){return Wo(()=>{const t=eu(.5,ru(.2,e));return ju(t,0,1)})}(e)}};$x.className="hardSigmoid",go.registerClass($x);var Fx=class extends Nx{apply(e){return Jl(e)}};Fx.className="softplus",go.registerClass(Fx);var Rx=class extends Nx{apply(e){return function(e){return Wo(()=>nu(e,au(e).add(1)))}(e)}};Rx.className="softsign",go.registerClass(Rx);var Dx=class extends Nx{apply(e){return Ou(e)}};Dx.className="tanh",go.registerClass(Dx);var Mx=class extends Nx{apply(e,t=-1){return vh(e,t)}};Mx.className="softmax",go.registerClass(Mx);var Ox=class extends Nx{apply(e,t=-1){return rc(e,t)}};Ox.className="logSoftmax",go.registerClass(Ox);var zx=class extends Nx{apply(e,t=1){return Wo(()=>Du(e.mul(t)).mul(e))}};zx.className="swish",go.registerClass(zx);var Lx=class extends Nx{apply(e){return Wo(()=>ru(e,Ou(Jl(e))))}};function Px(e){return e.getClassName()}function Bx(e,t={}){return jm(e,go.SerializationMap.getMap().classNameMap,t,"activation")}function Wx(e){if(null==e)return Bx({className:"linear",config:{}});if("string"==typeof e){const t={};return t.className=e,t.config={},Bx(t)}return e instanceof Nx?e:Bx(e)}function Vx(e){if(null!=e&&"object"!=typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+e)}Lx.className="mish",go.registerClass(Lx);var Ux=class extends go.Serializable{},Gx=class extends Ux{constructor(e){super(),Vx(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Wo(()=>{let t=kc([1]);return this.hasL1&&(t=eu(t,nc(ru(this.l1,au(e))))),this.hasL2&&(t=eu(t,nc(ru(this.l2,jg(e))))),t.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Gx.className="L1L2",go.registerClass(Gx);var Hx={l1l2:"L1L2"};function jx(e){return Gm(e)}function qx(e,t={}){return jm(e,go.SerializationMap.getMap().classNameMap,t,"regularizer")}function Kx(e){return null==e?null:"string"==typeof e?qx({className:e in Hx?Hx[e]:e,config:{}}):e instanceof Ux?e:qx(e)}var Xx=class extends Jy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Wy(e);let n=th(e);return null!=this.maxValue&&(n=ju(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Xx.className="ReLU",go.registerClass(Xx);var Yx=class extends Jy{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Wy(e);return zl(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Yx.className="LeakyReLU",go.registerClass(Yx);var Zx=class extends Jy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=by(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Kx(e.alphaRegularizer),this.alphaConstraint=cg(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Rm("Expected sharedAxes to be a number or an array of numbers, but got "+e.sharedAxes);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Vy(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new qy({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Wy(e),Gc(e,this.alpha.read())}getConfig(){const e={alphaInitializer:yy(this.alphaInitializer),alphaRegularizer:jx(this.alphaRegularizer),alphaConstraint:ug(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Zx.className="PReLU",go.registerClass(Zx);var Jx=class extends Jy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Dm(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Wy(e);return vl(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Jx.className="ELU",go.registerClass(Jx);var Qx=class extends Jy{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Wy(e);return n.mul(Mg(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Qx.className="ThresholdedReLU",go.registerClass(Qx);var ew=class extends Jy{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Mx).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Wy(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function tw(e,t,n){if("number"==typeof e)return Om(e,t);if(e.length!==t)throw new Rm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new Rm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function nw(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function rw(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Rg([n-t,0]);else{if("same"!==r)throw new Rm(`Unsupport padding mode: ${r}.`);e*=t}return e}function aw(e,t){return Wo(()=>(kg(t),"channelsFirst"===t?Li(e,[0,2,3,1]):e))}function sw(e,t){return Wo(()=>(kg(t),"channelsFirst"===t?Li(e,[0,2,3,4,1]):e))}function iw(e,t,n,r=[1,1],a="valid",s,i,o=null){return Wo(()=>{if(null==s&&(s="channelsLast"),kg(s),3!==e.rank&&4!==e.rank)throw new Rm(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Rm(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=aw(e,s);if("causal"===a)throw new Dm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=ad.conv2d({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=Li(u,[0,3,1,2])),u})}ew.className="Softmax",go.registerClass(ew);var ow=class extends Jy{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",ow.verifyArgs(t),this.rank=e,Jm(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Dm(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=tw(t.kernelSize,e,"kernelSize"),this.strides=tw(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Ig(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,kg(this.dataFormat),this.activation=Wx(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=by(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=cg(t.biasConstraint),this.biasRegularizer=Kx(t.biasRegularizer),this.activityRegularizer=Kx(t.activityRegularizer),this.dilationRate=tw(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Rm("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Rm("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Rm("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(e){if(zm("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Zm(e.kernelSize,"number",1,3))throw new Rm(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Px(this.activation),useBias:this.useBias,biasInitializer:yy(this.biasInitializer),biasRegularizer:jx(this.biasRegularizer),activityRegularizer:jx(this.activityRegularizer),biasConstraint:ug(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},uw=class extends ow{constructor(e,t){super(e,t),this.kernel=null,uw.verifyArgs(t),this.filters=t.filters,Jm(this.filters,"filters"),this.kernelInitializer=by(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=cg(t.kernelConstraint),this.kernelRegularizer=Kx(t.kernelRegularizer)}build(e){e=Vy(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Rm("The channel dimension of the input should be defined. Found "+e[t]);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Wo(()=>{let t;e=Wy(e);const n=null==this.bias?null:this.bias.read(),r=eg(this.activation.getClassName());if(null!=r&&2===this.rank)t=iw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return Wo(()=>{if(null==s&&(s="channelsLast"),kg(s),3!==e.shape.length)throw new Rm(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Rm(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Rm(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Li(e,[0,2,1])),"causal"===a)throw new Dm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Ju(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=Kg(o,n)),o})}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=iw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Dm("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return Wo(()=>{if(null==s&&(s="channelsLast"),kg(s),4!==e.rank&&5!==e.rank)throw new Rm(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Rm(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=sw(e,s);if("causal"===a)throw new Dm("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=tl(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=Kg(o,n)),"channelsFirst"===s&&(o=Li(o,[0,4,1,2,3])),o})}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=Vy(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<n.length;++a){const e=nw(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:yy(this.kernelInitializer),kernelRegularizer:jx(this.kernelRegularizer),kernelConstraint:ug(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Rm("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(e.filters))}},lw=class extends uw{constructor(e){super(2,e),lw.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Zm(e.kernelSize,"number",1,2))throw new Rm(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};lw.className="Conv2D",go.registerClass(lw);var cw=class extends uw{constructor(e){super(3,e),cw.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Rm(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};cw.className="Conv3D",go.registerClass(cw);var hw=class extends lw{constructor(e){if(super(e),this.inputSpec=[new qy({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Rm("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(e){if(4!==(e=Vy(e)).length)throw new Rm("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Rm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new qy({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Wo(()=>{let t=Wy(e);if(4!==t.shape.length)throw new Rm("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+t.shape.length);const n=t.shape;let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const s=n[a],i=this.kernelSize[1],o=this.strides[1],u=[n[0],rw(n[r],this.strides[0],this.kernelSize[0],this.padding),rw(s,o,i,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Li(t,[0,2,3,1]));let l=el(t,this.kernel.read(),u,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(l=Li(l,[0,3,1,2])),null!=this.bias&&(l=Kg(l,this.bias.read(),this.dataFormat)),null!=this.activation&&(l=this.activation.apply(l)),l})}computeOutputShape(e){const t=(e=Vy(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=rw(t[r],o,s,this.padding),t[a]=rw(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};hw.className="Conv2DTranspose",go.registerClass(hw);var dw=class extends cw{constructor(e){if(super(e),this.inputSpec=[new qy({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Rm("Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(e){if(5!==(e=Vy(e)).length)throw new Rm("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Rm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new qy({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Wo(()=>{let t=Wy(e);if(5!==t.shape.length)throw new Rm("Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+t.shape.length);const n=t.shape;let r,a,s;"channelsFirst"===this.dataFormat?(s=2,r=3,a=4):(s=1,r=2,a=3);const i=n[r],o=n[a],u=this.kernelSize[1],l=this.kernelSize[2],c=this.strides[1],h=this.strides[2],d=[n[0],rw(n[s],this.strides[0],this.kernelSize[0],this.padding),rw(i,c,u,this.padding),rw(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Li(t,[0,2,3,4,1]));let p=rl(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Li(p,[0,4,1,2,3])),null!==this.bias&&(p=Kg(p,this.bias.read(),this.dataFormat)),null!==this.activation&&(p=this.activation.apply(p)),p})}computeOutputShape(e){const t=(e=Vy(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=rw(t[r],l,i,this.padding),t[a]=rw(t[a],c,o,this.padding),t[s]=rw(t[s],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};dw.className="Conv3DTranspose",go.registerClass(dw);var pw=class extends uw{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Rm("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Rm("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Rm(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=by(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Kx(t.depthwiseRegularizer),this.depthwiseConstraint=cg(t.depthwiseConstraint),this.pointwiseInitializer=by(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Kx(t.pointwiseRegularizer),this.pointwiseConstraint=cg(t.pointwiseConstraint)}build(e){if((e=Vy(e)).length<this.rank+2)throw new Rm(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Rm("The channel dimension of the inputs should be defined, but found "+JSON.stringify(e[t]));const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):null,this.inputSpec=[new qy({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Wo(()=>{let t;if(e=Wy(e),1===this.rank)throw new Dm("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Li(e,[0,2,3,1])),t=dh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Kg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Li(t,[0,3,1,2])),t})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=yy(this.depthwiseInitializer),e.pointwiseInitializer=yy(this.pointwiseInitializer),e.depthwiseRegularizer=jx(this.depthwiseRegularizer),e.pointwiseRegularizer=jx(this.pointwiseRegularizer),e.depthwiseConstraint=ug(this.depthwiseConstraint),e.pointwiseConstraint=ug(this.pointwiseConstraint),e}};pw.className="SeparableConv";var fw=class extends pw{constructor(e){super(2,e)}};fw.className="SeparableConv2D",go.registerClass(fw);var mw=class extends uw{constructor(e){super(1,e),mw.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Zm(e.kernelSize,"number",1,1))throw new Rm(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};mw.className="Conv1D",go.registerClass(mw);var gw=class extends Jy{constructor(e){super(e),this.cropping="number"==typeof e.cropping?[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Wo(()=>{if(e=Wy(e),"channelsLast"===this.dataFormat){const t=Pg(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Pg(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Pg(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Pg(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};gw.className="Cropping2D",go.registerClass(gw);var yw=class extends Jy{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,kg(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,Ym(yg,"InterpolationFormat",this.interpolation)}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],null==e[2]?null:this.size[0]*e[2],null==e[3]?null:this.size[1]*e[3]]:[e[0],null==e[1]?null:this.size[0]*e[1],null==e[2]?null:this.size[1]*e[2],e[3]]}call(e,t){return Wo(()=>{let t=Wy(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Li(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return Li(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};yw.className="UpSampling2D",go.registerClass(yw);var bw=class extends ow{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=by(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=cg(e.depthwiseConstraint),this.depthwiseRegularizer=Kx(e.depthwiseRegularizer)}build(e){if((e=Vy(e)).length<4)throw new Rm(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Rm(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return Wo(()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return Wo(()=>{null==a&&(a="channelsLast"),kg(a);let i=aw(e,a);if(4!==e.rank)throw new Rm(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Rm(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=ll(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Li(i,[0,3,1,2])),i})}(e=Wy(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Kg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=Vy(e);const t="channelsFirst"===this.dataFormat?e[3]:e[2],n="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=nw("channelsFirst"===this.dataFormat?e[2]:e[1],this.kernelSize[0],this.padding,this.strides[0]),a=nw(t,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],n,r,a]:[e[0],r,a,n]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=yy(this.depthwiseInitializer),e.depthwiseRegularizer=jx(this.depthwiseRegularizer),e.depthwiseConstraint=ug(this.depthwiseRegularizer),e}};function xw(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Rm("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function ww(e,t,n,r=!1,a,s,i=!1,o=!1){return Wo(()=>{const u=t.shape.length;if(u<3)throw new Rm(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(Dg(2,u));if(t=Li(t,l),null!=s)throw new Dm("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=a.asType("bool").asType("float32")).rank===u-1&&(a=Nl(a,-1)),a=Li(a,l)),r&&(t=rh(t,0),null!=a&&(a=rh(a,0)));const c=[];let h,d=n;const p=t.shape[0],f=Uh(t);let m,g;null!=a&&(m=Uh(a));for(let t=0;t<p;++t){const n=f[t],r=Wo(()=>e(n,d));if(null==a)h=r[0],d=r[1];else{const e=Wo(()=>{const e=m[t],n=Dc(e).sub(e);return{output:r[0].mul(e).add(d[0].mul(n)),newStates:d.map((t,a)=>r[1][a].mul(e).add(t.mul(n)))}});h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=Ah(c,1)),[h,g,d]})}bw.className="DepthwiseConv2D",go.registerClass(bw);var vw=class extends Jy{constructor(e){let t;if(super(e),null==e.cell)throw new Rm("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Ew({cells:e.cell}):e.cell,null==t.stateSize)throw new Rm("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new qy({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Dg(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Py(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Wo(()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Dm("Constants support is not implemented in RNN yet.");Py(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new qy({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ua.arraysEqual(this.stateSpec.map(e=>e.shape[e.shape.length-1]),a))throw new Rm(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(e=>new qy({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){Wo(()=>{if(!this.stateful)throw new $m("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Rm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>kc([n,e])):[kc([n,this.cell.stateSize])];else if(null==e)Vo(this.states_),null!=this.keptStates&&(Vo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>kc([n,e])):this.states_[0]=kc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Rm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Vo(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!ua.arraysEqual(r.shape,s))throw new Rm(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map(e=>Uo(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=xw(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new qy({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Ky){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Wo(()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=Wy(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new Rm(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=ww((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]},e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h})}getInitialState(e){return Wo(()=>{let t=kc(e.shape);return t=nc(t,[1,2]),t=Og(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?Vg(t,[1,e]):t):this.cell.stateSize>1?[Vg(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===vw.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=fb(t.cell,n);return new e(Object.assign(t,{cell:r}))}};vw.className="RNN",go.registerClass(vw);var kw=class extends Jy{},Iw=class extends kw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Jm(this.units,"units"),this.activation=Wx(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=by(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=by(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=by(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Kx(e.kernelRegularizer),this.recurrentRegularizer=Kx(e.recurrentRegularizer),this.biasRegularizer=Kx(e.biasRegularizer),this.kernelConstraint=cg(e.kernelConstraint),this.recurrentConstraint=cg(e.recurrentConstraint),this.biasConstraint=cg(e.biasConstraint),this.dropout=Fg([1,Rg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Fg([1,Rg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Vy(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return Wo(()=>{if(2!==(e=e).length)throw new Rm(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Aw({ones:()=>Dc(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Aw({ones:()=>Dc(n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=Gg(null!=s?ru(e,s):e,this.kernel.read()),null!=this.bias&&(a=Kg(a,this.bias.read())),null!=i&&(n=ru(n,i));let o=eu(a,Gg(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Px(this.activation),useBias:this.useBias,kernelInitializer:yy(this.kernelInitializer),recurrentInitializer:yy(this.recurrentInitializer),biasInitializer:yy(this.biasInitializer),kernelRegularizer:jx(this.kernelRegularizer),recurrentRegularizer:jx(this.recurrentRegularizer),biasRegularizer:jx(this.biasRegularizer),activityRegularizer:jx(this.activityRegularizer),kernelConstraint:ug(this.kernelConstraint),recurrentConstraint:ug(this.recurrentConstraint),biasConstraint:ug(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};Iw.className="SimpleRNNCell",go.registerClass(Iw);var Nw=class extends vw{constructor(e){e.cell=new Iw(e),super(e)}call(e,t){return Wo(()=>(null!=this.cell.dropoutMask&&(Vo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Vo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return new e(t)}};Nw.className="SimpleRNN",go.registerClass(Nw);var Sw=class extends kw{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Rm("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Jm(this.units,"units"),this.activation=Wx(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Wx(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=by(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=by(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=by(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Kx(e.kernelRegularizer),this.recurrentRegularizer=Kx(e.recurrentRegularizer),this.biasRegularizer=Kx(e.biasRegularizer),this.kernelConstraint=cg(e.kernelConstraint),this.recurrentConstraint=cg(e.recurrentConstraint),this.biasConstraint=cg(e.biasConstraint),this.dropout=Fg([1,Rg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Fg([1,Rg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Vy(e),this.kernel=this.addWeight("kernel",[e[e.length-1],3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return Wo(()=>{if(2!==(e=e).length)throw new Rm(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Aw({ones:()=>Dc(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Aw({ones:()=>Dc(r),rate:this.recurrentDropout,training:n,count:3}));const a=this.recurrentDropoutMask;let s,i,o;0<this.dropout&&this.dropout<1&&(e=ru(e,this.dropoutMask[0]));let u=Gg(e,this.kernel.read());this.useBias&&(u=Kg(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ru(r,a[0]));const l=this.recurrentKernel.read(),[c,h]=Sh(l,[2*this.units,this.units],l.rank-1),d=Gg(r,c),[p,f,m]=Sh(u,3,u.rank-1),[g,y]=Sh(d,2,d.rank-1);s=this.recurrentActivation.apply(eu(p,g)),i=this.recurrentActivation.apply(eu(f,y));const b=Gg(ru(i,r),h);o=this.activation.apply(eu(m,b));const x=eu(ru(s,r),ru(eu(1,Zl(s)),o));return[x,x]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Px(this.activation),recurrentActivation:Px(this.recurrentActivation),useBias:this.useBias,kernelInitializer:yy(this.kernelInitializer),recurrentInitializer:yy(this.recurrentInitializer),biasInitializer:yy(this.biasInitializer),kernelRegularizer:jx(this.kernelRegularizer),recurrentRegularizer:jx(this.recurrentRegularizer),biasRegularizer:jx(this.biasRegularizer),activityRegularizer:jx(this.activityRegularizer),kernelConstraint:ug(this.kernelConstraint),recurrentConstraint:ug(this.recurrentConstraint),biasConstraint:ug(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};Sw.className="GRUCell",go.registerClass(Sw);var Cw=class extends vw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Sw(e),super(e)}call(e,t){return Wo(()=>(null!=this.cell.dropoutMask&&(Vo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Vo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};Cw.className="GRU",go.registerClass(Cw);var Tw=class extends kw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Jm(this.units,"units"),this.activation=Wx(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Wx(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=by(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=by(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=by(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Kx(e.kernelRegularizer),this.recurrentRegularizer=Kx(e.recurrentRegularizer),this.biasRegularizer=Kx(e.biasRegularizer),this.kernelConstraint=cg(e.kernelConstraint),this.recurrentConstraint=cg(e.recurrentConstraint),this.biasConstraint=cg(e.biasConstraint),this.dropout=Fg([1,Rg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Fg([1,Rg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n;if(e=Vy(e),this.kernel=this.addWeight("kernel",[e[e.length-1],4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,r=this.units;n=new((t=class extends Qg{apply(t,n){const a=e.apply([r]),s=(new ty).apply([r]),i=e.apply([2*r]);return Wg(Wg(a,s),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Wo(()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new Rm(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Aw({ones:()=>Dc(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Aw({ones:()=>Dc(r),rate:this.recurrentDropout,training:n,count:4}));const s=this.recurrentDropoutMask;let i,o,u,l;0<this.dropout&&this.dropout<1&&(e=ru(e,this.dropoutMask[0]));let c=Gg(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ru(r,s[0])),c=eu(c,Gg(r,this.recurrentKernel.read())),this.useBias&&(c=Kg(c,this.bias.read()));const[h,d,p,f]=Sh(c,4,c.rank-1);i=this.recurrentActivation.apply(h),o=this.recurrentActivation.apply(d),u=eu(ru(o,a),ru(i,this.activation.apply(p))),l=this.recurrentActivation.apply(f);const m=ru(l,this.activation.apply(u));return[m,m,u]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Px(this.activation),recurrentActivation:Px(this.recurrentActivation),useBias:this.useBias,kernelInitializer:yy(this.kernelInitializer),recurrentInitializer:yy(this.recurrentInitializer),biasInitializer:yy(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:jx(this.kernelRegularizer),recurrentRegularizer:jx(this.recurrentRegularizer),biasRegularizer:jx(this.biasRegularizer),activityRegularizer:jx(this.activityRegularizer),kernelConstraint:ug(this.kernelConstraint),recurrentConstraint:ug(this.recurrentConstraint),biasConstraint:ug(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};Tw.className="LSTMCell",go.registerClass(Tw);var _w=class extends vw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Tw(e),super(e)}call(e,t){return Wo(()=>(null!=this.cell.dropoutMask&&(Vo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Vo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};_w.className="LSTM",go.registerClass(_w);var Ew=class extends kw{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Wo(()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)})}build(e){let t;Py(e)&&(e=e[0]),e=e,this.cells.forEach((n,r)=>{Cg("RNNCell_"+r,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}));return Object.assign({},e,{cells:t})}static fromConfig(e,t,n={}){const r=[];for(const a of t.cells)r.push(fb(a,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Hy(e)}setWeights(e){const t=[];for(const n of this.cells){const r=e.splice(n.weights.length);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}jy(t)}};function Aw(e){const{ones:t,rate:n,training:r=!1,count:a=1}=e,s=()=>Xg(t(),n),i=()=>Yg(s,t,r);return!a||a<=1?Uo(i().clone()):Array(a).fill(void 0).map(i).map(e=>Uo(e.clone()))}Ew.className="StackedRNNCells",go.registerClass(Ew);var $w=class extends vw{constructor(e){if(e.unroll)throw new Dm("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Dm("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new qy({ndim:5})]}call(e,t){return Wo(()=>{if(null!=this.cell.dropoutMask&&(Vo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Vo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Rm("ConvRNN2D cell does not support constants");return super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Wo(()=>{const{stateSize:t}=this.cell,n=this.computeSingleOutputShape(e.shape),r=kc([n[0],...n.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]})}resetStates(e,t=!1){Wo(()=>{if(!this.stateful)throw new $m("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new Rm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(()=>kc(a)):[kc(a)];else if(null==e)Vo(this.states_),null!=this.keptStates&&(Vo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>kc(a)):this.states_[0]=kc(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Rm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Vo(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!ua.arraysEqual(n.shape,r))throw new Rm(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>Uo(e.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?4:3],l=nw(e[o?3:2],r[0],a,s[0],i[0]),c=nw(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,l,c]:[l,c,n]]}};$w.className="ConvRNN2D";var Fw=class extends Tw{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Jm(this.filters,"filters"),this.kernelSize=tw(n,2,"kernelSize"),this.kernelSize.forEach(e=>Jm(e,"kernelSize")),this.strides=tw(r||1,2,"strides"),this.strides.forEach(e=>Jm(e,"strides")),this.padding=a||"valid",Ig(this.padding),this.dataFormat=s||"channelsLast",kg(this.dataFormat),this.dilationRate=tw(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>Jm(e,"dilationRate"))}build(e){var t;e=Vy(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Rm("The channel dimension of the input should be defined. Found "+e[n]);const r=this.kernelSize.concat([e[n],4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Qg{apply(e,t){return Bg([n.apply([r]),Ic([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Wo(()=>{if(3!==e.length)throw new Rm(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Aw({ones:()=>Dc(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?ru(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Aw({ones:()=>Dc(a),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(a,d,0),f=o(a,d,1),m=o(a,d,2),g=o(a,d,3);const[y,b,x,w]=Sh(this.kernel.read(),4,3),[v,k,I,N]=this.useBias?Sh(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,w,N,this.padding);const[S,C,T,_]=Sh(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,S),f=this.recurrentConv(f,C),m=this.recurrentConv(m,T),g=this.recurrentConv(g,_);const E=this.recurrentActivation.apply(eu(u,p)),A=this.recurrentActivation.apply(eu(l,f)),$=eu(ru(A,s),ru(E,this.activation.apply(eu(c,m)))),F=ru(this.recurrentActivation.apply(eu(h,g)),this.activation.apply($));return[F,F,$]})}getConfig(){const e=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(super.getConfig(),["units"]);return Object.assign({},e,{filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides})}inputConv(e,t,n,r){const a=Zu(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Kg(a,n,this.dataFormat):a}recurrentConv(e,t){return Zu(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};Fw.className="ConvLSTM2DCell",go.registerClass(Fw);var Rw=class extends $w{constructor(e){const t=new Fw(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};Rw.className="ConvLSTM2D",go.registerClass(Rw);var Dw=class extends Jy{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return Wo(()=>{this.invokeCallHook(e,t);const n=Wy(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Yg(()=>Xg(n,this.rate,r,this.seed),()=>n,e)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Dw.className="Dropout",go.registerClass(Dw);var Mw=class extends Dw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}};Mw.className="SpatialDropout1D",go.registerClass(Mw);var Ow=class extends Jy{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Jm(this.units,"units"),this.activation=Wx(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=by(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=by(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=cg(e.kernelConstraint),this.biasConstraint=cg(e.biasConstraint),this.kernelRegularizer=Kx(e.kernelRegularizer),this.biasRegularizer=Kx(e.biasRegularizer),this.activityRegularizer=Kx(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Vy(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Vy(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Wo(()=>{this.invokeCallHook(e,t);const n=Wy(e),r=eg(this.activation.getClassName());let a;return null!=r?a=Gg(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Gg(n,this.kernel.read()),null!=this.bias&&(a=Kg(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){const e={units:this.units,activation:Px(this.activation),useBias:this.useBias,kernelInitializer:yy(this.kernelInitializer),biasInitializer:yy(this.biasInitializer),kernelRegularizer:jx(this.kernelRegularizer),biasRegularizer:jx(this.biasRegularizer),activityRegularizer:jx(this.activityRegularizer),kernelConstraint:ug(this.kernelConstraint),biasConstraint:ug(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Ow.className="Dense",go.registerClass(Ow);var zw=class extends Jy{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Vy(e);for(const t of e.slice(1))if(null==t)throw new Rm(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],$g(e,1)]}call(e,t){return Wo(()=>{this.invokeCallHook(e,t);let n=Wy(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new Rm(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],$g(e.shape,1)];return e.reshape(t)}(n)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}};zw.className="Flatten",go.registerClass(zw);var Lw=class extends Jy{constructor(e){super(e),this.supportsMasking=!0,this.activation=Wx(e.activation)}call(e,t){return Wo(()=>{this.invokeCallHook(e,t);const n=Wy(e);return this.activation.apply(n)})}getConfig(){const e={activation:Px(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Lw.className="Activation",go.registerClass(Lw);var Pw=class extends Jy{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Wo(()=>{return e=Wy(e),t=e,n=this.n,Wo(()=>{if(2!==t.shape.length)throw new Rm(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Vg(Og(t,1),[1,n,1])});var t,n})}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Pw.className="RepeatVector",go.registerClass(Pw);var Bw=class extends Jy{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let o=0;o<r.length;++o){const e=r[o];if(this.isUnknown(e)){if(null!==s)throw new Rm("Can only specifiy one unknown dimension.");s=o}else a*=e}const i=$g(e);if(null!==s){if(0===a||i%a!=0)throw new Rm(n);r[s]=i/a}else if(i!==a)throw new Rm(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Wo(()=>{this.invokeCallHook(e,t);const n=Wy(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(a)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Bw.className="Reshape",go.registerClass(Bw);var Ww=class extends Jy{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Dg(1,e.dims.length+1);if(!ua.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new qy({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Vy(e)).slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return Li(Wy(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Ww.className="Permute",go.registerClass(Ww);var Vw=class extends Jy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Wy(e);return lu(Rc(n,this.maskValue),-1)}call(e,t){return Wo(()=>{this.invokeCallHook(e,t);const n=Wy(e),r=lu(Rc(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))})}};Vw.className="Masking",go.registerClass(Vw);var Uw=class extends Jy{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=null==e.inputLength?[t,null]:[t].concat(Bm(e.inputLength))}this.inputDim=e.inputDim,Jm(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Jm(this.outputDim,"outputDim"),this.embeddingsInitializer=by(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Kx(e.embeddingsRegularizer),this.activityRegularizer=Kx(e.activityRegularizer),this.embeddingsConstraint=cg(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Wo(()=>this.maskZero?(e=Wy(e),Rc(e,yl(e))):null)}computeOutputShape(e){if(e=Vy(e),null==this.inputLength)return[...e,this.outputDim];const t=Bm(this.inputLength);if(t.length!==e.length-1)throw new Rm(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new Rm(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Wo(()=>{this.invokeCallHook(e,t);let n=Wy(e);return"int32"!==n.dtype&&(n=Mg(n,"int32")),Hg(this.embeddings.read(),n.as1D()).reshape(Vy(this.computeOutputShape(n.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:yy(this.embeddingsInitializer),embeddingsRegularizer:jx(this.embeddingsRegularizer),activityRegularizer:jx(this.activityRegularizer),embeddingsConstraint:ug(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Uw.className="Embedding",go.registerClass(Uw);var Gw=class extends Jy{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Dm}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new Rm("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Vy(e)]),(e=e).length<2)throw new Rm(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const a of e)null!=a&&null!==a[0]&&t.push(a[0]);if(t=Km(t),t.length>1)throw new Rm(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const t=null==e[a]?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map(e=>e.length);this.reshapeRequired=-1!==e.indexOf(null)||1!==Km(r).length}call(e,t){return Wo(()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){const r=Rg(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Og(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,r=e[0],a=e.slice(1).concat([r]);let i=s.reshape([r].concat($g(e.slice(1))));i=Li(i,[1,0]),i=i.reshape(a),t.push(i),n=!0}else if(e>1){const r=Dg(1,e).concat([0]);t.push(Li(s,r)),n=!0}else t.push(s)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Li(r.reshape([-1,t]),[1,0]).reshape(n)}else if(a>1){const e=[a-1].concat(Dg(0,a-1));r=Li(r,e)}return r}}return this.mergeFunction(e)})}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=Km(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Wo(()=>{if(null==t)return null;if(!Array.isArray(t))throw new Rm("`mask` should be an Array");if(!Array.isArray(e))throw new Rm("`inputs` should be an Array");if(t.length!==e.length)throw new Rm(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let n=(t=t.map(e=>null==e?e:Nl(e,0)))[0];for(let e=1;e<t.length-1;++e)n=pc(n,t[e]);return n})}},Hw=class extends Gw{constructor(e){super(e)}mergeFunction(e){return Wo(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=eu(t,e[n]);return t})}};Hw.className="Add",go.registerClass(Hw);var jw=class extends Gw{constructor(e){super(e)}mergeFunction(e){return Wo(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ru(t,e[n]);return t})}};jw.className="Multiply",go.registerClass(jw);var qw=class extends Gw{constructor(e){super(e)}mergeFunction(e){return Wo(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=eu(t,e[n]);return ru(1/e.length,t)})}};qw.className="Average",go.registerClass(qw);var Kw=class extends Gw{constructor(e){super(e)}mergeFunction(e){return Wo(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=wc(t,e[n]);return t})}};Kw.className="Maximum",go.registerClass(Kw);var Xw=class extends Gw{constructor(e){super(e)}mergeFunction(e){return Wo(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Cc(t,e[n]);return t})}};Xw.className="Minimum",go.registerClass(Xw);var Yw=class extends Gw{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Rm("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let r=0;r<e.length;++r){const t=e[r].slice();t.splice(this.axis,1);let a=!1;for(const e of n)if(ua.arraysEqual(e,t)){a=!0;break}a||n.push(t)}if(n.length>1)throw new Rm("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Wo(()=>Bg(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Rm("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const a of t.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Rm("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Rm("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Rm(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Wo(()=>{let n=!0;if(t.forEach(e=>{null==e||(n=!1)}),n)return null;const r=[];for(let s=0;s<e.length;++s)r.push(null==t[s]?Dc(e[s]).asType("bool"):t[s].rank<e[s].rank?Nl(t[s],-1):t[s]);const a=Ru(r,this.axis);return uu(a,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Zw(e,t){for(;e<0;)e+=t;return e}Yw.className="Concatenate",go.registerClass(Yw);var Jw=class extends Gw{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){ua.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Dm("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Rm(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Rm(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,n)=>Zw(t,e[n].shape.length)):[Zw(this.axes,n.shape.length),Zw(this.axes,r.shape.length)],this.normalize&&(n=mb(n,t[0]),r=mb(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Dm("batchDot is not implemented for tensors of 4D or higher rank yet");if(ua.assert(e.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, but got "+e.shape.length),ua.assert(e.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, but got "+t.shape.length),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Dm("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return Wo(()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(i=2===e.shape.length&&2===t.shape.length?s[0]===s[1]?e.mul(t).sum(s[0]):e.transpose([1,0]).mul(t).sum(s[1]):e.matMul(t,s[0]!==e.shape.length-1,s[1]===t.shape.length-1),n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i})}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Zw(this.axes,e.length),Zw(this.axes,t.length)],n}computeOutputShape(e){ua.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Dm("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Jw.className="Dot",go.registerClass(Jw);var Qw=class extends Jy{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Wo(()=>{this.invokeCallHook(e,t);const n=Wy(e);return Yg(()=>Ug(n.shape,0,this.stddev).add(n),()=>n,t.training||!1)})}};Qw.className="GaussianNoise",go.registerClass(Qw);var ev=class extends Jy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Wo(()=>{this.invokeCallHook(e,t);const n=Wy(e);return this.rate>0&&this.rate<1?Yg(()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(Ug(n.shape,1,e))},()=>n,t.training||!1):n})}};ev.className="GaussianDropout",go.registerClass(ev);var tv=class extends Jy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Wy(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Wo(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Yg(()=>{const t=Wy(e),r=-1.7580993408473766;let a=Fl(Zc(n),this.rate);a=Mg(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate;return t.mul(a).add(a.add(-1).mul(r)).mul(s).add(i)},()=>Wy(e),t.training||!1)}return e})}};function nv(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=Bu(e,t,n,r,a,s);else if(3===e.rank)i=Wu(e,t,n,r,a,s);else{if(4!==e.rank)throw new Dm(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Vu(e,t,n,r,a,s)}return i}tv.className="AlphaDropout",go.registerClass(tv);var rv=class extends Jy{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=by(e.betaInitializer||"zeros"),this.gammaInitializer=by(e.gammaInitializer||"ones"),this.movingMeanInitializer=by(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=by(e.movingVarianceInitializer||"ones"),this.betaConstraint=cg(e.betaConstraint),this.gammaConstraint=cg(e.gammaConstraint),this.betaRegularizer=Kx(e.betaRegularizer),this.gammaRegularizer=Kx(e.gammaRegularizer)}build(e){e=Vy(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Rm(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new qy({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Wo(()=>{const n=null!=t.training&&t.training,r=Wy(e),a=r.shape,s=a.length,i=Dg(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=Om(1,s);u[o]=a[o];const l=i.slice();l.sort();const c=!ua.arraysEqual(l,Dg(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=this.movingMean.read().reshape(u),t=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,a=this.scale?this.gamma.read().reshape(u):null;return nv(r,e,t,n,a,this.epsilon)}return nv(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r,a=.001){return ua.arraysEqual(r.slice().sort(),Dg(0,e.rank-1))?function(e,t,n,r,a=.001){return Wo(()=>{const s=Ac(e,r),i=s.mean,o=s.variance;return[nv(e,i,o,n,t,a),i,o]})}(e,t,n,r,a):function(e,t,n,r,a=.001){return Wo(()=>{const s=Ac(e,r),i=s.mean,o=s.variance,u=[];for(const t of Dg(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=i.reshape(u),c=o.reshape(u),h=null==t?null:t.reshape(u),d=null==n?null:n.reshape(u);return[nv(e,l,c,d,h,a),i,o]})}(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Wo(()=>{const r=1-n,a=e.read(),s=a.sub(t).mul(r);e.write(a.sub(s))})};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:yy(this.betaInitializer),gammaInitializer:yy(this.gammaInitializer),movingMeanInitializer:yy(this.movingMeanInitializer),movingVarianceInitializer:yy(this.movingVarianceInitializer),betaRegularizer:jx(this.betaRegularizer),gammaRegularizer:jx(this.gammaRegularizer),betaConstraint:ug(this.betaConstraint),gammaConstraint:ug(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};rv.className="BatchNormalization",go.registerClass(rv);var av=class extends Jy{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=by(e.betaInitializer||"zeros"),this.gammaInitializer=by(e.gammaInitializer||"ones"),this.betaRegularizer=Kx(e.betaRegularizer),this.gammaRegularizer=Kx(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Vy(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error("Invalid axis: "+r);if(this.axis.length!==Km(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map(t=>e[t]);this.gamma=this.scale?this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):null,this.beta=this.center?this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):null,this.built=!0}call(e,t){const n=Wy(e),r=n.shape,a=r.length;return Wo(()=>{let{mean:e,variance:t}=Ac(n,this.axis,!0);const s=Om(1,a);for(const n of this.axis)s[n]=r[n];const i=e=>null!=e&&e.shape.length!==a&&this.axis!==[a-1]?e.reshape(s):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let n=0;n<a;++n)-1!==this.axis.indexOf(n)?(l.push(r[n]),c.push(1)):(l.push(1),c.push(r[n]));return e=e.tile(l),t=t.tile(l),o=o.tile(c),u=u.tile(c),nv(n,e,t,u,o,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:yy(this.betaInitializer),gammaInitializer:yy(this.gammaInitializer),betaRegularizer:jx(this.betaRegularizer),gammaRegularizer:jx(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};av.className="LayerNormalization",go.registerClass(av);var sv=class extends Jy{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Rm(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Rm(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Rm(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new qy({ndim:4})]}computeOutputShape(e){let t,n;return e=Vy(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Wo(()=>{return t=Wy(e),n=this.padding,r=this.dataFormat,Wo(()=>{if(4!==t.rank)throw new Rm(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Rm("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Rm(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Oc(t,e)});var t,n,r})}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function iv(e,t,n,r,a,s){return Wo(()=>{let i;kg(a),Ng(s),Ig(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=aw(e,a);const o="same"===r?"same":"valid";return i="max"===s?yc(e,t,n,o):$u(e,t,n,o),"channelsFirst"===a&&(i=Li(i,[0,3,1,2])),i})}function ov(e,t,n,r,a,s){return Wo(()=>{let i;kg(a),Ng(s),Ig(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=sw(e,a);const o="same"===r?"same":"valid";return i="max"===s?bc(e,t,n,o):Fu(e,t,n,o),"channelsFirst"===a&&(i=Li(i,[0,4,1,2,3])),i})}sv.className="ZeroPadding2D",go.registerClass(sv);var uv=class extends Jy{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Rm("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.poolSize));this.poolSize=e.poolSize}if(Jm(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Rm("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.strides));this.strides=e.strides}Jm(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Ig(this.padding),this.inputSpec=[new qy({ndim:3})]}computeOutputShape(e){const t=nw((e=Vy(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Wo(()=>{this.invokeCallHook(e,t),e=Og(Wy(e),2);const n=this.poolingFunction(Wy(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Eh(n,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},lv=class extends uv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return kg(a),Ig(r),iv(e,t,n,r,a,"max")}};lv.className="MaxPooling1D",go.registerClass(lv);var cv=class extends uv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return kg(a),Ig(r),iv(e,t,n,r,a,"avg")}};cv.className="AveragePooling1D",go.registerClass(cv);var hv=class extends Jy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Rm(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Jm(this.poolSize,"poolSize"),Jm(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,kg(this.dataFormat),Ig(this.padding),this.inputSpec=[new qy({ndim:4})]}computeOutputShape(e){e=Vy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=nw(t,this.poolSize[0],this.padding,this.strides[0]),n=nw(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Wo(()=>(this.invokeCallHook(e,t),this.poolingFunction(Wy(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},dv=class extends hv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return kg(a),Ig(r),iv(e,t,n,r,a,"max")}};dv.className="MaxPooling2D",go.registerClass(dv);var pv=class extends hv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return kg(a),Ig(r),iv(e,t,n,r,a,"avg")}};pv.className="AveragePooling2D",go.registerClass(pv);var fv=class extends Jy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Rm(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Jm(this.poolSize,"poolSize"),Jm(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,kg(this.dataFormat),Ig(this.padding),this.inputSpec=[new qy({ndim:5})]}computeOutputShape(e){e=Vy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=nw(t,this.poolSize[0],this.padding,this.strides[0]),n=nw(n,this.poolSize[1],this.padding,this.strides[1]),r=nw(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Wo(()=>(this.invokeCallHook(e,t),this.poolingFunction(Wy(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},mv=class extends fv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return kg(a),Ig(r),ov(e,t,n,r,a,"max")}};mv.className="MaxPooling3D",go.registerClass(mv);var gv=class extends fv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return kg(a),Ig(r),ov(e,t,n,r,a,"avg")}};gv.className="AveragePooling3D",go.registerClass(gv);var yv=class extends Jy{constructor(e){super(e),this.inputSpec=[new qy({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Dm}},bv=class extends yv{constructor(e){super(e||{})}call(e,t){return Wo(()=>{const t=Wy(e);return vc(t,1)})}};bv.className="GlobalAveragePooling1D",go.registerClass(bv);var xv=class extends yv{constructor(e){super(e||{})}call(e,t){return Wo(()=>{const t=Wy(e);return ec(t,1)})}};xv.className="GlobalMaxPooling1D",go.registerClass(xv);var wv=class extends Jy{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,kg(this.dataFormat),this.inputSpec=[new qy({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Dm}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},vv=class extends wv{call(e,t){return Wo(()=>{const t=Wy(e);return vc(t,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}};vv.className="GlobalAveragePooling2D",go.registerClass(vv);var kv=class extends wv{call(e,t){return Wo(()=>{const t=Wy(e);return ec(t,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}};kv.className="GlobalMaxPooling2D",go.registerClass(kv);var Iv=class extends Jy{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=fb(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}},Nv=class extends Iv{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Vy(e)).length<3)throw new Rm("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(e));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Vy(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t);return[n[0],e[1]].concat(n.slice(1))}call(e,t){return Wo(()=>ww((e,n)=>[Wy(this.layer.call(e,t)),[]],e=Wy(e),[],!1,null,null,!1,!0)[1])}};Nv.className="TimeDistributed",go.registerClass(Nv);var Sv=class extends Iv{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=fb(n),t.goBackwards=!0!==t.goBackwards;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=fb(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,Ym(wg,"BidirectionalMergeMode",this.mergeMode),e.weights)throw new Dm("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,t)),this.backwardLayer.setWeights(e.slice(t))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Pm(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=xw(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Rm("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map(e=>new qy({shape:e.shape}));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Dm("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Ky;for(const u of s)if(u instanceof Ky!==o)throw new Rm("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Wo(()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=rh(a,1)),"concat"===this.mergeMode?i=Bg([r,a]):"sum"===this.mergeMode?i=eu(r,a):"ave"===this.mergeMode?i=ru(.5,eu(r,a)):"mul"===this.mergeMode?i=ru(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Cg(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Cg(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=fb(t.layer);if(delete t.layer,null!=t.numConstants)throw new Dm("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}};function Cv(e){return new nb(e)}function Tv(e){return new Jx(e)}function _v(e){return new Xx(e)}function Ev(e){return new Yx(e)}function Av(e){return new Zx(e)}function $v(e){return new ew(e)}function Fv(e){return new Qx(e)}function Rv(e){return new mw(e)}function Dv(e){return new lw(e)}function Mv(e){return new hw(e)}function Ov(e){return new cw(e)}function zv(e){return new dw(e)}function Lv(e){return new fw(e)}function Pv(e){return new gw(e)}function Bv(e){return new yw(e)}function Wv(e){return new bw(e)}function Vv(e){return new Lw(e)}function Uv(e){return new Ow(e)}function Gv(e){return new Dw(e)}function Hv(e){return new Mw(e)}function jv(e){return new zw(e)}function qv(e){return new Pw(e)}function Kv(e){return new Bw(e)}function Xv(e){return new Ww(e)}function Yv(e){return new Uw(e)}function Zv(e){return new Hw(e)}function Jv(e){return new qw(e)}function Qv(e){return new Yw(e)}function ek(e){return new Kw(e)}function tk(e){return new Xw(e)}function nk(e){return new jw(e)}function rk(e){return new Jw(e)}function ak(e){return new rv(e)}function sk(e){return new av(e)}function ik(e){return new sv(e)}function ok(e){return new cv(e)}function uk(e){return ok(e)}function lk(e){return ok(e)}function ck(e){return new pv(e)}function hk(e){return ck(e)}function dk(e){return ck(e)}function pk(e){return new gv(e)}function fk(e){return pk(e)}function mk(e){return pk(e)}function gk(e){return new bv(e)}function yk(e){return new vv(e)}function bk(e){return new xv(e)}function xk(e){return new kv(e)}function wk(e){return new lv(e)}function vk(e){return new dv(e)}function kk(e){return new mv(e)}function Ik(e){return new Cw(e)}function Nk(e){return new Sw(e)}function Sk(e){return new _w(e)}function Ck(e){return new Tw(e)}function Tk(e){return new Nw(e)}function _k(e){return new Iw(e)}function Ek(e){return new Rw(e)}function Ak(e){return new Fw(e)}function $k(e){return new vw(e)}function Fk(e){return new Ew(e)}function Rk(e){return new Sv(e)}function Dk(e){return new Nv(e)}Sv.className="Bidirectional",go.registerClass(Sv);var Mk=bk,Ok=xk,zk=wk,Lk=vk;function Pk(e){return new Qw(e)}function Bk(e){return new ev(e)}function Wk(e){return new tv(e)}function Vk(e){return new Vw(e)}var Uk={};function Gk(e,t){return Sb(e,t)}function Hk(e,t){return Eb(e,t)}function jk(e,t){return Ab(e,t)}function qk(e,t){return Cb(e,t)}function Kk(e,t){return $b(e,t)}function Xk(e,t){return _b(e,t)}function Yk(e,t){return function(e,t){return Wo(()=>{const n=Tb(e,t),r=function(e,t){return Wo(()=>pc(e.equal(1),t.equal(0)).sum().cast("float32"))}(e,t),a=n.add(r);return gl($l(a,0),n.div(a),0).cast("float32")})}(e,t)}function Zk(e,t){return kb(e,t)}function Jk(e,t){return yb(e,t)}function Qk(e,t){return bb(e,t)}function eI(e,t){return bb(e,t)}function tI(e,t){return bb(e,t)}function nI(e,t){return gb(e,t)}function rI(e,t){return gb(e,t)}function aI(e,t){return gb(e,t)}g(Uk,{MAPE:()=>eI,MSE:()=>rI,binaryAccuracy:()=>Gk,binaryCrossentropy:()=>Hk,categoricalAccuracy:()=>qk,categoricalCrossentropy:()=>Kk,cosineProximity:()=>Zk,mape:()=>tI,meanAbsoluteError:()=>Jk,meanAbsolutePercentageError:()=>Qk,meanSquaredError:()=>nI,mse:()=>aI,precision:()=>Xk,recall:()=>Yk,sparseCategoricalAccuracy:()=>jk});var sI={};g(sI,{modelFromJSON:()=>yx});var iI={};function oI(e){return new Gx(e)}function uI(e){return Vx(t=e),new Gx({l1:null!=t?t.l1:null,l2:0});var t}function lI(e){return Vx(t=e),new Gx({l2:null!=t?t.l2:null,l1:0});var t}g(iI,{l1:()=>uI,l1l2:()=>oI,l2:()=>lI});var cI=class extends ib{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof mx))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function hI(e,t){return e<t}function dI(e,t){return e>t}var pI,fI,mI,gI=class extends cI{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new Dm("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.monitorFunc="min"===this.mode?hI:"max"===this.mode||-1!==this.monitor.indexOf("acc")?dI:hI,this.monitorFunc===hI&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.best=null!=this.baseline?this.baseline:this.monitorFunc===hI?1/0:-1/0}async onEpochEnd(e,t){await ab(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}},yI={earlyStopping:function(e){return new gI(e)}};(fI=pI||(pI={}))[fI.DT_INVALID=0]="DT_INVALID",fI[fI.DT_FLOAT=1]="DT_FLOAT",fI[fI.DT_DOUBLE=2]="DT_DOUBLE",fI[fI.DT_INT32=3]="DT_INT32",fI[fI.DT_UINT8=4]="DT_UINT8",fI[fI.DT_INT16=5]="DT_INT16",fI[fI.DT_INT8=6]="DT_INT8",fI[fI.DT_STRING=7]="DT_STRING",fI[fI.DT_COMPLEX64=8]="DT_COMPLEX64",fI[fI.DT_INT64=9]="DT_INT64",fI[fI.DT_BOOL=10]="DT_BOOL",fI[fI.DT_QINT8=11]="DT_QINT8",fI[fI.DT_QUINT8=12]="DT_QUINT8",fI[fI.DT_QINT32=13]="DT_QINT32",fI[fI.DT_BFLOAT16=14]="DT_BFLOAT16",fI[fI.DT_FLOAT_REF=101]="DT_FLOAT_REF",fI[fI.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",fI[fI.DT_INT32_REF=103]="DT_INT32_REF",fI[fI.DT_UINT8_REF=104]="DT_UINT8_REF",fI[fI.DT_INT16_REF=105]="DT_INT16_REF",fI[fI.DT_INT8_REF=106]="DT_INT8_REF",fI[fI.DT_STRING_REF=107]="DT_STRING_REF",fI[fI.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",fI[fI.DT_INT64_REF=109]="DT_INT64_REF",fI[fI.DT_BOOL_REF=110]="DT_BOOL_REF",fI[fI.DT_QINT8_REF=111]="DT_QINT8_REF",fI[fI.DT_QUINT8_REF=112]="DT_QUINT8_REF",fI[fI.DT_QINT32_REF=113]="DT_QINT32_REF",fI[fI.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(mI||(mI={}));var bI={};function xI(e,t){bI[e]={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t}}function wI(e){return bI[e]}function vI(e){delete bI[e]}function kI(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return II(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map(e=>II(e,n,r,a));const o=II(t.inputNames.slice(e)[0],n,r,a),u=o.dataSync();return"number"===s.type?u[0]:ua.toNestedArray(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function II(e,t,n,r){const[a,s]=CI(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find(e=>!!t[SI(a,e)]);return void 0!==i?t[SI(a,i)][s]:void 0}function NI(e,t){const[n,r,a]=CI(e);return[SI(n,t&&t.currentContextId),r,a]}function SI(e,t){return t?`${e}-${t}`:e}function CI(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=3===t.length?t[1]:void 0;return[t[0],Number(t[t.length-1]),n]}function TI(e,t,n){let r=kI("pad",e,t,n);if("explicit"===r){r=kI("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function _I(e){return e.kept?e:gi(e)}var EI={};g(EI,{json:()=>AI});var AI=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],$I={};g($I,{json:()=>FI});var FI=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],RI={};g(RI,{json:()=>DI});var DI=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],MI={};g(MI,{json:()=>OI});var OI=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],zI={};g(zI,{json:()=>LI});var LI=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],PI={};g(PI,{json:()=>BI});var BI=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],WI={};g(WI,{json:()=>VI});var VI=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],UI={};g(UI,{json:()=>GI});var GI=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],HI={};g(HI,{json:()=>jI});var jI=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],qI={};g(qI,{json:()=>KI});var KI=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],XI={};g(XI,{json:()=>YI});var YI=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ZI={};g(ZI,{json:()=>JI});var JI=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],QI={};g(QI,{json:()=>eN});var eN=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],tN={};g(tN,{json:()=>nN});var nN=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],rN={};g(rN,{json:()=>aN});var aN=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],sN={};g(sN,{json:()=>iN});var iN=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],oN={};g(oN,{json:()=>uN});var uN=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],lN={};g(lN,{json:()=>cN});var cN=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],hN={};g(hN,{json:()=>dN});var dN=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}],pN=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[EI,$I,RI,MI,zI,PI,WI,UI,HI,qI,XI,ZI,QI,tN,rN,sN,oN,lN,hN].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){const n=[],r=[],a=[],s=e.node.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?n.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e),{});let i=[];const o=[];let u={},l={};null!=t&&(u=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));const c=Object.keys(s);c.forEach(e=>{const t=s[e];t.inputNames.forEach((e,n)=>{const[r,,a]=NI(e),i=s[r];if(null!=i.outputs){const e=i.outputs.indexOf(a);-1!==e&&(t.inputNames[n]=`${r}:${e}`)}t.inputs.push(i),i.children.push(t)})}),0===Object.keys(l).length?c.forEach(e=>{const t=s[e];0===t.children.length&&o.push(t)}):Object.keys(l).forEach(e=>{const[t]=NI(e),n=s[t];null!=n&&(n.signatureKey=l[e],o.push(n))}),Object.keys(u).length>0?Object.keys(u).forEach(e=>{const[t]=NI(e),n=s[t];n&&(n.signatureKey=u[e],i.push(n))}):i=n;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));const d={nodes:s,inputs:i,outputs:o,weights:r,placeholders:n,signature:t,functions:h};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=wI(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.substr(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=mN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=mN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=SN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=SN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=yN(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=yN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=NN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=NN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=gN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=gN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=TN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=TN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=IN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=IN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=CN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=CN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=wN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=wN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=vN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=vN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=xN(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=xN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t},{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));const a=[],s=[];e.signature.inputArg.forEach(e=>{const[t]=NI(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:bN(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n}),Object.keys(r).forEach(e=>{const t=r[e];t.inputNames.forEach((e,n)=>{const[a,,s]=NI(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);-1!==e&&(t.inputNames[n]=`${a}:${e}`)}t.inputs.push(i),i.children.push(t)})});const i=e.ret;e.signature.outputArg.forEach(e=>{const[t,n]=NI(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))});const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function fN(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=We().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function mN(e,t,n,r=!1){const a=e[t];return null!=a?fN(a.s,r):n}function gN(e,t,n){const r=e[t];return r?r.b:n}function yN(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function bN(e){switch("string"==typeof e&&(e=pI[e]),e){case pI.DT_FLOAT:return"float32";case pI.DT_INT32:case pI.DT_INT64:case pI.DT_INT8:case pI.DT_UINT8:return"int32";case pI.DT_BOOL:return"bool";case pI.DT_DOUBLE:return"float32";case pI.DT_STRING:return"string";default:return null}}function xN(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function wN(e,t,n){const r=e[t];return r&&r.type?bN(r.type):n}function vN(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>bN(e)):n}function kN(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function IN(e,t,n){const r=e[t];return r&&r.shape?kN(r.shape):n}function NN(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function SN(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>fN(e,r)):n}function CN(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>kN(e)):n}function TN(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}function _N(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){ua.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){const a=e[r],s=t[r];ua.assert(a<0||s<0||a===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function EN(e){return"number"!=typeof e&&!e.some(e=>e<0)}function AN(e,t,n){let r=$N(e,n);const a=!EN(r);if(a&&0===t.length)throw new Error("Tried to calculate elements of an empty list with non-fully-defined elementShape: "+r);if(a&&t.forEach(e=>{r=$N(e.shape,r)}),!EN(r))throw new Error("Non-fully-defined elementShape: "+r);return r}function $N(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var FN=class{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);_N(t,e.shape,"TensorList shape mismatch: "),Uo(e)}),this.idTensor=ch(0),this.maxNumElements=r,Uo(this.idTensor)}get id(){return this.idTensor.id}copy(){return new FN([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);_N(e,this.elementShape,"TensorList shape mismatch: ");const r=AN(this.elementShape,this.tensors,e);return Wo(()=>{const e=this.tensors.map(e=>Au(e,r));return Ah(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=AN(this.elementShape,this.tensors,e),r=this.tensors.pop();return _N(r.shape,e,"TensorList shape mismatch: "),Au(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(_N(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Uo(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+e);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);_N(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=AN(this.elementShape,this.tensors,t);return Au(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);_N(this.elementShape,t.shape,"TensorList shape mismatch: "),Uo(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);_N(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=AN(this.elementShape,this.tensors,n);return 0===e.length?Ss([],[0].concat(r)):Wo(()=>{const t=e.map(e=>Au(this.tensors[e],r));return Ah(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);_N(this.elementShape,t,"TensorList shape mismatch: ");const n=AN(this.elementShape,this.tensors,t);return 0===this.size()?Ss([],[0].concat(n)):Wo(()=>{const e=this.tensors.map(e=>Au(e,n));return Ru(e,0)})}},RN=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=kI("thenBranch",e,t,n),a=kI("elseBranch",e,t,n),s=kI("cond",e,t,n),i=kI("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=kI("body",e,t,n),a=kI("cond",e,t,n),s=kI("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(e=>e.id);let u=await i[0].data();i.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()});let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map(e=>e.id);e.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return l}case"LoopCond":return[_I(kI("pred",e,t,n))];case"Switch":{const r=kI("pred",e,t,n);let a=kI("data",e,t,n);return a.kept||(a=_I(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find(e=>void 0!==II(e,t,n));return r?[_I(II(r,t,n))]:void 0}case"Enter":{const r=kI("frameName",e,t,n),a=kI("tensor",e,t,n);return n.enterFrame(r),[_I(a)]}case"Exit":{const r=kI("tensor",e,t,n);return n.exitFrame(),[_I(r)]}case"NextIteration":{const r=kI("tensor",e,t,n);return n.nextIteration(),[_I(r)]}case"TensorArrayV3":{const r=kI("size",e,t,n),a=kI("dtype",e,t,n),s=kI("elementShape",e,t,n),i=kI("dynamicSize",e,t,n),o=kI("clearAfterRead",e,t,n),u=kI("identicalElementShapes",e,t,n),l=kI("name",e,t,n),c=new class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=ch(0),Uo(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),_N(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Uo(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Ss([],[0].concat(this.elementShape));const n=this.readMany(e);return _N(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Ah(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Ss([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return _N(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Ru(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Uh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];Wo(()=>{t=Au(t,[1,n,a]);for(let n=0;n<e.length;++n)s[n]=Au(Mu(t,[0,0===n?0:r[n-1],0],[1,e[n],a]),this.elementShape);return s});const i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}}(l,a,r,s,u,i,o);return n.addTensorArray(c),[c.idTensor,ch(1)]}case"TensorArrayWriteV3":{const r=kI("tensorArrayId",e,t,n),a=kI("index",e,t,n),s=kI("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=kI("tensorArrayId",e,t,n),a=kI("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=kI("tensorArrayId",e,t,n),a=kI("indices",e,t,n),s=kI("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=kI("tensorArrayId",e,t,n),a=kI("indices",e,t,n),s=kI("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=kI("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=kI("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=kI("tensorArrayId",e,t,n),a=kI("tensor",e,t,n),s=kI("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=kI("tensorArrayId",e,t,n);return[ch(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=kI("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=kI("tensorListId",e,t,n),a=kI("index",e,t,n),s=kI("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=kI("tensorListId",e,t,n),a=kI("index",e,t,n),s=kI("elementShape",e,t,n),i=kI("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=kI("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new FN([],n,e.dtype,r),i=Uh(e,0);return t.forEach((e,t)=>{s.setItem(e,i[t])}),s}(kI("tensor",e,t,n),r,kI("elementShape",e,t,n),kI("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=kI("elementShape",e,t,n),a=kI("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new FN([],e,t,n)}(r,a,kI(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=kI("tensorListId",e,t,n),a=kI("indices",e,t,n),s=kI("elementShape",e,t,n),i=kI("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=kI("tensorListId",e,t,n),a=kI("elementShape",e,t,n),s=kI("elementDType",e,t,n),i=kI("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+e.shape);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);_N(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=Uh(e);return new FN(a,t,r)}(kI("tensor",e,t,n),kI("elementShape",e,t,n),kI("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=kI("tensorListId",e,t,n),a=n.getTensorList(r.id),s=kI("dtype",e,t,n),i=kI("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=kI("tensorListId",e,t,n),a=kI("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=kI("tensorListId",e,t,n),a=kI("elementShape",e,t,n),s=kI("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=kI("tensor",e,t,n),a=kI("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map(e=>(r+=e,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=$N(e.shape.slice(1),n),i=0===r?0:e.size/r,o=Wo(()=>{const n=[];e=Au(e,[1,r,i]);for(let r=0;r<t.length;++r)n[r]=Au(Mu(e,[0,0===r?0:a[r-1],0],[1,t[r],i]),s);return e.dispose(),n}),u=new FN([],n,e.dtype,t.length);for(let l=0;l<o.length;l++)u.setItem(l,o[l]);return u}(r,kI("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function DN(e,t,n){const[r,a]=kI("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,u="fusedbatchnorm"===r,l=kI("numArgs",e,t,n);if(s){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=kI("strides",e,t,n),h=TI(e,t,n),d=kI("dataFormat",e,t,n).toUpperCase(),p=kI("dilations",e,t,n);let[f,m]=kI("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:kI("leakyreluAlpha",e,t,n)}}function MN(e,t,n){return{boxes:kI("boxes",e,t,n),scores:kI("scores",e,t,n),maxOutputSize:kI("maxOutputSize",e,t,n),iouThreshold:kI("iouThreshold",e,t,n),scoreThreshold:kI("scoreThreshold",e,t,n),softNmsSigma:kI("softNmsSigma",e,t,n)}}var ON=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=kI("keyDType",e,t,n),s=kI("valueDType",e,t,n),i=new class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ch(0),this.tensorMap=new Map,Uo(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ch(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),Wo(()=>{const e=Uh(t),r=n.length,a=e.length;ua.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let t=0;t<r;t++){const r=n[t],a=e[t];Uo(a),this.tensorMap.set(r,a)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Wo(()=>{const e=[];for(let r=0;r<n.length;r++){const a=this.findWithDefault(n[r],t);e.push(a)}return Ah(e)})}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=kI("tableHandle",e,t,n,r),s=kI("keys",e,t,n),i=kI("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=kI("tableHandle",e,t,n,r),s=kI("keys",e,t,n),i=kI("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=kI("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function zN(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return Wo(()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[eu(kI("a",e,t,n),kI("b",e,t,n))];case"AddN":return[ou(kI("tensors",e,t,n))];case"FloorMod":case"Mod":return[_c(kI("a",e,t,n),kI("b",e,t,n))];case"Mul":return[ru(kI("a",e,t,n),kI("b",e,t,n))];case"RealDiv":case"Div":return[nu(kI("a",e,t,n),kI("b",e,t,n))];case"DivNoNan":return[bl(kI("a",e,t,n),kI("b",e,t,n))];case"FloorDiv":return[tu(kI("a",e,t,n),kI("b",e,t,n))];case"Sub":return[tc(kI("a",e,t,n),kI("b",e,t,n))];case"Minimum":return[Cc(kI("a",e,t,n),kI("b",e,t,n))];case"Maximum":return[wc(kI("a",e,t,n),kI("b",e,t,n))];case"Pow":return[Uc(kI("a",e,t,n),kI("b",e,t,n))];case"SquaredDifference":return[_h(kI("a",e,t,n),kI("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"basic_math":return Wo(()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[au(kI("x",e,t,n))];case"Acos":return[su(kI("x",e,t,n))];case"Acosh":return[iu(kI("x",e,t,n))];case"Asin":return[du(kI("x",e,t,n))];case"Asinh":return[pu(kI("x",e,t,n))];case"Atan":return[fu(kI("x",e,t,n))];case"Atan2":return[mu(kI("x",e,t,n),kI("y",e,t,n))];case"Atanh":return[gu(kI("x",e,t,n))];case"Ceil":return[Hu(kI("x",e,t,n))];case"Complex":return[Is(kI("real",e,t,n),kI("imag",e,t,n))];case"Cos":return[al(kI("x",e,t,n))];case"Cosh":return[sl(kI("x",e,t,n))];case"Elu":return[vl(kI("x",e,t,n))];case"Erf":return[kl(kI("x",e,t,n))];case"Exp":return[Il(kI("x",e,t,n))];case"Expm1":return[Sl(kI("x",e,t,n))];case"Floor":return[El(kI("x",e,t,n))];case"Log":return[Vl(kI("x",e,t,n))];case"Log1p":return[Ul(kI("x",e,t,n))];case"Imag":return[Rl(kI("x",e,t,n))];case"Neg":return[Zl(kI("x",e,t,n))];case"Reciprocal":return[eh(kI("x",e,t,n))];case"Real":return[Qc(kI("x",e,t,n))];case"Relu":return[th(kI("x",e,t,n))];case"Round":return[uh(kI("x",e,t,n))];case"Selu":return[hh(kI("x",e,t,n))];case"Sigmoid":return[Du(kI("x",e,t,n))];case"Sin":return[mh(kI("x",e,t,n))];case"Sign":return[fh(kI("x",e,t,n))];case"Sinh":return[gh(kI("x",e,t,n))];case"Softplus":return[Jl(kI("x",e,t,n))];case"Sqrt":return[Th(kI("x",e,t,n))];case"Square":return[Ec(kI("x",e,t,n))];case"Tanh":return[Ou(kI("x",e,t,n))];case"Tan":return[Rh(kI("x",e,t,n))];case"ClipByValue":return[ju(kI("x",e,t,n),kI("clipValueMin",e,t,n),kI("clipValueMax",e,t,n))];case"Relu6":return[nh(kI("x",e,t,n))];case"Rsqrt":return[lh(II(e.inputNames[0],t,n))];case"Prod":return[Hc(kI("x",e,t,n),kI("axes",e,t,n))];case"LeakyRelu":return[zl(kI("x",e,t,n),kI("alpha",e,t,n))];case"Prelu":return[Gc(kI("x",e,t,n),kI("alpha",e,t,n))];case"IsNan":return[Ol(II(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"control":return RN(e,t,n);case"convolution":return Wo(()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=kI("stride",e,t,n),a=kI("pad",e,t,n),s=kI("dataFormat",e,t,n).toUpperCase(),i=kI("dilation",e,t,n);return[Ju(kI("x",e,t,n),kI("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=kI("strides",e,t,n),a=TI(e,t,n),s=kI("dataFormat",e,t,n).toUpperCase(),i=kI("dilations",e,t,n);return[Zu(kI("x",e,t,n),kI("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=DN(e,t,n);return[ad.conv2d({x:kI("x",e,t,n),filter:kI("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=DN(e,t,n);return[ad.depthwiseConv2d({x:kI("x",e,t,n),filter:kI("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=kI("outputShape",e,t,n),a=kI("strides",e,t,n),s=TI(e,t,n);return[el(kI("x",e,t,n),kI("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=kI("strides",e,t,n),a=TI(e,t,n),s=kI("dilations",e,t,n),i=kI("dataFormat",e,t,n).toUpperCase();return[ll(kI("input",e,t,n),kI("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=kI("strides",e,t,n),a=kI("pad",e,t,n),s=kI("dataFormat",e,t,n).toUpperCase(),i=kI("dilations",e,t,n);return[tl(kI("x",e,t,n),kI("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=kI("strides",e,t,n),a=kI("pad",e,t,n),s=kI("kernelSize",e,t,n);return[$u(kI("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=kI("strides",e,t,n),a=kI("pad",e,t,n),s=kI("kernelSize",e,t,n);return[yc(kI("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=kI("strides",e,t,n),a=kI("pad",e,t,n),s=kI("kernelSize",e,t,n),i=kI("includeBatchInIndex",e,t,n),{result:o,indexes:u}=xc(kI("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=kI("strides",e,t,n),a=kI("pad",e,t,n),s=kI("kernelSize",e,t,n);return[Fu(kI("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=kI("strides",e,t,n),a=kI("pad",e,t,n),s=kI("kernelSize",e,t,n);return[bc(kI("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=kI("strides",e,t,n),a=kI("pad",e,t,n),s=kI("dilations",e,t,n),i=r[1],o=r[2],u=s[1],l=s[2];return[hl(kI("x",e,t,n),kI("filter",e,t,n),[i,o],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"creation":return Wo(()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=kI("shape",e,t,n),a=kI("dtype",e,t,n);return[_l(r,kI("value",e,t,n),a)]}case"LinSpace":return[Bl(kI("start",e,t,n),kI("stop",e,t,n),kI("num",e,t,n))];case"Multinomial":{const r=kI("logits",e,t,n),a=kI("numSamples",e,t,n),s=kI("seed",e,t,n);return[Fc(r,a,s)]}case"OneHot":{const r=kI("indices",e,t,n),a=kI("depth",e,t,n),s=kI("onValue",e,t,n),i=kI("offValue",e,t,n);return[zi(r,a,s,i)]}case"Ones":return[Ic(kI("shape",e,t,n),kI("dtype",e,t,n))];case"OnesLike":return[Dc(kI("x",e,t,n))];case"RandomUniform":return[Zc(kI("shape",e,t,n),kI("minval",e,t,n),kI("maxval",e,t,n),kI("dtype",e,t,n))];case"Range":return[Jc(kI("start",e,t,n),kI("stop",e,t,n),kI("step",e,t,n),kI("dtype",e,t,n))];case"TruncatedNormal":{const r=kI("shape",e,t,n),a=kI("mean",e,t,n),s=kI("stdDev",e,t,n),i=kI("seed",e,t,n);return[Bh(r,a,s,kI("dtype",e,t,n),i)]}case"Zeros":return[kc(kI("shape",e,t,n),kI("dtype",e,t,n))];case"ZerosLike":return[yl(kI("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=MN(e,t,n),l=await lp.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=MN(e,t,n),u=kI("padToMaxOutputSize",e,t,n),l=await lp.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=MN(e,t,n);return[await lp.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=mi(kI("condition",e,t,n),"bool"),a=[await jh(r)];return r.dispose(),a}case"ListDiff":return ph(kI("x",e,t,n),kI("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return Wo(()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=kI("x",e,t,n),a=kI("k",e,t,n),s=kI("sorted",e,t,n),i=Ph(r,a,s);return[i.values,i.indices]}case"Unique":{const r=kI("x",e,t,n),a=Wh(r);return[a.values,a.indices]}case"UniqueV2":{const r=kI("x",e,t,n),a=kI("axis",e,t,n),s=Wh(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"image":return Wo(()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=kI("images",e,t,n),a=kI("size",e,t,n),s=kI("alignCorners",e,t,n),i=kI("halfPixelCenters",e,t,n);return[lp.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=kI("images",e,t,n),a=kI("size",e,t,n),s=kI("alignCorners",e,t,n),i=kI("halfPixelCenters",e,t,n);return[lp.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=kI("image",e,t,n),a=kI("boxes",e,t,n),s=kI("boxInd",e,t,n),i=kI("cropSize",e,t,n),o=kI("method",e,t,n),u=kI("extrapolationValue",e,t,n);return[lp.cropAndResize(r,a,s,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"graph":return Wo(()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=kI("default",e,t,n);return[II(e.name,t,n)||r];case"Placeholder":return[II(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[_I(kI("x",e,t,n))];case"IdentityN":return kI("x",e,t,n).map(e=>_I(e));case"Snapshot":return[_I(kI("x",e,t,n))];case"Shape":return[Dh(kI("x",e,t,n).shape,"int32")];case"ShapeN":return kI("x",e,t,n).map(e=>Dh(e.shape));case"Size":return[ch(kI("x",e,t,n).size,"int32")];case"Rank":return[ch(kI("x",e,t,n).rank,"int32")];case"NoOp":return[ch(1)];case"Print":const a=kI("x",e,t,n),s=kI("data",e,t,n),i=kI("message",e,t,n),o=kI("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"logical":return Wo(()=>((e,t,n)=>{switch(e.op){case"Equal":return[ml(kI("a",e,t,n),kI("b",e,t,n))];case"NotEqual":return[Rc(kI("a",e,t,n),kI("b",e,t,n))];case"Greater":return[$l(kI("a",e,t,n),kI("b",e,t,n))];case"GreaterEqual":return[Fl(kI("a",e,t,n),kI("b",e,t,n))];case"Less":return[Ll(kI("a",e,t,n),kI("b",e,t,n))];case"LessEqual":return[Pl(kI("a",e,t,n),kI("b",e,t,n))];case"LogicalAnd":return[pc(kI("a",e,t,n),kI("b",e,t,n))];case"LogicalNot":return[fc(kI("a",e,t,n))];case"LogicalOr":return[mc(kI("a",e,t,n),kI("b",e,t,n))];case"Select":case"SelectV2":return[gl(kI("condition",e,t,n),kI("a",e,t,n),kI("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"matrices":return Wo(()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Oi(kI("a",e,t,n),kI("b",e,t,n),kI("transposeA",e,t,n),kI("transposeB",e,t,n))];case"Einsum":return[wl(kI("equation",e,t,n),...kI("tensors",e,t,n))];case"Transpose":return[Li(kI("x",e,t,n),kI("perm",e,t,n))];case"_FusedMatMul":const[r,a]=kI("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=kI("numArgs",e,t,n),u=kI("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=kI("args",e,t,n);return[ad.matMul({a:kI("a",e,t,n),b:kI("b",e,t,n),transposeA:kI("transposeA",e,t,n),transposeB:kI("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"normalization":return Wo(()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Pu(kI("x",e,t,n),kI("mean",e,t,n),kI("variance",e,t,n),kI("offset",e,t,n),kI("scale",e,t,n),kI("epsilon",e,t,n))];case"LRN":return[Wl(kI("x",e,t,n),kI("radius",e,t,n),kI("bias",e,t,n),kI("alpha",e,t,n),kI("beta",e,t,n))];case"Softmax":return[vh(kI("x",e,t,n))];case"LogSoftmax":return[rc(kI("x",e,t,n))];case"SparseToDense":return[Jh(kI("sparseIndices",e,t,n),kI("outputShape",e,t,n),kI("sparseValues",e,t,n),kI("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"reduction":return Wo(()=>((e,t,n)=>{switch(e.op){case"Max":{const r=kI("axis",e,t,n),a=kI("keepDims",e,t,n);return[ec(kI("x",e,t,n),r,a)]}case"Mean":{const r=kI("axis",e,t,n),a=kI("keepDims",e,t,n);return[vc(kI("x",e,t,n),r,a)]}case"Min":{const r=kI("axis",e,t,n),a=kI("keepDims",e,t,n);return[Sc(kI("x",e,t,n),r,a)]}case"Sum":{const r=kI("axis",e,t,n),a=kI("keepDims",e,t,n);return[nc(kI("x",e,t,n),r,a)]}case"All":{const r=kI("axis",e,t,n),a=kI("keepDims",e,t,n);return[uu(kI("x",e,t,n),r,a)]}case"Any":{const r=kI("axis",e,t,n),a=kI("keepDims",e,t,n);return[lu(kI("x",e,t,n),r,a)]}case"ArgMax":{const r=kI("axis",e,t,n);return[cu(kI("x",e,t,n),r)]}case"ArgMin":{const r=kI("axis",e,t,n);return[hu(kI("x",e,t,n),r)]}case"Prod":{const r=kI("axis",e,t,n),a=kI("keepDims",e,t,n);return[Hc(kI("x",e,t,n),r,a)]}case"Cumsum":{const r=kI("axis",e,t,n),a=kI("exclusive",e,t,n),s=kI("reverse",e,t,n);return[il(kI("x",e,t,n),r,a,s)]}case"Bincount":const r=kI("x",e,t,n),a=kI("weights",e,t,n),s=kI("size",e,t,n);return[Uu(r,a,s)];case"DenseBincount":{const r=kI("x",e,t,n),a=kI("weights",e,t,n),s=kI("size",e,t,n),i=kI("binaryOutput",e,t,n);return[ol(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"slice_join":return Wo(()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=kI("n",e,t,n),a=kI("axis",e,t,n);let s=kI("tensors",e,t,n);return s=s.slice(0,r),[Ru(s,a)]}case"Gather":{const r=kI("x",e,t,n),a=kI("indices",e,t,n);return[Al(r,mi(a,"int32"),0)]}case"GatherV2":{const r=kI("axis",e,t,n),a=kI("batchDims",e,t,n),s=kI("x",e,t,n),i=kI("indices",e,t,n);return[Al(s,mi(i,"int32"),r,a)]}case"Reverse":{const r=kI("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=kI("x",e,t,n);return[rh(s,a)]}case"ReverseV2":{const r=kI("axis",e,t,n),a=kI("x",e,t,n);return[rh(a,r)]}case"Slice":{const r=kI("begin",e,t,n),a=kI("size",e,t,n);return[Mu(kI("x",e,t,n),r,a)]}case"StridedSlice":{const r=kI("begin",e,t,n),a=kI("end",e,t,n),s=kI("strides",e,t,n),i=kI("beginMask",e,t,n),o=kI("endMask",e,t,n),u=kI("ellipsisMask",e,t,n),l=kI("newAxisMask",e,t,n),c=kI("shrinkAxisMask",e,t,n),h=kI("x",e,t,n);return[Fh(h,r,a,s,i,o,u,l,c)]}case"Pack":return Wo(()=>{const r=kI("axis",e,t,n),a=kI("tensors",e,t,n),s=a[0].shape,i=Eh(a[0]).shape,o=a.map(e=>{const t=ua.arraysEqual(e.shape,s);if(!t&&!ua.arraysEqual(Eh(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Au(e,s)});return[Ah(o,r)]});case"Unpack":{const r=kI("axis",e,t,n),a=kI("tensor",e,t,n);return Uh(a,r)}case"Tile":{const r=kI("reps",e,t,n);return[Cl(kI("x",e,t,n),r)]}case"Split":case"SplitV":{const r=kI("axis",e,t,n),a=kI("numOrSizeSplits",e,t,n),s=kI("x",e,t,n);return Sh(s,a,r)}case"ScatterNd":{const r=kI("indices",e,t,n),a=kI("values",e,t,n),s=kI("shape",e,t,n);return[Zh(r,a,s)]}case"GatherNd":{const r=kI("x",e,t,n),a=kI("indices",e,t,n);return[Qh(r,a)]}case"SparseToDense":{const r=kI("sparseIndices",e,t,n),a=kI("outputShape",e,t,n),s=kI("sparseValues",e,t,n),i=kI("defaultValue",e,t,n);return[Jh(r,s,a,s.dtype===i.dtype?i:mi(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"sparse":return Wo(()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=dp.sparseFillEmptyRows(kI("indices",e,t,n),kI("values",e,t,n),kI("denseShape",e,t,n),kI("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=dp.sparseReshape(kI("inputIndices",e,t,n),kI("inputShape",e,t,n),kI("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[dp.sparseSegmentMean(kI("data",e,t,n),kI("indices",e,t,n),kI("segmentIds",e,t,n))];case"SparseSegmentSum":return[dp.sparseSegmentSum(kI("data",e,t,n),kI("indices",e,t,n),kI("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"spectral":return Wo(()=>((e,t,n)=>{switch(e.op){case"FFT":return[kh(kI("x",e,t,n))];case"IFFT":return[Ih(kI("x",e,t,n))];case"RFFT":return[Ch(kI("x",e,t,n))];case"IRFFT":return[Nh(kI("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"string":return Wo(()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=pp.stringNGrams(kI("data",e,t,n),kI("dataSplits",e,t,n),kI("separator",e,t,n),kI("nGramWidths",e,t,n),kI("leftPad",e,t,n),kI("rightPad",e,t,n),kI("padWidth",e,t,n),kI("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=pp.stringSplit(kI("input",e,t,n),kI("delimiter",e,t,n),kI("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[pp.stringToHashBucketFast(kI("input",e,t,n),kI("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"transformation":return Wo(()=>((e,t,n)=>{switch(e.op){case"Cast":return[mi(kI("x",e,t,n),kI("dtype",e,t,n))];case"ExpandDims":{const r=kI("axis",e,t,n);return[Nl(kI("x",e,t,n),r)]}case"Squeeze":{const r=kI("axis",e,t,n);return[Eh(kI("x",e,t,n),r)]}case"Reshape":return[Au(kI("x",e,t,n),kI("shape",e,t,n))];case"MirrorPad":return[Tc(kI("x",e,t,n),kI("padding",e,t,n),kI("mode",e,t,n))];case"PadV2":case"Pad":return[Oc(kI("x",e,t,n),kI("padding",e,t,n),kI("constantValue",e,t,n))];case"SpaceToBatchND":{const r=kI("blockShape",e,t,n),a=kI("paddings",e,t,n);return[Wc(kI("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=kI("blockShape",e,t,n),a=kI("crops",e,t,n);return[Lu(kI("x",e,t,n),r,a)]}case"DepthToSpace":{const r=kI("blockSize",e,t,n),a=kI("dataFormat",e,t,n).toUpperCase();return[ul(kI("x",e,t,n),r,a)]}case"BroadcastTo":return[Gu(kI("x",e,t,n),kI("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"hash_table":return ON(e,t,n,r);case"custom":const a=wI(e.op);if(a&&a.customExecutor)return a.customExecutor(new class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return II(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return II(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return yN(this.node.rawAttrs,e,t);if(null!=n.s)return mN(this.node.rawAttrs,e,t);if(null!=n.b)return gN(this.node.rawAttrs,e,t);if(null!=n.shape)return IN(this.node.rawAttrs,e,t);if(null!=n.type)return wN(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return NN(this.node.rawAttrs,e,t);if(null!=n.list.s)return SN(this.node.rawAttrs,e,t);if(null!=n.list.shape)return CN(this.node.rawAttrs,e,t);if(null!=n.list.b)return TN(this.node.rawAttrs,e,t);if(null!=n.list.type)return vN(this.node.rawAttrs,e,t)}return t}}(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return ua.isPromise(a)?a.then(e=>[].concat(e)):[].concat(a)}var LN=class{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function PN(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map(e=>CI(e)[0]);let c=[];null!=r&&(c=r.map(e=>CI(e.name)[0]));const h=[...t];for(;h.length>0;){const e=h.pop();(UN(e)||GN(e)||HN(e))&&null==i&&(i=e,o=i.children.map(e=>e.name).filter(e=>a.has(e))),a.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach(e=>{u.has(e.name)||(u.add(e.name),h.push(e))}):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}var BN=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],WN=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],VN=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function UN(e){return BN.indexOf(e.op)>=0}function GN(e){return WN.indexOf(e.op)>=0}function HN(e){return VN.indexOf(e.op)>=0}var jN=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new jN(e.functions[t],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=PN(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map(e=>e.name),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map(e=>CI(e)[0]).map(t=>e.nodes[t]),o=e.initNodes;i.forEach(e=>{r.has(e.name)&&s.push(e)}),e.weights.forEach(e=>{r.has(e.name)&&s.push(e)}),null!=o&&o.forEach(e=>{r.has(e.name)&&s.push(e)});const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach(e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every(e=>u.has(e.name))&&s.push(e)})}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map(e=>this.graph.nodes[CI(e)[0]]),a=t.map(e=>CI(e)[0]);let s=a.map(e=>this.graph.nodes[e]);0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const u={},l={};return Wo(()=>{const n=new LN(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,a]=CI(t),s=[];s[a]=e[t],r[n]=s});const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=zN(t,r,n,this._resourceManager);if(ua.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map(e=>II(e,r,n))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach(e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)}),t.inputs.forEach(e=>{if("control"!==e.category){const t=function(e,t,n){return t[SI(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach(e=>{if(e&&!e.kept&&!a.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new LN(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map(e=>II(e,i,s)),u=o.map(e=>e.id),l=Object.keys(e).map(t=>e[t].id),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach(e=>{i[e].forEach(e=>{!e||e.kept||e.isDisposed||c.has(e.id)||e.dispose()})}),null==this.parent&&s.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map(e=>this.graph.nodes[CI(e)[0]]),i=n.map(e=>CI(e)[0]);let o=i.map(e=>this.graph.nodes[e]);0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=PN(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),p=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=CI(t),a=[];a[r]=e[t],p[n]=a});const f={},m=this.getFrozenTensorIds(p),g={};for(;d.length>0;){const e=this.processStack(s,d,t,p,g,m,i,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter(e=>!UN(e)&&!II(e.name,p,t)).map(e=>e.name);if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return p}processStack(e,t,n,r,a,s,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&kI("isConstant",e.node,r,n)&&([c]=NI(e.node.name,n)),null==r[e.node.name]){const h=zN(e.node,r,n,this._resourceManager);c||([c]=NI(e.node.name,n));const d=n.currentContext;ua.isPromise(h)?l.push(h.then(l=>(r[c]=l,n.currentContext=d,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u),l))):(r[c]=h,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach(e=>{const[i]=NI(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!II(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!II(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[r]=CI(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t);ua.assert(t,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&ua.assert(n.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter(e=>{const[t]=CI(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e,{})}checkOutputs(e){e.forEach(e=>{const[t]=CI(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}},qN=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=bi.browserHTTPRequest(e,this.loadOptions);else{const t=bi.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(bi.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=bi.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new jN(pN.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=pN.Instance.transformGraph(e.modelInitializer);this.initializer=new jN(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=bi.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof La||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,r)=>(t[n]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function KN(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e+="model.json?tfjs-format=file");const n=new qN(e,t);return await n.load(),n}var XN="3.7.0",YN={};g(YN,{CSVDataset:()=>WS,Dataset:()=>ES,FileDataSource:()=>QS,TextLineDataset:()=>DS,URLDataSource:()=>eC,array:()=>$S,csv:()=>tC,func:()=>nC,generator:()=>rC,microphone:()=>sC,version_data:()=>iC,webcam:()=>aC,zip:()=>FS});var ZN=y(O()),JN=y(O());function QN(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(aS(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=QN(e[s],t,n,r);a[s]=i}return r.delete(e),a}throw new Error("Can't recurse into non-iterable type: "+e)}return n.set(e,a.value),a.value}function eS(e,t=nS){return tS(e,t)}function tS(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(aS(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=tS(e.map(e=>e[s]),t,n);a[s]=r}return n.delete(r),a}throw new Error("Can't recurse into non-iterable type: "+r)}return a.value}function nS(e){return null===e?null:aS(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function rS(e,t){const n=new Map;QN(e,t,n);for(const r of Array.from(n.keys())){const e=n.get(r);if(ua.isPromise(e)){const t=await e;n.set(r,t)}}return QN(e,t,n)}function aS(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof La))}function sS(e){return e instanceof La?{value:e.clone(),recurse:!1}:aS(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var iS=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},oS=class extends iS{constructor(){super(oS.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function uS(e){return new pS(e)}function lS(e){return new fS(e)}oS.INITIAL_CAPACITY=32;var cS,hS,dS=class{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new vS(this,e)}filter(e){return new xS(this,e)}map(e){return new wS(this,e)}mapAsync(e){return new kS(this,e)}serialMapAsync(e){return new kS(this,e).serial()}flatmap(e){return new NS(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new bS(this,e,t)}columnMajorBatch(e,t=!0,n=nS){return this.rowMajorBatch(e,t).map(e=>eS(e,n))}concatenate(e,t){return new SS(uS([this,e]),t)}take(e){return e<0||null==e?this:new yS(this,e)}skip(e){return e<0||null==e?this:new gS(this,e)}prefetch(e){return new TS(this,e)}shuffle(e,t){return new _S(this,e,t)}serial(){return new mS(this)}},pS=class extends dS{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,QN(t,sS)),done:!1};var t}},fS=class extends dS{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: "+e.message,e}}},mS=class extends dS{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},gS=class extends dS{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Vo(e.value)}return this.upstream.next()}},yS=class extends dS{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},bS=class extends dS{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},xS=class extends dS{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Vo(e.value)}}},wS=class extends dS{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Map"}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Za.getTensorsInContainer(e.value),n=this.transform(e.value),r=Za.getTensorsInContainer(n);for(const a of t)Za.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},vS=class extends dS{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},kS=class extends dS{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Za.getTensorsInContainer(e.value),n=await this.transform(e.value),r=Za.getTensorsInContainer(n);for(const a of t)Za.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},IS=class extends dS{constructor(){super(),this.outputQueue=new oS,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!(await this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},NS=class extends IS{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Za.getTensorsInContainer(e.value),n=this.transform(e.value),r=Za.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const a of t)Za.isTensorInList(a,r)||a.dispose();return!0}},SS=class extends dS{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};(hS=cS||(cS={}))[hS.FAIL=0]="FAIL",hS[hS.SHORTEST=1]="SHORTEST",hS[hS.LONGEST=2]="LONGEST";var CS=class extends dS{constructor(e,t=cS.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await rS(this.iterators,function(e){return e instanceof dS?{value:e.next().then(e=>(t++,e.done&&n++,e.value)),recurse:!1}:{value:null,recurse:!0}});if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case cS.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case cS.SHORTEST:return{value:null,done:!0}}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},TS=class extends dS{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new iS(t)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},_S=class extends TS{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=JN.alea(n||ua.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},ES=class{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return ua.assert(e>0,()=>"batchSize needs to be positive, but it is\n      "+e),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),AS(async()=>(await n.iterator()).columnMajorBatch(e,t,RS),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,AS(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,AS(async()=>(await t.iterator()).filter(t=>Wo(()=>e(t))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return AS(async()=>(await t.iterator()).map(t=>Wo(()=>e(t))),this.size)}mapAsync(e){const t=this;return AS(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return AS(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,AS(async()=>{return n=lS(async()=>({value:await t.iterator(),done:!1})).take(e),new SS(n,void 0);var n},n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,AS(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=ZN.alea(t||ua.now().toString());return AS(async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())},this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,AS(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function AS(e,t=null){return new class extends ES{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function $S(e){return AS(async()=>uS(e),e.length)}function FS(e){if(!aS(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return AS(async()=>function(e,t=cS.FAIL){return new CS(e,t)}(await rS(e,e=>{if(e instanceof ES)return{value:e.iterator(),recurse:!1};if(aS(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}),cS.SHORTEST),t)}function RS(e){return null===e?null:null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof La||ua.isTypedArray(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof La?Ah(e):Ss(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}ES.MAX_BUFFER_SIZE=1e4;var DS=class extends ES{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}},MS='"',OS=Symbol("out"),zS=Symbol("field"),LS=Symbol("quote"),PS=Symbol("quoteafterquote"),BS=Symbol("quoteinquote"),WS=class extends ES{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new DS(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(ua.assert(null==t.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&ua.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce((e,t)=>(e[t]=e[t]+1||1,e),{}),n=Object.keys(t).filter(e=>t[e]>1);if(ua.assert(0===n.length,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs)for(const r of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(r))throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");return this.parseRow(t.value,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(e=>this.makeDataElement(e))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){const o=t[a];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o);break;default:u=e}else u=e}i&&i.isLabel?r[s]=u:n[s]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const a=e.length;let s=OS;for(let i=0;i<a;i++)switch(s){case OS:switch(e.charAt(i)){case MS:r=i+1,s=LS;break;case this.delimiter:if(r=i+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=OS;break;default:s=zS,r=i}break;case zS:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i)),s=OS,r=i+1}break;case LS:switch(e.charAt(i)){case MS:s=PS}break;case PS:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i-1)),s=OS,r=i+1;break;case MS:s=LS;break;default:s=BS}break;case BS:switch(e.charAt(i)){case MS:s=LS}}if(n.push(s===PS?e.substring(r,a-1):e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},VS=class extends dS{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error("Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got "+this.fftSize);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(We().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new VS(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(n){throw new Error("Error thrown while initializing video stream: "+n.message)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise(r=>{const a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((e,r)=>n.set(e,r*t)),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(ua.sizeFromShape(t));return n.set(e,n.length-e.length),Ss(n,t)}},US=class extends dS{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Dh([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2;this.cropBox=Mh([r,n,t+r,n+e],[1,4])}else this.cropBox=Mh([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(We().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new US(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&ua.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message="Error thrown while initializing video stream: "+e.message,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Bi.fromPixels(this.webcamVideoElement)}catch(t){throw new Error("Error thrown converting video to pixels: "+JSON.stringify(t))}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error("Error thrown cropping the video: "+t.message)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Wo(()=>{const t=Nl(mi(e,"float32"),0);let n;return n=lp.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear"),Au(n,n.shape.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},GS=class{},HS=class extends dS{split(e){return new jS(this,e)}},jS=class extends HS{constructor(e,t){super(),this.upstream=e,this.impl=new qS(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},qS=class extends IS{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},KS=class extends dS{decodeUTF8(){return new XS(this)}},XS=class extends HS{constructor(e){super(),this.upstream=e,this.impl=new YS(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},YS=class extends IS{constructor(e){if(super(),this.upstream=e,We().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=z();this.decoder=new e("utf8")}}summary(){return this.upstream.summary()+" -> Utf8"}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=We().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}},ZS=class extends KS{constructor(e,t={}){super(),this.file=e,this.options=t,ua.assert(e instanceof Uint8Array||!!We().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return"FileChunks "+this.file}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n});return{value:await e,done:!1}}};function JS(e){return"string"==typeof e&&"file://"===e.substr(0,7)}var QS=class extends GS{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(JS(this.input)&&We().get("IS_NODE")){const e=f("fs");this.input=e.readFileSync(this.input.substr(7))}return new ZS(this.input,this.options)}},eC=class extends GS{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return JS(this.url)?new QS(this.url,this.fileOptions).iterator():async function(e,t={}){let n,r;var a;"string"==typeof e?n=e:(n=e.url,r={method:(a=e).method,headers:a.headers,body:a.body,mode:a.mode,credentials:a.credentials,cache:a.cache,redirect:a.redirect,referrer:a.referrer,integrity:a.integrity});const s=await ua.fetch(n,r);if(s.ok){const e=new Uint8Array(await s.arrayBuffer());return new ZS(e,t)}throw new Error(s.statusText)}(this.url,this.fileOptions)}};function tC(e,t={}){return new WS(new eC(e),t)}function nC(e){const t=lS(e);return AS(async()=>t)}function rC(e){return AS(async()=>{const t=await e();return lS(()=>t.next())})}async function aC(e,t){return US.create(e,t)}async function sC(e){return VS.create(e)}var iC="3.7.0";function oC(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&ua.assert("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the CPU backend.")})}var uC=gf.whereImpl,lC=class extends G{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new U(this,Lo())}nextDataId(){return lC.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,We().get("IS_NODE")&&Cp.warn("\n============================\nHi there \ud83d\udc4b. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ua.isString(n[0])){const a=n.map(e=>ua.encodeString(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return Cp.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>ua.decodeString(e))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return fi(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Lo().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=ua.now();return e(),{kernelMs:ua.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){oC([e],"where");const t=this.readSync(e.dataId);return uC(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};lC.nextDataId=0;var cC={};function hC(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}g(cC,{addImpl:()=>SC,bincountImpl:()=>EC,bincountReduceImpl:()=>AC,ceilImpl:()=>DC,concatImpl:()=>zC,equalImpl:()=>LC,expImpl:()=>WC,expm1Impl:()=>GC,floorImpl:()=>qC,gatherNdImpl:()=>YC,gatherV2Impl:()=>ZC,greaterEqualImpl:()=>tT,greaterImpl:()=>JC,lessEqualImpl:()=>oT,lessImpl:()=>aT,linSpaceImpl:()=>cT,logImpl:()=>hT,maxImpl:()=>fT,maximumImpl:()=>mT,minimumImpl:()=>bT,multiplyImpl:()=>vT,negImpl:()=>ST,notEqualImpl:()=>TT,prodImpl:()=>RT,rangeImpl:()=>MT,rsqrtImpl:()=>OT,simpleAbsImpl:()=>hC,sliceImpl:()=>PT,sparseFillEmptyRowsImpl:()=>VT,sparseReshapeImpl:()=>UT,sparseSegmentReductionImpl:()=>GT,squaredDifferenceImpl:()=>HT,stridedSliceImpl:()=>KT,stringNGramsImpl:()=>XT,stringSplitImpl:()=>ZT,stringToHashBucketFastImpl:()=>JT,subImpl:()=>QT,tileImpl:()=>r_,topKImpl:()=>a_,transposeImpl:()=>AT,uniqueImpl:()=>s_});var dC={kernelName:je,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;oC(t,"abs");let r=new Float32Array(ua.sizeFromShape(t.shape));return r=hC(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}};function pC(e){return(t,n,r,a,s)=>{const i=Cp.assertAndGetBroadcastShape(t,n),o=i.length,u=ua.computeStrides(i),l=ua.sizeFromShape(i),c=ua.getTypedArrayFromDType(s,l),h=t.length,d=n.length,p=ua.computeStrides(t),f=ua.computeStrides(n),m=Cp.getBroadcastDims(t,i),g=Cp.getBroadcastDims(n,i);if(m.length+g.length===0)for(let y=0;y<c.length;++y)c[y]=e(r[y%r.length],a[y%a.length]);else for(let y=0;y<c.length;++y){const t=ua.indexToLoc(y,o,u),n=t.slice(-h);m.forEach(e=>n[e]=0);const s=ua.locToIndex(n,h,p),i=t.slice(-d);g.forEach(e=>i[e]=0);const l=ua.locToIndex(i,d,f);c[y]=e(r[s],a[l])}return[c,i]}}function fC(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var mC={kernelName:yt,backendName:"cpu",kernelFunc:fC};function gC(e,t,n="float32"){if("complex64"===n)return fC({inputs:{real:gC(e,t,"float32"),imag:gC(e,t,"float32")},backend:e});const r=ua.makeZerosTypedArray(ua.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function yC(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var bC={kernelName:an,backendName:"cpu",kernelFunc:yC};function xC(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var wC={kernelName:Zn,backendName:"cpu",kernelFunc:xC};function vC(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return yC({inputs:{x:a},backend:n});const e=gC(n,a.shape,a.dtype),t=vC({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=fC({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=xC({inputs:{input:a},backend:n}),t=vC({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!ua.hasEncodingLoss(a.dtype,s)){const e=yC({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){const e=n.data.get(a.dataId).values,t=ua.toTypedArray([0],a.dtype),[r,s]=pC((e,t)=>e!==t?1:0)(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var kC={kernelName:ft,backendName:"cpu",kernelFunc:vC};function IC(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;oC([s,i],e);const u=o.data.get(s.dataId).values,l=o.data.get(i.dataId).values,c="string"===s.dtype?Cp.fromUint8ToStringArray(u):u,h="string"===s.dtype?Cp.fromUint8ToStringArray(l):l,d=r||s.dtype,[p,f]=t(s.shape,i.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=vC({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.imag,a=o.data.get(t.complexTensorInfos.real.dataId).values,u=o.data.get(r.dataId).values,l=vC({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),c=o.data.get(l.dataId),h=c.complexTensorInfos.imag,d=o.data.get(c.complexTensorInfos.real.dataId).values,p=o.data.get(h.dataId).values,[f,m,g]=n(s.shape,i.shape,a,u,d,p),y=o.makeTensorInfo(g,"float32",f),b=o.makeTensorInfo(g,"float32",m),x=fC({inputs:{real:y,imag:b},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(l),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(b),x}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,l]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(l,a,u)}}}function NC(e){return(t,n,r,a,s,i)=>{const o=Cp.assertAndGetBroadcastShape(t,n),u=ua.sizeFromShape(o),l=o.length,c=ua.computeStrides(o),h=ua.getTypedArrayFromDType("float32",u),d=ua.getTypedArrayFromDType("float32",u),p=Cp.getBroadcastDims(t,o),f=Cp.getBroadcastDims(n,o),m=Cp.mergeRealAndImagArrays(r,a),g=Cp.mergeRealAndImagArrays(s,i),y=t.length,b=ua.computeStrides(t),x=n.length,w=ua.computeStrides(n);if(p.length+f.length===0)for(let v=0;v<h.length;v++){const t=v%m.length,n=v%g.length,r=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);h[v]=r.real,d[v]=r.imag}else for(let v=0;v<h.length;v++){const t=ua.indexToLoc(v,l,c),n=t.slice(-y);p.forEach(e=>n[e]=0);const r=ua.locToIndex(n,y,b),a=t.slice(-x);f.forEach(e=>a[e]=0);const s=ua.locToIndex(a,x,w),i=e(m[2*r],m[2*r+1],g[2*s],g[2*s+1]);h[v]=i.real,d[v]=i.imag}return[h,d,o]}}var SC=pC((e,t)=>e+t),CC=NC((e,t,n,r)=>({real:e+n,imag:t+r})),TC=IC(Xe,SC,CC),_C={kernelName:Xe,backendName:"cpu",kernelFunc:TC};function EC(e,t,n,r,a){const s=ua.sizeFromShape(r),i=ua.makeZerosTypedArray(a,n);for(let o=0;o<e.length;o++){const n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(i[n]+=s>0?t[o]:1)}return i}function AC(e,t,n,r=!1){const a=e.shape[0],s=e.shape[1],i=fi([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){const s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||i.set(r?1:t.size>0?i.get(o,s)+t.get(o,a):i.get(o,s)+1,o,s)}return i}function $C(e){return(t,n,r)=>{const a=ua.getTypedArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)a[s]=e(t[s],r);return a}}function FC(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(oC(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=ua.sizeFromShape(i.shape),c=n||i.dtype,h=ua.getArrayFromDType(c,l);for(let e=0;e<l;++e)h[e]=t(u[e],a);return o.makeTensorInfo(i.shape,c,h)}}function RC(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(oC(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,a);return o.makeTensorInfo(i.shape,l,c)}}var DC=$C(e=>Math.ceil(e)),MC=RC(mt,DC),OC={kernelName:mt,backendName:"cpu",kernelFunc:MC};function zC(e,t,n,r){const a=ua.getArrayFromDType(n,ua.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach(e=>{const n=ua.sizeFromShape(e.shape);a.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{const s="string"===n?Cp.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]})}return a}var LC=pC((e,t)=>e===t?1:0),PC=IC(Gt,LC,null,"bool"),BC={kernelName:Gt,backendName:"cpu",kernelFunc:PC},WC=$C(e=>Math.exp(e)),VC=RC(Ht,WC),UC={kernelName:Ht,backendName:"cpu",kernelFunc:VC},GC=$C(e=>Math.expm1(e)),HC=RC(qt,GC),jC={kernelName:qt,backendName:"cpu",kernelFunc:HC},qC=$C(e=>Math.floor(e)),KC=RC(Zt,qC),XC={kernelName:Zt,backendName:"cpu",kernelFunc:KC};function YC(e,t,n,r,a,s,i,o,u){const l=fi([r,s],n);for(let c=0;c<r;c++){const n=[];let r=0;for(let t=0;t<a;t++){const s=e[c*a+t];r+=s*i[t],n.push(s)}if(r<0||r>=u/s)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<s;e++)l.values[c*s+e]=t.get(...t.indexToLoc(r*s+e))}return l}function ZC(e,t,n){const r=fi(n,e.dtype);for(let a=0;a<r.size;++a){const n=r.indexToLoc(a).slice(),s=t.locToIndex([n[0],n[2]]);n[2]=t.values[s];const i=e.locToIndex(n);r.values[a]=e.values[i]}return r}var JC=pC((e,t)=>e>t?1:0),QC=IC(nn,JC,null,"bool"),eT={kernelName:nn,backendName:"cpu",kernelFunc:QC},tT=pC((e,t)=>e>=t?1:0),nT=IC(rn,tT,null,"bool"),rT={kernelName:rn,backendName:"cpu",kernelFunc:nT},aT=pC((e,t)=>e<t?1:0),sT=IC(dn,aT,null,"bool"),iT={kernelName:dn,backendName:"cpu",kernelFunc:sT},oT=pC((e,t)=>e<=t?1:0),uT=IC(pn,oT,null,"bool"),lT={kernelName:pn,backendName:"cpu",kernelFunc:uT};function cT(e,t,n){const r=(t-e)/(n-1),a=ua.makeZerosTypedArray(n,"float32");a[0]=e;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return a}var hT=$C(e=>Math.log(e)),dT=RC(mn,hT),pT={kernelName:mn,backendName:"cpu",kernelFunc:dT};function fT(e,t,n,r){const a=ua.getTypedArrayFromDType(r,ua.sizeFromShape(n));for(let s=0;s<a.length;++s){const n=s*t;let r=e[n];for(let a=0;a<t;++a){const t=e[n+a];(Number.isNaN(t)||t>r)&&(r=t)}a[s]=r}return a}var mT=pC((e,t)=>Math.max(e,t)),gT=IC(Nn,mT),yT={kernelName:Nn,backendName:"cpu",kernelFunc:gT},bT=pC((e,t)=>Math.min(e,t)),xT=IC(Fn,bT),wT={kernelName:Fn,backendName:"cpu",kernelFunc:xT},vT=pC((e,t)=>e*t),kT=NC((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),IT=IC(On,vT,kT),NT={kernelName:On,backendName:"cpu",kernelFunc:IT};function ST(e,t,n){const r=ua.createScalarValue(-1,n);return vT([],t,r,e,n)}var CT={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;oC(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=ST(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},TT=pC((e,t)=>e!==t?1:0),_T=IC(Ln,TT,null,"bool"),ET={kernelName:Ln,backendName:"cpu",kernelFunc:_T};function AT(e,t,n,r,a){const s=t.length,i=ua.sizeFromShape(t),o=ua.computeStrides(t),u=ua.computeStrides(a),l=ua.getTypedArrayFromDType(n,ua.sizeFromShape(a));for(let c=0;c<i;++c){const t=ua.indexToLoc(c,s,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];l[ua.locToIndex(n,s,u)]=e[c]}return l}function $T(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;oC(a,"transpose");const i=new Array(a.shape.length);for(let u=0;u<i.length;u++)i[u]=a.shape[s[u]];const o=AT(r.data.get(a.dataId).values,a.shape,a.dtype,s,i);return{dataId:r.write(o,i,a.dtype),shape:i,dtype:a.dtype}}var FT={kernelName:Br,backendName:"cpu",kernelFunc:$T};function RT(e,t,n,r){const[a,s]=Cp.computeOutAndReduceShapes(e,r),i=Qa(t,"int32"),o=ua.makeZerosTypedArray(ua.sizeFromShape(a),i),u=ua.sizeFromShape(s);for(let l=0;l<o.length;++l){const e=l*u;let t=1;for(let r=0;r<u;++r)t*=n[e+r];o[l]=t}return{outVals:o,outShape:a,outDtype:i}}var DT={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;oC(a,"prod");const o=a.shape.length,u=ua.parseAxisParam(s,a.shape),l=Cp.getAxesPermutation(u,o);let c=u,h=a;const d=[];null!=l&&(h=$T({inputs:{x:a},backend:n,attrs:{perm:l}}),d.push(h),c=Cp.getInnerMostAxes(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=RT(h.shape,h.dtype,p,c);let y=m;return i&&(y=Cp.expandShapeToKeepDim(m,u)),d.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(y,g,f)}};function MT(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return ua.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((t-e)/n)),s=ua.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let i=1;i<s.length;i++)s[i]=s[i-1]+n;return s}var OT=$C(e=>1/Math.sqrt(e)),zT=RC(ur,OT),LT={kernelName:ur,backendName:"cpu",kernelFunc:zT};function PT(e,t,n,r,a){const s=Ji.isSliceContinous(r,t,n),i=ua.sizeFromShape(n),o=ua.computeStrides(r);if(s){const n=Ji.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const u=fi(r,a,"string"===a?Cp.fromUint8ToStringArray(e):e),l=fi(n,a);for(let c=0;c<l.size;++c){const e=l.indexToLoc(c),n=e.map((e,n)=>e+t[n]);l.set(u.get(...n),...e)}return"string"===a?Cp.fromStringArrayToUint8(l.values):l.values}function BT(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;oC(a,"slice");const[o,u]=Ji.parseSliceParams(a,s,i);Ji.assertParamsValid(a,o,u);const l=PT(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,l)}var WT={kernelName:dr,backendName:"cpu",kernelFunc:BT};function VT(e,t,n,r,a,s,i){const o=t[0],u=s[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error("Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = "+o);return[ua.getArrayFromDType(n,0),[0,h],ua.getArrayFromDType(a,0),l,c]}let d=!0,p=0;const f=new Array(u).fill(0);for(let g=0;g<o;++g){const t=e[g*h];if(t<0)throw new Error(`indices(${g}, 0) is invalid: ${t} < 0`);if(t>=u)throw new Error(`indices(${g}, 0) is invalid: ${t} >= ${u}`);++f[t],d=d&&t>=p,p=t}let m=!0;for(let g=0;g<u;++g){const e=0===f[g];l[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],s=ua.getArrayFromDType(n,t*h),d=ua.getArrayFromDType(a,t),p=new Array(u).fill(0);for(let n=0;n<o;++n){const t=e[n*h],a=(0===t?0:f[t-1])+p[t];p[t]++;for(let r=0;r<h;++r)s[a*h+r]=e[n*h+r];d[a]=r[n],c[n]=a}for(let e=0;e<u;++e)if(0===p[e]){const t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;d[t]=i}return[s,[t,h],d,l,c]}}function UT(e,t,n,r,a){const s=ua.sizeFromShape(r),i=t[0],o=a.length,u=[];let l=1,c=-1;for(let g=0;g<o;++g){const e=a[g];if(-1===e){if(-1!==c)throw new Error(`only one output dimension may be -1, not both ${c} and ${g}`);c=g,u.push(1)}else{if(e<0)throw new Error(`size ${g} must be non-negative, not ${e}`);l*=e,u.push(e)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/l);if(l*e!==s)throw new Error(`Input to reshape is a SparseTensor with ${s}\n          dense values, but the requested shape requires a multiple of ${l}. inputShape=${r} outputShape= ${u}`);u[c]=e}const h=ua.sizeFromShape(u);if(h!==s)throw new Error(`Input to reshape is a tensor with ${s} dense values, but the requested shape has ${h}. inputShape=${r} outputShape=${u}`);const d=r.length,p=[];if(d>0){p[d-1]=1;for(let e=d-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*u[e+1]}const m=ua.getArrayFromDType(n,i*o);for(let g=0;g<i;++g){let t=0;for(let n=0;n<d;++n)t+=e[g*d+n]*p[n];for(let e=0;e<o;++e)m[g*o+e]=Math.trunc(t/f[e]),t%=f[e]}return[m,[i,o],u]}function GT(e,t,n,r,a,s=!1,i=0){const o=r.length;if(o!==a.length)throw new Error("segmentIds and indices should have same size.");const u=[t[0],e.length/t[0]],l=u[1],c=o>0?a[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=h.reduce((e,t)=>e*t,1),p=ua.getArrayFromDType(n,d);if(0===o)return c>0&&p.fill(i),[p,h];if(c<=0)throw new Error("segment ids must be >= 0");let f=0,m=1,g=0,y=a[f];for(;;){let t=0;if(m<o){if(t=a[m],y===t){++m;continue}if(y>=t)throw new Error("segment ids are not increasing")}if(y<0||y>=c)throw new Error(`Segment id ${y} out of range [0, ${c}), possibly because segmentIds input is not sorted.`);y>g&&p.fill(i,g*l,y*l);for(let n=f;n<m;++n){const t=r[n];if(t<0||t>=u[0])throw new Error(`Bad: indices[${n}] == ${r[n]} out of range [0, ${u[0]})`);for(let n=0;n<l;n++)p[y*l+n]+=e[t*l+n]}if(s)for(let e=0;e<l;e++)p[y*l+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<c&&p.fill(i,g*l,c*l),[p,h]}var HT=pC((e,t)=>{const n=e-t;return n*n}),jT=IC(_r,HT),qT={kernelName:_r,backendName:"cpu",kernelFunc:jT};function KT(e,t,n,r){const a=fi(e,t.dtype);for(let s=0;s<a.size;s++){const e=a.indexToLoc(s),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+r[t];a.set(t.get(...i),...e)}return a}function XT(e,t,n,r,a,s,i,o){return new class{constructor(e,t,n,r,a,s){this.separator=ua.encodeString(e),this.nGramWidths=t,this.leftPad=ua.encodeString(n),this.rightPad=ua.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),l=Math.max(0,o-(a-(i+1))),c=s-(u+l),h=t+(u>0?0:i-o);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=l*this.rightPad.length,d+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(d);const p=n[r+i];let f=0;const m=e=>e.forEach(e=>p[f++]=e);for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got "+e);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,s=ua.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let t=0;t<=a;++t)s[t]=0;return[e,s]}s[0]=0;for(let o=1;o<=a;++o){const e=t[o]-t[o-1];let n=0;this.nGramWidths.forEach(t=>{n+=this.getNumNGrams(e,t)}),this.preserveShort&&e>0&&0===n&&(n=1),s[o]=s[o-1]+n}const i=new Array(s[a]);for(let o=0;o<a;++o){const n=t[o];let r=s[o];if(this.nGramWidths.forEach(a=>{const s=this.getNumNGrams(t[o+1]-t[o],a);this.createNGrams(e,n,i,r,s,a),r+=s}),this.preserveShort&&r===s[o]){const a=t[o+1]-t[o];if(0===a)continue;this.createNGrams(e,n,i,r,1,a+2*this.padWidth)}}return[i,s]}}(n,r,a,s,i,o).compute(e,t)}function YT(e,t,n){if(!e.length)return[];if(0===t.length){const t=new Array(e.length);for(let n=0;n<e.length;++n)t[n]=e.subarray(n,n+1);return t}if(1===t.length){const r=t[0],a=[];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return n&&0===e.length||a.push(e),a}const r=[];let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}return r}function ZT(e,t,n){const r=e.length,a=[];let s=0,i=0;const o=new Array(r);for(let d=0;d<r;++d){const r=YT(e[d],t,n),u=r.length;o[d]=u,s+=u,i=Math.max(i,u),a.push(...r)}const u=ua.getArrayFromDType("int32",2*s),l=new Array(s),c=[r,i];let h=0;for(let d=0;d<r;++d)for(let e=0;e<o[d];++e)u[2*h]=d,u[2*h+1]=e,l[h]=a[h],++h;return[u,l,c]}function JT(e,t){const n=ua.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=ua.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var QT=pC((e,t)=>e-t),e_=NC((e,t,n,r)=>({real:e-n,imag:t-r})),t_=IC(Dr,QT,e_),n_={kernelName:Dr,backendName:"cpu",kernelFunc:t_};function r_(e,t){const n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];const r=fi(n,e.dtype);for(let a=0;a<r.values.length;++a){const t=r.indexToLoc(a),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const s=e.locToIndex(n);r.values[a]=e.values[s]}return r}function a_(e,t,n,r,a){const s=t[t.length-1],[i,o]=[e.length/s,s],u=ua.getTypedArrayFromDType(n,i*r),l=ua.getTypedArrayFromDType("int32",i*r);for(let h=0;h<i;h++){const t=h*o,n=e.subarray(t,t+o),a=[];for(let e=0;e<n.length;e++)a.push({value:n[e],index:e});a.sort((e,t)=>t.value-e.value);const s=h*r,i=u.subarray(s,s+r),c=l.subarray(s,s+r);for(let e=0;e<r;e++)i[e]=a[e].value,c[e]=a[e].index}const c=t.slice();return c[c.length-1]=r,[fi(c,n,u),fi(c,"int32",l)]}function s_(e,t,n,r){const a=ua.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let f=0;f<a;f++)s[0]*=n[f];s[1]=n[a];for(let f=a+1;f<n.length;f++)s[2]*=n[f];const i={},o=new Int32Array(n[a]),u=new Ma(s,r,e),l=[],c=1===s[0]&&1===s[2];for(let f=0;f<n[a];f++){let t;if(c)t=e[f].toString();else{const e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(u.get(t,f,n));t=e.join(",")}if(void 0!==i[t])o[f]=i[t];else{const e=Object.keys(i).length;i[t]=e,o[f]=e,l.push(f)}}const h=s.slice();h[1]=Object.keys(i).length;const d=new Ma(h,r);l.forEach((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(u.get(n,e,r),n,t,r)});const p=n.slice();return p[a]=h[1],{outputValues:d.values,outputShape:p,indices:o}}Zo("cpu",()=>new lC,1);var i_=FC(Wt,e=>e>=0?e:Math.exp(e)-1),o_={kernelName:Wt,backendName:"cpu",kernelFunc:i_};function u_(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;oC([a],"leakyRelu");const i=ua.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,u=ua.getTypedArrayFromDType("float32",i);for(let l=0;l<o.length;l++)u[l]=o[l]<0?s*o[l]:o[l];return n.makeTensorInfo(a.shape,"float32",u)}var l_={kernelName:hn,backendName:"cpu",kernelFunc:u_},c_=pC((e,t)=>e<0?t*e:e);function h_(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;oC([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=c_(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}var d_={kernelName:Kn,backendName:"cpu",kernelFunc:h_},p_=FC(Qn,e=>Math.max(0,e)),f_={kernelName:Qn,backendName:"cpu",kernelFunc:p_},m_=FC(sr,e=>Math.min(Math.max(0,e),6)),g_={kernelName:sr,backendName:"cpu",kernelFunc:m_},y_=FC(gr,e=>1/(1+Math.exp(-e))),b_={kernelName:gr,backendName:"cpu",kernelFunc:y_};function x_(e,t,n,r,a){if("linear"===n)return yC({inputs:{x:t},backend:e});if("relu"===n)return p_({inputs:{x:t},backend:e});if("elu"===n)return i_({inputs:{x:t},backend:e});if("relu6"===n)return m_({inputs:{x:t},backend:e});if("prelu"===n)return h_({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return u_({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return y_({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function w_(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=ua.sizeFromShape(a.shape),o=ua.inferFromImplicitShape(s,i),u=ua.sizeFromShape(o);ua.assert(i===u,()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.imag;l.complexTensorInfos.real.shape=o,e.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var v_={kernelName:er,backendName:"cpu",kernelFunc:w_};function k_(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;oC([a,s],"matMul");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],h=o?s.shape[l-1]:s.shape[l-2],d=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=ua.sizeFromShape(f),y=ua.sizeFromShape(m);ua.assert(u>=2&&l>=2&&(g===y||1===g||1===y),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`);const b=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([d,p]);ua.assert(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);const x=o?[y,p,h]:[y,h,p],w=w_({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),v=w_({inputs:{x:s},backend:n,attrs:{shape:x}}),k=i?w.shape[1]:w.shape[2],I=i?w.shape[2]:w.shape[1],N=o?v.shape[1]:v.shape[2],S=Math.max(g,y),C=n.data.get(w.dataId).values,T=n.data.get(v.dataId).values,_=ua.computeStrides(w.shape),E=ua.computeStrides(v.shape),[A,$,F]=i?[_[0],1,_[1]]:[_[0],_[1],1],[R,D,M]=o?[1,E[1],E[0]]:[E[1],1,E[0]],O=I*N,z=fi([S,I,N],w.dtype),L=z.values,P=n.blockSize;for(let B=0;B<S;B++)for(let e=0;e<I;e+=P)for(let t=0;t<N;t+=P)for(let n=0;n<k;n+=P){const r=Math.min(e+P,I),a=Math.min(t+P,N),s=Math.min(n+P,k);for(let i=e;i<r;i++)for(let e=t;e<a;e++){let t=0;for(let r=n;r<s;r++){const n=Math.min(B,g-1)*A,a=Math.min(B,y-1)*M;t+=C[n+i*$+r*F]*T[r*R+e*D+a]}L[B*O+(i*N+e)]+=t}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,z.dtype,z.values)}var I_={kernelName:ct,backendName:"cpu",kernelFunc:k_},N_={kernelName:Kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=k_({inputs:{a:a,b:s},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=TC({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=x_(n,d,c,o,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}},S_=FC(qe,e=>Math.acos(e)),C_={kernelName:qe,backendName:"cpu",kernelFunc:S_},T_=FC(Ke,e=>Math.acosh(e)),__={kernelName:Ke,backendName:"cpu",kernelFunc:T_},E_={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;oC(t,"addN");const a=r.map(e=>n.data.get(e.dataId).values),s=fi(r[0].shape,r[0].dtype),i=s.values;for(let o=0;o<r.length;o++){const e=a[o];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}},A_={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;oC(a,"all");const o=ua.parseAxisParam(s,a.shape);let u=o;const l=Cp.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=$T({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Cp.getInnerMostAxes(u.length,a.shape.length)),Cp.assertAxesAreInnerMostDims("all",u,c.shape.length);const[h,d]=Cp.computeOutAndReduceShapes(c.shape,u),p=ua.sizeFromShape(d),f=ua.makeZerosTypedArray(ua.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const r=m[e+n];t=t&&r}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=w_({inputs:{x:g},backend:n,attrs:{shape:Cp.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},$_={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;oC(a,"any");const o=ua.parseAxisParam(s,a.shape);let u=o;const l=Cp.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=$T({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Cp.getInnerMostAxes(u.length,a.shape.length)),Cp.assertAxesAreInnerMostDims("any",u,c.shape.length);const[h,d]=Cp.computeOutAndReduceShapes(c.shape,u),p=ua.sizeFromShape(d),f=ua.makeZerosTypedArray(ua.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const r=m[e+n];t=t||r}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=w_({inputs:{x:g},backend:n,attrs:{shape:Cp.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},F_={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;oC(a,"argMax");let i=ua.parseAxisParam(s,a.shape);const o=Cp.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=$T({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Cp.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],Cp.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[c,h]=Cp.computeOutAndReduceShapes(u.shape,i),d=ua.sizeFromShape(c),p=ua.makeZerosTypedArray(d,"int32"),f=ua.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let g=0;g<p.length;++g){const e=g*f;let t=m[e],n=0;for(let r=0;r<f;++r){const a=m[e+r];a>t&&(t=a,n=r)}p[g]=n}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c,"int32",p)}},R_={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;oC(a,"argMin");let i=ua.parseAxisParam(s,a.shape);const o=Cp.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=$T({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Cp.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],Cp.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[c,h]=Cp.computeOutAndReduceShapes(u.shape,i),d=ua.sizeFromShape(c),p=ua.makeZerosTypedArray(d,"int32"),f=ua.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let g=0;g<p.length;++g){const e=g*f;let t=m[e],n=0;for(let r=0;r<f;++r){const a=m[e+r];a<t&&(t=a,n=r)}p[g]=n}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c,"int32",p)}},D_=FC(tt,e=>Math.asin(e)),M_={kernelName:tt,backendName:"cpu",kernelFunc:D_},O_=FC(nt,e=>Math.asinh(e)),z_={kernelName:nt,backendName:"cpu",kernelFunc:O_},L_=FC(rt,e=>Math.atan(e)),P_={kernelName:rt,backendName:"cpu",kernelFunc:L_},B_=pC((e,t)=>Math.atan2(e,t)),W_=IC(st,B_),V_={kernelName:st,backendName:"cpu",kernelFunc:W_},U_=FC(at,e=>Math.atanh(e)),G_={kernelName:at,backendName:"cpu",kernelFunc:U_};function H_(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,h=a.effectiveFilterWidth,d=a.padInfo.top,p=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=fi(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let w=0;w<a.batchSize;++w){const t=w*y,n=w*r[0];for(let m=0;m<a.inChannels;++m)for(let y=0;y<a.outHeight;++y){const w=y*i-d,v=Math.max(0,w),k=Math.min(a.inHeight,c+w),I=t+y*b;for(let t=0;t<a.outWidth;++t){const i=t*o-p,c=Math.max(0,i),d=Math.min(a.inWidth,h+i);let y=f,b=0,w=0;for(let t=v;t<k;t+=u){const a=n+t*r[1];for(let t=c;t<d;t+=l){const n=e[a+t*r[2]+m];"max"===s&&n>y?y=n:"avg"===s&&(b+=n,w++)}if(isNaN(y))break}g[I+t*x+m]="avg"===s?b/w:y}}}return m}function j_(e,t,n,r,a=!1,s=!1){const i=fi(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=fi(t,n,e);for(let g=0;g<r.batchSize;++g)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*o-p;let y=n;for(;y<0;)y+=l;const b=Math.min(r.inHeight,h+n);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let t=y;t<b;t+=l){const i=t-n;for(let n=p;n<x;n+=c){const o=n-h,u=m.get(g,t,n,e);u>w&&(w=u,v=a?s?((g*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:i*d+o)}}i.set(v,g,t,o,e)}}return i}function q_(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,l=a.dilationDepth,c=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterDepth,p=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=fi(a.outShape,n),w=x.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],N=a.outShape[4];for(let S=0;S<a.batchSize;++S){const t=S*v,n=S*r[0];for(let x=0;x<a.inChannels;++x)for(let v=0;v<a.outDepth;++v){const S=v*i-m;let C=S;for(;C<0;)C+=l;const T=Math.min(a.inDepth,d+S),_=t+v*k;for(let t=0;t<a.outHeight;++t){const i=t*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(a.inHeight,p+i),v=_+t*I;for(let t=0;t<a.outWidth;++t){const i=t*u-y;let o=i;for(;o<0;)o+=h;const p=Math.min(a.inWidth,f+i),g=v+t*N;let k=b,I=0,S=0;for(let t=C;t<T;t+=l){const a=n+t*r[1];for(let t=d;t<m;t+=c){const n=a+t*r[2];for(let t=o;t<p;t+=h){const a=e[n+t*r[3]+x];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+x]="avg"===s?I/S:k}}}}return x}var K_={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;oC(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;ua.assert(Cp.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const l=Cp.computePool2DInfo(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&ua.arraysEqual(l.inShape,l.outShape))c=yC({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=ua.computeStrides(a.shape),r=H_(e,0,a.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},X_={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;oC(a,"avgPool3d");const c=Cp.computePool3DInfo(a.shape,s,i,1,o,u,l),h=q_(n.data.get(a.dataId).values,0,a.dtype,ua.computeStrides(a.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},Y_={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;oC([a,s],"avgPool3DGrad");const c=Cp.computePool3DInfo(s.shape,i,o,1,u,l),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,N=k-1-c.padInfo.left,S=v-1-c.padInfo.top,C=fi(s.shape,"float32"),T=1/(f*m*g),_=n.bufferSync(a);for(let E=0;E<c.batchSize;++E)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=t-I,s=n-S,i=r-N;let o=0;for(let t=0;t<w;t+=y){const n=(a+t)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<v;t+=b){const r=(s+t)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let t=0;t<k;t+=x){const a=(i+t)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(o+=_.get(E,n,r,a,e))}}}C.set(o*T,E,t,n,r,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},Z_={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;oC([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Cp.computePool2DInfo(i.shape,o,u,1,l),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=fi(i.shape,"float32"),k=1/(p*f),I=n.data.get(a.dataId).values,N=fi(a.shape,"float32",I);for(let S=0;S<c.batchSize;++S)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const r=t-w,a=n-x;let s=0;for(let t=0;t<y;t+=m){const n=(r+t)/h;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){const r=(a+t)/d;r<0||r>=c.outWidth||Math.floor(r)!==r||(s+=N.get(S,n,r,e))}}v.set(s*k,S,t,n,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},J_={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;ua.assert(o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),ua.assert(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),ua.assert(null==s||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),oC([a,o,u,s,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,b=d.length,x=h.length;let w=0,v=0,k=0,I=0;for(let N=0;N<c.length;++N)m[N]=f[w++]+(c[N]-h[v++])*p[k++]/Math.sqrt(d[I++]+l),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}},Q_={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;oC([a],"batchToSpaceND");const o=s.reduce((e,t)=>e*t),u=Cp.getReshaped(a.shape,s,o),l=Cp.getPermuted(u.length,s.length),c=Cp.getReshapedPermuted(a.shape,s,o),h=Cp.getSliceBeginCoords(i,s.length),d=Cp.getSliceSize(c,i,s.length),p=w_({inputs:{x:a},backend:n,attrs:{shape:u}}),f=$T({inputs:{x:p},backend:n,attrs:{perm:l}}),m=w_({inputs:{x:f},backend:n,attrs:{shape:c}}),g=BT({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}},eE={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=EC(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},tE=FC(gt,(e,t)=>e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e),nE={kernelName:gt,backendName:"cpu",kernelFunc:tE},rE={kernelName:bt,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(ua.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.imag,i=n.data.get(a.complexTensorInfos.real.dataId).values,o=n.data.get(s.dataId).values;for(let u=0;u<i.length;u++)r[u]=Math.hypot(i[u],o[u]);return n.makeOutput(r,t.shape,"float32")}};function aE(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var sE={kernelName:on,backendName:"cpu",kernelFunc:aE};function iE(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ua.parseAxisParam(a,t[0].shape)[0];let i=Cp.computeOutShape(t.map(e=>e.shape),s);if(0===ua.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter(e=>ua.sizeFromShape(e.shape)>0);if(1===o.length)return yC({inputs:{x:o[0]},backend:n});const u=o.map(e=>e.shape);if(Cp.assertParamsConsistent(u,s),"complex64"===o[0].dtype){const e=o.map(e=>xC({inputs:{input:e},backend:n})),t=o.map(e=>aE({inputs:{input:e},backend:n})),r=iE({inputs:e,backend:n,attrs:{axis:s}}),a=iE({inputs:t,backend:n,attrs:{axis:s}}),i=fC({inputs:{real:r,imag:a},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const l=o.map(e=>{const t=ua.sizeFromShape(e.shape.slice(s));return w_({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),c=l.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));i=Cp.computeOutShape(l.map(e=>e.shape),1);const h=zC(c,i,t[0].dtype,1===l[0].shape[0]),d=Cp.computeOutShape(o.map(e=>e.shape),s),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}var oE={kernelName:xt,backendName:"cpu",kernelFunc:iE};function uE(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;oC([a,s],"conv2d");const h=Cp.convertConv2DDataFormat(u),d=Cp.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,w=new Ma(d.outShape,a.dtype),v=ua.computeStrides(a.shape),k=ua.computeStrides(s.shape),I=v[0],N=x?v[1]:v[2],S=x?v[2]:1,C=x?1:v[1],T=w.strides[0],_=x?w.strides[1]:w.strides[2],E=x?w.strides[2]:1,A=x?1:w.strides[1],$=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,R=w.values;for(let D=0;D<d.batchSize;++D){const e=D*I,t=D*T;for(let n=0;n<d.outHeight;++n){const r=t+n*_,a=n*d.strideHeight-b;for(let t=0;t<p;++t){const n=a+t*m;if(n<0||n>=d.inHeight)continue;const s=t*k[0],i=e+n*N;for(let e=0;e<d.outWidth;++e){const t=r+e*E,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const a=i+r*S;let o=s+e*k[1];for(let e=0;e<d.inChannels;++e){const n=$[a+e*C];for(let e=0;e<d.outChannels;++e)R[t+e*A]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,R)}var lE={kernelName:wt,backendName:"cpu",kernelFunc:uE},cE={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;oC([a,s],"conv2dBackpropFilter");const h=Cp.convertConv2DDataFormat(u),d=Cp.computeConv2DInfo(a.shape,c,i,1,o,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new Ma(d.filterShape,"float32"),x=d.padInfo.left,w=d.padInfo.top,v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new Ma(a.shape,a.dtype,v),N=new Ma(s.shape,s.dtype,k);for(let S=0;S<m;++S){const e=Math.max(0,Math.ceil((w-S)/p)),t=Math.min(d.outHeight,(d.inHeight+w-S)/p);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((x-n)/f)),a=Math.min(d.outWidth,(d.inWidth+x-n)/f);for(let s=0;s<d.inChannels;++s)for(let i=0;i<d.outChannels;++i){let o=0;for(let u=0;u<d.batchSize;++u)for(let l=e;l<t;++l){const e=S+l*p-w;for(let t=r;t<a;++t){const r=n+t*f-x;o+=y?I.get(u,e,r,s)*N.get(u,l,t,i):I.get(u,s,e,r)*N.get(u,i,l,t)}}b.set(o,S,n,s,i)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},hE={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;oC([a,s],"conv2dBackpropInput");const h=ua.computeStrides(s.shape),d=ua.computeStrides(a.shape);let p=Cp.convertConv2DDataFormat(l);const f=Cp.computeConv2DInfo(i,s.shape,o,1,u,c,!1,p),m=new Ma(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,w,v]=h,{batchSize:k,filterHeight:I,filterWidth:N,inChannels:S,inHeight:C,inWidth:T,outChannels:_,outHeight:E,outWidth:A,strideHeight:$,strideWidth:F}=f;p=f.dataFormat;const R=I-1-f.padInfo.top,D=N-1-f.padInfo.left,M="channelsLast"===p,O=m.strides[0],z=M?m.strides[1]:m.strides[2],L=M?m.strides[2]:1,P=M?1:m.strides[1],B=d[0],W=M?d[1]:d[2],V=M?d[2]:1,U=M?1:d[1];for(let G=0;G<k;++G)for(let e=0;e<S;++e)for(let t=0;t<C;++t){const n=t-R,r=Math.max(0,Math.ceil(n/$)),a=Math.min(E,(I+n)/$);for(let s=0;s<T;++s){const i=s-D,o=Math.max(0,Math.ceil(i/F)),u=Math.min(A,(N+i)/F);let l=0;for(let t=r;t<a;++t){const r=t*$-n;for(let n=o;n<u;++n){const a=B*G+W*t+V*n,s=x*(I-1-r)+w*(N-1-(n*F-i))+v*e;for(let e=0;e<_;++e)l+=y[a+U*e]*b[s+e]}}g[O*G+z*t+L*s+P*e]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},dE={kernelName:It,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;oC([a,s],"conv3d");const l=Cp.computeConv3DInfo(a.shape,s.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,w=new Ma(l.outShape,a.dtype),v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=w.values,N=ua.computeStrides(a.shape),S=ua.computeStrides(s.shape);for(let C=0;C<l.batchSize;++C){const e=C*N[0],t=C*w.strides[0];for(let n=0;n<l.outDepth;++n){const r=t+n*w.strides[1],a=n*l.strideDepth-y;for(let t=0;t<c;++t){const n=a+t*p;if(n<0||n>=l.inDepth)continue;const s=t*S[0],i=e+n*N[1];for(let e=0;e<l.outHeight;++e){const t=r+e*w.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const a=s+e*S[1],o=i+r*N[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const s=o+t*l.inChannels;let i=a+e*S[2];for(let e=0;e<l.inChannels;++e){const t=v[s+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[i+e];i+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},pE={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;oC([a,s],"conv3dBackpropFilterV2");const l=ua.computeStrides(a.shape),c=ua.computeStrides(s.shape),h=Cp.computeConv3DInfo(a.shape,u,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Ma(h.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,N=n.data.get(s.dataId).values,[S,C,T,_]=c,E=n.data.get(a.dataId).values,[A,$,F,R]=l,D=h.padInfo.front,M=h.padInfo.left,O=h.padInfo.top;for(let z=0;z<m;++z){const e=Math.max(0,Math.ceil((D-z)/d)),t=Math.min(h.outDepth,(h.inDepth+D-z)/d),n=z*w;for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((O-r)/p)),s=Math.min(h.outHeight,(h.inHeight+O-r)/p),i=r*v+n;for(let n=0;n<y;++n){const o=Math.max(0,Math.ceil((M-n)/f)),u=Math.min(h.outWidth,(h.inWidth+M-n)/f),l=n*k+i;for(let i=0;i<h.inChannels;++i){const c=i*I+l;for(let l=0;l<h.outChannels;++l){let m=0;for(let c=0;c<h.batchSize;++c){const h=c*A,g=c*S;for(let c=e;c<t;++c){const e=(z+c*d-D)*$+h,t=c*C+g;for(let c=a;c<s;++c){const a=(r+c*p-O)*F+e,s=c*T+t;for(let e=o;e<u;++e)m+=E[(n+e*f-M)*R+a+i]*N[e*_+s+l]}}}x[c+l]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},fE={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;oC([a],"conv3dBackpropInputV2");const l=ua.computeStrides(a.shape),c=ua.computeStrides(s.shape),h=Cp.computeConv3DInfo(u,s.shape,o,1,i),d=new Ma(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(a.dataId).values,[x,w,v,k]=l,I=n.data.get(s.dataId).values,[N,S,C,T]=c,{batchSize:_,filterDepth:E,filterHeight:A,filterWidth:$,inChannels:F,inDepth:R,inHeight:D,inWidth:M,outChannels:O,outDepth:z,outHeight:L,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=h,U=E-1-h.padInfo.front,G=A-1-h.padInfo.top,H=$-1-h.padInfo.left;for(let j=0;j<_;++j)for(let e=0;e<F;++e)for(let t=0;t<R;++t){const n=t-U,r=Math.max(0,Math.ceil(n/B)),a=Math.min(z,(E+n)/B);for(let s=0;s<D;++s){const i=s-G,o=Math.max(0,Math.ceil(i/W)),u=Math.min(L,(A+i)/W);for(let l=0;l<M;++l){const c=l-H,h=Math.max(0,Math.ceil(c/V)),d=Math.min(P,($+c)/V);let _=0;for(let t=r;t<a;++t){const r=t*B-n;for(let n=o;n<u;++n){const a=n*W-i;for(let s=h;s<d;++s){const i=x*j+w*t+v*n+k*s,o=N*(E-1-r)+S*(A-1-a)+C*($-1-(s*V-c))+T*e;for(let e=0;e<O;++e)_+=b[i+e]*I[o+e]}}}p[f*j+m*t+g*s+y*l+e]=_}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},mE=FC(Ct,e=>Math.cos(e)),gE={kernelName:Ct,backendName:"cpu",kernelFunc:mE},yE=FC(Tt,e=>Math.cosh(e)),bE={kernelName:Tt,backendName:"cpu",kernelFunc:yE},xE={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,d,p]=a.shape,f=s.shape[0],[m,g]=o,y=fi([f,m,g,p],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,v=ua.computeStrides(a.shape),k=ua.computeStrides(y.shape);for(let I=0;I<f;I++){const e=4*I,t=b[e],n=b[e+1],r=b[e+2],a=b[e+3],s=x[I];if(s>=c)continue;const i=m>1?(r-t)*(h-1)/(m-1):0,o=g>1?(a-n)*(d-1)/(g-1):0;for(let c=0;c<m;c++){const e=m>1?t*(h-1)+c*i:.5*(t+r)*(h-1);if(e<0||e>h-1)for(let t=0;t<g;t++)for(let e=0;e<p;e++)y.values[e+t*k[2]+c*k[1]+I*k[0]]=l;else if("bilinear"===u){const t=Math.floor(e),r=Math.ceil(e),i=e-t;for(let e=0;e<g;e++){const u=g>1?n*(d-1)+e*o:.5*(n+a)*(d-1);if(u<0||u>d-1){for(let t=0;t<p;t++)y.values[t+e*k[2]+c*k[1]+I*k[0]]=l;continue}const h=Math.floor(u),f=Math.ceil(u),m=u-h;for(let n=0;n<p;n++){let a=n+h*v[2]+t*v[1]+s*v[0];const o=w[a];a=n+f*v[2]+t*v[1]+s*v[0];const u=w[a];a=n+h*v[2]+r*v[1]+s*v[0];const l=w[a];a=n+f*v[2]+r*v[1]+s*v[0];const d=w[a],p=o+(u-o)*m;a=n+e*k[2]+c*k[1]+I*k[0],y.values[a]=p+(l+(d-l)*m-p)*i}}}else for(let t=0;t<g;++t){const r=g>1?n*(d-1)+t*o:.5*(n+a)*(d-1);if(r<0||r>d-1){for(let e=0;e<p;e++)y.values[e+t*k[2]+c*k[1]+I*k[0]]=l;continue}const i=Math.round(r),u=Math.round(e);for(let e=0;e<p;e++)y.values[e+t*k[2]+c*k[1]+I*k[0]]=w[e+i*v[2]+u*v[1]+s*v[0]]}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},wE={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;oC(a,"cumsum");const u=Cp.getAxesPermutation([s],a.shape.length);let l=a;null!=u&&(l=$T({inputs:{x:a},backend:n,attrs:{perm:u}}));const c=Cp.getInnerMostAxes(1,a.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=Qa(l.dtype,"int32"),d=ua.makeZerosTypedArray(ua.sizeFromShape(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<p.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=i?0:p[t];else{const n=m(y,e-1);d[t]=i?p[n]+d[n]:p[t]+d[n]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=$T({inputs:{x:g},backend:n,attrs:{perm:Cp.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}},vE={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=EC(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=AC(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},kE={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;ua.assert("NHWC"===i,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+i),ua.assert(s>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+s);const o=a.shape[0],u=a.shape[1],l=a.shape[2],c=a.shape[3],h=u*s,d=l*s,p=c/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let y=0;y<o;++y)for(let e=0;e<h;++e){const t=Math.floor(e/s),n=e%s;for(let e=0;e<d;++e){const r=Math.floor(e/s),a=(n*s+e%s)*p;for(let e=0;e<p;++e)m[g++]=f[e+a+c*(r+l*(t+u*y))]}}return n.makeTensorInfo([o,h,d,p],a.dtype,m)}};function IE(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;oC([a,s],"depthwiseConv2DNative");const c=ua.computeStrides(a.shape),h=ua.computeStrides(s.shape);let d=u;null==d&&(d=[1,1]),ua.assert(Cp.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const p=Cp.computeConv2DInfo(a.shape,s.shape,i,d,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,w=b.top,v=p.outChannels/p.inChannels,k=new Ma(p.outShape,a.dtype),I=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,S=k.values;for(let C=0;C<p.batchSize;++C){const e=C*c[0],t=C*k.strides[0];for(let n=0;n<p.outHeight;++n){const r=t+n*k.strides[1],a=n*p.strideHeight-w;for(let t=0;t<f;++t){const n=a+t*g;if(n<0||n>=p.inHeight)continue;const s=t*h[0],i=e+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const a=i+r*p.inChannels;let o=t,u=s+e*h[1];for(let e=0;e<p.inChannels;++e){const t=I[a+e];for(let e=0;e<v;++e)S[o+e]+=t*N[u+e];o+=v,u+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var NE={kernelName:Ft,backendName:"cpu",kernelFunc:IE},SE={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;oC([a,s],"depthwiseConv2dNativeBackpropFilter");const h=Cp.computeConv2DInfo(a.shape,c,i,o,u,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Ma(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(a.dataId).values,v=new Ma(a.shape,a.dtype,w),k=n.data.get(s.dataId).values,I=new Ma(s.shape,s.dtype,k);for(let N=0;N<f;++N){const e=Math.max(0,Math.ceil((b-N)/d)),t=Math.min(h.outHeight,(h.inHeight+b-N)/d);for(let n=0;n<m;++n){const r=Math.max(0,Math.ceil((y-n)/p)),a=Math.min(h.outWidth,(h.inWidth+y-n)/p);for(let s=0;s<h.outChannels;++s){const i=Math.trunc(s/x),o=s%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let o=e;o<t;++o){const e=N+o*d-b;for(let t=r;t<a;++t)u+=v.get(l,e,n+t*p-y,i)*I.get(l,o,t,s)}g.set(u,N,n,i,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},CE={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;oC([a,s],"depthwiseConv2DNativeBackpropInput");const h=ua.computeStrides(a.shape),d=ua.computeStrides(s.shape),p=Cp.computeConv2DInfo(c,s.shape,i,o,u,l,!0),f=new Ma(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[w,v,k]=h,I=n.data.get(s.dataId).values,[N,S,C]=d,{batchSize:T,filterHeight:_,filterWidth:E,inChannels:A,inHeight:$,inWidth:F,outChannels:R,outHeight:D,outWidth:M,strideHeight:O,strideWidth:z}=p,L=_-1-p.padInfo.top,P=E-1-p.padInfo.left,B=R/A;for(let W=0;W<T;++W)for(let e=0;e<A;++e)for(let t=0;t<$;++t){const n=t-L,r=Math.max(0,Math.ceil(n/O)),a=Math.min(D,(_+n)/O);for(let s=0;s<F;++s){const i=s-P,o=Math.max(0,Math.ceil(i/z)),u=Math.min(M,(E+i)/z);let l=0;for(let t=r;t<a;++t){const r=t*O-n;for(let n=o;n<u;++n){const a=w*W+v*t+k*n,s=N*(_-1-r)+S*(E-1-(n*z-i))+C*e;for(let t=0;t<B;++t)l+=x[a+(e*B+t)]*I[s+t]}}m[g*W+y*t+b*s+e]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},TE={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=ua.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=fi([a,a],r.dtype),o=i.values;for(let l=0;l<s.length;l++)o[l*a+l]=s[l];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},_E={kernelName:Ot,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(a.dataId).values,d=a.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:C}=Cp.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),T=ua.sizeFromShape(C),_=C.length,E=ua.getArrayFromDType(r.dtype,T);for(let A=0;A<p;++A)for(let e=0;e<y;++e){const t=e*w-x.top;for(let n=0;n<b;++n){const s=n*v-x.left;for(let i=0;i<g;++i){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const n=t+e*N;if(n>=0&&n<f)for(let t=0;t<I;++t){const u=s+t*S;if(u>=0&&u<m){const s=ua.locToIndex([A,n,u,i],c,ua.computeStrides(r.shape)),p=ua.locToIndex([e,t,i],d,ua.computeStrides(a.shape)),f=l[s]+h[p];f>o&&(o=f)}}}E[ua.locToIndex([A,e,n,i],_,ua.computeStrides(C))]=o}}}return{dataId:u.write(ua.toTypedArray(E,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},EE={kernelName:Lt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=ua.toNestedArray(r.shape,l.data.get(r.dataId).values),h=ua.toNestedArray(a.shape,l.data.get(a.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=Cp.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);ua.assert(s.rank===S.length,()=>`Error in ${Lt}, dy must have the same rank as output ${S.length}, but got ${s.rank}`);const C=ua.toNestedArray(S,l.data.get(s.dataId).values),T=ua.makeZerosNestedTypedArray(a.shape,a.dtype);for(let _=0;_<d;++_)for(let e=0;e<g;++e){const t=e*x-b.top;for(let n=0;n<y;++n){const r=n*w-b.left;for(let a=0;a<m;++a){let s=Number.MIN_SAFE_INTEGER,i=0,o=0;for(let e=0;e<v;++e){const n=t+e*I;if(n>=0&&n<p)for(let t=0;t<k;++t){const u=r+t*N;if(u>=0&&u<f){const r=c[_][n][u][a]+h[e][t][a];r>s&&(s=r,i=e,o=t)}}}T[i][o][a]+=C[_][e][n][a]}}}return{dataId:l.write(ua.toTypedArray(T,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},AE={kernelName:zt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=ua.toNestedArray(r.shape,l.data.get(r.dataId).values),h=ua.toNestedArray(a.shape,l.data.get(a.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=Cp.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);ua.assert(s.rank===S.length,()=>`Error in ${zt}, dy must have the same rank as output ${S.length}, but got ${s.rank}`);const C=ua.toNestedArray(S,l.data.get(s.dataId).values),T=ua.makeZerosNestedTypedArray(r.shape,r.dtype);for(let _=0;_<d;++_)for(let e=0;e<g;++e){const t=e*x-b.top;for(let n=0;n<y;++n){const r=n*w-b.left;for(let a=0;a<m;++a){let s=Number.MIN_SAFE_INTEGER,i=t<0?0:t,o=r<0?0:r;for(let e=0;e<v;++e){const n=t+e*I;if(n>=0&&n<p)for(let t=0;t<k;++t){const u=r+t*N;if(u>=0&&u<f){const r=c[_][n][u][a]+h[e][t][a];r>s&&(s=r,i=n,o=u)}}}T[_][i][o][a]+=C[_][e][n][a]}}}return{dataId:l.write(ua.toTypedArray(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function $E(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;let o;oC(a,"sum"),o="bool"===a.dtype?vC({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):yC({inputs:{x:a},backend:n});const u=o.shape.length,l=ua.parseAxisParam(s,o.shape),c=Cp.getAxesPermutation(l,u);let h=l,d=o;null!=c&&(d=$T({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Cp.getInnerMostAxes(h.length,u)),Cp.assertAxesAreInnerMostDims("sum",h,d.shape.length);const[p,f]=Cp.computeOutAndReduceShapes(d.shape,h);let m=gC(n,p,Cp.upcastType(d.dtype,"int32"));const g=ua.sizeFromShape(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let x=0;x<y.length;++x){const e=x*g;let t=0;for(let n=0;n<g;++n)t+=b[e+n];y[x]=t}if(i){const e=m;m=w_({inputs:{x:m},backend:n,attrs:{shape:Cp.expandShapeToKeepDim(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}var FE={kernelName:xr,backendName:"cpu",kernelFunc:$E},RE={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=Cp.decodeEinsumEquation(a,s.length);Cp.checkEinsumDimSizes(i.length,u,s);const{path:l,steps:c}=Cp.getEinsumComputePath(o,u),h=c.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:r}=Cp.getEinsumPermutation(p,u[e]);let a;Cp.isIdentityPermutation(t)?a=s[e]:(a=$T({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);ua.arraysEqual(a.shape,i)||(a=w_({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===d?d=a:(d=IT({inputs:{a:a,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=$E({inputs:{x:d},backend:n,attrs:{axis:l[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},DE={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;oC([r,a],"eluGrad");const s=new Float32Array(ua.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let u=0;u<i.length;++u){const e=i[u];s[u]=e>=1?o[u]:o[u]*(e+1)}return n.makeTensorInfo(a.shape,"float32",s)}},ME=Cp.ERF_P,OE=Cp.ERF_A1,zE=Cp.ERF_A2,LE=Cp.ERF_A3,PE=Cp.ERF_A4,BE=Cp.ERF_A5,WE=FC(Ut,e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+ME*n);return t*(1-((((BE*r+PE)*r+LE)*r+zE)*r+OE)*r*Math.exp(-n*n))}),VE={kernelName:Ut,backendName:"cpu",kernelFunc:WE};function UE(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(ua.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),o.splice(u,0,1),w_({inputs:{x:a},backend:n,attrs:{shape:o}})}var GE={kernelName:jt,backendName:"cpu",kernelFunc:UE},HE=pC((e,t)=>e/t),jE=IC(Pt,HE),qE={kernelName:Pt,backendName:"cpu",kernelFunc:jE};function KE(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[a,s],c=ua.sizeFromShape(l),h=ua.getTypedArrayFromDType("float32",c),d=ua.getTypedArrayFromDType("float32",c);for(let g=0;g<a;g++){const e=BT({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=BT({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=fC({inputs:{real:e,imag:r},backend:n}),{real:i,imag:l}=XE(a,t,n),c=Cp.mergeRealAndImagArrays(i,l);for(let t=0;t<s;t++){const e=Cp.getComplexWithIndex(c,t);h[g*s+t]=e.real,d[g*s+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=fC({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function XE(e,t,n){const r=ua.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const a=YE(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",ua.createScalarValue(r,"float32")),i=yC({inputs:{x:s},backend:n}),u=qE.kernelFunc({inputs:{a:e,b:s},backend:n}),l=qE.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=Cp.exponent(a*r,t,n),u=Cp.getComplexWithIndex(e,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),Cp.assignToTypedArray(r,s,i,a)}return r}(Cp.mergeRealAndImagArrays(s,i),r,t);return Cp.splitRealAndImagArrays(e)}var o}function YE(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=Cp.mergeRealAndImagArrays(e,t),i=n/2,o=Cp.complexWithEvenIndex(s),u=o.real,l=o.imag,c=[u.length],h=a.makeTensorInfo(c,"float32",u),d=a.makeTensorInfo(c,"float32",l),p=fC({inputs:{real:h,imag:d},backend:a}),f=Cp.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),w=fC({inputs:{real:b,imag:x},backend:a}),v=YE(u,l,i,r,a),k=v.real,I=v.imag,N=[k.length],S=a.makeTensorInfo(N,"float32",k),C=a.makeTensorInfo(N,"float32",I),T=fC({inputs:{real:S,imag:C},backend:a}),_=YE(m,g,i,r,a),E=_.real,A=_.imag,$=[E.length],F=a.makeTensorInfo($,"float32",E),R=a.makeTensorInfo($,"float32",A),D=fC({inputs:{real:F,imag:R},backend:a}),M=Cp.exponents(n,r),O=[M.real.length],z=a.makeTensorInfo(O,"float32",M.real),L=a.makeTensorInfo(O,"float32",M.imag),P=fC({inputs:{real:z,imag:L},backend:a}),B=IT({inputs:{a:P,b:D},backend:a}),W=TC({inputs:{a:T,b:B},backend:a}),V=t_({inputs:{a:T,b:B},backend:a}),U=xC({inputs:{input:W},backend:a}),G=xC({inputs:{input:V},backend:a}),H=aE({inputs:{input:W},backend:a}),j=aE({inputs:{input:V},backend:a}),q=iE({inputs:[U,G],backend:a,attrs:{axis:0}}),K=iE({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}var ZE={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=ua.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=w_({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=KE(i,!1,n),u=w_({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function JE(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||ua.inferDtype(a),o=ua.getArrayFromDType(i,ua.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}var QE={kernelName:Xt,backendName:"cpu",kernelFunc:JE},eA={kernelName:Yt,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=ua.getTypedArrayFromDType(n.dtype,ua.sizeFromShape(n.shape)),[s,i,o,u]=n.shape,l=r.data.get(n.dataId).values;for(let c=0;c<s;c++){const e=c*o*i*u;for(let t=0;t<i;t++){const n=t*(o*u);for(let r=0;r<o;r++){const i=r*u;for(let c=0;c<u;c++){const h=Math.round(o-[s,t,r,c][2]),d=e+n+i+c;let p=l[d];h>=0&&h<o&&(p=l[e+n+h*u+c]),a[d]=p}}}}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},tA=pC((e,t)=>Math.floor(e/t)),nA=IC(Jt,tA,null,"int32"),rA={kernelName:Jt,backendName:"cpu",kernelFunc:nA},aA={kernelName:Xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=uE({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=TC({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=x_(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},sA={kernelName:Yr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=IE({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=TC({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=x_(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},iA={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=ua.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[u,l,c,h]=Cp.prepareAndValidate(r,a);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const d=YC(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,l,o,c,h,r.shape,s);return n.makeTensorInfo(u,r.dtype,d.values)}},oA={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;oC([a,s],"gatherV2");let u=o;null==o&&(u=0);const l=ua.sizeFromShape(s.shape),c=ua.parseAxisParam(i,a.shape)[0],h=Cp.segment_util.collectGatherOpShapeInfo(a,s,c,u),d=w_({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),p=w_({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,l/h.batchSize]}}),f=[h.batchSize,h.outerSize,l/h.batchSize,h.sliceSize],m=n.bufferSync(p),g=ZC(n.bufferSync(d),m,f);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.makeTensorInfo(h.outputShape,g.dtype,g.values)}},uA={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=ua.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=w_({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=KE(i,!0,n),u=w_({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},lA=FC(un,e=>Number.isFinite(e)?1:0,"bool"),cA={kernelName:un,backendName:"cpu",kernelFunc:lA},hA=FC(ln,e=>Math.abs(e)===1/0?1:0,"bool"),dA={kernelName:ln,backendName:"cpu",kernelFunc:hA},pA=FC(cn,e=>Number.isNaN(e)?1:0,"bool"),fA={kernelName:cn,backendName:"cpu",kernelFunc:pA},mA={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=cT(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},gA=FC(gn,e=>Math.log1p(e)),yA={kernelName:gn,backendName:"cpu",kernelFunc:gA},bA=pC((e,t)=>e&&t),xA=IC(yn,bA,null,"bool"),wA={kernelName:yn,backendName:"cpu",kernelFunc:xA},vA=FC(bn,e=>e?0:1,"bool"),kA={kernelName:bn,backendName:"cpu",kernelFunc:vA},IA=pC((e,t)=>e||t),NA=IC(xn,IA,null,"bool"),SA={kernelName:xn,backendName:"cpu",kernelFunc:NA},CA={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r;oC(a,"LRN");const l=a.shape[3],c=l-1,h=n.data.get(a.dataId).values,d=ua.sizeFromShape(a.shape),p=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-s);const r=e-t+Math.min(t+s,c);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let m=0;m<d;m++){const e=f(m),t=h[m]*Math.pow(i+o*e,-u);p[m]=t}return n.makeTensorInfo(a.shape,a.dtype,p)}},TA={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;oC(i,"LRNGrad");const h=ua.sizeFromShape(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){const e=b%d,t=b-e+Math.max(0,e-o),n=b-e+Math.min(d,e+o+1);let r=0;for(let a=t;a<n;a++)r+=Math.pow(f[a],2);r=l*r+u;for(let a=t;a<n;a++){let e=-2*l*c*f[a]*m[b]/r;b===a&&(e+=Math.pow(r,-c)),e*=p[b],g[a]+=e}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function _A(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n;let u=a.shape;const l=u.length,c=ua.parseAxisParam(s,u);let h=c;const d=Cp.getAxesPermutation(h,l);let p=o.data.get(a.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[d[t]];p=AT(p,u,a.dtype,d,e),h=Cp.getInnerMostAxes(h.length,l),u=e}oC(a,"max"),Cp.assertAxesAreInnerMostDims("max",h,l);const[f,m]=Cp.computeOutAndReduceShapes(u,h),g=fT(p,ua.sizeFromShape(m),f,a.dtype),y=o.write(g,f,a.dtype);let b=f;return i&&(b=Cp.expandShapeToKeepDim(f,c)),{dataId:y,shape:b,dtype:a.dtype}}var EA={kernelName:In,backendName:"cpu",kernelFunc:_A},AA={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;oC(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;ua.assert(Cp.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const l=Cp.computePool2DInfo(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&ua.arraysEqual(l.inShape,l.outShape))c=yC({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=ua.computeStrides(a.shape),r=H_(e,0,a.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},$A={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;oC(a,"maxPool3d");const c=Cp.computePool3DInfo(a.shape,s,i,1,o,u,l),h=q_(n.data.get(a.dataId).values,0,a.dtype,ua.computeStrides(a.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},FA={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;oC([a,s],"maxPool3DGrad");const c=Cp.computePool3DInfo(s.shape,i,o,1,u,l),h=function(e,t){const n=fi(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-d;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*a-p;let d=l;for(;d<0;)d+=o;const v=Math.min(t.inHeight,c+l);for(let a=0;a<t.outWidth;++a){const p=a*s-f;let k=p;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+p);let N=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let r=d;r<v;r+=o){const a=r-l;for(let s=k;s<I;s+=u){const i=s-p,o=e.get(m,t,r,s,g);o>=N&&(N=o,S=n*c*h+a*c+i)}}}n.set(S,m,y,r,a,g)}}}return n}(n.bufferSync(s),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,I=x-1-c.padInfo.top,N=fi(s.shape,"float32"),S=n.bufferSync(a);for(let C=0;C<c.batchSize;++C)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=t-v,s=n-I,i=r-k;let o=0;for(let t=0;t<b;t+=m){const n=(a+t)/d;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let r=0;r<x;r+=g){const a=(s+r)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let s=0;s<w;s+=y){const u=(i+s)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const l=b*x*w-1-h.get(C,n,a,u,e)===t*x*w+r*w+s?1:0;0!==l&&(o+=S.get(C,n,a,u,e)*l)}}}N.set(o,C,t,n,r,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},RA={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;oC([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Cp.computePool2DInfo(o.shape,u,l,1,c,h),p=n.data.get(o.dataId).values,f=fi(d.outShape,o.dtype,j_(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,k=x-1-d.padInfo.top,I=fi(o.shape,"float32"),N=n.data.get(a.dataId).values,S=fi(a.shape,"float32",N);for(let C=0;C<d.batchSize;++C)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const r=t-k,a=n-v;let s=0;for(let t=0;t<x;t+=y){const n=(r+t)/m;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let r=0;r<w;r+=b){const i=(a+r)/g;if(i<0||i>=d.outWidth||Math.floor(i)!==i)continue;const o=x*w-1-f.get(C,n,i,e)===t*w+r?1:0;0!==o&&(s+=S.get(C,n,i,e)*o)}}I.set(s,C,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},DA={kernelName:En,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;oC(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=Cp.computePool2DInfo(r.shape,a,s,[1,1],i),[h,d]=function(e,t,n,r,a){const s=H_(e,0,n,ua.computeStrides(t),a,"max"),i=j_(e,t,n,a,!0,r);return[s.values,i.values]}(l,r.shape,r.dtype,o,c),p=u.write(h,c.outShape,r.dtype),f=u.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},MA={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=ua.parseAxisParam(s,a.shape),u=Cp.computeOutAndReduceShapes(a.shape,o),l=ua.sizeFromShape(u[1]),c=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));c.push(h);const d=vC({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});c.push(d);const p=jE({inputs:{a:d,b:h},backend:n});c.push(p);const f=$E({inputs:{x:p},backend:n,attrs:{axis:s,keepDims:i}});return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}},OA={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;oC(a,"min");const o=ua.parseAxisParam(s,a.shape);let u=o;const l=Cp.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=$T({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Cp.getInnerMostAxes(u.length,a.shape.length)),Cp.assertAxesAreInnerMostDims("min",u,c.shape.length);const[h,d]=Cp.computeOutAndReduceShapes(c.shape,u),p=ua.sizeFromShape(d),f=ua.makeZerosTypedArray(ua.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const r=m[e+n];(Number.isNaN(r)||r<t)&&(t=r)}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=w_({inputs:{x:g},backend:n,attrs:{shape:Cp.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},zA={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;oC(a,"mirrorPad");const o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),u=s.map(e=>e[0]),l=s.map((e,t)=>e[0]+a.shape[t]),c="reflect"===i?0:1,h=n.data.get(a.dataId).values,d=a.shape.length,p=ua.computeStrides(a.shape),f=ua.sizeFromShape(o),m=o.length,g=ua.computeStrides(o),y=ua.getTypedArrayFromDType(a.dtype,f);for(let b=0;b<f;b++){let e=ua.indexToLoc(b,m,g);for(let n=0;n<m;n++)e[n]<u[n]?e[n]=2*u[n]-e[n]-c:e[n]>=l[n]&&(e[n]=2*(l[n]-1)-e[n]+c);e=e.map((e,t)=>e-u[t]);const t=ua.locToIndex(e,d,p);y[b]=h[t]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},LA=pC((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),PA=IC(Dn,LA),BA={kernelName:Dn,backendName:"cpu",kernelFunc:PA},WA=y(_());function VA(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=ua.parseAxisParam([o],a.shape),l=_A({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=Cp.expandShapeToKeepDim(l.shape,u),h=w_({inputs:{x:l},backend:n,attrs:{shape:c}}),d=t_({inputs:{a:a,b:h},backend:n}),p=VC({inputs:{x:d},backend:n}),f=$E({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=w_({inputs:{x:f},backend:n,attrs:{shape:c}}),g=jE({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var UA={kernelName:kr,backendName:"cpu",kernelFunc:VA},GA={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;oC(a,"multinomial");const u=o?a:VA({inputs:{logits:a},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,s],p=ua.makeZerosTypedArray(ua.sizeFromShape(d),"int32");for(let f=0;f<l;++f){const e=f*c,t=new Float32Array(c-1);t[0]=h[e];for(let a=1;a<t.length;++a)t[a]=t[a-1]+h[e+a];const n=WA.alea(i.toString()),r=f*s;for(let a=0;a<s;++a){const e=n();p[r+a]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){p[r+a]=n;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}},HA=gf.nonMaxSuppressionV3Impl,jA={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;oC(a,"NonMaxSuppression");const l=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:h}=HA(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},qA=gf.nonMaxSuppressionV4Impl,KA={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;oC(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=qA(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},XA=gf.nonMaxSuppressionV5Impl,YA={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;oC(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=XA(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},ZA={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;oC(a,"oneHot");const u=ua.sizeFromShape(a.shape),l=new Float32Array(u*s);l.fill(o);const c=n.data.get(a.dataId).values;for(let h=0;h<u;++h)c[h]>=0&&c[h]<s&&(l[h*s+c[h]]=i);return n.makeTensorInfo([...a.shape,s],"int32",l)}};function JA(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=xC({inputs:{input:r},backend:n}),t=JA({inputs:{x:e},backend:n}),a=aE({inputs:{input:r},backend:n}),s=JA({inputs:{x:a},backend:n}),i=fC({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return JE({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var QA={kernelName:Gr,backendName:"cpu",kernelFunc:JA},e$={kernelName:Vn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=xC({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=aE({inputs:{input:a},backend:r}),i=JA({inputs:{x:s},backend:r}),o=fC({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return JE({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function t$(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return UE({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach(e=>{ua.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ua.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],u=iE({inputs:t.map(e=>{const t=UE({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}var n$={kernelName:Gn,backendName:"cpu",kernelFunc:t$},r$={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;oC(a,"pad");const o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),u=s.map(e=>e[0]),l=n.data.get(a.dataId).values,c=ua.sizeFromShape(a.shape),h=a.shape.length,d=ua.computeStrides(a.shape),p=ua.sizeFromShape(o),f=o.length,m=ua.computeStrides(o),g=ua.getTypedArrayFromDType(a.dtype,p);0!==i&&g.fill(i);for(let y=0;y<c;y++){const e=ua.indexToLoc(y,h,d).map((e,t)=>e+u[t]);g[ua.locToIndex(e,f,m)]=l[y]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},a$=pC((e,t)=>Math.pow(e,t)),s$=IC(qn,a$),i$={kernelName:qn,backendName:"cpu",kernelFunc:s$},o$={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=MT(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},u$=FC(Jn,e=>1/e),l$={kernelName:Jn,backendName:"cpu",kernelFunc:u$},c$={kernelName:rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;oC(a,"resizeBilinear");const u=ua.computeStrides(a.shape),[l,c]=o,[h,d,p,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(ua.sizeFromShape([h,l,c,f])),y=[s&&l>1?d-1:d,s&&c>1?p-1:p],b=[s&&l>1?l-1:l,s&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let k=0;k<h;k++)for(let e=0;e<l;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(d-1,Math.ceil(t)),s=k*u[0]+n*u[1],o=k*u[0]+a*u[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),a=t-n,l=Math.min(p-1,Math.ceil(t)),c=s+n*u[2],h=o+n*u[2],d=s+l*u[2],y=o+l*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],s=t+(m[d+e]-t)*a;g[x++]=s+(n+(m[y+e]-n)*a-s)*r}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}},h$={kernelName:ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;oC([s,a],"resizeBilinearGrad");const o=ua.computeStrides(a.shape),[u,l,c,h]=a.shape,[,d,p]=s.shape,f=new Float32Array(u*l*c*h),m=[i&&d>1?l-1:l,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values;let w=0;for(let v=0;v<u;v++){const e=v*o[0];for(let t=0;t<d;t++){const n=t*y,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),s=e+r*o[1],i=e+a*o[1],u=n-r,d=1-u;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),a=t-n,l=1-a,p=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],v=d*l,k=d*a,I=u*l,N=u*a;for(let e=0;e<h;e++){const t=x[w++];f[p+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*N}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}},d$={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;oC(a,"resizeNearestNeighbor");const u=ua.computeStrides(a.shape),[l,c]=o,[h,d,p,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*l*c*f),y=[s&&l>1?d-1:d,s&&c>1?p-1:p],b=[s&&l>1?l-1:l,s&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let k=0;k<h;k++){const e=k*u[0];for(let t=0;t<l;t++){const n=i?x*(t+.5):x*t;let r=Math.min(d-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=e+r*u[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(p-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<f;e++)g[v++]=m[r+e]}}}return n.makeTensorInfo([h,l,c,f],a.dtype,g)}},p$={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;oC([s,a],"resizeNearestNeighborGrad");const o=ua.computeStrides(a.shape),u=ua.computeStrides(s.shape),[l,c,h,d]=a.shape,[,p,f]=s.shape,m=new Float32Array(l*c*h*d),g=n.data.get(s.dataId).values,y=[i&&p>1?c-1:c,i&&f>1?h-1:h],b=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,N=2*Math.ceil(k)+2;for(let S=0;S<l;S++){const e=S*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],r=Math.floor(t*v),a=Math.floor(r-I/2);for(let s=0;s<h;s++){const r=n+s*o[2],l=Math.floor(s*k),y=Math.floor(l-N/2);for(let n=0;n<d;n++){let o=0;for(let r=0;r<I;r++){const l=r+a;if(l<0||l>=p)continue;const d=e+l*u[1],m=l*x;if(t===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<N;e++){const t=e+y;if(t<0||t>=f)continue;const r=d+t*u[2],a=t*w;s===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[r+n])}}m[r+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}},f$={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;oC(a,"reverse");const i=a.shape.length,o=ua.parseAxisParam(s,a.shape);if(0===i)return yC({inputs:{x:a},backend:n});const u=new Ma(a.shape,a.dtype),l=n.bufferSync(a);for(let c=0;c<u.size;c++){const e=u.indexToLoc(c),t=e.slice();o.forEach(e=>t[e]=a.shape[e]-1-t[e]),u.set(l.get(...t),...e)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},m$={kernelName:qr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=ua.getTypedArrayFromDType(r.dtype,ua.sizeFromShape(r.shape)),[l,c,h,d]=r.shape,[p,f]=Cp.getImageCenter(i,c,h),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let b=0;b<l;b++){const e=b*h*c*d;for(let t=0;t<c;t++){const n=t*(h*d);for(let r=0;r<h;r++){const a=r*d;for(let i=0;i<d;i++){const o=[l,t,r,i],b=o[2],x=o[1];let w=(b-p)*g-(x-f)*m,v=(b-p)*m+(x-f)*g;w=Math.round(w+p),v=Math.round(v+f);let k=s;"number"!=typeof s&&(k=3===i?255:s[i]),w>=0&&w<h&&v>=0&&v<c&&(k=y[e+v*(h*d)+w*d+i]),u[e+n+a+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},g$=FC(or,e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),y$={kernelName:or,backendName:"cpu",kernelFunc:g$};function b$(e,t,n,r,a,s,i,o,u,l){const c=[r/a,a],h=e.values,d=t.values;if(0===r)return fi(n,t.dtype);const p=fi(c,t.dtype);p.values.fill(u);for(let f=0;f<s;f++){const e=[];let s=0;for(let t=0;t<i;t++){const n=h[f*i+t];e.push(n),s+=n*o[t]}if(s<0||s>=r/a)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<a;n++)l?p.values[s*a+n]+=d[f*a+n]:p.values[s*a+n]=0===t.rank?d[0]:d[f*a+n]}return p}var x$={kernelName:lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Cp.calculateShapes(s,a,i),d=b$(n.bufferSync(a),n.bufferSync(s),i,h,l,u,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}},w$={kernelName:cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;oC([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=Qa(a.dtype,s.dtype),h=ua.makeZerosTypedArray(ua.sizeFromShape(a.shape),c);let d=0;const p=0===i||i>1||1===a.shape.length?1:ua.sizeFromShape(a.shape.slice(1));for(let f=0;f<o.length;f++)for(let e=0;e<p;e++)h[d++]=1===o[f]?u[f]:l[f];return n.makeTensorInfo(a.shape,c,h)}},v$=Cp.SELU_SCALEALPHA,k$=Cp.SELU_SCALE,I$=FC(hr,e=>e>=0?k$*e:v$*(Math.exp(e)-1)),N$={kernelName:hr,backendName:"cpu",kernelFunc:I$},S$=FC(mr,e=>e<0?-1:e>0?1:0),C$={kernelName:mr,backendName:"cpu",kernelFunc:S$},T$=FC(pr,e=>Math.sin(e)),_$={kernelName:pr,backendName:"cpu",kernelFunc:T$},E$=FC(fr,e=>Math.sinh(e)),A$={kernelName:fr,backendName:"cpu",kernelFunc:E$},$$=Math.log(1.1920928955078125e-7)+2,F$=FC(yr,e=>{const t=e>-$$,n=e<$$,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a}),R$={kernelName:yr,backendName:"cpu",kernelFunc:F$},D$={kernelName:wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;oC([a],"spaceToBatchND");const o=ua.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let g=1+s.length;g<a.shape.length;++g)u.push([0,0]);const l=r$.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=Cp.getReshaped(l.shape,s,o,!1),h=Cp.getPermuted(c.length,s.length,!1),d=Cp.getReshapedPermuted(l.shape,s,o,!1),p=w_({inputs:{x:l},backend:n,attrs:{shape:c}}),f=$T({inputs:{x:p},backend:n,attrs:{perm:h}}),m=w_({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}},M$={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n        "+s.shape);if(2!==r.shape.length)throw new Error("Indices must be a matrix, saw:\n        "+r.shape);if(1!==a.shape.length)throw new Error("Values must be a vector, saw:\n        "+a.shape);if(0!==i.shape.length)throw new Error("Default value must be a scalar, saw:\n        "+i.shape);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=VT(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},O$={kernelName:Nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape\n        "+r.shape);if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape\n        "+a.shape);if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape "+s.shape);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[l,c,h]=UT(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},z$={kernelName:Sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n          "+a.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n          "+s.shape);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=GT(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},L$={kernelName:Cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n         "+a.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n         "+s.shape);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=GT(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},P$={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=Cp.calculateShapes(s,a,o),p=b$(n.bufferSync(a),n.bufferSync(s),o,d,c,l,u,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},B$={kernelName:vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ua.parseAxisParam(i,a.shape)[0],u=Cp.prepareSplitSize(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map(e=>{const t=[...c];t[o]=e;const r=BT({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r})}},W$=FC(br,e=>Math.sqrt(e)),V$={kernelName:br,backendName:"cpu",kernelFunc:W$},U$={kernelName:Er,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;oC(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let i=0;i<a.length;++i){const e=a[i];s[i]=e*e}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},G$=FC(Hr,(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),H$={kernelName:Hr,backendName:"cpu",kernelFunc:G$},j$={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;oC(a,"stridedSlice");const{nonStrided:p,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=Ji.sliceInfo(a.shape,s,i,o,u,l,c,h,d),x=w_({inputs:{x:a},backend:n,attrs:{shape:y}});let w;if(p){const e=BT({inputs:{x:x},backend:n,attrs:{begin:f,size:g}});w=w_({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some(e=>0===e))w=n.makeTensorInfo(b,a.dtype,[]);else{const e=KT(b,n.bufferSync(x),m,f);w=n.makeTensorInfo(e.shape,e.dtype,e.values)}const v=w_({inputs:{x:w},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),v}},q$={kernelName:$r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=XT(d,p,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},K$={kernelName:Fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: "+s.shape);if(0!==i.shape.length)throw new Error("Delimiter must be a scalar, got shape: "+i.shape);const o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=ZT(o,u,a),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},X$={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=JT(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},Y$=FC(Mr,e=>Math.tan(e)),Z$={kernelName:Mr,backendName:"cpu",kernelFunc:Y$},J$=FC(Or,e=>Math.tanh(e));function Q$(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return ua.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;return n<0?t<=1?n=0:n+=t*(Math.trunc(-n/(t-1))+1):n>t-1&&(t<=1?n=0:n-=t*Math.trunc(n/(t-1))),ua.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return ua.clamp(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function eF(e,t,n,r,a,s,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+l]:c}function tF(e,t,n,r,a,s,i,o,u,l,c){return eF(e,t,n,r,a,s,i,Math.round(o),Math.round(u),l,c)}function nF(e,t,n,r,a,s,i,o,u,l,c){const h=Math.floor(o),d=Math.floor(u),p=h+1,f=d+1;return(p-o)*((f-u)*eF(e,t,n,r,a,s,i,h,d,l,c)+(u-d)*eF(e,t,n,r,a,s,i,h,f,l,c))+(o-h)*((f-u)*eF(e,t,n,r,a,s,i,p,d,l,c)+(u-d)*eF(e,t,n,r,a,s,i,p,f,l,c))}var rF=[N_,dC,C_,__,_C,E_,A_,$_,F_,R_,M_,z_,P_,V_,G_,K_,X_,Y_,Z_,I_,J_,Q_,eE,kC,OC,nE,mC,rE,oE,cE,hE,lE,pE,fE,dE,gE,bE,xE,wE,vE,kE,NE,SE,CE,TE,_E,AE,EE,qE,RE,o_,DE,BC,VE,UC,GE,jC,ZE,QE,eA,XC,rA,aA,sA,iA,oA,eT,rT,bC,uA,sE,cA,dA,fA,l_,iT,lT,mA,pT,yA,wA,kA,SA,CA,TA,yT,AA,$A,FA,RA,DA,EA,MA,OA,wT,zA,BA,GA,NT,CT,jA,KA,YA,ET,ZA,e$,n$,r$,i$,d_,DT,o$,wC,l$,f_,g_,v_,c$,h$,d$,p$,f$,m$,y$,LT,x$,w$,N$,b_,C$,_$,A$,WT,UA,R$,D$,M$,O$,z$,L$,P$,B$,V$,U$,qT,H$,j$,q$,K$,X$,n_,FE,Z$,{kernelName:Or,backendName:"cpu",kernelFunc:J$},{kernelName:zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;oC(a,"tile");const i=r_(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s}=r;oC(a,"topk");const i=n.data.get(a.dataId).values,[o,u]=a_(i,a.shape,a.dtype,s);return[n.makeTensorInfo(o.shape,o.dtype,o.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},FT,{kernelName:Pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,d,p]=a.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],y=ua.computeStrides(a.shape),b=y[0],x=y[1],w=y[2],v=ua.getTypedArrayFromDType(a.dtype,ua.sizeFromShape(g));v.fill(u);const k=r.data.get(a.dataId).values,I=r.data.get(s.dataId).values;for(let N=0;N<c;++N){const e=1===s.shape[0]?I:I.subarray(8*N,8*N+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let r=0;r<p;++r){let a;const s=e[6]*n+e[7]*t+1;if(0===s)continue;const l=(e[3]*n+e[4]*t+e[5])/s,c=Q$((e[0]*n+e[1]*t+e[2])/s,d,o),p=Q$(l,h,o);switch(i){case"nearest":a=tF(k,h,d,b,x,w,N,p,c,r,u);break;case"bilinear":a=nF(k,h,d,b,x,w,N,p,c,r,u);break;default:throw new Error("Error in Transform: Expect 'nearest' or 'bilinear', but got "+i)}v[N*b+t*x+n*w+r]=a}return r.makeTensorInfo(g,a.dtype,v)}return{dataId:r.write(v,g,a.dtype),shape:a.shape,dtype:a.dtype}}},{kernelName:Wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;oC(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:l}=s_(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:Vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let l=0;for(let p=0;p<i;p++)p!==s&&(u[l++]=a.shape[p]);const c=new Array(i).fill(0),h=a.shape.slice();h[s]=1;const d=new Array(o);for(let p=0;p<d.length;p++){c[s]=p;const e=BT({inputs:{x:a},backend:n,attrs:{begin:c,size:h}});d[p]=w_({inputs:{x:e},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(e)}return d}},{kernelName:Ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;oC(a,"unsortedSegmentSum");const o=[],u=[],l=a.shape.length-s.shape.length;let c=s;for(let d=0;d<l;++d){const e=UE({inputs:{input:c},backend:n,attrs:{dim:d+1}});c=e,u.push(e)}for(let d=0;d<i;++d){const e=ua.createScalarValue(d,"int32"),t=n.makeTensorInfo([],"int32",e),r=PC({inputs:{a:t,b:c},backend:n}),s=vC({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),i=IT({inputs:{a:s,b:a},backend:n}),l=$E({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});o.push(l),u.push(t),u.push(r),u.push(s),u.push(i),u.push(l)}const h=t$({inputs:o,backend:n,attrs:{axis:0}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},QA];for(const WG of rF)na(WG);var aF,sF,iF,oF,uF,lF,cF={},hF={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function dF(e){if(!(e in cF)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete cF[e]},!1),1===e?t.getContext("webgl",hF)||t.getContext("experimental-webgl",hF):t.getContext("webgl2",hF)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;cF[e]=t}const t=cF[e];return t.isContextLost()?(delete cF[e],dF(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),cF[e])}function pF(e,t){return[t,e]}function fF(e){const t=ua.sizeFromShape(e),n=Math.ceil(t/4);return ua.sizeToSquarishShape(n)}function mF(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function gF(e,t){const n=e;let r,a,s,i,o,u,l,c,h,d;return 2===We().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function yF(e,t){const n=t();return We().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}(e,t))}(e),n}function bF(e){return!!(We().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function xF(e,t){return _F(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}(sF=aF||(aF={}))[sF.DENSE=0]="DENSE",sF[sF.SHARED_BATCH=1]="SHARED_BATCH",(oF=iF||(iF={}))[oF.RENDER=0]="RENDER",oF[oF.UPLOAD=1]="UPLOAD",oF[oF.PIXELS=2]="PIXELS",oF[oF.DOWNLOAD=3]="DOWNLOAD",(lF=uF||(uF={}))[lF.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",lF[lF.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",lF[lF.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",lF[lF.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",lF[lF.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";var wF,vF,kF=/ERROR: [0-9]+:([0-9]+):/g;function IF(e,t){if(yF(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function NF(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(yF(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),yF(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),yF(e,()=>e.enableVertexAttribArray(o)),!0)}function SF(e,t,n){yF(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),yF(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function CF(e,t){yF(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),yF(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function TF(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}(e,t))}function _F(e,t,n){const r=yF(e,()=>t());if(null==r)throw new Error(n);return r}function EF(e,t=2){return ua.sizeFromShape(e.slice(0,e.length-t))}function AF(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function $F(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[EF(e),...AF(e)]),t}function FF(e){return e%2==0}function RF(e,t){if(e=e.slice(-2),t=t.slice(-2),ua.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(FF(n)&&FF(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&FF(e[0])&&FF(t[0])}function DF(e,t){return null!=e.getExtension(t)}function MF(e){try{if(null!=dF(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function OF(e){const t=gF(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function zF(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&ua.assert("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the WebGL backend.")})}var LF=We();function PF(){let e,t,n,r,a,s,i,o,u,l;return 2===We().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function BF(e,t,n="index"){const r=ua.computeStrides(t);return r.map((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`).join("")}function WF(e){const t=ua.computeStrides(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}LF.registerFlag("HAS_WEBGL",()=>LF.getNumber("WEBGL_VERSION")>0),LF.registerFlag("WEBGL_VERSION",()=>MF(2)?2:MF(1)?1:0),LF.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),LF.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===LF.get("WEBGL_VERSION")),LF.registerFlag("WEBGL_CPU_FORWARD",()=>!0),LF.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),LF.registerFlag("WEBGL_PACK",()=>LF.getBool("HAS_WEBGL")),LF.registerFlag("WEBGL_PACK_NORMALIZATION",()=>LF.getBool("WEBGL_PACK")),LF.registerFlag("WEBGL_PACK_CLIP",()=>LF.getBool("WEBGL_PACK")),LF.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>LF.getBool("WEBGL_PACK")),LF.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>LF.getBool("WEBGL_PACK")),LF.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>LF.getBool("WEBGL_PACK")),LF.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>LF.getBool("WEBGL_PACK")),LF.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>LF.getBool("WEBGL_PACK")),LF.registerFlag("WEBGL_PACK_REDUCE",()=>LF.getBool("WEBGL_PACK")),LF.registerFlag("WEBGL_LAZILY_UNPACK",()=>LF.getBool("WEBGL_PACK")),LF.registerFlag("WEBGL_CONV_IM2COL",()=>LF.getBool("WEBGL_PACK")),LF.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(e){if(null==wF){const t=dF(e);wF=t.getParameter(t.MAX_TEXTURE_SIZE)}return wF}(LF.getNumber("WEBGL_VERSION"))),LF.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(e){if(null==vF){const t=dF(e);vF=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,vF)}(LF.getNumber("WEBGL_VERSION"))),LF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=LF.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=dF(e);return t=DF(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:DF(n,"EXT_disjoint_timer_query")?1:0,t}(e)}),LF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>LF.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ds.isMobile()),LF.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(e){if(0===e)return!1;const t=dF(e);if(1===e){if(!DF(t,"OES_texture_float"))return!1}else if(!DF(t,"EXT_color_buffer_float"))return!1;return OF(t)}(LF.getNumber("WEBGL_VERSION"))),LF.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!LF.getBool("WEBGL_FORCE_F16_TEXTURES")&&LF.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),LF.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function(e){if(0===e)return!1;const t=dF(e);if(1!==e){if(DF(t,"EXT_color_buffer_float"))return OF(t);const e="EXT_color_buffer_half_float";if(DF(t,e)){const n=t.getExtension(e);return function(e,t){const n=gF(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!DF(t,"OES_texture_float")&&!!DF(t,"WEBGL_color_buffer_float")&&OF(t)}(LF.getNumber("WEBGL_VERSION"))),LF.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(e=LF.getNumber("WEBGL_VERSION"))&&null!=dF(e).fenceSync;var e}),LF.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>LF.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),LF.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),LF.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>ds.isMobile()&&LF.getBool("IS_CHROME")?1:-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),LF.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);var VF="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";function UF(e,t,n,r,a,s){!function(e,t){const n=We().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return _F(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return yF(e,()=>e.bindTexture(o,i)),yF(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),yF(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),yF(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),yF(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),yF(e,()=>e.texImage2D(o,0,r,t,n,0,a,s,null)),yF(e,()=>e.bindTexture(e.TEXTURE_2D,null)),i}function GF(e){return e.internalFormatFloat}function HF(e){return e.internalFormatHalfFloat}function jF(e){return e.downloadTextureFormat}function qF(e){return e.internalFormatPackedFloat}function KF(e){return e.internalFormatPackedHalfFloat}var{getBroadcastDims:XF}=Cp;function YF(e,t,n,r){const a=[];e.forEach(e=>{const t=ua.sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`))});const s=a.join("\n"),i=e.map(e=>function(e,t,n=!1){let r="";return r+=n?JF(e):ZF(e),e.shapeInfo.logicalShape.length<=t.logicalShape.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=XF(e.shapeInfo.logicalShape,t.logicalShape),u=sR(i),l=i-s;let c;const h=["x","y","z","w","u","v"];c=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map(e=>`coords.${h[e+l]} = 0;`).join("\n");let d="";d=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+h[t+l]).join(", ");let p="return outputValue;";const f=1===ua.sizeFromShape(e.shapeInfo.logicalShape),m=1===ua.sizeFromShape(t.logicalShape);if(1!==s||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length;if(!e.shapeInfo.isUniform&&s===i&&null==e.shapeInfo.flatOffset&&ua.arraysEqual(e.shapeInfo.texShape,t.texShape))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const o=sR(i),u=XF(e.shapeInfo.logicalShape,t.logicalShape),l=i-s;let c;const h=["x","y","z","w","u","v"];c=0===s?"":i<2&&u.length>=1?"coords = 0;":u.map(e=>`coords.${h[e+l]} = 0;`).join("\n");let d="";return d=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+h[t+l]).join(", "),`\n    float ${a}() {\n      ${o} coords = getOutputCoords();\n      ${c}\n      return get${r}(${d});\n    }\n  `}(e,t)),r}(e,t,r)).join("\n"),o=t.texShape,u=PF(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,h,d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${QF}\n    ${eR}\n    ${tR}\n  `}(u);return t.isPacked?(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ua.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let s=a,i="",o="b, r, c";for(let u=2;u<e.length-1;u++)s*=e[e.length-u-1],i=`\n      int b${u} = index / ${s};\n      index -= b${u} * ${s};\n    `+i,o=`b${u}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,o),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return ua.arraysEqual(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=BF(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=BF(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=BF(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=BF(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}var n}(t.logicalShape,o),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),r&&(d+=nR),[d,l,h,s,c,i,n].join("\n")}function ZF(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[s,i]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${s}, ${i}, ${rR(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${aR(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],s=r[1];if(1===s&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=rR(t);return 1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${s}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&ua.arraysEqual(t,a))return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${a[0]}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const{newShape:s,keptDims:i}=ua.squeezeShape(t);if(s.length<t.length){const t=["row","col"];return`\n      ${ZF(iR(e,s))}\n      float ${r}(int row, int col) {\n        return ${r}(${oR(t,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${aR(e)}\n      }\n    `;const o=a[0],u=a[1],l=rR(n);return 1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${l}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${o}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===o?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${l}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${l};\n    vec2 uv = uvFromFlat(${o}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],s=t[2],{newShape:i,keptDims:o}=ua.squeezeShape(t);if(i.length<t.length){const t=["row","col","depth"];return`\n        ${ZF(iR(e,i))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${oR(t,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${s}, 1)));\n        ${aR(e)}\n      }\n    `;const u=e.shapeInfo.texShape,l=u[0],c=u[1],h=e.shapeInfo.flatOffset;return c===a&&null==h?`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${c}.0, ${l}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `:c===s&&null==h?`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${s} + depth + ${rR(n)};\n        vec2 uv = uvFromFlat(${l}, ${c}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],s=t[2]*a,i=t[1]*s,{newShape:o,keptDims:u}=ua.squeezeShape(t);if(o.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${ZF(iR(e,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${oR(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${s}, ${a}, 1)));\n        ${aR(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,h=c[0],d=c[1];return d===i&&null==l?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:d===a&&null==l?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${s} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${d}, index + ${rR(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:l}=ua.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${ZF(iR(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${oR(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${aR(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];return p===o&&null==c?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:p===a&&null==c?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${rR(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=ua.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${ZF(iR(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${oR(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${aR(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];return f===c&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===i&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${rR(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(t.length+"-D input sampling is not yet supported")}}function JF(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${PF().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=PF();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=a[0],i=a[1],o=PF();if(null!=a&&ua.arraysEqual(t,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${s}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0]){const n=[1,2],a=["b","row","col"];return`\n        ${JF(iR(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${oR(a,n)});\n        }\n      `}const i=s[0],o=s[1],u=Math.ceil(t[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${u*Math.ceil(t[1]/2)}, ${u}, b, row, col);\n      return ${PF().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=i[0],u=i[1],l=Math.ceil(t[n-1]/2);let c=l*Math.ceil(t[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${l} + (col / 2)`;for(let p=2;p<n-1;p++)h=`int b${p}, `+h,c*=t[n-p-1],d=`b${p} * ${c} + `+d;return`\n    vec4 ${a}(${h}) {\n      int index = ${d};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${PF().texture2D}(${r}, uv);\n    }\n  `}(e)}}var QF="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",eR="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",tR="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",nR="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function rR(e){return"offset"+e}function aR(e){const t=e.name,n=ua.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function sR(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function iR(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function oR(e,t){return t.map(t=>e[t]).join(", ")}function uR(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!ua.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!ua.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)})}var{addImpl:lR,bincountImpl:cR,bincountReduceImpl:hR,ceilImpl:dR,concatImpl:pR,equalImpl:fR,expImpl:mR,expm1Impl:gR,floorImpl:yR,gatherNdImpl:bR,gatherV2Impl:xR,greaterImpl:wR,greaterEqualImpl:vR,lessImpl:kR,lessEqualImpl:IR,linSpaceImpl:NR,logImpl:SR,maxImpl:CR,maximumImpl:TR,minimumImpl:_R,multiplyImpl:ER,negImpl:AR,notEqualImpl:$R,prodImpl:FR,rangeImpl:RR,rsqrtImpl:DR,simpleAbsImpl:MR,sliceImpl:OR,sparseFillEmptyRowsImpl:zR,sparseReshapeImpl:LR,sparseSegmentReductionImpl:PR,stridedSliceImpl:BR,stringNGramsImpl:WR,stringSplitImpl:VR,stringToHashBucketFastImpl:UR,subImpl:GR,tileImpl:HR,topKImpl:jR,transposeImpl:qR,uniqueImpl:KR}=cC;function XR(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function YR(e,t){return 1===t?[e]:XR(e,t)}var ZR=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2==1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${a}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${a>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${BF(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${WF(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function JR(e,t,n,r,a){const s=function(e,t){switch(e){case uF.PACKED_2X2_FLOAT32:return qF(t);case uF.PACKED_2X2_FLOAT16:return KF(t);case uF.UNPACKED_FLOAT32:return GF(t);case uF.UNPACKED_FLOAT16:return HF(t);case uF.PACKED_4X1_UNSIGNED_BYTE:return jF(t);default:throw new Error("Unknown physical texture type "+e)}}(t,r);let i;if(a){const[t,n]=mF(e[0],e[1]);i=t*n}else{const[t,n]=pF(e[0],e[1]);i=t*n}return i*function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;throw new Error("Unknown internal format "+t)}(n,s)}function QR(e,t){if(e===iF.UPLOAD)return uF.PACKED_2X2_FLOAT32;if(e===iF.RENDER||null==e)return function(e){return We().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?uF.PACKED_2X2_FLOAT32:uF.UNPACKED_FLOAT32:e?uF.PACKED_2X2_FLOAT16:uF.UNPACKED_FLOAT16}(t);if(e===iF.DOWNLOAD||e===iF.PIXELS)return uF.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function eD(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var tD=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},nD="return abs(x);",rD="return x;",aD=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},sD=gf.whereImpl,iD={},oD=We().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),uD=class extends G{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!We().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=dF(We().getNumber("WEBGL_VERSION"));this.binaryCache=((t=We().getNumber("WEBGL_VERSION"))in iD||(iD[t]={}),iD[t]),this.gpgpu=new class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=We().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){cF[e]=t}(t,e)):this.gl=dF(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===We().getNumber("WEBGL_VERSION")){const e="OES_texture_half_float";if(this.textureFloatExtension=xF(this.gl,"OES_texture_float"),DF(this.gl,e))this.textureHalfFloatExtension=xF(this.gl,e);else if(We().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),DF(this.gl,r))this.colorBufferHalfFloatExtension=xF(this.gl,r);else if(We().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",DF(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!DF(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=_F(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return yF(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),yF(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=_F(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return yF(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),yF(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return _F(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=gF(this.gl,this.textureHalfFloatExtension)}get debug(){return We().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;yF(e,()=>e.finish()),yF(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),yF(e,()=>e.deleteFramebuffer(this.framebuffer)),yF(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),yF(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),yF(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=pF(t,n);return UF(e,a,s,GF(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=pF(t,n);return UF(e,a,s,HF(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=pF(t,n);return UF(e,a,s,jF(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){yF(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?yF(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):yF(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),yF(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let i,o,u;yF(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),yF(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i)),yF(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=mF(t,n);return UF(e,a,s,KF(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=mF(t,n);return UF(e,a,s,qF(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(CF(this.gl,this.framebuffer),this.outputTexture=null),yF(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n,r){const[a,s]=pF(t,n),i=new Uint8Array(t*n*4);return yF(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return function(e,t,n,r,a,s,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=mF(e,t);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,a,s)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();yF(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));const s=16*t*n;return yF(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),yF(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),yF(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}(this.gl,t,n);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(We().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else We().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,We().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n){const r=new Float32Array(t*n*4);return yF(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=_F(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(yF(e,()=>e.shaderSource(n,t)),yF(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=kF.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map((e,t)=>ua.rightPad((t+1).toString(),s)+e);let o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+ua.rightPad(l[0],o),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e);null==this.vertexShader&&(this.vertexShader=function(e){const t=PF();return function(e,t){const n=_F(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(yF(e,()=>e.shaderSource(n,t)),yF(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const r=function(e){return _F(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}(t);return yF(t,()=>t.attachShader(r,this.vertexShader)),yF(t,()=>t.attachShader(r,n)),function(e,t){if(yF(e,()=>e.linkProgram(t)),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,r),this.debug&&IF(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(e,t,n){return yF(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),NF(e,t,"clipSpacePos",n,3,20,0)&&NF(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&yF(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&IF(this.gl,this.program),yF(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return _F(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),yF(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(e,t,n,r){yF(e,()=>function(e,t,n){!function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}(e,n),yF(e,()=>e.activeTexture(e.TEXTURE0+n)),yF(e,()=>e.bindTexture(e.TEXTURE_2D,t))}(e,t,r)),yF(e,()=>e.uniform1i(n,r))}(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=mF(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&IF(this.gl,this.program),TF(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),yF(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),yF(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=xF(this.gl,2===We().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===We().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===We().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ua.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,We().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,We().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||ua.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),SF(this.gl,e,this.framebuffer),this.debug&&TF(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(SF(this.gl,this.outputTexture,this.framebuffer),this.debug&&TF(this.gl)):CF(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;SF(r,e,this.framebuffer),this.debug&&TF(r),this.outputTexture=e,yF(r,()=>r.viewport(0,0,t,n)),yF(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),yF(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=QR(t,n),a=eD(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=JR(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===uF.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===uF.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===uF.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===uF.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===uF.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=QR(n,r),s=eD(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=JR(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=We().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}(this.gpgpu),this.numMBBeforeWarning=null==We().global.screen?1024:We().global.screen.height*We().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new U(this,Lo())}nextDataId(){return uD.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((We().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||We().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:iF.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if(We().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:iF.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new aD(i,rD):new tD(i,rD);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=ua.now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);c=Cp.mergeRealAndImagArrays(e,t)}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=ua.now()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new aD(r,rD):new tD(r,rD);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!We().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===We().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==s&&We().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...fF(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=Cp.mergeRealAndImagArrays(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=ua.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}null!=u&&this.disposeIntermediateTensorInfo(u);const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(e=>e(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Lo().removeDataId(e,this),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>ua.decodeString(e))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return fi(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!bF(n)){if(We().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=ua.sizeFromShape(t);if(We().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...fF(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=We().getBool("WEBGL_PACK")&&!0===r,i=s?$F(t):t,o=s?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=iF.DOWNLOAD;const t=PF();this.outputShape=e,this.userCode=`\n      ${VF}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.outTexUsage=iF.DOWNLOAD;const t=PF();this.outputShape=e,this.userCode=`\n      ${VF}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return We().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=ua.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),s=ua.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(We().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=ua.sum(e),i.getExtraProfileInfo=()=>e.map((e,t)=>({name:s[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return We().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ua.now(),endMs:null}}endTimer(e){return We().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ua.now(),e)}async getQueryTime(e){return We().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=oD){return We().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&ua.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Cp.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return sD(e.shape,t)}packedUnaryOp(e,t,n){const r=new aD(e.shape,t),a=this.compileAndRun(r,[e],n);return Lo().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=MR(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(We().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,nD,e.dtype);const t=new tD(e.shape,nD),n=this.compileAndRun(t,[e]);return Lo().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ua.isString(n[0])){const a=n.map(e=>ua.encodeString(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Lo().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=YR("rc",t),r=sR(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=YR("rc",t),r=sR(t),a=function(e,t,n){if(1===e)return"rc > "+t[0];let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=t[t.length-1-n]+","+s;n.push(s)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[EF(e.shape),...AF(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[EF(t),...AF(t)],s=new ZR(a,n),i=this.runWebGLProgram(s,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=$F(r);let i;return i=n?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=aF.DENSE;const t=fF(e),n=PF();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${BF(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}(s):new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=aF.DENSE;const t=fF(e),n=PF();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${BF(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}(s),{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:e}],a,null,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===aF.DENSE){const t=fF(e.outputShape);i.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===ua.sizeFromShape(s.shape))return i.values=ua.getTypedArrayFromDType(s.dtype,0),s;const o=[],u=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&ua.sizeFromShape(t.shape)<=We().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!RF(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(s.dataId);const l={shape:s.shape,texData:i,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach(e=>{r+=`${e.shape}_${e.isUniform?"uniform":e.texData.texShape}_${null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0}`});let a=e.constructor.name;return a+="_"+r+"_"+e.userCode,a}(e,u,l),h=this.getAndSaveBinary(c,()=>function(e,t,n,r){const a=t.userCode,s=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),i=s.map(e=>e.shapeInfo),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=YF(s,o,a,t.packedInputs),l=e.createProgram(u);let c=null;const h=e.getUniformLocation(l,"NAN",!1);1===We().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));const d={};for(let p=0;p<t.variableNames.length;p++){const n=t.variableNames[p],r=!1;d[n]=e.getUniformLocation(l,n,r),d["offset"+n]=e.getUniformLocation(l,"offset"+n,r)}return{program:t,source:u,webGLProgram:l,uniformLocations:d,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,e,u,l)),d=null!=this.activeTimers;let p;d&&(p=this.startTimer()),function(e,t,n,r,a){uR(t.inShapeInfos,n),uR([t.outShapeInfo],[r]);const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),1===We().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations["offset"+a];if(null!=s)if(n.isUniform)if(ua.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)}),null!=a&&a(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,h,u,l,r),o.forEach(e=>this.disposeIntermediateTensorInfo(e)),d&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)}));const f=We().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=ua.now();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!We().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){return this.runWebGLProgram(e,t,n=n||t[0].dtype,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(We().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Wo(()=>{if(!We().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=We().getBool("DEBUG");We().set("DEBUG",!1);const t=this.abs(ch(1e-8)).dataSync()[0];if(We().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const u=null!=this.activeTimers;let l;u&&(l=ua.now());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=We().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map((t,n)=>n>=e.length-2?ua.nearestLargerEven(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length){const t=ua.squeezeShape(e);e=t.newShape}let r=ua.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=EF(e);let n=2,a=2;return e.length&&([n,a]=AF(e)),r=t*(n/2)*(a/2),ua.sizeToSquarishShape(r).map(e=>2*e)}return ua.sizeToSquarishShape(r)}(n,o),t.texShape=c),null!=a){const e=$F(n);let s,i=c[1],h=c[0];const d=a instanceof Uint8Array;o?([i,h]=mF(c[0],c[1]),s=new class{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=PF(),[a,s]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let u=0;u<=1;u++)for(let t=0;t<=1;t++){const n=2*u+t;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${e[2]}) {\n            localCoords[2] += ${t};\n            if(localCoords[1] + ${u} < ${e[1]}) {\n              localCoords[1] += ${u};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${WF(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}(e,[h,i],d)):s=new class{constructor(e,t,n=!1){this.variableNames=["A"];const r=PF(),[a,s]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${WF(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}(e,[h,i],d);const p=this.makeTensorInfo([h,i],r);this.texData.get(p.dataId).usage=d?iF.PIXELS:iF.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),i,h,a);const f=this.runWebGLProgram(s,[p],r,null,!0),m=this.texData.get(f.dataId);t.texture=m.texture,t.texShape=m.texShape,t.isPacked=m.isPacked,t.usage=m.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(f.dataId),t.values=null,u&&(this.uploadWaitMs+=ua.now()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype "+t)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*ua.bytesPerElement(t)}};uD.nextDataId=0,ds.isBrowser()&&Zo("webgl",()=>new uD,2);var lD=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Cp.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},cD=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Cp.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;let s="";if(r)if(0===a||1===ua.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${sR(a)} coords = getOutputCoords();\n        `,1===a)s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=YR("coords",a);s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function hD(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var dD={kernelName:an,backendName:"webgl",kernelFunc:hD};function pD(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=hD({inputs:{x:r},backend:n}),u=hD({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}var fD={kernelName:yt,backendName:"webgl",kernelFunc:pD},mD="return (a < 0.) ? b * a : a;",gD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",yD={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",ua.createScalarValue(s,"float32")),o=We().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cD(gD,a.shape,i.shape):new lD(mD,a.shape,i.shape),u=n.runWebGLProgram(o,[a,i],a.dtype);return n.disposeIntermediateTensorInfo(i),u}},bD="return (a < 0.) ? b * a : a;",xD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",wD={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=We().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cD(xD,r.shape,a.shape):new lD(bD,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}};function vD({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:i}=a,o=s,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=We().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new aD(i.shape,t):new tD(i.shape,e),o.runWebGLProgram(l,[i],u)}}function kD({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new lD(e,u.shape,l.shape);return c.runWebGLProgram(i,[a,s],Qa(n.dtype,r.dtype))}),s=pD({inputs:{real:r,imag:a},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(a),s}const h=s||Qa(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=a){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?Cp.fromUint8ToStringArray(e):e,r="string"===u.dtype?Cp.fromUint8ToStringArray(t):t,[s,i]=a(u.shape,l.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=s,o}let d;return d=We().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new cD(t,u.shape,l.shape,n):new lD(e,u.shape,l.shape),c.runWebGLProgram(d,[u,l],h)}}function ID(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?xD:bD;if("leakyrelu"===e)return t?gD:mD;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var ND=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const l=Math.ceil((r?e[1]:e[2])/2),c=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const g=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",b="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(b=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${f}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${y};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${p[0]});\n          result += (${d[1]} * ${p[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}},SD=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Cp.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},CD="return a * b;";function TD(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=Cp.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new SD("return areal * breal - aimag * bimag;",r.shape,a.shape),i=new SD("return areal * bimag + aimag * breal;",r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=pD({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=ER(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=We().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cD(CD,r.shape,a.shape):new lD(CD,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}var _D={kernelName:On,backendName:"webgl",kernelFunc:TD};function ED(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=ua.sizeFromShape(a.shape),u=ua.inferFromImplicitShape(s,o),l=ua.sizeFromShape(u);ua.assert(o===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const c=i.texData.get(a.dataId);return!c.isPacked||RF(a.shape,u)||null!==c.texture&&RF(c.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[EF(e.shape),...AF(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[EF(t),...AF(t)],i=new ZR(s,r),o=n.runWebGLProgram(i,[a],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,u,i)}var AD={kernelName:er,backendName:"webgl",kernelFunc:ED},$D=class{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${ua.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}},FD=class{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}};function RD(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Cp.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:l}=a[i];let c,h;c="mean"===n?0===i?new $D({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new $D({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new FD({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=s,s=r.runWebGLProgram(c,[s],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return s}function DD(e,t,n){const r=We().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=sR(this.rank),a=XR("rc",this.rank),s=new Array(this.rank);for(let l=0;l<t.length;l++)s[t[l]]=a[l];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}(e.shape,t):new class{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const r=sR(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function MD(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){const a=e.shape.length,s=ua.parseAxisParam(t,e.shape);let i=s;const o=Cp.getAxesPermutation(i,a),u=null!=o;let l=e;u&&(l=DD(e,o,r),i=Cp.getInnerMostAxes(i.length,a)),Cp.assertAxesAreInnerMostDims("sum",i,a);const[c,h]=Cp.computeOutAndReduceShapes(l.shape,i);let d=c;n&&(d=Cp.expandShapeToKeepDim(c,s));const p=ua.sizeFromShape(h),f=ED({inputs:{x:l},attrs:{shape:[ua.sizeFromShape(e.shape)/p,p]},backend:r}),m=RD(f,es(e.dtype),"sum",r),g=ED({inputs:{x:m},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),u&&r.disposeIntermediateTensorInfo(l),g}(a,s,i,n)}var OD={kernelName:xr,backendName:"webgl",kernelFunc:MD};function zD(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=new Array(a.shape.length);for(let l=0;l<o.length;l++)o[l]=a.shape[s[l]];let u;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId),t=qR(e.values,a.shape,a.dtype,s,o);u=i.makeTensorInfo(o,a.dtype),i.texData.get(u.dataId).values=t}else u=DD(a,s,i);return u}var LD={kernelName:Br,backendName:"webgl",kernelFunc:zD};function PD({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=ua.sizeFromShape(m),b=ua.sizeFromShape(g);ua.assert(l>=2&&c>=2&&(y===b||1===y||1===b),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`);const x=(y>b?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([p,f]);ua.assert(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);const w=n?[y,h,p]:[y,p,h],v=r?[b,f,d]:[b,d,f],k=ED({inputs:{x:e},backend:a,attrs:{shape:w}}),I=ED({inputs:{x:t},backend:a,attrs:{shape:v}}),N=[k,I],S=Math.max(y,b),C=n?k.shape[1]:k.shape[2],T=null!=s,_=null!=i,E="leakyrelu"===u,A=null!=u?ID(u,!0):null;let $;if((1===p||1===f)&&C>1e3&&!1===(T||_||E||null!=A)){let e=k,t=I;n&&(e=zD({inputs:{x:k},backend:a,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=zD({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),N.push(t));const s=1===f;let i=e;1!==f&&(i=ED({inputs:{x:e},backend:a,attrs:{shape:[S,C,1]}}),N.push(i));const o=1===f?2:1;let u=t;s&&(u=ED({inputs:{x:t},backend:a,attrs:{shape:[S,1,C]}}),N.push(u));const l=TD({inputs:{a:i,b:u},backend:a});$=MD({inputs:{x:l},backend:a,attrs:{axis:o,keepDims:!0}}),N.push(l)}else{const u=Qa(e.dtype,t.dtype),l=new ND(w,v,[S,p,f],n,r,T,A,_,E),c=[k,I];if(null!=s&&c.push(s),_&&c.push(i),E){const e=a.makeTensorInfo([],"float32",ua.createScalarValue(o,"float32"));c.push(e),N.push(e)}$=a.runWebGLProgram(l,c,u)}const F=ED({inputs:{x:$},backend:a,attrs:{shape:x}});N.push($);for(const R of N)a.disposeIntermediateTensorInfo(R);return F}var BD={kernelName:Kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return PD({a:a,b:s,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},WD="return abs(x);",VD={kernelName:je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=MR(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=We().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new aD(r.shape,WD):new tD(r.shape,WD),n.runWebGLProgram(a,[r],r.dtype)}},UD=vD({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),GD={kernelName:qe,backendName:"webgl",kernelFunc:UD},HD=vD({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),jD={kernelName:Ke,backendName:"webgl",kernelFunc:HD},qD="return a + b;",KD=kD({opSnippet:qD,packedOpSnippet:qD,supportsComplex:!0,cpuKernelImpl:lR}),XD={kernelName:Xe,backendName:"webgl",kernelFunc:KD},YD={kernelName:Ye,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return hD({inputs:{x:a[0]},backend:r});if(a.length>We().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map(e=>e.dtype).reduce((e,t)=>Qa(e,t)),i=a.map(e=>e.shape),o=We().getBool("WEBGL_PACK")?new class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i):new class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i);return r.runWebGLProgram(o,a,s)}},ZD={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=ua.parseAxisParam(s,a.shape);let l=u;const c=Cp.getAxesPermutation(l,o);let h=a;null!=c&&(h=zD({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Cp.getInnerMostAxes(l.length,o)),Cp.assertAxesAreInnerMostDims("all",l,o);const[d,p]=Cp.computeOutAndReduceShapes(h.shape,l),f=ED({inputs:{x:h},backend:n,attrs:{shape:[-1,ua.sizeFromShape(p)]}}),m=RD(f,f.dtype,"all",n);let g;return g=ED(i?{inputs:{x:m},backend:n,attrs:{shape:Cp.expandShapeToKeepDim(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},JD={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=ua.parseAxisParam(s,a.shape);let l=u;const c=Cp.getAxesPermutation(l,o);let h=a;null!=c&&(h=zD({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Cp.getInnerMostAxes(l.length,o)),Cp.assertAxesAreInnerMostDims("any",l,o);const[d,p]=Cp.computeOutAndReduceShapes(h.shape,l),f=ED({inputs:{x:h},backend:n,attrs:{shape:[-1,ua.sizeFromShape(p)]}}),m=RD(f,f.dtype,"any",n);let g;return g=ED(i?{inputs:{x:m},backend:n,attrs:{shape:Cp.expandShapeToKeepDim(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};function QD(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const i=Cp.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},u=new class{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===t?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=QD(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function eM(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=Cp.computeOptimalWindowSize(a[a.length-1]),i=new class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ua.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const a=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const s=this.outputShape,i=s.length,o=sR(i),u=YR("coords",i);let l,c;if(1===a){c=i+1;const e=sR(c);l=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[i-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[i-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[i-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[i-2]};`}else c=i,l=`\n        ${o} sourceLocR = coords;\n        ++${u[i-1]};\n        ${o} sourceLocG = coords;\n        ++${u[i-2]};\n        ${o} sourceLocA = coords;\n        --${u[i-1]};\n        ${o} sourceLocB = coords;\n        --${u[i-2]};`;const h=["x","y","z","w","u","v"].slice(0,c),d="."+h[c-1],p=h.map(e=>"int "+e),f=YR("sourceLocR",c-1).concat("inIdx.r"),m=YR("sourceLocG",c-1).concat("inIdx.g"),g=YR("sourceLocB",c-1).concat("inIdx.b"),y=YR("sourceLocA",c-1).concat("inIdx.a"),b="max"===n?"greaterThan":"lessThan",x=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),\n                             getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,w=`vec4(\n            getAChannel(${f.join()}),\n            hasNextCol ? getAChannel(${m.join()}) : 0.,\n            hasNextRow ? getAChannel(${g.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,v=r?"":`\n      float getBestIndicesAChannel(${p.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${p.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${v}\n      void main() {\n        ${o} coords = getOutputCoords();\n        bool hasNextCol = ${u[i-1]} < ${s[i-1]-1};\n        bool hasNextRow = ${u[i-2]} < ${s[i-2]-1};\n        ${l}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${x}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}(a,s,n,null==r),o=e.runWebGLProgram(i,null==r?[t]:[t,r],"int32");if(o.shape.length===t.shape.length){const r=eM(e,t,n,o);return e.disposeIntermediateTensorInfo(o),r}return o}function tM(e,t,n,r){const a=[n];if(Cp.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!We().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[s,i]=Cp.computeOutAndReduceShapes(t.shape,a),o=ua.sizeFromShape(i),u=ED({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(u);const l=QD(e,u,r);n.push(l);const c=ED({inputs:{x:l},backend:e,attrs:{shape:s}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),c}return eM(e,t,r)}var nM={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=ua.parseAxisParam(s,a.shape);const o=Cp.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=zD({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Cp.getInnerMostAxes(i.length,u.shape.length)),Cp.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const c=tM(n,u,i[0],"max");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}},rM={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=ua.parseAxisParam(s,a.shape);const o=Cp.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=zD({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Cp.getInnerMostAxes(i.length,u.shape.length)),Cp.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const c=tM(n,u,i[0],"min");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}},aM=vD({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),sM={kernelName:tt,backendName:"webgl",kernelFunc:aM},iM=vD({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),oM={kernelName:nt,backendName:"webgl",kernelFunc:iM},uM=vD({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),lM={kernelName:rt,backendName:"webgl",kernelFunc:uM},cM=kD({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),hM={kernelName:st,backendName:"webgl",kernelFunc:cM},dM=vD({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),pM={kernelName:at,backendName:"webgl",kernelFunc:dM},fM=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t;let m="0.0";if(f||(m="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`:`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let g=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(g="avgValue / count");const y=4*Math.floor(s/4),b=s%4,x=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${m};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${m});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${x}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${x}\n          }\n        }\n        setOutput(${g});\n      }\n    `}},mM=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}},gM={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;zF(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;ua.assert(Cp.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const l=Cp.computePool2DInfo(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&ua.arraysEqual(l.inShape,l.outShape))return hD({inputs:{x:a},backend:n});const c=new fM(l,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}},yM={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=Cp.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),h=new mM(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},bM={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Cp.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),d=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.effectiveFilterDepth,n=e.effectiveFilterHeight,r=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterDepth*e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${t};\n            wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(d,[a],i.dtype)}},xM={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;zF([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Cp.computePool2DInfo(i.shape,o,u,1,l),h=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.effectiveFilterHeight,n=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t};\n            wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n};\n            wC+= ${e.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(c);return n.runWebGLProgram(h,[a],i.dtype)}},wM={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return PD({a:a,b:s,transposeA:i,transposeB:o,backend:n})}},vM={kernelName:Qt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:o}=e;ua.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),ua.assert(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),ua.assert(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,a,s];let c=null;null!=i&&(c=i.shape,l.push(i));let h=null;null!=o&&(h=o.shape,l.push(o));const d=We().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Cp.assertAndGetBroadcastShape(e,t),Cp.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(Cp.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(Cp.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}(r.shape,a.shape,s.shape,c,h,u):new class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Cp.assertAndGetBroadcastShape(e,t),Cp.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(Cp.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(Cp.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}(r.shape,a.shape,s.shape,c,h,u);return t.runWebGLProgram(d,l,l[0].dtype)}},kM=["x","y","z","w","u","v"];function IM(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,u]=Ji.parseSliceParams(a,s,i);if(Ji.assertParamsValid(a,o,u),0===ua.sizeFromShape(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=OR(e.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),c=Ji.isSliceContinous(a.shape,o,u);if(l||!c){const e=We().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=sR(this.rank),n=YR("coords",this.rank),r=YR("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}(u):new class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=sR(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return kM.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map((e,t)=>`sourceLoc.${kM[t]} = start[${t}] + coords.${kM[t]};`).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}(u),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Ji.computeFlatOffset(t,ua.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),s}(a,o,u,n)}var NM={kernelName:dr,backendName:"webgl",kernelFunc:IM},SM={kernelName:ht,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;ua.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=s.reduce((e,t)=>e*t),u=Cp.getReshaped(a.shape,s,o),l=Cp.getPermuted(u.length,s.length),c=Cp.getReshapedPermuted(a.shape,s,o),h=Cp.getSliceBeginCoords(i,s.length),d=Cp.getSliceSize(c,i,s.length),p=[],f=ED({inputs:{x:a},backend:n,attrs:{shape:u}}),m=zD({inputs:{x:f},backend:n,attrs:{perm:l}}),g=ED({inputs:{x:m},backend:n,attrs:{shape:c}}),y=IM({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}},CM={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),l=cR(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}},TM=kD({opSnippet:"return float(a != b);",cpuKernelImpl:$R,dtype:"bool"}),_M={kernelName:Ln,backendName:"webgl",kernelFunc:TM};function EM(e){const{inputs:t,backend:n}=e,{input:r}=t;return hD({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var AM={kernelName:Zn,backendName:"webgl",kernelFunc:EM},$M={kernelName:ft,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return hD({inputs:{x:s},backend:r});const t=kc(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=pD({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=EM({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!ua.hasEncodingLoss(s.dtype,i)){const e=hD({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new tD(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",ua.getTypedArrayFromDType("bool",1)),t=TM({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},FM="return ceil(x);",RM=vD({opSnippet:FM,packedOpSnippet:FM,cpuKernelImpl:dR}),DM={kernelName:mt,backendName:"webgl",kernelFunc:RM},MM={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r;let o;o=We().getBool("WEBGL_PACK_CLIP")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}(a.shape):new class{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}(a.shape);const u=o.getCustomSetupFunc(s,i);return n.runWebGLProgram(o,[a],a.dtype,u)}};function OM(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var zM={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}(r.shape),i=[OM(r,a.complexTensorInfos.real),OM(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};function LM(e,t,n){const r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}function PM(e){const{inputs:t,backend:n}=e,{input:r}=t;return hD({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}var BM={kernelName:on,backendName:"webgl",kernelFunc:PM};function WM(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map(e=>EM({inputs:{input:e},backend:n})),a=e.map(e=>PM({inputs:{input:e},backend:n})),s=WM(r,t,n),i=WM(a,t,n),o=pD({inputs:{real:s,imag:i},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),a.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map(e=>{const r=ua.sizeFromShape(e.shape.slice(t));return ED({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})}),s=a.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),i=Cp.computeOutShape(a.map(e=>e.shape),1),o=pR(s,i,r,1===a[0].shape[0]),u=Cp.computeOutShape(e.map(e=>e.shape),t),l=n.makeTensorInfo(u,r,o);return a.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}if(e.length>We().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=WM(e.slice(0,r),t,n),s=WM(e.slice(r),t,n),i=WM([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(We().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Cp.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=sR(r),s=YR("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>"T"+t);const o=new Array(e.length-1);o[0]=e[0][t];for(let p=1;p<o.length;p++)o[p]=o[p-1]+e[p][t];const u=i[t],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let p=1;p<o.length;p++){const e=o[p-1];h+=`\n        if (${u} < ${o[p]}  && ${u} >= ${o[p-1]}) {\n          return getChannel(\n            getT${p}(${LM(i,u,e)}),\n            vec2(${LM(l,u,e)}));\n        }`}const d=o[o.length-1];h+=`\n        return getChannel(\n          getT${o.length}(${LM(i,u,d)}),\n          vec2(${LM(l,u,d)}));`,this.userCode=`\n      float getValue(${i.map(e=>"int "+e)}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}(e.map(e=>e.shape),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:i}=function(e,t,n){const r=Cp.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>ED({inputs:{x:e},attrs:{shape:[-1,ua.sizeFromShape(e.shape.slice(t))]},backend:n})),outShape:r}}(e,t,n),o=new class{constructor(e){this.outputShape=[],this.outputShape=Cp.computeOutShape(e,1),this.variableNames=e.map((e,t)=>"T"+t);const t=new Array(e.length-1);t[0]=e[0][1];for(let r=1;r<t.length;r++)t[r]=t[r-1]+e[r][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let r=1;r<t.length;r++)n.push(`else if (yC < ${t[r]}) setOutput(getT${r}(yR, yC-${t[r-1]}));`);n.push(`else setOutput(getT${t.length}(yR, yC-${t[t.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}(s.map(e=>e.shape)),u=n.runWebGLProgram(o,s,r);s.forEach(e=>n.disposeIntermediateTensorInfo(e));const l=ED({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),l}function VM(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ua.parseAxisParam(a,t[0].shape)[0],i=Cp.computeOutShape(t.map(e=>e.shape),s);if(0===ua.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter(e=>ua.sizeFromShape(e.shape)>0);if(1===o.length)return hD({inputs:{x:o[0]},backend:n});const u=o.map(e=>e.shape);return Cp.assertParamsConsistent(u,s),WM(o,s,n)}var UM={kernelName:xt,backendName:"webgl",kernelFunc:VM},GM=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}};function HM({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c="channelsLast"===n.dataFormat;let h;const d=[],p=u[2]%2!=0&&!!l.isPacked;if((1!=u[0]*u[1]*u[2]&&1!==n.outChannels||!(n.inChannels>1e3))&&We().getBool("WEBGL_LAZILY_UNPACK")&&We().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&p){const p={dataId:e.dataId,shape:[1,c?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),n.inChannels],dtype:e.dtype},f=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,ua.assert(RF(l.shape,p.shape),()=>`packed reshape ${l.shape} to ${p.shape} isn't free`);const m=ED({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});d.push(m);const g=PD({a:p,b:m,backend:r,transposeA:!1,transposeB:!1,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),y=r.texData.get(g.dataId);ua.assert(y.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=f,y.shape=n.outShape,h=hD({inputs:{x:g},backend:r}),h.shape=n.outShape,d.push(g)}else{const l=ED({inputs:{x:e},backend:r,attrs:{shape:[1,c?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),p=ED({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),f=PD({a:l,b:p,transposeA:!1,transposeB:!1,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});h=ED({inputs:{x:f},backend:r,attrs:{shape:n.outShape}}),d.push(l),d.push(p),d.push(f)}for(const f of d)r.disposeIntermediateTensorInfo(f);return h}function jM({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=u*l*c,g=d*h,y=[m,g],b=[],x=ED({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=ED({inputs:{x:t},backend:r,attrs:{shape:[1,m,ua.sizeFromShape(t.shape)/m]}});b.push(x),b.push(w);const v=new class{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=a*r,m=PF(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let w=0;w<=1;w++)for(let n=0;n<=1;n++)x+=`\n          blockIndex = rc.y + ${n};\n          pos = rc.x + ${w};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${s}. - ${d}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*w+n}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*w+n}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}(y,x.shape,n),k=r.runWebGLProgram(v,[x],"float32"),I=ED({inputs:{x:k},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(k),b.push(I);const N=null!=a,S=null!=s,C="leakyrelu"===o,T=o?ID(o,!0):null,_=new ND(I.shape,w.shape,[1,g,n.outChannels],!0,!1,N,T,S,C),E=[I,w];if(a&&E.push(a),S&&E.push(s),C){const e=r.makeTensorInfo([],"float32",ua.createScalarValue(i,"float32"));E.push(e),b.push(e)}const A=r.runWebGLProgram(_,E,"float32"),$=ED({inputs:{x:A},backend:r,attrs:{shape:f?[1,d,h,n.outChannels]:[1,n.outChannels,d,h]}});b.push(A);for(const F of b)r.disposeIntermediateTensorInfo(F);return $}var qM={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=Cp.convertConv2DDataFormat(u),d=Cp.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(We().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])p=jM({x:a,filter:s,convInfo:d,backend:n});else{const e=new GM(d);p=n.runWebGLProgram(e,[a,s],"float32")}else p=HM({x:a,filter:s,convInfo:d,backend:n});const f=ED({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}},KM={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=Cp.convertConv2DDataFormat(u),d=Cp.computeConv2DInfo(a.shape,c,i,1,o,l,!1,h),p=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${"channelsLast"===e.dataFormat}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(p,[a,s],"float32")}},XM={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=Cp.convertConv2DDataFormat(l),d=Cp.computeConv2DInfo(i,s.shape,o,1,u,c,!1,h),p=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r="channelsLast"===e.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${r?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${r?1:2}], coords[${r?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${r}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(p,[a,s],"float32")}},YM={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=Cp.computeConv3DInfo(a.shape,s.shape,i,u,o),c=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(l);return n.runWebGLProgram(c,[a,s],"float32")}},ZM={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r,l=Cp.computeConv3DInfo(a.shape,u,i,1,o),c=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${e.strideDepth} - ${e.padInfo.front};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(l);return n.runWebGLProgram(c,[a,s],"float32")}},JM={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r,l=Cp.computeConv3DInfo(u,s.shape,o,1,i),c=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${e.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(l);return n.runWebGLProgram(c,[a,s],"float32")}},QM=vD({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),eO={kernelName:Ct,backendName:"webgl",kernelFunc:QM},tO=vD({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),nO={kernelName:Tt,backendName:"webgl",kernelFunc:tO},rO={kernelName:Et,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+p],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}(a.shape,s.shape,o,u,l);return n.runWebGLProgram(c,[a,s,i],"float32")}},aO=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${sO(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?"end + pow2 < "+s:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${sR(r)} coords = getOutputCoords();\n        int end = ${iO(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${iO(r,"coords")} = idx;\n          val += getX(${sO(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}};function sO(e,t){if(1===e)return""+t;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function iO(e,t){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error(`Cumulative sum for rank ${e} is not yet supported`)}var oO={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length,l=Cp.getAxesPermutation([s],u);let c=a;null!=l&&(c=zD({inputs:{x:a},backend:n,attrs:{perm:l}}));const h=Cp.getInnerMostAxes(1,u)[0];if(h!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const d=c.shape[h];let p=hD({inputs:{x:c},backend:n});for(let f=0;f<=Math.ceil(Math.log2(d))-1;f++){const e=new aO(c.shape,!1,o),t=e.getCustomSetupFunc(f),r=p;p=n.runWebGLProgram(e,[p],p.dtype,t),n.disposeIntermediateTensorInfo(r)}if(i){const e=new aO(c.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=zD({inputs:{x:p},backend:n,attrs:{perm:Cp.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}},uO={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=cR(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=hR(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},lO={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;ua.assert(s>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+s);const o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,l=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h="NHWC"===i?[o,u,l,c]:[o,c,u,l],d=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(h,s,i);return n.runWebGLProgram(d,[a],a.dtype)}},cO=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.inHeight,i=e.inWidth,o=e.padInfo.top,u=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",y="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}},hO=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const s=e.outChannels/e.inChannels,i=e.inHeight,o=e.inWidth,u=e.padInfo.top,l=e.padInfo.left,c=e.strideHeight,h=e.strideWidth,d=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,g=m;let y="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let v=0;v<m;v++)y+=`\n          vec4 xTexelC${2*v};\n          int xTexelC${2*v}Ready;\n          vec4 xC${v};`;for(let v=0;v<f;v++){for(let e=0;e<m;e++)y+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xC${e} = vec4(0.0);`;y+=`\n        xR = xRCorner + ${v*d};\n        if (xR >=0 && xR < ${i}) {\n      `;for(let e=0;e<(g+1)/2;e++){const t=2*e,n=t*p;if(y+=`\n          xC = xCCorner + ${n};\n          `,1===h){if(t<m&&(l%2==1?(y+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n              `,y+=1===p&&n>0?`\n                xC${t} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${o}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${o}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${n}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                  }\n                  `):y+=`\n                if (xC >= 0 && xC < ${o} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${o}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xC${t} = xTexelC${n};\n                `,n+1<m)){const e=l%2==0?ua.nearestLargerEven(p):p;p%2==0&&l%2==1||p%2!=0&&l%2!=1?(y+=`\n                  xCOffset = xC + ${l%2} + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${n+2}Ready == 0) {\n                    xTexelC${n+2} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${o}) {\n                      xTexelC${n+2}.zw = vec2(0.0);\n                    }\n                    xTexelC${n+2}Ready = 1;\n                  }\n                  `,p>1&&(y+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${n}Ready == 0) {\n                      xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${n}Ready = 1;\n                    }\n                    `),y+=`\n                  xC${t+1} = vec4(xTexelC${n}.zw, xTexelC${n+2}.xy);\n                  `):y+=1===e?`\n                    xC${t+1} = xTexelC${n};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${n+2}Ready == 0) {\n                      xTexelC${n+2} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${o}) {\n                        xTexelC${n+2}.zw = vec2(0.0);\n                      }\n                      xTexelC${n+2}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${n+2};\n                    `}}else n<m&&(l%2==1?(y+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${o} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${o} && xTexelC${n+2}Ready == 0) {\n                  xTexelC${n+2} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${o}) {\n                    xTexelC${n+2}.zw = vec2(0.0);\n                  }\n                  xTexelC${n+2}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${n}.zw, xTexelC${n+2}.zw);\n              `,n+1<m&&(y+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${o}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${n+2}.xy, final.xy);\n                `)):(y+=`\n                if(xC >= 0 && xC < ${o} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${o}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${o} && xTexelC${n+2}Ready == 0) {\n                  xTexelC${n+2} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${n+2}.zw = vec2(0.);\n                  }\n                  xTexelC${n+2}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${n}.xy, xTexelC${n+2}.xy);\n              `,n+1<m&&(y+=`\n                  xC${t+1} = vec4(xTexelC${n}.zw, xTexelC${n+2}.zw);\n                `)));t<m&&(y+=`\n            wTexel = getW(${v}, ${n}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,n+1<m&&(y+=`\n              wTexel = getW(${v}, ${n+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}y+="\n        }\n      "}let b="",x="";n&&(b=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${c}, ${h});\n      const ivec2 pads = ivec2(${u}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${y}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}},dO={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),ua.assert(Cp.eitherStridesOrDilationsAreOne(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=Cp.computeConv2DInfo(a.shape,s.shape,i,c,o,l,!0);let d;return d=We().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new hO(h):new cO(h),n.runWebGLProgram(d,[a,s],"float32")}},pO={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=Cp.computeConv2DInfo(a.shape,c,i,o,u,l,!0),d=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${e.outChannels/e.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(d,[a,s],"float32")}},fO={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=Cp.computeConv2DInfo(c,s.shape,i,o,u,l,!0),d=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${r}; dm++) {\n              int d2 = d1 * ${r} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(d,[a,s],"float32")}},mO={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=ua.sizeFromShape(r.shape),i=ED({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}(s),u=n.runWebGLProgram(o,[i],i.dtype),l=ED({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}},gO={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=Cp.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u);let c;const h=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}(l);c=n.runWebGLProgram(h,[a,s],"float32");const d=ED({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}},yO={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=Cp.decodeEinsumEquation(a,s.length);Cp.checkEinsumDimSizes(i.length,u,s);const{path:l,steps:c}=Cp.getEinsumComputePath(o,u),h=c.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:r}=Cp.getEinsumPermutation(p,u[e]);let a;Cp.isIdentityPermutation(t)?a=s[e]:(a=zD({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);ua.arraysEqual(a.shape,i)||(a=ED({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===d?d=a:(d=TD({inputs:{a:a,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=MD({inputs:{x:d},backend:n,attrs:{axis:l[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},bO=vD({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),xO={kernelName:Wt,backendName:"webgl",kernelFunc:bO},wO={kernelName:Vt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=We().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cD("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new lD("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},vO=kD({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:fR}),kO={kernelName:Gt,backendName:"webgl",kernelFunc:vO},IO=vD({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Cp.ERF_P};\n  float a1 = ${Cp.ERF_A1};\n  float a2 = ${Cp.ERF_A2};\n  float a3 = ${Cp.ERF_A3};\n  float a4 = ${Cp.ERF_A4};\n  float a5 = ${Cp.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),NO={kernelName:Ut,backendName:"webgl",kernelFunc:IO},SO="return exp(x);",CO=vD({opSnippet:SO,packedOpSnippet:SO,cpuKernelImpl:mR}),TO={kernelName:Ht,backendName:"webgl",kernelFunc:CO};function _O(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(ua.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),o.splice(u,0,1),ED({inputs:{x:s},backend:r,attrs:{shape:o}})}var EO={kernelName:jt,backendName:"webgl",kernelFunc:_O},AO="return exp(x) - 1.0;",$O=vD({opSnippet:AO,packedOpSnippet:AO,cpuKernelImpl:gR}),FO={kernelName:qt,backendName:"webgl",kernelFunc:$O},RO=class{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,s=n?r+".0":"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function DO(e,t,n){const r=n.texData.get(e.dataId),a=ua.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=ED({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,u=new RO("real",o,t),l=new RO("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),p=pD({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=ED({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}var MO={kernelName:Kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return DO(r,!1,n)}};function OO(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||ua.inferDtype(a),"string"===s){const e=ua.getArrayFromDType(s,ua.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}(r,a),n=e.getCustomSetupFunc(a);return t.runWebGLProgram(e,[],s,n)}}var zO,LO={kernelName:Xt,backendName:"webgl",kernelFunc:OO},PO={kernelName:Yt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new class{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},BO="return floor(x);",WO=vD({opSnippet:BO,packedOpSnippet:BO,cpuKernelImpl:yR}),VO={kernelName:Zt,backendName:"webgl",kernelFunc:WO},UO=kD({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),GO={kernelName:Jt,backendName:"webgl",kernelFunc:UO},HO={kernelName:jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[l,u],h=[l,u,s];(o||i)&&(null==zO&&(zO=document.createElement("canvas").getContext("2d")),zO.canvas.width=u,zO.canvas.height=l,zO.drawImage(a,0,0,u,l),a=zO.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=iF.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);const p=We().getBool("WEBGL_PACK")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=PF(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}(h):new class{constructor(e){this.variableNames=["A"];const t=PF(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}},jO={kernelName:Xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=Cp.convertConv2DDataFormat(c),g=Cp.computeConv2DInfo(a.shape,s.shape,u,h,l,d,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(We().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=jM({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===p,u=p?ID(p,!1):null,l=new GM(g,e,u,t,r),c=[a,s];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",ua.createScalarValue(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(l,c,"float32")}else y=HM({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const x=ED({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}},qO={kernelName:Yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),ua.assert(Cp.eitherStridesOrDilationsAreOne(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);const g=Cp.computeConv2DInfo(a.shape,s.shape,u,m,l,h,!0),y=We().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=d?ID(d,y):null,x=[a,s],w=null!=i,v=null!=o,k="leakyrelu"===d;if(w&&x.push(i),v&&x.push(o),k){const e=n.makeTensorInfo([],"float32",ua.createScalarValue(p,"float32"));x.push(e),f.push(e)}let I;I=y?new hO(g,w,b,v,k):new cO(g,w,b,v,k);const N=n.runWebGLProgram(I,x,"float32");return f.forEach(e=>n.disposeIntermediateTensorInfo(e)),N}},KO={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=ua.sizeFromShape(r.shape),[u,l,c,h]=Cp.prepareAndValidate(r,a),d=ED({inputs:{x:a},backend:n,attrs:{shape:[l,i]}}),p=ED({inputs:{x:r},backend:n,attrs:{shape:[ua.sizeFromShape(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=bR(e,t,r.dtype,l,i,c,h,r.shape,o);return n.makeTensorInfo(u,r.dtype,s.values)}const f=new class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=sR(t.length),a=sR(n.length);this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${this.sliceDim>1?"strides[j]":"strides"};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}(i,h,[l,c]),m=n.runWebGLProgram(f,[p,d],p.dtype),g=ED({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}},XO={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,u=ua.parseAxisParam(i,a.shape)[0],l=Cp.segment_util.collectGatherOpShapeInfo(a,s,u,o),c=ua.sizeFromShape(s.shape),h=[],d=ED({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=ED({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=xR(t,e,f);return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=sR(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)r.push(2===a?"int(getIndices(resRC.x, resRC.z))":""+n[a]);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=ED({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}},YO=kD({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:wR,dtype:"bool"}),ZO={kernelName:nn,backendName:"webgl",kernelFunc:YO},JO=kD({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:vR}),QO={kernelName:rn,backendName:"webgl",kernelFunc:JO},ez={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return DO(r,!0,n)}},tz=vD({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),nz={kernelName:un,backendName:"webgl",kernelFunc:tz},rz=vD({opSnippet:"return float(isinf(x));",dtype:"bool"}),az={kernelName:ln,backendName:"webgl",kernelFunc:rz},sz=vD({opSnippet:"return float(isnan(x));",dtype:"bool"}),iz={kernelName:cn,backendName:"webgl",kernelFunc:sz},oz=kD({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:kR,dtype:"bool"}),uz={kernelName:dn,backendName:"webgl",kernelFunc:oz},lz=kD({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:IR,dtype:"bool"}),cz={kernelName:pn,backendName:"webgl",kernelFunc:lz},hz={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=NR(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},dz=vD({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:SR}),pz={kernelName:mn,backendName:"webgl",kernelFunc:dz},fz=vD({opSnippet:"return log(1.0 + x);"}),mz={kernelName:gn,backendName:"webgl",kernelFunc:fz},gz=kD({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),yz={kernelName:yn,backendName:"webgl",kernelFunc:gz},bz=vD({opSnippet:"return float(!(x >= 1.0));"}),xz={kernelName:bn,backendName:"webgl",kernelFunc:bz},wz=kD({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),vz={kernelName:xn,backendName:"webgl",kernelFunc:wz},kz={kernelName:vn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r,l=We().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}(a.shape,s,i,o,u):new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}(a.shape,s,i,o,u);return n.runWebGLProgram(l,[a],a.dtype)}},Iz={kernelName:kn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}(a.shape,o,u,l,c);return n.runWebGLProgram(h,[a,s,i],a.dtype)}};function Nz(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,u=ua.parseAxisParam(s,a.shape);let l=u;const c=Cp.getAxesPermutation(l,o),h=null!=c,d=n.shouldExecuteOnCPU([a]);let p=a;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let n=0;n<t.length;n++)t[n]=a.shape[c[n]];const r=qR(e,a.shape,a.dtype,c,t);p=n.makeTensorInfo(t,a.dtype),n.texData.get(p.dataId).values=r}else p=DD(a,c,n);l=Cp.getInnerMostAxes(l.length,o)}Cp.assertAxesAreInnerMostDims("max",l,o);const[f,m]=Cp.computeOutAndReduceShapes(p.shape,l);let g,y=f;if(i&&(y=Cp.expandShapeToKeepDim(f,u)),d){const e=n.texData.get(p.dataId),t=CR(e.values,ua.sizeFromShape(m),y,a.dtype);g=n.makeTensorInfo(y,a.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const a=ua.sizeFromShape(t),s=ED({inputs:{x:e},attrs:{shape:[ua.sizeFromShape(e.shape)/a,a]},backend:r}),i=RD(s,e.dtype,"max",r),o=ED({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}var Sz={kernelName:In,backendName:"webgl",kernelFunc:Nz},Cz=kD({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:TR}),Tz={kernelName:Nn,backendName:"webgl",kernelFunc:Cz},_z={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;zF(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;ua.assert(Cp.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const l=Cp.computePool2DInfo(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&ua.arraysEqual(l.inShape,l.outShape))return hD({inputs:{x:a},backend:n});const c=new fM(l,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}},Ez={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=Cp.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),h=new mM(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},Az={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Cp.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),d=new mM(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.effectiveFilterDepth,n=e.effectiveFilterHeight,r=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${t};\n           wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${t*n*r-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${n} * ${r} +\n                  wR * ${r} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h),m=n.runWebGLProgram(f,[a,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}},$z={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;zF([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Cp.computePool2DInfo(o.shape,u,l,1,c,h),p=new fM(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.effectiveFilterHeight,n=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t};\n          wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${t*n-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${n} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},Fz={kernelName:En,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;ua.assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const l=[1,1];ua.assert(Cp.eitherStridesOrDilationsAreOne(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);const c=Cp.computePool2DInfo(r.shape,a,s,l,i),[h,d]=function(e,t,n,r){let a=new fM(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new fM(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,c,u);return[h,d]}},Rz={kernelName:An,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,u=ua.parseAxisParam(s,r.shape);let l=u;const c=Cp.getAxesPermutation(l,o),h=null!=c,d=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let a=0;a<t.length;a++)t[a]=r.shape[c[a]];const n=qR(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=DD(r,c,i);p.push(f),l=Cp.getInnerMostAxes(l.length,o)}Cp.assertAxesAreInnerMostDims("sum",l,o);const[m,g]=Cp.computeOutAndReduceShapes(f.shape,l);let y=m;a&&(y=Cp.expandShapeToKeepDim(m,u));const b=function(e,t,n,r){const a=ua.sizeFromShape(t),s=ED({inputs:{x:e},attrs:{shape:[ua.sizeFromShape(e.shape)/a,a]},backend:r}),i=RD(s,"float32","mean",r),o=ED({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const x of p)i.disposeIntermediateTensorInfo(x);return b}},Dz={kernelName:$n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=ua.parseAxisParam(s,a.shape);let l=u;const c=Cp.getAxesPermutation(l,o);let h=a;null!=c&&(h=zD({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Cp.getInnerMostAxes(l.length,a.shape.length)),Cp.assertAxesAreInnerMostDims("min",l,o);const[d,p]=Cp.computeOutAndReduceShapes(h.shape,l),f=ED({inputs:{x:h},backend:n,attrs:{shape:[-1,ua.sizeFromShape(p)]}}),m=RD(f,f.dtype,"min",n);let g;return g=ED(i?{inputs:{x:m},backend:n,attrs:{shape:Cp.expandShapeToKeepDim(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},Mz=kD({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:_R}),Oz={kernelName:Fn,backendName:"webgl",kernelFunc:Mz},zz={kernelName:Rn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,i=We().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=sR(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=YR("rc",r),u=YR("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}(r.shape,a,s):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=sR(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},Lz=kD({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Pz={kernelName:Dn,backendName:"webgl",kernelFunc:Lz},Bz=kD({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Wz={kernelName:Pt,backendName:"webgl",kernelFunc:Bz},Vz="return a - b;",Uz=kD({opSnippet:Vz,packedOpSnippet:Vz,supportsComplex:!0,cpuKernelImpl:GR}),Gz={kernelName:Dr,backendName:"webgl",kernelFunc:Uz};function Hz(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=ua.parseAxisParam([s],a.shape),o=Nz({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=Cp.expandShapeToKeepDim(o.shape,i),l=ED({inputs:{x:o},backend:n,attrs:{shape:u}}),c=Uz({inputs:{a:a,b:l},backend:n}),h=CO({inputs:{x:c},backend:n}),d=MD({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=ED({inputs:{x:d},backend:n,attrs:{shape:u}}),f=Bz({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}var jz={kernelName:kr,backendName:"webgl",kernelFunc:Hz},qz={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:Hz({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new class{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}(l,c,s),d=h.getCustomSetupFunc(i),p=n.runWebGLProgram(h,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),p}},Kz="return -x;",Xz={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=AR(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=We().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new aD(r.shape,Kz):new tD(r.shape,Kz),n.runWebGLProgram(a,[r],r.dtype)}},Yz=gf.nonMaxSuppressionV3Impl,Zz={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){Cp.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(a.dataId),c=n.readSync(s.dataId),{selectedIndices:h}=Yz(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Jz=gf.nonMaxSuppressionV4Impl,Qz={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){Cp.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=Jz(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},eL=gf.nonMaxSuppressionV5Impl,tL={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){Cp.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=eL(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},nL={kernelName:Un,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=ua.sizeFromShape(a.shape),l=new class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}(u,s,i,o),c=ED({inputs:{x:a},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(l,[c],a.dtype);n.disposeIntermediateTensorInfo(c);const d=ED({inputs:{x:h},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(h),d}};function rL(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=EM({inputs:{input:r},backend:n}),t=rL({inputs:{x:e},backend:n}),a=PM({inputs:{input:r},backend:n}),s=rL({inputs:{x:a},backend:n}),i=pD({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return OO({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var aL={kernelName:Gr,backendName:"webgl",kernelFunc:rL},sL={kernelName:Vn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=EM({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=PM({inputs:{input:a},backend:r}),i=rL({inputs:{x:s},backend:r}),o=pD({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return OO({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},iL={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return _O({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach(e=>{ua.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ua.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],u=VM({inputs:t.map(e=>{const t=_O({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}},oL=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r,o=We().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=sR(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=YR("rc",r),u=YR("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[a+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+=`\n        ${h[f]}\n        if (${d}) {\n          result[${f}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n      uniform float value;\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}(a.shape,s,i):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=sR(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n      uniform float value;\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}(a.shape,s,i),u=o.getCustomSetupFunc(i);return n.runWebGLProgram(o,[a],a.dtype,u)},uL={kernelName:Hn,backendName:"webgl",kernelFunc:oL},lL=kD({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),cL={kernelName:qn,backendName:"webgl",kernelFunc:lL},hL={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=[],l=ua.parseAxisParam(s,a.shape);let c=l;const h=Cp.getAxesPermutation(c,o);let d,p=a;if(null!=h&&(p=zD({inputs:{x:a},backend:n,attrs:{perm:h}}),c=Cp.getInnerMostAxes(c.length,o),u.push(p)),Cp.assertAxesAreInnerMostDims("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:a}=FR(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,a,t)}else{const[e,t]=Cp.computeOutAndReduceShapes(p.shape,c),r=ua.sizeFromShape(t),s=ED({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=RD(s,es(a.dtype),"prod",n);d=ED({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(s),u.push(i)}if(i){u.push(d);const e=Cp.expandShapeToKeepDim(d.shape,l);d=ED({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},dL=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=RR(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},pL={kernelName:Yn,backendName:"webgl",kernelFunc:dL},fL=vD({opSnippet:"return 1.0 / x;"}),mL={kernelName:Jn,backendName:"webgl",kernelFunc:fL},gL=vD({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),yL={kernelName:Qn,backendName:"webgl",kernelFunc:gL},bL=vD({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),xL={kernelName:sr,backendName:"webgl",kernelFunc:bL},wL={kernelName:rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=We().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],"float32")}},vL={kernelName:ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},kL={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=We().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],a.dtype)}},IL={kernelName:nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},NL={kernelName:ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=ua.parseAxisParam(s,a.shape);if(0===i)return hD({inputs:{x:a},backend:n});const u=We().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=YR("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=sR(n);var o;function u(n){const r=e.map((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:""+r[n]}(a,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=r.slice(),u(o)};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",u(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",u(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",u(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}(a.shape,o):new class{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),a=sR(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}},SL={kernelName:qr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=new class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(e,t,n,r){return(a,s)=>{null==this.paramsLoc&&(this.paramsLoc=a.getUniformLocationNoThrow(s,"params")),a.gl.uniform4f(this.paramsLoc,e,t,n,r)}}}(r.shape,s),[l,c]=Cp.getImageCenter(i,r.shape[1],r.shape[2]),h=u.getCustomSetupFunc(l,c,Math.sin(a),Math.cos(a));return o.runWebGLProgram(u,[r],r.dtype,h)}},CL=vD({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),TL={kernelName:or,backendName:"webgl",kernelFunc:CL},_L=vD({opSnippet:"return inversesqrt(x);",cpuKernelImpl:DR}),EL={kernelName:ur,backendName:"webgl",kernelFunc:_L},AL=class{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=sR(a.length),u=sR(s.length);let l="";1===n?l="i":2===n&&(l="i, j");let c="";1===r?c="i":2===r&&(c="i, coords[1]"),this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(getIndices(${l}));\n              flattenedIndex += index * ${t>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${c});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}},$L={kernelName:lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Cp.calculateShapes(s,a,i),d=[h/l,l];if(0===h)return n.makeTensorInfo(i,a.dtype);const p=ED({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=ED({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new AL(u,o,p.shape.length,f.shape.length,c,d),y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=ED({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}},FL={kernelName:cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(""+n[r]),r<e&&s.push(""+n[r]);r=s.join(),a=i.join()}const s=sR(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],Qa(a.dtype,s.dtype))}},RL=vD({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Cp.SELU_SCALEALPHA};\n  float scale = ${Cp.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),DL={kernelName:hr,backendName:"webgl",kernelFunc:RL},ML=vD({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),OL={kernelName:gr,backendName:"webgl",kernelFunc:ML},zL=vD({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),LL={kernelName:mr,backendName:"webgl",kernelFunc:zL},PL=vD({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),BL={kernelName:pr,backendName:"webgl",kernelFunc:PL},WL=vD({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),VL={kernelName:fr,backendName:"webgl",kernelFunc:WL},UL=vD({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),GL={kernelName:yr,backendName:"webgl",kernelFunc:UL},HL={kernelName:wr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;ua.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=s.reduce((e,t)=>e*t),u=[[0,0]];u.push(...i);for(let y=1+s.length;y<a.shape.length;++y)u.push([0,0]);const l=[],c=oL({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),h=Cp.getReshaped(c.shape,s,o,!1),d=Cp.getPermuted(h.length,s.length,!1),p=Cp.getReshapedPermuted(c.shape,s,o,!1),f=ED({inputs:{x:c},backend:n,attrs:{shape:h}}),m=zD({inputs:{x:f},backend:n,attrs:{perm:d}}),g=ED({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(m),l.forEach(e=>n.disposeIntermediateTensorInfo(e)),g}},jL={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         "+s.shape);if(2!==r.shape.length)throw new Error("Indices must be a matrix, saw:\n         "+r.shape);if(1!==a.shape.length)throw new Error("Values must be a vector, saw:\n         "+a.shape);if(0!==i.shape.length)throw new Error("Default value must be a scalar, saw:\n        "+i.shape);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=zR(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},qL={kernelName:Nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape "+r.shape);if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape "+a.shape);if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape "+s.shape);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,h]=LR(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},KL={kernelName:Sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n              "+a.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n              "+s.shape);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=PR(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},XL={kernelName:Cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n             "+a.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n             "+s.shape);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=PR(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},YL={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,strides:c,outputSize:h}=Cp.calculateShapes(s,a,o),d=new AL(l,u,a.shape.length,s.shape.length,c,[h,1],!1),p=n.runWebGLProgram(d,[s,a,i],s.dtype),f=ED({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},ZL={kernelName:vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ua.parseAxisParam(i,a.shape)[0],u=Cp.prepareSplitSize(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map(e=>{const t=[...c];t[o]=e;const r=IM({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r})}},JL=vD({opSnippet:"return sqrt(x);"}),QL={kernelName:br,backendName:"webgl",kernelFunc:JL},eP=vD({opSnippet:"return x * x;"}),tP={kernelName:Er,backendName:"webgl",kernelFunc:eP},nP="return (a - b) * (a - b);",rP=kD({opSnippet:nP,packedOpSnippet:nP}),aP={kernelName:_r,backendName:"webgl",kernelFunc:rP},sP={kernelName:Hr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=new tD(r.shape,`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `);return n.runWebGLProgram(a,[r],r.dtype)}},iP={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{nonStrided:p,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=Ji.sliceInfo(a.shape,s,i,o,u,l,c,h,d),x=ED({inputs:{x:a},backend:n,attrs:{shape:y}});let w;if(p){const e=IM({inputs:{x:x},backend:n,attrs:{begin:f,size:g}});w=ED({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some(e=>0===e))w=n.makeTensorInfo(b,a.dtype,[]);else if(n.shouldExecuteOnCPU([x])){const e=n.texData.get(x.dataId),t=fi(x.shape,x.dtype,e.values),r=BR(b,t,m,f);w=n.makeTensorInfo(b,x.dtype,r.values)}else{const e=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=sR(n.length),s=sR(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}(f,m,b);w=n.runWebGLProgram(e,[x],x.dtype)}const v=ED({inputs:{x:w},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),v}},oP={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=WR(d,p,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},uP={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: "+s.shape);if(0!==i.shape.length)throw new Error("Delimiter must be a scalar, got shape: "+i.shape);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=VR(o,u,a),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},lP={kernelName:Rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=UR(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},cP=vD({opSnippet:"return tan(x);"}),hP={kernelName:Mr,backendName:"webgl",kernelFunc:cP},dP=vD({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"});function pP(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map(e=>ua.decodeString(e)):e,r=fi(a.shape,a.dtype,t),i=HR(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new class{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const r=sR(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var fP=[kz,Iz,BD,VD,GD,jD,XD,YD,ZD,JD,nM,rM,sM,oM,hM,lM,pM,yM,gM,bM,xM,wM,vM,SM,CM,$M,DM,MM,zM,fD,UM,KM,XM,qM,ZM,JM,YM,eO,nO,rO,oO,uO,lO,pO,fO,dO,mO,gO,yO,xO,wO,kO,NO,TO,EO,FO,MO,LO,PO,VO,GO,HO,jO,qO,KO,XO,ZO,QO,dD,ez,BM,nz,az,iz,yD,uz,cz,hz,mz,pz,yz,xz,vz,Sz,Ez,_z,Az,$z,Fz,Tz,Rz,Dz,Oz,zz,Pz,qz,_D,Xz,Zz,Qz,tL,_M,nL,sL,iL,uL,cL,wD,hL,pL,AM,Wz,mL,xL,yL,AD,wL,vL,kL,IL,NL,SL,TL,EL,$L,FL,DL,OL,LL,BL,VL,NM,jz,GL,HL,jL,qL,KL,XL,YL,ZL,QL,tP,aP,sP,iP,oP,uP,lP,Gz,OD,hP,{kernelName:Or,backendName:"webgl",kernelFunc:dP},{kernelName:zr,backendName:"webgl",kernelFunc:pP},{kernelName:Lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=n.readSync(a.dataId),[u,l]=jR(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},{kernelName:Pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,d,p]=a.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],y=new class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}(h,d,i,o,u,g);return n.runWebGLProgram(y,[a,s],"float32")}},LD,{kernelName:Wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;zF(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:l}=KR(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:Vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],l=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==s&&(l[c++]=i.shape[m]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[s]=1;const f=new Array(u);for(let m=0;m<f.length;m++){d[s]=m;const e=IM({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),t=ED({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,h.push(e)}return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}},{kernelName:Ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,u=[];let l=0;const c=Cp.getAxesPermutation([l],o);let h=a;null!=c&&(h=zD({inputs:{x:a},backend:n,attrs:{perm:c}}),u.push(h),l=Cp.getInnerMostAxes(1,o)[0]);const d=Cp.segment_util.computeOutShape(h.shape,l,i),p=ua.sizeFromShape([h.shape[l]]),f=ED({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=es(a.dtype),g=(e,t,r,a,s)=>{const i=e.shape[0],o=e.shape[1],l=Cp.segment_util.segOpComputeOptimalWindowSize(o,s),c={windowSize:l,inSize:o,batchSize:i,numSegments:s},h=new class{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}(c,t),d=n.compileAndRun(h,[e,r],a);if(u.push(d),d.shape[1]===s)return d;const p=dL({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=pP({inputs:{x:p},backend:n,attrs:{reps:[o/l]}});return u.push(p),u.push(f),g(d,t,f,a,s)},y=ED({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:d}});let b=y;if(null!=c){u.push(y);const e=Cp.getUndoAxesPermutation(c);b=zD({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}},aL];for(const WG of fP)na(WG);var mP,gP,yP,bP,xP,wP={"tfjs-core":Fo,"tfjs-backend-cpu":"3.7.0","tfjs-backend-webgl":"3.7.0","tfjs-data":iC,"tfjs-layers":Gb,"tfjs-converter":XN,tfjs:"3.7.0"};(gP=mP||(mP={}))[gP.float32=0]="float32",gP[gP.int32=1]="int32",gP[gP.bool=2]="bool",gP[gP.string=3]="string",gP[gP.complex64=4]="complex64",(bP=yP||(yP={}))[bP.linear=0]="linear",bP[bP.relu=1]="relu",bP[bP.relu6=2]="relu6",bP[bP.prelu=3]="prelu",bP[bP.leakyrelu=4]="leakyrelu",bP[bP.sigmoid=5]="sigmoid";var vP={kernelName:Kr,backendName:"wasm",setupFunc:function(e){xP=e.wasm.cwrap(Kr,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r,d=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(s.dataId).id;let f=0;if(null!=i){const e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}const m=null==o?0:n.dataIdMap.get(o.dataId).id,g=yP[c];if(null==g)throw new Error(c+" activation not yet supported for FusedConv2D in the wasm backend.");const y=n.makeOutput([a.shape[0],u?a.shape[2]:a.shape[1],l?s.shape[1]:s.shape[2]],a.dtype),b=n.dataIdMap.get(y.dataId).id,x=new Uint8Array(new Int32Array(a.shape).buffer),w=new Uint8Array(new Int32Array(s.shape).buffer);return xP(d,x,a.shape.length,p,w,s.shape.length,u,l,g,f,m,h||0,b),y}};function kP(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number"])},kernelFunc:function(e){const{backend:n,inputs:{x:r}}=e,a=n.dataIdMap.get(r.dataId).id,s=n.makeOutput(r.shape,r.dtype),i=n.dataIdMap.get(s.dataId).id;return 0===ua.sizeFromShape(s.shape)||t(a,i),s}}}var IP=kP(je);function NP(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(a){const{backend:s,inputs:i}=a,{a:o,b:u}=i,l=s.dataIdMap.get(o.dataId).id,c=s.dataIdMap.get(u.dataId).id,h=null!=n?n:o.dtype,d=Cp.assertAndGetBroadcastShape(o.shape,u.shape),p=s.makeOutput(d,h);if(0===ua.sizeFromShape(d))return p;const f=new Uint8Array(new Int32Array(o.shape).buffer),m=new Uint8Array(new Int32Array(u.shape).buffer),g=s.dataIdMap.get(p.dataId).id,y=()=>r(l,f,o.shape.length,c,m,u.shape.length,mP[o.dtype],g);if(t&&"float32"===o.dtype)return y(),p;const b=Cp.getBroadcastDims(o.shape,d),x=Cp.getBroadcastDims(u.shape,d),w=b.every((e,t)=>e===t),v=x.every((e,t)=>e===t);if(w&&v)return y(),p;throw new Error(`Broadcasting along outer dims is not yet supported for ${o.dtype} ${e}.`)}}}var SP,CP=NP(Xe,!0),TP={kernelName:Ye,backendName:"wasm",setupFunc:function(e){SP=e.wasm.cwrap(Ye,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===ua.sizeFromShape(r.shape))return r;const a=t.map(e=>n.dataIdMap.get(e.dataId).id),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return SP(s,a.length,mP[r.dtype],i),r}};function _P(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var EP,AP={kernelName:an,backendName:"wasm",kernelFunc:_P};function $P(e){const{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let a=0;a<r.length;++a){let e=-1;for(let t=0;t<r.length;++t)r[t]>=a&&(-1===e||r[e]>r[t])&&(e=t);r[e]=a}return[n,r]}(t.x.shape,r.perm);let i=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(i=!1);const o=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),u={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){const e=_P({inputs:t,backend:n});return e.shape=o,e}const l=n.makeOutput(o,u.dtype),c=n.dataIdMap.get(u.dataId).id,h=n.dataIdMap.get(l.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),p=new Uint8Array(new Int32Array(u.shape).buffer);return EP(c,p,u.shape.length,mP[u.dtype],h,d,s.length),l}var FP,RP={kernelName:Br,backendName:"wasm",kernelFunc:$P,setupFunc:function(e){EP=e.wasm.cwrap(Br,null,["number","array","number","number","number","array","number"])}};function DP(e,t,n){const r=e.shape,a=e.shape.length,s=ua.parseAxisParam(t,r);let i=s;const o=Cp.getAxesPermutation(i,a);let u=null,l=!1;if(null!=o){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=Cp.getInnerMostAxes(i.length,a),u=$P({inputs:{x:e},attrs:{perm:o},backend:n});const s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==s&&(l=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:l}}var MP,OP,zP,LP={kernelName:Ze,backendName:"wasm",setupFunc:function(e){FP=e.wasm.cwrap(Ze,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:d}=DP(i,a,t);d&&(u=l,o=t.dataIdMap.get(l.dataId).id),Cp.assertAxesAreInnerMostDims("all",c,u.shape.length);const[p,f]=Cp.computeOutAndReduceShapes(u.shape,c),m=ua.sizeFromShape(f),g=t.makeOutput(p,i.dtype);if(0!==ua.sizeFromShape(u.shape)){const e=t.dataIdMap.get(g.dataId).id;FP(o,m,e)}if(d&&t.disposeData(l.dataId),s){const e=Cp.expandShapeToKeepDim(g.shape,h);g.shape=e}return g}},PP={kernelName:Je,backendName:"wasm",setupFunc:function(e){MP=e.wasm.cwrap(Je,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:d}=DP(i,a,t);d&&(u=l,o=t.dataIdMap.get(l.dataId).id),Cp.assertAxesAreInnerMostDims("any",c,u.shape.length);const[p,f]=Cp.computeOutAndReduceShapes(u.shape,c),m=ua.sizeFromShape(f),g=t.makeOutput(p,i.dtype);if(0!==ua.sizeFromShape(u.shape)){const e=t.dataIdMap.get(g.dataId).id;MP(o,m,e)}if(d&&t.disposeData(l.dataId),s){const e=Cp.expandShapeToKeepDim(g.shape,h);g.shape=e}return g}},BP={kernelName:Qe,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let o=i,u=s;const{transposed:l,axes:c,inputWasTransposed:h}=DP(s,a,t);if(h){const e=t.dataIdMap.get(l.dataId).id;e!==i&&(u=l,o=e)}const d=u.shape.slice(0,-1),p=t.makeOutput(d,"int32"),f=t.dataIdMap.get(p.dataId).id,m=ua.sizeFromShape(p.shape);return OP(o,mP[u.dtype],m,u.shape[c[0]],f),h&&t.disposeData(l.dataId),p},setupFunc:function(e){OP=e.wasm.cwrap(Qe,null,["number","number","number","number","number"])}},WP={kernelName:it,backendName:"wasm",setupFunc:function(e){zP=e.wasm.cwrap(it,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=Cp.computePool2DInfo(a.shape,i,o,1,u,l),h=c.filterHeight,d=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,b=c.strideWidth,x=c.inChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(1!==c.dilationWidth||1!==c.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);const w=r.makeOutput(c.outShape,"float32"),v=r.dataIdMap.get(w.dataId).id;return zP(s,a.shape[0],a.shape[1],a.shape[2],h,d,p,f,m,g,y,b,x,v),w}};function VP(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=ua.sizeFromShape(r.shape),i=ua.inferFromImplicitShape(a,s);return ua.assert(s===ua.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var UP,GP={kernelName:er,backendName:"wasm",kernelFunc:VP},HP={kernelName:ct,backendName:"wasm",setupFunc:function(e){UP=e.wasm.cwrap(ct,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],h=o?s.shape[l-1]:s.shape[l-2],d=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=ua.sizeFromShape(f),y=ua.sizeFromShape(m);ua.assert(u>=2&&l>=2&&(g===y||1===g||1===y),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`);const b=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([d,p]);ua.assert(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);const x=o?[y,p,h]:[y,h,p],w=VP({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),v=VP({inputs:{x:s},backend:n,attrs:{shape:x}}),k=n.dataIdMap.get(w.dataId).id,I=n.dataIdMap.get(v.dataId).id,N=i?w.shape[2]:w.shape[1],S=o?v.shape[1]:v.shape[2],C=Math.max(g,y),T=n.makeOutput([C,N,S],w.dtype),_=n.dataIdMap.get(T.dataId).id,E=new Uint8Array(new Int32Array(w.shape).buffer),A=new Uint8Array(new Int32Array(v.shape).buffer);return UP(k,E,w.shape.length,I,A,v.shape.length,i,o,_),n.disposeData(w.dataId),n.disposeData(v.dataId),T.shape=b,T}};function jP(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var qP,KP={kernelName:ft,backendName:"wasm",kernelFunc:jP},XP=kP(mt),YP={kernelName:gt,backendName:"wasm",setupFunc:function(e){qP=e.wasm.cwrap(gt,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(u.dataId).id;return qP(o,s,i,l),u}};function ZP(e,t,n,r,a){const s=Ji.isSliceContinous(r,t,n),i=ua.sizeFromShape(n),o=ua.computeStrides(r);if(s){const n=Ji.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const u=fi(r,a,"string"===a?Cp.fromUint8ToStringArray(e):e),l=fi(n,a);for(let c=0;c<l.size;++c){const e=l.indexToLoc(c),n=e.map((e,n)=>e+t[n]);l.set(u.get(...n),...e)}return"string"===a?Cp.fromStringArrayToUint8(l.values):l.values}function JP(e){const{inputs:t,backend:n}=e,r=ua.parseAxisParam(e.attrs.axis,t[0].shape)[0];let a=Cp.computeOutShape(t.map(e=>e.shape),r);const s=t.filter(e=>ua.sizeFromShape(e.shape)>0);if(1===s.length)return _P({inputs:{x:s[0]},backend:n});const i=n.makeOutput(a,t[0].dtype);if(0===ua.sizeFromShape(a))return i;const o=s.map(e=>e.shape);if(Cp.assertParamsConsistent(o,r),"string"===s[0].dtype){const e=s.map(e=>{const t=ua.sizeFromShape(e.shape.slice(r));return VP({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),o=e.map(e=>({vals:n.readSync(e.dataId),shape:e.shape}));a=Cp.computeOutShape(e.map(e=>e.shape),1);const u=function(e,t,n,r){const a=ua.getArrayFromDType(n,ua.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach(e=>{const n=ua.sizeFromShape(e.shape);a.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{const s="string"===n?Cp.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]})}return a}(o,a,t[0].dtype,1===e[0].shape[0]),l=Cp.computeOutShape(s.map(e=>e.shape),r);return i.shape=l,n.dataIdMap.get(i.dataId).stringBytes=Cp.fromStringArrayToUint8(u),e.forEach(e=>n.disposeData(e.dataId)),i}const u=ua.sizeFromShape(s[0].shape.slice(0,r));let l=0;const c=s.map(e=>{const t=ua.sizeFromShape(e.shape.slice(r));return l+=t,t}),h=s.map(e=>n.typedArrayFromHeap(e)),d=n.typedArrayFromHeap(i);for(let p=0;p<u;p++){let e=p*l;for(let t=0;t<h.length;t++){const n=c[t],r=p*n,a=h[t].subarray(r,r+n);d.set(a,e),e+=n}}return i}var QP,eB,tB,nB,rB,aB={kernelName:xt,backendName:"wasm",kernelFunc:JP},sB={kernelName:wt,backendName:"wasm",setupFunc:function(e){QP=e.wasm.cwrap(wt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:h,dataFormat:d}=n,p=Cp.convertConv2DDataFormat(d),f=Cp.computeConv2DInfo(a.shape,s.shape,u,l,c,h,!1,p),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,w=f.padInfo.left,v=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,N=f.strideWidth,S=f.inChannels,C=f.outChannels,T="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const _=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get(_.dataId).id;return QP(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,w,T,v,k,I,N,S,C,E),_}},iB={kernelName:kt,backendName:"wasm",setupFunc:function(e){eB=e.wasm.cwrap(kt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,inputShape:c}=r,h=Cp.convertConv2DDataFormat(u),d=Cp.computeConv2DInfo(c,s.shape,i,1,o,l,!1,h),{batchSize:p,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:w,outWidth:v,strideHeight:k,strideWidth:I}=d,N=f-1-d.padInfo.top,S=m-1-d.padInfo.left,C="channelsLast"===d.dataFormat,T=ua.computeStrides(d.inShape),_=ua.computeStrides(a.shape),[E,A,$]=ua.computeStrides(s.shape),F=T[0],R=C?T[1]:T[2],D=C?T[2]:1,M=C?1:T[1],O=_[0],z=C?_[1]:_[2],L=C?_[2]:1,P=C?1:_[1],B=t.makeOutput(d.inShape,"float32"),W=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,U=t.dataIdMap.get(s.dataId).id;return eB(V,U,p,f,m,y,b,g,w,v,x,k,I,N,S,E,A,$,F,R,D,M,O,z,L,P,W),B}},oB=kP(Ct);(nB=tB||(tB={}))[nB.bilinear=0]="bilinear",nB[nB.nearest=1]="nearest";var uB,lB,cB,hB={kernelName:Et,backendName:"wasm",setupFunc:function(e){rB=e.wasm.cwrap(Et,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[h,d]=i,p=[c,h,d,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=jP({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(l.dataId).id,x=t.makeOutput(p,"float32"),w=t.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return rB(g,y,b,c,v,h,d,tB[a],s,w),null!=f&&t.disposeData(f.dataId),x}},dB={kernelName:_t,backendName:"wasm",setupFunc:function(e){uB=e.wasm.cwrap(_t,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length;ua.assert("float32"===a.dtype||"int32"===a.dtype,()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`);const l=Cp.getAxesPermutation([s],u);let c=a;null!==l&&(c=$P({inputs:{x:a},attrs:{perm:l},backend:n}));const h=Cp.getInnerMostAxes(1,u)[0];Cp.assertAxesAreInnerMostDims("cumsum",[h],u);const d=n.makeOutput(c.shape,c.dtype),p=c.shape[h],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;uB(f,i?1:0,o?1:0,p,m,mP[a.dtype]);let g=d;return null!==l&&(g=$P({inputs:{x:d},attrs:{perm:Cp.getUndoAxesPermutation(l)},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)),g}},pB={kernelName:$t,backendName:"wasm",setupFunc:function(e){lB=e.wasm.cwrap($t,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r;ua.assert(s>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+s);const o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,l=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h="NHWC"===i?[o,u,l,c]:[o,c,u,l],d=t.makeOutput(h,"float32"),p=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(ua.computeStrides(a.shape)).buffer),m=new Uint8Array(new Int32Array(h).buffer),g=new Uint8Array(new Int32Array(ua.computeStrides(h)).buffer),y=t.dataIdMap.get(d.dataId).id;return lB(p,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,h.length,y),d}},fB={kernelName:Ft,backendName:"wasm",setupFunc:function(e){cB=e.wasm.cwrap(Ft,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:h}=n,d=Cp.computeConv2DInfo(a.shape,s.shape,u,null==l?[1,1]:l,c,h,!0),p=d.filterHeight,f=d.filterWidth,m=d.padInfo.top,g=d.padInfo.right,y=d.padInfo.bottom,b=d.padInfo.left,x=d.dilationHeight,w=d.dilationWidth,v=d.strideHeight,k=d.strideWidth,I=d.inChannels,N=d.outChannels,S="SAME"===d.padInfo.type?1:0;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);const C=r.makeOutput(d.outShape,"float32"),T=r.dataIdMap.get(C.dataId).id;return cB(i,a.shape[0],a.shape[1],a.shape[2],o,p,f,m,g,y,b,S,x,w,v,k,I,N,T),C}},mB=NP(Gt,!1,"bool"),gB=kP(Ht);function yB(e){const{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(ua.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),o.splice(u,0,1),VP({inputs:{x:a},backend:r,attrs:{shape:o}})}var bB,xB,wB,vB,kB,IB,NB,SB,CB,TB,_B,EB,AB,$B,FB={kernelName:jt,backendName:"wasm",kernelFunc:yB},RB={kernelName:Xt,backendName:"wasm",kernelFunc:function(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}},DB={kernelName:Yt,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,u,l,c]=r.shape;return bB(s,o,u,l,c,i),a},setupFunc:function(e){bB=e.wasm.cwrap(Yt,null,["number","number","number","number","number","number"])}},MB=kP(Zt),OB=NP(Jt,!1),zB={kernelName:Qt,backendName:"wasm",setupFunc:function(e){xB=e.wasm.cwrap(Qt,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:u,scale:l}=n,c=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,p=null!=u?t.dataIdMap.get(u.dataId).id:0,f=null!=l?t.dataIdMap.get(l.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===ua.sizeFromShape(s.shape))return m;const g=t.dataIdMap.get(m.dataId).id;return xB(c,h,d,p,f,a,g),m}},LB={kernelName:Xr,backendName:"wasm",setupFunc:function(e){wB=e.wasm.cwrap(Xr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=n,m=Cp.computeConv2DInfo(a.shape,s.shape,u,c,l,d),g=yP[p];if(null==g)throw new Error(p+" activation not yet supported for FusedConv2D in the wasm backend.");const y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels;let w=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}const v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,N=m.padInfo.right,S=m.padInfo.bottom,C=m.padInfo.left,T=m.dilationHeight,_=m.dilationWidth,E=m.strideHeight,A=m.strideWidth,$=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const O=r.makeOutput(m.outShape,"float32"),z=r.dataIdMap.get(O.dataId).id,L=null==o?0:r.dataIdMap.get(o.dataId).id;return wB(y,R,D,M,b,v,k,w,I,N,S,C,F,T,_,E,A,$,x,g,L,f||0,z),O}},PB={kernelName:Yr,backendName:"wasm",setupFunc:function(e){vB=e.wasm.cwrap(Yr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=n,m=Cp.computeConv2DInfo(a.shape,s.shape,u,c,l,d,!0),g=yP[p];if(null==g)throw new Error(p+" activation not yet supported for FusedDepthwiseConv2D in the wasm backend.");const y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels;let w=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}const v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,N=m.padInfo.right,S=m.padInfo.bottom,C=m.padInfo.left,T=m.dilationHeight,_=m.dilationWidth,E=m.strideHeight,A=m.strideWidth,$=m.inChannels,F="SAME"===m.padInfo.type?1:0,R=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const O=r.makeOutput(m.outShape,"float32"),z=r.dataIdMap.get(O.dataId).id,L=null==o?0:r.dataIdMap.get(o.dataId).id;return vB(y,R,D,M,b,v,k,w,I,N,S,C,F,T,_,E,A,$,x,g,L,f||0,z),O}},BB={kernelName:tn,backendName:"wasm",setupFunc:function(e){kB=e.wasm.cwrap(tn,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,u]=ji.prepareAndValidate(r,a),l=t.makeOutput(s,r.dtype);if(0===i)return l;const c=a.shape,h=c[c.length-1],d=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(u).buffer),m=t.dataIdMap.get(l.dataId).id;return kB(d,mP[r.dtype],p,i,h,o,f,m),l}},WB={kernelName:en,backendName:"wasm",setupFunc:function(e){IB=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,u=ua.parseAxisParam(i,a.shape)[0],l=Cp.segment_util.collectGatherOpShapeInfo(a,s,u,o),c=VP({inputs:{x:a},attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]},backend:t}),h=ua.sizeFromShape(s.shape),d=VP({inputs:{x:s},attrs:{shape:[l.batchSize,h/l.batchSize]},backend:t}),p=[l.batchSize,l.outerSize,h/l.batchSize,l.sliceSize],f=t.makeOutput(p,a.dtype);if(0===ua.sizeFromShape(a.shape))return f;const m=c.shape.length-1,g=t.dataIdMap.get(c.dataId).id,y=t.dataIdMap.get(d.dataId).id,b=t.dataIdMap.get(f.dataId).id,x=new Uint8Array(new Int32Array(ua.computeStrides(c.shape)).buffer),w=new Uint8Array(new Int32Array(ua.computeStrides(p)).buffer);return IB(g,mP[a.dtype],x,m,y,l.batchSize,w,b),t.disposeData(c.dataId),t.disposeData(d.dataId),f.shape=l.outputShape,f}},VB=NP(nn,!1,"bool"),UB=NP(rn,!1,"bool"),GB={kernelName:hn,backendName:"wasm",setupFunc:function(e){NB=e.wasm.cwrap(hn,null,["number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,t.dtype);if(0!==ua.sizeFromShape(t.shape)){const e=r.dataIdMap.get(s.dataId).id;NB(a,n,e)}return s}},HB=NP(dn,!1,"bool"),jB=NP(pn,!1,"bool"),qB=kP(mn),KB=NP(yn,!1,"bool"),XB={kernelName:In,backendName:"wasm",setupFunc:function(e){SB=e.wasm.cwrap(In,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:h,inputWasTransposed:d}=DP(i,a,t);d&&(u=l,o=t.dataIdMap.get(l.dataId).id),Cp.assertAxesAreInnerMostDims("max",c,u.shape.length);const[p,f]=Cp.computeOutAndReduceShapes(u.shape,c),m=ua.sizeFromShape(f),g=t.makeOutput(p,i.dtype);if(0!==ua.sizeFromShape(u.shape)){const e=t.dataIdMap.get(g.dataId).id;SB(o,m,e)}if(d&&t.disposeData(l.dataId),s){const e=Cp.expandShapeToKeepDim(g.shape,h);g.shape=e}return g}},YB=NP(Nn,!1),ZB={kernelName:Sn,backendName:"wasm",setupFunc:function(e){CB=e.wasm.cwrap(Sn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=Cp.computePool2DInfo(a.shape,i,o,1,u,l),h=c.filterHeight,d=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,b=c.dilationWidth,x=c.strideHeight,w=c.strideWidth,v=c.inChannels,k=c.outChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);const I=r.makeOutput(c.outShape,"float32"),N=r.dataIdMap.get(I.dataId).id;return CB(s,a.shape[0],a.shape[1],a.shape[2],h,d,p,f,m,g,y,b,x,w,v,k,N),I}},JB={kernelName:An,backendName:"wasm",setupFunc:function(e){TB=e.wasm.cwrap(An,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=DP(i,a,t);let f=h;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Cp.getInnerMostAxes(f.length,l.shape.length))}Cp.assertAxesAreInnerMostDims("mean",f,l.shape.length);const[m,g]=Cp.computeOutAndReduceShapes(l.shape,f),y=ua.sizeFromShape(g);let b=l;"float32"!==l.dtype&&(b=jP({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(b.dataId).id);const x=t.makeOutput(m,"float32");if(0!==ua.sizeFromShape(l.shape)){const e=t.dataIdMap.get(x.dataId).id;TB(u,y,e)}if(p&&t.disposeData(c.dataId),s){const e=Cp.expandShapeToKeepDim(x.shape,d);x.shape=e}return"float32"!==l.dtype&&t.disposeData(b.dataId),x}},QB={kernelName:$n,backendName:"wasm",setupFunc:function(e){_B=e.wasm.cwrap($n,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=DP(i,a,t);if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e)}Cp.assertAxesAreInnerMostDims("min",h,l.shape.length);const[f,m]=Cp.computeOutAndReduceShapes(l.shape,h),g=ua.sizeFromShape(m),y=t.makeOutput(f,l.dtype);if(0!==ua.sizeFromShape(l.shape)){const e=t.dataIdMap.get(y.dataId).id;_B(u,g,e)}if(p&&t.disposeData(c.dataId),s){const e=Cp.expandShapeToKeepDim(y.shape,d);y.shape=e}return y}},eW=NP(Fn,!1);(AB=EB||(EB={}))[AB.reflect=0]="reflect",AB[AB.symmetric=1]="symmetric";var tW,nW={kernelName:Rn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map((e,n)=>e[0]+t.shape[n]+e[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map(e=>e[0]),h=r.map(e=>e[1]),d=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(h).buffer);return $B(i,l,t.shape.length,mP[t.dtype],d,p,EB[a],u),o},setupFunc:function(e){$B=e.wasm.cwrap(Rn,null,["number","array","number","number","array","array","number","number"])}},rW=NP(On,!0),aW=kP(zn);function sW(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var iW,oW,uW,lW,cW,hW,dW,pW,fW,mW,gW,yW,bW,xW,wW,vW,kW,IW,NW,SW={kernelName:Pn,backendName:"wasm",setupFunc:function(e){tW=e.wasm.cwrap(Pn,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,h=tW(l,c,s,a,i),{pSelectedIndices:d,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=sW(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([p],"int32",d)}},CW={kernelName:Bn,backendName:"wasm",setupFunc:function(e){iW=e.wasm.cwrap(Bn,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,h=t.dataIdMap.get(l.dataId).id,d=iW(c,h,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=sW(t,d);return t.wasm._free(m),[t.makeOutput([f],"int32",p),t.makeOutput([],"int32",g)]}},TW={kernelName:Wn,backendName:"wasm",setupFunc:function(e){oW=e.wasm.cwrap(Wn,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,h=t.dataIdMap.get(l.dataId).id,d=oW(c,h,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=sW(t,d);return t.wasm._free(g),[t.makeOutput([f],"int32",p),t.makeOutput([f],"float32",m)]}},_W=NP(Ln,!1,"bool"),EW={kernelName:Un,backendName:"wasm",setupFunc:function(e){uW=e.wasm.cwrap(Un,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=n.makeOutput([...a.shape,s],"int32"),l=n.dataIdMap.get(u.dataId).id,c=n.dataIdMap.get(a.dataId);return uW(c.id,s,i,o,l),u}},AW={kernelName:Vn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},$W={kernelName:Gn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return yB({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach(e=>{ua.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ua.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],u=JP({inputs:t.map(e=>{const t=yB({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeData(e.dataId)),u}},FW={kernelName:Hn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map((e,n)=>e[0]+t.shape[n]+e[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map(e=>e[0]),h=r.map(e=>e[1]),d=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(h).buffer);return lW(i,l,t.shape.length,mP[t.dtype],d,p,a,u),o},setupFunc:function(e){lW=e.wasm.cwrap(Hn,null,["number","array","number","number","array","array","number","number"])}},RW=NP(qn,!1),DW={kernelName:Kn,backendName:"wasm",setupFunc:function(e){cW=e.wasm.cwrap(Kn,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=n.makeOutput(r.shape,"float32"),u=n.dataIdMap.get(o.dataId).id;return cW(s,i,u),o}},MW={kernelName:Xn,backendName:"wasm",setupFunc:function(e){hW=e.wasm.cwrap(Xn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=DP(i,a,t);let f=h;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Cp.getInnerMostAxes(f.length,l.shape.length))}Cp.assertAxesAreInnerMostDims("prod",f,l.shape.length);const[m,g]=Cp.computeOutAndReduceShapes(l.shape,f),y=ua.sizeFromShape(g),b=t.makeOutput(m,l.dtype);if(0!==ua.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;hW(u,y,mP[b.dtype],e)}if(p&&t.disposeData(c.dataId),s){const e=Cp.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},OW={kernelName:Yn,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=function(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return ua.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((t-e)/n)),s=ua.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let i=1;i<s.length;i++)s[i]=s[i-1]+n;return s}(r,a,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u}},zW=NP(Pt,!0),LW=kP(Qn),PW=kP(sr),BW={kernelName:rr,backendName:"wasm",setupFunc:function(e){dW=e.wasm.cwrap(rr,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,[c,h,d,p]=a.shape,f=[c,u,l,p];let m,g=t.dataIdMap.get(a.dataId);"float32"!==g.dtype&&(m=jP({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(m.dataId));const y=g.id,b=t.makeOutput(f,"float32");if(0===ua.sizeFromShape(a.shape))return b;const x=t.dataIdMap.get(b.dataId).id;return dW(y,c,h,d,p,u,l,s?1:0,i?1:0,x),null!=m&&t.disposeData(m.dataId),b}},WW={kernelName:ir,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=ua.parseAxisParam(s,a.shape);if(0===a.shape.length)return _P({inputs:{x:a},backend:n});const o=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);pW(u,c,i.length,h,a.shape.length,l);const d=VP({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),d},setupFunc:function(e){pW=e.wasm.cwrap(ir,null,["number","array","number","array","number","number"])}},VW={kernelName:qr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(u.dataId).id,[h,d,p,f]=a.shape,[m,g]=Cp.getImageCenter(o,d,p),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return fW(l,h,d,p,f,s,m,g,b,y.length,c),u},setupFunc:function(e){fW=e.wasm.cwrap(qr,null,["number","number","number","number","number","number","number","number","array","number","number"])}},UW=kP(or);function GW(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=Ji.parseSliceParams(t,n,r),o=Ji.isSliceContinous(t.shape,s,i),u=a.readSync(t.dataId),l=a.makeOutput(i,t.dtype),c=ua.computeStrides(t.shape),h=a.dataIdMap.get(l.dataId);if(o){const e=Ji.computeFlatOffset(s,c);return"string"===t.dtype?h.stringBytes=u.slice(e,e+ua.sizeFromShape(i)):a.typedArrayFromHeap(l).set(u.subarray(e,e+ua.sizeFromShape(i))),l}if("string"===t.dtype){const e=ZP(u,s,i,t.shape,t.dtype);return h.stringBytes=e,l}const d=a.typedArrayFromHeap(l),p=t.shape.length;if(2===p)!function(e,t,n,r,a){let s=0;const i=r[0],o=r[1],u=i+a[0];for(let l=i;l<u;l++){const r=l*t+o;n.set(e.subarray(r,r+a[1]),s),s+=a[1]}}(u,c[0],d,s,i);else if(3===p)!function(e,t,n,r,a,s){let i=0;const o=a[0],u=a[1],l=a[2],c=o+s[0],h=u+s[1];for(let d=o;d<c;d++)for(let a=u;a<h;a++){const o=d*t+a*n+l;r.set(e.subarray(o,o+s[2]),i),i+=s[2]}}(u,c[0],c[1],d,s,i);else if(4===p)!function(e,t,n,r,a,s,i){let o=0;const u=s[0],l=s[1],c=s[2],h=u+i[0],d=l+i[1],p=c+i[2],f=s[3];for(let m=u;m<h;m++)for(let s=l;s<d;s++)for(let u=c;u<p;u++){const l=m*t+s*n+u*r+f;a.set(e.subarray(l,l+i[3]),o),o+=i[3]}}(u,c[0],c[1],c[2],d,s,i);else{const e=ZP(u,s,i,t.shape,t.dtype);d.set(e)}return l}var HW=[IP,CP,TP,LP,PP,BP,WP,HP,KP,XP,YP,aB,sB,iB,oB,hB,dB,pB,fB,mB,gB,FB,RB,DB,MB,OB,vP,zB,LB,PB,BB,WB,VB,UB,AP,GB,HB,jB,qB,KB,XB,YB,ZB,JB,QB,eW,nW,rW,aW,SW,CW,TW,_W,EW,AW,$W,FW,RW,DW,MW,OW,zW,LW,PW,GP,BW,WW,VW,kP(ur),UW,{kernelName:lr,backendName:"wasm",setupFunc:function(e){mW=e.wasm.cwrap(lr,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===ua.sizeFromShape(i))return o;const{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=Ki.calculateShapes(s,a,i),p=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return mW(p,f,mP[s.dtype],u,l,c,m,d,g),o}},{kernelName:cr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(s.dataId).id,l=n.makeOutput(a.shape,a.dtype),c=n.dataIdMap.get(l.dataId).id,h=r.shape.length,d=0===h||h>1||1===a.shape.length?1:ua.sizeFromShape(a.shape.slice(1));return gW(i,o,u,d,c),l},setupFunc:function(e){gW=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},{kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){yW=e.wasm.cwrap(gr,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===ua.sizeFromShape(a.shape)||yW(r,s),a}},kP(pr),{kernelName:dr,backendName:"wasm",kernelFunc:GW},{kernelName:kr,backendName:"wasm",setupFunc:function(e){bW=e.wasm.cwrap(kr,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],u=ua.sizeFromShape(n.shape)/o;return 0===ua.sizeFromShape(s.shape)||bW(a,i,o,u),s}},{kernelName:vr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=ua.parseAxisParam(i,a.shape)[0],u=Cp.prepareSplitSize(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map(e=>{const t=[...c];t[o]=e;const n=GW({inputs:{x:a},attrs:{begin:l,size:t},backend:r});return l[o]+=e,n})}},kP(br),kP(Er),NP(_r,!0),{kernelName:Hr,backendName:"wasm",setupFunc:function(e){xW=e.wasm.cwrap(Hr,null,["number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(o.dataId).id;return xW(i,a,u),o}},{kernelName:Ar,backendName:"wasm",setupFunc:function(e){wW=e.wasm.cwrap(Ar,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n;let{begin:s,end:i,strides:o}=r;null==o&&(o=new Array(s.length));const{beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,p=Cp.slice_util.maskToAxes(c);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==c&&0!==h)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==c&&0!==d)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const f=a.shape.length-s.length,m=Cp.slice_util.maskToAxes(h),g=a.shape.slice();m.forEach(e=>{s[e]=0,i[e]=1,g.splice(e,0,1)});const y=VP({inputs:{x:a},attrs:{shape:g},backend:t}),{begin:b,end:x,strides:w}=Cp.slice_util.getNormalizedAxes(y.shape,p,f,s,i,o,u,l,c);s=b,i=x,o=w;const v=Cp.slice_util.maskToAxes(d);v.forEach(e=>{i[e]=s[e]+1,o[e]=1});const k=Cp.slice_util.computeOutShape(s,i,o),I=k.filter((e,t)=>-1===v.indexOf(t));if(o.every(e=>1===e)){const e=GW({inputs:{x:y},attrs:{begin:s,size:k},backend:t});t.disposeData(y.dataId);const n=VP({inputs:{x:e},attrs:{shape:I},backend:t});return t.disposeData(e.dataId),n}const N=t.makeOutput(I,"float32");if(!I.some(e=>0===e)){const e=t.dataIdMap.get(y.dataId).id,n=new Uint8Array(new Int32Array(ua.computeStrides(y.shape)).buffer),r=new Uint8Array(new Int32Array(s).buffer),a=new Uint8Array(new Int32Array(i).buffer),u=new Uint8Array(new Int32Array(o).buffer),l=new Uint8Array(new Int32Array(I).buffer),c=new Uint8Array(new Int32Array(ua.computeStrides(I)).buffer),h=t.dataIdMap.get(N.dataId).id;wW(e,n,y.shape.length,r,a,u,l,c,I.length,h)}t.disposeData(y.dataId);const S=VP({inputs:{x:N},attrs:{shape:I},backend:t});return t.disposeData(N.dataId),S}},NP(Dr,!0),{kernelName:xr,backendName:"wasm",setupFunc:function(e){vW=e.wasm.cwrap(xr,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=DP(i,a,t);let f=h;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Cp.getInnerMostAxes(f.length,l.shape.length))}Cp.assertAxesAreInnerMostDims("sum",f,l.shape.length);const[m,g]=Cp.computeOutAndReduceShapes(l.shape,f),y=ua.sizeFromShape(g),b=t.makeOutput(m,l.dtype);if(0!==ua.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;vW(u,y,e)}if(p&&t.disposeData(c.dataId),s){const e=Cp.expandShapeToKeepDim(b.shape,d);b.shape=e}return b}},kP(Mr),kP(Or),{kernelName:zr,backendName:"wasm",setupFunc:function(e){kW=e.wasm.cwrap(zr,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let d=0;d<o.length;d++)o[d]=a.shape[d]*i[d];const u=new Uint8Array(new Int32Array(a.shape).buffer),l=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,a.dtype),h=n.dataIdMap.get(c.dataId).id;return kW(s,u,a.shape.length,l,o.length,mP[c.dtype],h),c}},{kernelName:Lr,backendName:"wasm",setupFunc:function(e){IW=e.wasm.cwrap(Lr,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),u=r.shape.slice();u[u.length-1]=a;const l=t.makeOutput(u,r.dtype),c=t.dataIdMap.get(l.dataId).id,h=t.makeOutput(u,"int32"),d=t.dataIdMap.get(h.dataId).id;return IW(i,o,r.shape.length,mP[r.dtype],a,s,c,d),[l,h]}},{kernelName:Pr,backendName:"wasm",setupFunc:function(e){NW=e.wasm.cwrap(Pr,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,d,p]=a.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],y=new Uint8Array(new Int32Array(ua.computeStrides(a.shape)).buffer),b=t.makeOutput(g,a.dtype),x=t.dataIdMap.get(b.dataId).id,w=t.dataIdMap.get(a.dataId).id,v=t.dataIdMap.get(s.dataId).id,k="nearest"===i?1:2;let I;switch(o){case"constant":I=1;break;case"reflect":I=2;break;case"wrap":I=3;break;case"nearest":I=4;break;default:I=1}return NW(w,v,s.shape[0]>1,c,f,m,p,d,h,y,a.shape.length-1,k,I,u,x),b}},RP,{kernelName:Vr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape[s],o=a.shape.length,u=new Array(o-1);let l=0;for(let p=0;p<o;p++)p!==s&&(u[l++]=a.shape[p]);const c=new Array(i),h=new Array(o).fill(0),d=a.shape.slice();d[s]=1;for(let p=0;p<c.length;p++)h[s]=p,c[p]=GW({inputs:{x:a},attrs:{begin:h,size:d},backend:n});return c.map(({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:u}))}},{kernelName:Gr,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const WG of HW)na(WG);var jW=We();jW.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))),jW.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(jW.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var qW=y(W()),KW=y(V()),XW=class extends G{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new U(this,Lo())}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=ua.now();return e(),{kernelMs:ua.now()-t}}move(e,t,n,r,a){const s=this.dataIdNextNumber++;if("string"===r)return void this.dataIdMap.set(e,{id:s,stringBytes:t,shape:n,dtype:r,memoryOffset:null,refCount:a});const i=ua.sizeFromShape(n),o=i*ua.bytesPerElement(r),u=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:u,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,u),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e){const{memoryOffset:t,dtype:n,shape:r,stringBytes:a}=this.dataIdMap.get(e);return"string"===n?a:function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error("Unknown dtype "+t)}}(this.wasm.HEAPU8.slice(t,t+ua.sizeFromShape(r)*ua.bytesPerElement(n)).buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{const a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});const s=ua.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=ua.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error("Unknown dtype "+t)}}};function YW(e,t,n){if(null!=JW)return JW;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=eV&&null!=eV[r]?eV[r]:n+r}var ZW=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],JW=null,QW=null,eV={},tV=!1,nV=!1;function rV(e,t=!1){if(Oo("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),tV)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");JW=e,nV=t}function aV(e,t=!1){if(tV)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)QW=e;else{eV=e;const t=ZW.filter(e=>null==eV[e]);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}nV=t}var sV="3.7.0";function iV(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach(({x:n,y:r},a)=>{const s=t[a];e.moveTo(s.x,s.y),e.lineTo(n,r)}),n){const n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}Zo("wasm",async()=>{const{wasm:e}=await async function(){const[e,t]=await Promise.all([We().getAsync("WASM_HAS_SIMD_SUPPORT"),We().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,r)=>{const a={};var s;a.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?YW(e,t,null!=QW?QW:r):r+n},nV&&(a.instantiateWasm=(s=YW(e,t,null!=QW?QW:""),(e,t)=>(ua.fetch(s,{credentials:"same-origin"}).then(n=>{n.ok||e.env.a(`failed to load wasm binary file at '${s}'`),n.arrayBuffer().then(n=>{WebAssembly.instantiate(n,e).then(e=>{t(e.instance,e.module)})})}),{})));let i,o=!1;a.onAbort=()=>{o||tV||(tV=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==JW?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+qW.default.toString()],{type:"text/javascript"}),i=(0,qW.default)(a)):i=(0,KW.default)(a),i.then(e=>{o=!0,tV=!1,e.tfjs={init:e.cwrap("init",null,[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})})})}();return new XW(e)},2),i({},{AnchorPosition:()=>UV,DrawBox:()=>ZV,DrawBoxOptions:()=>YV,DrawFaceLandmarks:()=>OU,DrawFaceLandmarksOptions:()=>MU,DrawTextField:()=>XV,DrawTextFieldOptions:()=>KV,drawContour:()=>iV,drawDetections:()=>JV,drawFaceExpressions:()=>FU,drawFaceLandmarks:()=>zU}),i({},{computeReshapedDimensions:()=>yV,getCenterPoint:()=>bV,isDimensions:()=>gV,isEven:()=>fV,isFloat:()=>pV,isTensor:()=>uV,isTensor1D:()=>lV,isTensor2D:()=>cV,isTensor3D:()=>hV,isTensor4D:()=>dV,isValidNumber:()=>wV,isValidProbablitiy:()=>vV,range:()=>xV,round:()=>mV});var oV=class{constructor(e,t){if(!wV(e)||!wV(t))throw new Error("Dimensions.constructor - expected width and height to be valid numbers, instead have "+JSON.stringify({width:e,height:t}));this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new oV(1/this.width,1/this.height)}};function uV(e,t){return e instanceof La&&e.shape.length===t}function lV(e){return uV(e,1)}function cV(e){return uV(e,2)}function hV(e){return uV(e,3)}function dV(e){return uV(e,4)}function pV(e){return e%1!=0}function fV(e){return e%2==0}function mV(e,t=2){const n=10**t;return Math.floor(e*n)/n}function gV(e){return e&&e.width&&e.height}function yV({width:e,height:t},n){const r=n/Math.max(t,e);return new oV(Math.round(e*r),Math.round(t*r))}function bV(e){return e.reduce((e,t)=>e.add(t),new kV(0,0)).div(new kV(e.length,e.length))}function xV(e,t,n){return Array(e).fill(0).map((e,r)=>t+r*n)}function wV(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function vV(e){return wV(e)&&e>=0&&e<=1}var kV=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new kV(this.x+e.x,this.y+e.y)}sub(e){return new kV(this.x-e.x,this.y-e.y)}mul(e){return new kV(this.x*e.x,this.y*e.y)}div(e){return new kV(this.x/e.x,this.y/e.y)}abs(){return new kV(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new kV(Math.floor(this.x),Math.floor(this.y))}},IV=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(wV)}static assertIsValidBox(e,t,n=!1){if(!IV.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e,t=!0){const n=e||{},r=[n.left,n.top,n.right,n.bottom].every(wV),a=[n.x,n.y,n.width,n.height].every(wV);if(!a&&!r)throw new Error("Box.constructor - expected box to be IBoundingBox | IRect, instead have "+JSON.stringify(n));const[s,i,o,u]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];IV.assertIsValidBox({x:s,y:i,width:o,height:u},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=u}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new kV(this.left,this.top)}get topRight(){return new kV(this.right,this.top)}get bottomLeft(){return new kV(this.left,this.bottom)}get bottomRight(){return new kV(this.right,this.bottom)}round(){const[e,t,n,r]=[this.x,this.y,this.width,this.height].map(e=>Math.round(e));return new IV({x:e,y:t,width:n,height:r})}floor(){const[e,t,n,r]=[this.x,this.y,this.width,this.height].map(e=>Math.floor(e));return new IV({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this;const a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new IV({x:e,y:t,width:n,height:r})}rescale(e){const t=gV(e)?e.width:e,n=gV(e)?e.height:e;return new IV({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){const[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new IV({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){const{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),u=s-o,l=Math.min(a-i,e-i),c=Math.min(u,t-o);return new IV({x:i,y:o,width:l,height:c}).floor()}shift(e,t){const{width:n,height:r}=this;return new IV({x:this.x+e,y:this.y+t,width:n,height:r})}padAtBorders(e,t){const n=this.width+1,r=this.height+1;let a=n,s=r,i=this.left,o=this.top,u=this.right,l=this.bottom;return u>t&&(a=-u+t+n,u=t),l>e&&(s=-l+e+r,l=e),i<1&&(s=2-i,i=1),o<1&&(s=2-o,o=1),{dy:1,edy:s,dx:1,edx:a,y:o,ey:l,x:i,ex:u,w:n,h:r}}calibrate(e){return new IV({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},NV=class extends IV{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},SV=class{constructor(e,t,n,r,a){this._imageDims=new oV(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new IV(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new IV(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new SV(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},CV=class extends SV{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){const{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new CV(n,r,a)}};function TV(e,t,n=!0){const r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left))*Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top));return n?r/(e.area+t.area-r):r/Math.min(e.area,t.area)}function _V(e,t){return Wo(()=>{const[n,r,a]=t,s=_l([...e.shape.slice(0,3),1],n,"float32"),i=_l([...e.shape.slice(0,3),1],r,"float32"),o=_l([...e.shape.slice(0,3),1],a,"float32"),u=Ru([s,i,o],3);return tc(e,u)})}function EV(e){return 1/(1+Math.exp(-e))}var AV,$V=class extends IV{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},FV=class{constructor(e,t,n=new kV(0,0)){const{width:r,height:a}=t;this._imgDims=new oV(r,a),this._shift=n,this._positions=e.map(e=>e.mul(new kV(r,a)).add(n))}get shift(){return new kV(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(e=>e.sub(this._shift).div(new kV(this.imageWidth,this.imageHeight)))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new kV(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){const n=e instanceof CV?e.box.floor():new IV(e);return this.shiftBy(n.x,n.y).align(null,t)}const{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){const e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/.45),o=bV(e),u=Math.floor(Math.max(0,o.x-.5*i)),l=Math.floor(Math.max(0,o.y-.43*i));return new $V(u,l,Math.min(i,this.imageWidth+u),Math.min(i,this.imageHeight+l))}alignMinBbox(e){const t=function(e){const t=e.map(e=>e.x),n=e.map(e=>e.y),r=t.reduce((e,t)=>t<e?t:e,1/0),a=n.reduce((e,t)=>t<e?t:e,1/0),s=t.reduce((e,t)=>e<t?t:e,0),i=n.reduce((e,t)=>e<t?t:e,0);return new NV(r,a,s,i)}(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},RV=class extends FV{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(bV)}};function DV(e){return e.detection instanceof CV}function MV(e,t){return{...e,detection:t}}function OV(){const e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D:CanvasRenderingContext2D,Image:HTMLImageElement,ImageData:ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function zV(e){let t="";if(!e)try{e=s("fs")}catch(BG){t=BG.toString()}return{readFile:e?t=>new Promise((n,r)=>{e.readFile(t,(e,t)=>e?r(e):n(t))}):()=>{throw new Error("readFile - failed to require fs in nodejs environment with error: "+t)}}}function LV(){const e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=global.Video||global.HTMLVideoElement,r=global.fetch,a=zV();return{Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},createImageElement:()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},createVideoElement:()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},fetch:r,...a}}function PV(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}function BV(){return"object"==typeof global&&void 0!==e&&"undefined"!=typeof process&&!!process.version}function WV(e){AV=e}function VV(){return PV()?WV(OV()):BV()?WV(LV()):null}var UV,GV,HV={getEnv:function(){if(!AV)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return AV},setEnv:WV,initialize:VV,createBrowserEnv:OV,createFileSystem:zV,createNodejsEnv:LV,monkeyPatch:function(e){if(AV||VV(),!AV)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");const{Canvas:t=AV.Canvas,Image:n=AV.Image}=e;AV.Canvas=t,AV.Image=n,AV.createCanvasElement=e.createCanvasElement||(()=>new t),AV.createImageElement=e.createImageElement||(()=>new n),AV.ImageData=e.ImageData||AV.ImageData,AV.Video=e.Video||AV.Video,AV.fetch=e.fetch||AV.fetch,AV.readFile=e.readFile||AV.readFile},isBrowser:PV,isNodejs:BV};function jV(e){return HV.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function qV(e){const{Canvas:t,CanvasRenderingContext2D:n}=HV.getEnv();if(e instanceof n)return e;const r=jV(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");const a=r.getContext("2d");if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}VV(),(GV=UV||(UV={})).TOP_LEFT="TOP_LEFT",GV.TOP_RIGHT="TOP_RIGHT",GV.BOTTOM_LEFT="BOTTOM_LEFT",GV.BOTTOM_RIGHT="BOTTOM_RIGHT";var KV=class{constructor(e={}){const{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||UV.TOP_LEFT,this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},XV=class{constructor(e,t,n={}){this.text="string"==typeof e?[e]:e instanceof XV?e.text:e,this.anchor=t,this.options=new KV(n)}measureWidth(e){const{padding:t}=this.options;return this.text.map(t=>e.measureText(t).width).reduce((e,t)=>e<t?t:e,0)+2*t}measureHeight(){const{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){const{anchorPosition:n}=this.options,r=n===UV.BOTTOM_RIGHT||n===UV.TOP_RIGHT,a=n===UV.BOTTOM_LEFT||n===UV.BOTTOM_RIGHT,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,u=a?this.anchor.y-i:this.anchor.y;if(t){const{width:e,height:n}=t;return{x:Math.max(Math.min(o,e-s),0),y:Math.max(Math.min(u,n-i),0)}}return{x:o,y:u}}draw(e){const t=jV(e),n=qV(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;const u=this.measureWidth(n),l=this.measureHeight();n.fillStyle=r;const c=this.getUpperLeft(n,t);n.fillRect(c.x,c.y,u,l),n.fillStyle=a,this.text.forEach((e,t)=>{n.fillText(e,o+c.x,o+c.y+(t+1)*s)})}},YV=class{constructor(e={}){const{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r,this.drawLabelOptions=new KV({anchorPosition:UV.BOTTOM_LEFT,backgroundColor:this.boxColor,...a})}},ZV=class{constructor(e,t={}){this.box=new IV(e),this.options=new YV(t)}draw(e){const t=qV(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);const{label:u}=this.options;u&&new XV([u],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function JV(e,t){(Array.isArray(t)?t:[t]).forEach(t=>{const n=t instanceof CV?t.score:DV(t)?t.detection.score:void 0,r=t instanceof CV?t.box:DV(t)?t.detection.box:new IV(t),a=n?""+mV(n):void 0;new ZV(r,{label:a}).draw(e)})}function QV(e){const{Image:t,Video:n}=HV.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function eU(e){const{Image:t,Video:n}=HV.getEnv();return e instanceof t?new oV(e.naturalWidth,e.naturalHeight):e instanceof n?new oV(e.videoWidth,e.videoHeight):new oV(e.width,e.height)}function tU({width:e,height:t}){const{createCanvasElement:n}=HV.getEnv(),r=n();return r.width=e,r.height=t,r}function nU(e,t){const{ImageData:n}=HV.getEnv();if(!(e instanceof n||QV(e)))throw new Error("createCanvasFromMedia - media has not finished loading yet");const{width:r,height:a}=t||eU(e),s=tU({width:r,height:a});return e instanceof n?qV(s).putImageData(e,0,0):qV(s).drawImage(e,0,0,r,a),s}function rU(e){const{Image:t,Canvas:n,Video:r}=HV.getEnv();return e instanceof t||e instanceof n||e instanceof r}var aU=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],!Array.isArray(e))throw new Error("NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have "+e);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach((e,t)=>{if(hV(e))return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape);if(dV(e)){const n=e.shape[0];if(1!==n)throw new Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape.slice(1))}const n=e instanceof HV.getEnv().Canvas?e:nU(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return xV(this.batchSize,0,1).map((e,t)=>this.getReshapedInputDimensions(t))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");return yV({width:this.getInputWidth(e),height:this.getInputHeight(e)},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,Wo(()=>{const n=xV(this.batchSize,0,1).map(n=>{const r=this.getInput(n);if(r instanceof La){let n=dV(r)?r:Nl(r);return n=function(e,t=!1){return Wo(()=>{const[n,r]=e.shape.slice(1);if(n===r)return e;const a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=t=>{const n=e.shape.slice();return n[i]=t,_l(n,0,"float32")},u=o(s),l=a-u.shape[i],c=[t&&l?o(l):null,e,u].filter(e=>!!e).map(e=>mi(e,"float32"));return Ru(c,i)})}(n,t),n.shape[1]===e&&n.shape[2]===e||(n=lp.resizeBilinear(n,[e,e],!1,!1)),n.as3D(e,e,3)}if(r instanceof HV.getEnv().Canvas)return Bi.fromPixels(function(e,t,n=!1){const{Image:r,Canvas:a}=HV.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return tU({width:1,height:1});const s=eU(e),i=t/Math.max(s.height,s.width),o=i*s.width,u=i*s.height,l=tU({width:t,height:t}),c=e instanceof a?e:nU(e),h=Math.abs(o-u)/2,d=n&&o<u?h:0,p=n&&u<o?h:0;return c.width>0&&c.height>0&&qV(l).drawImage(c,d,p,o,u),l}(r,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)});return Ah(n.map(e=>mi(e,"float32"))).as4D(this.batchSize,e,e,3)})}};async function sU(e){if(e instanceof aU)return e;const t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");const n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(jV);return r.forEach((e,r)=>{if(!rU(e)&&!hV(e)&&!dV(e)){if("string"==typeof t[r])throw new Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`);throw new Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`)}if(dV(e)){const t=e.shape[0];if(1!==t)throw new Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}}),await Promise.all(r.map(e=>{return rU(e)&&(t=e,new Promise((e,n)=>{if(t instanceof HV.getEnv().Canvas||QV(t))return e(null);function r(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(t){t.currentTarget&&(t.currentTarget.removeEventListener("load",a),t.currentTarget.removeEventListener("error",r),e(t))}t.addEventListener("load",a),t.addEventListener("error",r)}));var t})),new aU(r,Array.isArray(e))}async function iU(e,t){const{Canvas:n}=HV.getEnv();let r=e;if(!(e instanceof n)){const t=await sU(e);if(t.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");const a=t.getInput(0);r=a instanceof n?a:await async function(e,t){const n=HV.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(dV(e)?1:0),i=Wo(()=>e.as3D(r,a,s).toInt());return await Bi.toPixels(i,n),i.dispose(),n}(a)}const a=qV(r);return t.map(e=>e instanceof CV?e.forSize(r.width,r.height).box.floor():e).map(e=>e.clipAtImageBorders(r.width,r.height)).map(({x:e,y:t,width:n,height:r})=>{const s=tU({width:n,height:r});return n>0&&r>0&&qV(s).putImageData(a.getImageData(e,t,n,r),0,0),s})}async function oU(e,t){if(!hV(e)&&!dV(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(dV(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return Wo(()=>{const[n,r,a]=e.shape.slice(dV(e)?1:0);return t.map(e=>e instanceof CV?e.forSize(r,n).box:e).map(e=>e.clipAtImageBorders(r,n)).map(({x:t,y:s,width:i,height:o})=>xh(e.as3D(n,r,a),[s,t,0],[o,i,a]))})}function uU(e,t){const n=t+"-weights_manifest.json";if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:"/"+n};const r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"",a=(e=e.replace(r,"")).split("/").filter(e=>e),s=e.endsWith(".json")?a[a.length-1]:n;let i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?"/"+i:i,{modelBaseUri:i,manifestUri:"/"===i?"/"+s:`${i}/${s}`}}var lU=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){const{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){const{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map(({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)}))}getTrainableParams(){return this.getParamList().filter(e=>e.tensor instanceof Ba)}getFrozenParams(){return this.getParamList().filter(e=>!(e.tensor instanceof Ba))}variable(){this.getFrozenParams().forEach(({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())})}freeze(){this.getTrainableParams().forEach(({path:e,tensor:t})=>{const n=Ss(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)})}dispose(e=!0){this.getParamList().forEach(t=>{if(e&&t.tensor.isDisposed)throw new Error("param tensor has already been disposed for path "+t.path);t.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:e})=>Array.from(e.dataSync())).reduce((e,t)=>e.concat(t)))}async load(e){e instanceof Float32Array?this.extractWeights(e):await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw new Error(this._name+".loadFromUri - expected model uri");const t=await async function(e,t){const{manifestUri:n,modelBaseUri:r}=uU(e,t),a=await async function(e){return(await async function(e,t){const{fetch:n}=HV.getEnv(),r=await n(e,void 0);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}(e)).json()}(n);return bi.loadWeights(a,r)}(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw new Error(this._name+".loadFromDisk - expected model file path");const{readFile:t}=HV.getEnv(),{manifestUri:n,modelBaseUri:r}=uU(e,this.getDefaultModelName()),a=bi.weightsLoaderFactory(e=>Promise.all(e.map(e=>t(e).then(e=>e.buffer)))),s=JSON.parse((await t(n)).toString()),i=await a(s,r);this.loadFromWeightMap(i)}loadFromWeightMap(e){const{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){const{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");const t=e.split("/").reduce((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw new Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}},{nextObj:this.params}),{obj:n,objProp:r}=t;if(!(n&&r&&n[r]instanceof La))throw new Error("traversePropertyPath - parameter is not a tensor, for path "+e);return{obj:n,objProp:r}}};function cU(e,t,n){return Wo(()=>{let r=dh(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=eu(r,t.bias),r})}function hU(e,t,n=!1){return Wo(()=>{const r=th(n?eu(Zu(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):cU(e,t.conv0,[2,2])),a=cU(r,t.conv1,[1,1]),s=cU(th(eu(r,a)),t.conv2,[1,1]);return th(eu(r,eu(a,s)))})}function dU(e,t,n=!1,r=!0){return Wo(()=>{const a=th(n?eu(Zu(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):cU(e,t.conv0,r?[2,2]:[1,1])),s=cU(a,t.conv1,[1,1]),i=cU(th(eu(a,s)),t.conv2,[1,1]),o=cU(th(eu(a,eu(s,i))),t.conv3,[1,1]);return th(eu(a,eu(s,eu(i,o))))})}function pU(e,t,n="same",r=!1){return Wo(()=>{const a=eu(Zu(e,t.filters,[1,1],n),t.bias);return r?th(a):a})}function fU(e,t){Object.keys(e).forEach(n=>{t.some(e=>e.originalPath===n)||e[n].dispose()})}function mU(e,t){return(n,r,a,s)=>{const i=Oh(e(n*r*a*a),[a,a,n,r]),o=Dh(e(r));return t.push({paramPath:s+"/filters"},{paramPath:s+"/bias"}),{filters:i,bias:o}}}function gU(e,t){return(n,r,a)=>{const s=Mh(e(n*r),[n,r]),i=Dh(e(r));return t.push({paramPath:a+"/weights"},{paramPath:a+"/bias"}),{weights:s,bias:i}}}var yU=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function bU(e,t){return(n,r,a)=>{const s=Oh(e(9*n),[3,3,n,1]),i=Oh(e(n*r),[1,1,n,r]),o=Dh(e(r));return t.push({paramPath:a+"/depthwise_filter"},{paramPath:a+"/pointwise_filter"},{paramPath:a+"/bias"}),new yU(s,i,o)}}function xU(e){return t=>{const n=e(t+"/depthwise_filter",4),r=e(t+"/pointwise_filter",4),a=e(t+"/bias",1);return new yU(n,r,a)}}function wU(e,t){return(n,r,a)=>{const s=e[n];if(!uV(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function vU(e){let t=e;return{extractWeights:function(e){const n=t.slice(0,e);return t=t.slice(e),n},getRemainingWeights:function(){return t}}}function kU(e,t){const n=mU(e,t),r=bU(e,t);function a(e,t,a,s=!1){return{conv0:s?n(e,t,3,a+"/conv0"):r(e,t,a+"/conv0"),conv1:r(t,t,a+"/conv1"),conv2:r(t,t,a+"/conv2")}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:function(e,t,n,s=!1){const{conv0:i,conv1:o,conv2:u}=a(e,t,n,s);return{conv0:i,conv1:o,conv2:u,conv3:r(t,t,n+"/conv3")}}}}function IU(e){return t=>({filters:e(t+"/filters",4),bias:e(t+"/bias",1)})}function NU(e,t){const n=wU(e,t),r=IU(n),a=xU(n);return{extractDenseBlock3Params:function(e,t=!1){return{conv0:t?r(e+"/conv0"):a(e+"/conv0"),conv1:a(e+"/conv1"),conv2:a(e+"/conv2")}},extractDenseBlock4Params:function(e,t=!1){return{conv0:t?r(e+"/conv0"):a(e+"/conv0"),conv1:a(e+"/conv1"),conv2:a(e+"/conv2"),conv3:a(e+"/conv3")}}}}var SU=class extends lU{constructor(){super("FaceFeatureExtractor")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return Wo(()=>{let n=dU(_V(mi(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=dU(n,t.dense1),n=dU(n,t.dense2),n=dU(n,t.dense3),n=$u(n,[7,7],[2,2],"valid"),n})}async forward(e){return this.forwardInput(await sU(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractDenseBlock4Params:n}=NU(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return fU(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=vU(e),{extractDenseBlock4Params:a}=kU(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),u=a(128,256,"dense3");if(0!==r().length)throw new Error("weights remaing after extract: "+r().length);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:u}}}(e)}};function CU(e,t){return Wo(()=>eu(Oi(e,t.weights),t.bias))}function TU(e){const t={},n={};return Object.keys(e).forEach(r=>{(r.startsWith("fc")?n:t)[r]=e[r]}),{featureExtractorMap:t,classifierMap:n}}var _U=class extends lU{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){const{params:t}=this;if(!t)throw new Error(this._name+" - load model before inference");return Wo(()=>{const n=e instanceof aU?this.faceFeatureExtractor.forwardInput(e):e;return CU(n.as2D(n.shape[0],-1),t.fc)})}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){const{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e,t,n){const r=[],{extractWeights:a,getRemainingWeights:s}=vU(e),i=gU(a,r)(t,n,"fc");if(0!==s().length)throw new Error("weights remaing after extract: "+s().length);return{paramMappings:r,params:{fc:i}}}(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){const{featureExtractorMap:t,classifierMap:n}=TU(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){const t=[],n=wU(e,t),r={fc:{weights:n("fc/weights",2),bias:n("fc/bias",1)}};return fU(e,t),{params:r,paramMappings:t}}(n)}extractParams(e){const t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},EU=["neutral","happy","sad","angry","fearful","disgusted","surprised"],AU=class{constructor(e){if(7!==e.length)throw new Error("FaceExpressions.constructor - expected probabilities.length to be 7, have: "+e.length);EU.forEach((t,n)=>{this[t]=e[n]})}asSortedArray(){return EU.map(e=>({expression:e,probability:this[e]})).sort((e,t)=>t.probability-e.probability)}};function $U(e,t){return{...e,expressions:t}}function FU(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach(t=>{const a=t instanceof AU?t:t.expressions instanceof AU?t.expressions:void 0;if(!a)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");const s=a.asSortedArray().filter(e=>e.probability>n),i=DV(t)?t.detection.box.bottomLeft:r||new kV(0,0);new XV(s.map(e=>`${e.expression} (${mV(e.probability)})`),i).draw(e)})}function RU(e){return DV(e)&&e.landmarks instanceof FV&&e.unshiftedLandmarks instanceof FV&&e.alignedRect instanceof CV}function DU(e,t){const{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i={landmarks:r,unshiftedLandmarks:t,alignedRect:new CV(e.detection.score,a.rescale(s.reverse()),s),angle:function(e){const t=(e,t,n,r)=>Math.atan2(r-t,n-e)%Math.PI,n={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e._positions||68!==e._positions.length)return n;const r=e._positions;n.roll=-t(r[36]._x,r[36]._y,r[45]._x,r[45]._y),n.pitch=t(0,Math.abs(r[0]._x-r[30]._x)/r[30]._x,Math.PI,Math.abs(r[16]._x-r[30]._x)/r[30]._x);const a=r.reduce((e,t)=>e<t._y?e:t._y,1/0),s=r.reduce((e,t)=>e>t._y?e:t._y,-1/0);return n.yaw=Math.PI*(e._imgDims._height/(s-a)/1.4-1),n}(t)};return{...e,...i}}var MU=class{constructor(e={}){const{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},OU=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new MU(t)}draw(e){const t=qV(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;n&&this.faceLandmarks instanceof RV&&(t.strokeStyle=s,t.lineWidth=a,iV(t,this.faceLandmarks.getJawOutline()),iV(t,this.faceLandmarks.getLeftEyeBrow()),iV(t,this.faceLandmarks.getRightEyeBrow()),iV(t,this.faceLandmarks.getNose()),iV(t,this.faceLandmarks.getLeftEye(),!0),iV(t,this.faceLandmarks.getRightEye(),!0),iV(t,this.faceLandmarks.getMouth(),!0)),r&&(t.strokeStyle=o,t.fillStyle=o,this.faceLandmarks.positions.forEach(e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()}))}};function zU(e,t){(Array.isArray(t)?t:[t]).forEach(t=>{const n=t instanceof FV?t:RU(t)?t.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new OU(n).draw(e)})}function LU(e,t,n){return eu(Zu(e,t.filters,n,"same"),t.bias)}function PU(e,t,n=!0){let r=n?th(e):e;return r=cU(r,t.separable_conv0,[1,1]),r=cU(th(r),t.separable_conv1,[1,1]),r=yc(r,[3,3],[2,2],"same"),r=eu(r,LU(e,t.expansion_conv,[2,2])),r}var BU,WU,VU=class extends lU{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){const{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return Wo(()=>{const n=_V(mi(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255);let r=th(LU(n,t.entry_flow.conv_in,[2,2]));return r=PU(r,t.entry_flow.reduction_block_0,!1),r=PU(r,t.entry_flow.reduction_block_1),xV(this._numMainBlocks,0,1).forEach(e=>{r=function(e,t){let n=cU(th(e),t.separable_conv0,[1,1]);return n=cU(th(n),t.separable_conv1,[1,1]),n=cU(th(n),t.separable_conv2,[1,1]),n=eu(n,e),n}(r,t.middle_flow["main_block_"+e])}),r=PU(r,t.exit_flow.reduction_block),r=th(cU(r,t.exit_flow.separable_conv,[1,1])),r})}async forward(e){return this.forwardInput(await sU(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return function(e,t){const n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=function(e,t){const n=wU(e,t),r=IU(n),a=xU(n);return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:function(e){return{separable_conv0:a(e+"/separable_conv0"),separable_conv1:a(e+"/separable_conv1"),expansion_conv:r(e+"/expansion_conv")}},extractMainBlockParams:function(e){return{separable_conv0:a(e+"/separable_conv0"),separable_conv1:a(e+"/separable_conv1"),separable_conv2:a(e+"/separable_conv2")}}}}(e,n),o={conv_in:r("entry_flow/conv_in"),reduction_block_0:s("entry_flow/reduction_block_0"),reduction_block_1:s("entry_flow/reduction_block_1")},u={};xV(t,0,1).forEach(e=>{u["main_block_"+e]=i("middle_flow/main_block_"+e)});const l={reduction_block:s("exit_flow/reduction_block"),separable_conv:a("exit_flow/separable_conv")};return fU(e,n),{params:{entry_flow:o,middle_flow:u,exit_flow:l},paramMappings:n}}(e,this._numMainBlocks)}extractParams(e){return function(e,t){const n=[],{extractWeights:r,getRemainingWeights:a}=vU(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:u}=function(e,t){const n=mU(e,t),r=bU(e,t);return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:function(e,t,a){return{separable_conv0:r(e,t,a+"/separable_conv0"),separable_conv1:r(t,t,a+"/separable_conv1"),expansion_conv:n(e,t,1,a+"/expansion_conv")}},extractMainBlockParams:function(e,t){return{separable_conv0:r(e,e,t+"/separable_conv0"),separable_conv1:r(e,e,t+"/separable_conv1"),separable_conv2:r(e,e,t+"/separable_conv2")}}}}(r,n),l={conv_in:s(3,32,3,"entry_flow/conv_in"),reduction_block_0:o(32,64,"entry_flow/reduction_block_0"),reduction_block_1:o(64,128,"entry_flow/reduction_block_1")},c={};xV(t,0,1).forEach(e=>{c["main_block_"+e]=u(128,"middle_flow/main_block_"+e)});const h={reduction_block:o(128,256,"exit_flow/reduction_block"),separable_conv:i(256,512,"exit_flow/separable_conv")};if(0!==a().length)throw new Error("weights remaing after extract: "+a().length);return{paramMappings:n,params:{entry_flow:l,middle_flow:c,exit_flow:h}}}(e,this._numMainBlocks)}};(WU=BU||(BU={})).FEMALE="female",WU.MALE="male";var UU=class extends _U{postProcess(e,t,n){const r=n.map(({width:e,height:n})=>{const r=t/Math.max(n,e);return{width:e*r,height:n*r}}),a=r.length;return Wo(()=>{const n=(e,t)=>Ah([_l([68],e,"float32"),_l([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{const{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0};return e.mul(_l([a,136],t,"float32")).sub(Ah(Array.from(Array(a),(e,t)=>n((e=>s(e,(e,t)=>e<t))(t),(e=>s(e,(e,t)=>t<e))(t))))).div(Ah(Array.from(Array(a),(e,t)=>n(r[t].width,r[t].height))))})}forwardInput(e){return Wo(()=>{const t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map(([e,t])=>({height:e,width:t})))})}async forward(e){return this.forwardInput(await sU(e))}async detectLandmarks(e){const t=await sU(e),n=Wo(()=>Uh(this.forwardInput(t))),r=await Promise.all(n.map(async(e,n)=>{const r=Array.from(e.dataSync()),a=r.filter((e,t)=>fV(t)),s=r.filter((e,t)=>!fV(t));return new RV(Array(68).fill(0).map((e,t)=>new kV(a[t],s[t])),{height:t.getInputHeight(n),width:t.getInputWidth(n)})}));return n.forEach(e=>e.dispose()),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},GU=class extends lU{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return Wo(()=>{let n=hU(_V(mi(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=hU(n,t.dense1),n=hU(n,t.dense2),n=$u(n,[14,14],[2,2],"valid"),n})}async forward(e){return this.forwardInput(await sU(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractDenseBlock3Params:n}=NU(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return fU(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=vU(e),{extractDenseBlock3Params:a}=kU(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error("weights remaing after extract: "+r().length);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}(e)}};function HU(e,t,n,r,a="same"){const{filters:s,bias:i}=t.conv;let o=Zu(e,s,n,a);return o=eu(o,i),o=function(e,t){return eu(ru(e,t.weights),t.biases)}(o,t.scale),r?th(o):o}function jU(e,t){return HU(e,t,[1,1],!1)}function qU(e,t){return HU(e,t,[2,2],!0,"valid")}function KU(e,t){let n=function(e,t){return HU(e,t,[1,1],!0)}(e,t.conv1);return n=jU(n,t.conv2),n=eu(n,e),n=th(n),n}function XU(e,t){let n=qU(e,t.conv1);n=jU(n,t.conv2);let r=$u(e,2,2,"valid");const a=kc(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){const e=[...n.shape];e[1]=1;const t=kc(e);n=Ru([n,t],1);const r=[...n.shape];r[2]=1;const a=kc(r);n=Ru([n,a],2)}return r=s?Ru([r,a],3):r,n=eu(r,n),n=th(n),n}function YU(e,t){return{...e,descriptor:t}}function ZU(e,t){return{...e,age:t}}function JU(e,t,n){return{...e,gender:t,genderProbability:n}}function QU(e,t,n){return Wo(()=>{let r=Zu(e,t.filters,n,"same");return r=eu(r,t.batch_norm_offset),ju(r,0,6)})}function eG(e,t,n){const r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),u=Math.min(r[n][0],r[n][2]),l=Math.min(r[n][1],r[n][3]),c=Math.max(r[n][0],r[n][2]),h=Math.max(r[n][1],r[n][3]),d=(i-a)*(o-s),p=(c-u)*(h-l);if(d<=0||p<=0)return 0;const f=Math.max(a,u),m=Math.max(s,l),g=Math.min(i,c),y=Math.min(o,h),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(d+p-b)}function tG(e,t){return Wo(()=>{const n=e.shape[0];return{boxPredictionEncoding:Au(pU(e,t.box_encoding_predictor),[n,-1,1,4]),classPrediction:Au(pU(e,t.class_predictor),[n,-1,3])}})}var nG=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(this._name+" - expected minConfidence to be a number between 0 and 1");if("number"!=typeof this._maxResults)throw new Error(this._name+" - expected maxResults to be a number")}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},rG=[new kV(.738768,.874946),new kV(2.42204,2.65704),new kV(4.30971,7.04493),new kV(10.246,4.59428),new kV(12.6868,11.8741)],aG=[new kV(1.603231,2.094468),new kV(6.041143,7.080126),new kV(2.882459,3.518061),new kV(4.266906,5.178857),new kV(9.041765,10.66308)],sG=[117.001,114.697,97.404],iG=e=>"number"==typeof e;function oG(e){return Wo(()=>{const t=ru(e,ch(.10000000149011612));return eu(th(tc(e,t)),t)})}function uG(e,t){return Wo(()=>{let n=Oc(e,[[0,0],[1,1],[1,1],[0,0]]);return n=Zu(n,t.conv.filters,[1,1],"valid"),n=tc(n,t.bn.sub),n=ru(n,t.bn.truediv),n=eu(n,t.conv.bias),oG(n)})}function lG(e,t){return Wo(()=>{let n=Oc(e,[[0,0],[1,1],[1,1],[0,0]]);return n=dh(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=eu(n,t.bias),oG(n)})}var cG=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!=0)throw new Error(this._name+" - expected inputSize to be a number divisible by 32");if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(this._name+" - expected scoreThreshold to be a number between 0 and 1")}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},hG=class extends lU{constructor(e){super("TinyYolov2"),function(e){if(!e)throw new Error("invalid config: "+e);if("boolean"!=typeof e.withSeparableConvs)throw new Error("config.withSeparableConvs has to be a boolean, have: "+e.withSeparableConvs);if(!iG(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error("config.iouThreshold has to be a number between [0, 1], have: "+e.iouThreshold);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(e=>"string"==typeof e))throw new Error("config.classes has to be an array class names: string[], have: "+JSON.stringify(e.classes));if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(e=>e||{}).every(e=>iG(e.x)&&iG(e.y)))throw new Error("config.anchors has to be an array of { x: number, y: number }, have: "+JSON.stringify(e.anchors));if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(iG)))throw new Error("config.meanRgb has to be an array of shape [number, number, number], have: "+JSON.stringify(e.meanRgb))}(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=uG(e,t.conv0);return n=yc(n,[2,2],[2,2],"same"),n=uG(n,t.conv1),n=yc(n,[2,2],[2,2],"same"),n=uG(n,t.conv2),n=yc(n,[2,2],[2,2],"same"),n=uG(n,t.conv3),n=yc(n,[2,2],[2,2],"same"),n=uG(n,t.conv4),n=yc(n,[2,2],[2,2],"same"),n=uG(n,t.conv5),n=yc(n,[2,2],[1,1],"same"),n=uG(n,t.conv6),n=uG(n,t.conv7),pU(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?oG(pU(e,t.conv0,"valid",!1)):lG(e,t.conv0);return n=yc(n,[2,2],[2,2],"same"),n=lG(n,t.conv1),n=yc(n,[2,2],[2,2],"same"),n=lG(n,t.conv2),n=yc(n,[2,2],[2,2],"same"),n=lG(n,t.conv3),n=yc(n,[2,2],[2,2],"same"),n=lG(n,t.conv4),n=yc(n,[2,2],[2,2],"same"),n=lG(n,t.conv5),n=yc(n,[2,2],[1,1],"same"),n=t.conv6?lG(n,t.conv6):n,n=t.conv7?lG(n,t.conv7):n,pU(n,t.conv8,"valid",!1)}forwardInput(e,t){const{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return Wo(()=>{let r=mi(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?_V(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)})}async forward(e,t){return this.forwardInput(await sU(e),t)}async detect(e,t={}){const{inputSize:n,scoreThreshold:r}=new cG(t),a=await sU(e),s=await this.forwardInput(a,n),i=Wo(()=>Uh(s)[0].expandDims()),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},u=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();const l=u.map(e=>e.box),c=u.map(e=>e.score),h=u.map(e=>e.classScore),d=u.map(e=>this.config.classes[e.label]);return function(e,t,n,r=!0){let a=t.map((e,t)=>({score:e,boxIndex:t})).sort((e,t)=>e.score-t.score).map(e=>e.boxIndex);const s=[];for(;a.length>0;){const t=a.pop();s.push(t);const i=a,o=[];for(let n=0;n<i.length;n++)o.push(TV(e[t],e[i[n]],r));a=a.filter((e,t)=>o[t]<=n)}return s}(l.map(e=>e.rescale(n)),c,this.config.iouThreshold,!0).map(e=>new SV(c[e],h[e],d[e],l[e],o))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return function(e,t){const n=[],{extractConvParams:r,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}=function(e,t){const n=wU(e,t);function r(e){return{filters:n(e+"/filters",4),bias:n(e+"/bias",1)}}return{extractConvParams:r,extractConvWithBatchNormParams:function(e){return{conv:r(e+"/conv"),bn:function(e){return{sub:n(e+"/sub",1),truediv:n(e+"/truediv",1)}}(e+"/bn")}},extractSeparableConvParams:xU(n)}}(e,n);let i;if(t.withSeparableConvs){const e=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?r("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:e>7?s("conv6"):void 0,conv7:e>8?s("conv7"):void 0,conv8:r("conv8")}}else i={conv0:a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:a("conv6"),conv7:a("conv7"),conv8:r("conv8")};return fU(e,n),{params:i,paramMappings:n}}(e,this.config)}extractParams(e){const t=this.config.filterSizes||hG.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(7!==n&&8!==n&&9!==n)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return function(e,t,n,r){const{extractWeights:a,getRemainingWeights:s}=vU(e),i=[],{extractConvParams:o,extractConvWithBatchNormParams:u,extractSeparableConvParams:l}=function(e,t){const n=mU(e,t),r=bU(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:function(r,a,s){return{conv:n(r,a,3,s+"/conv"),bn:function(n,r){const a=Dh(e(n)),s=Dh(e(n));return t.push({paramPath:r+"/sub"},{paramPath:r+"/truediv"}),{sub:a,truediv:s}}(a,s+"/bn")}},extractSeparableConvParams:r}}(a,i);let c;if(t.withSeparableConvs){const[e,a,s,i,u,h,d,p,f]=r;c={conv0:t.isFirstLayerConv2d?o(e,a,3,"conv0"):l(e,a,"conv0"),conv1:l(a,s,"conv1"),conv2:l(s,i,"conv2"),conv3:l(i,u,"conv3"),conv4:l(u,h,"conv4"),conv5:l(h,d,"conv5"),conv6:p?l(d,p,"conv6"):void 0,conv7:f?l(p,f,"conv7"):void 0,conv8:o(f||p||d,5*n,1,"conv8")}}else{const[e,t,a,s,i,l,h,d,p]=r;c={conv0:u(e,t,"conv0"),conv1:u(t,a,"conv1"),conv2:u(a,s,"conv2"),conv3:u(s,i,"conv3"),conv4:u(i,l,"conv4"),conv5:u(l,h,"conv5"),conv6:u(h,d,"conv6"),conv7:u(d,p,"conv7"),conv8:o(p,5*n,1,"conv8")}}if(0!==s().length)throw new Error("weights remaing after extract: "+s().length);return{params:c,paramMappings:i}}(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,n){const{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,u=e.shape[1],l=this.config.anchors.length,[c,h,d]=Wo(()=>{const t=e.reshape([u,u,l,this.boxEncodingSize]);return[t.slice([0,0,0,0],[u,u,l,4]),t.slice([0,0,0,4],[u,u,l,1]),this.withClassScores?vh(t.slice([0,0,0,5],[u,u,l,this.config.classes.length]),3):ch(0)]}),p=[],f=await h.array(),m=await c.array();for(let g=0;g<u;g++)for(let e=0;e<u;e++)for(let t=0;t<l;t++){const r=EV(f[g][e][t][0]);if(!n||r>n){const n=(e+EV(m[g][e][t][0]))/u*i,a=(g+EV(m[g][e][t][1]))/u*o,s=Math.exp(m[g][e][t][2])*this.config.anchors[t].x/u*i,l=Math.exp(m[g][e][t][3])*this.config.anchors[t].y/u*o,c=n-s/2,h=a-l/2,f={row:g,col:e,anchor:t},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(d,f):{classScore:1,label:0};p.push({box:new NV(c,h,c+s,h+l),score:r,classScore:r*y,label:b,...f})}}return c.dispose(),h.dispose(),d.dispose(),p}async extractPredictedClass(e,t){const{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map((e,t)=>s[n][r][a][t]).map((e,t)=>({classScore:e,label:t})).reduce((e,t)=>e.classScore>t.classScore?e:t)}},dG=hG;dG.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var pG=class extends cG{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},fG=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function mG(e,t,n,r,a=(({alignedRect:e})=>e)){const s=e.map(e=>RU(e)?a(e):e.detection),i=r||(t instanceof La?await oU(t,s):await iU(t,s)),o=await n(i);return i.forEach(e=>e instanceof La&&e.dispose()),o}async function gG(e,t,n,r,a){return mG([e],t,async e=>n(e[0]),r,a)}var yG=[new kV(1.603231,2.094468),new kV(6.041143,7.080126),new kV(2.882459,3.518061),new kV(4.266906,5.178857),new kV(9.041765,10.66308)],bG=[117.001,114.697,97.404],xG={ssdMobilenetv1:new class extends lU{constructor(){super("SsdMobilenetv1")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return Wo(()=>{const n=mi(e.toBatchTensor(512,!1),"float32"),r=function(e,t){return Wo(()=>{let n,r=QU(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach((e,t)=>{const a=t+1,s=function(e){return[2,4,6,12].some(t=>t===e)?[2,2]:[1,1]}(a);r=function(e,t,n){return Wo(()=>{let r=ll(e,t.filters,n,"same");return r=Pu(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,.0010000000474974513),ju(r,0,6)})}(r,e.depthwise_conv,s),r=QU(r,e.pointwise_conv,[1,1]),11===a&&(n=r)}),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}})}(tc(nu(n,127.5),1),t.mobilenetv1),{boxPredictions:a,classPredictions:s}=function(e,t,n){return Wo(()=>{const r=QU(e,n.conv_0,[1,1]),a=QU(r,n.conv_1,[2,2]),s=QU(a,n.conv_2,[1,1]),i=QU(s,n.conv_3,[2,2]),o=QU(i,n.conv_4,[1,1]),u=QU(o,n.conv_5,[2,2]),l=QU(u,n.conv_6,[1,1]),c=QU(l,n.conv_7,[2,2]),h=tG(t,n.box_predictor_0),d=tG(e,n.box_predictor_1),p=tG(a,n.box_predictor_2),f=tG(i,n.box_predictor_3),m=tG(u,n.box_predictor_4),g=tG(c,n.box_predictor_5);return{boxPredictions:Ru([h.boxPredictionEncoding,d.boxPredictionEncoding,p.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),classPredictions:Ru([h.classPrediction,d.classPrediction,p.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1)}})}(r.out,r.conv11,t.prediction_layer);return function(e,t,n){return Wo(()=>{const r=e.shape[0];let a=function(e,t){const{sizes:n,centers:r}=function(e){const t=Uh(Li(e,[1,0])),n=[tc(t[2],t[0]),tc(t[3],t[1])];return{sizes:n,centers:[eu(t[0],nu(n[0],2)),eu(t[1],nu(n[1],2))]}}(e),a=Uh(Li(t,[1,0])),s=nu(ru(Il(nu(a[2],5)),n[0]),2),i=eu(ru(nu(a[0],10),n[0]),r[0]),o=nu(ru(Il(nu(a[3],5)),n[1]),2),u=eu(ru(nu(a[1],10),n[1]),r[1]);return Li(Ah([tc(i,s),tc(u,o),eu(i,s),eu(u,o)]),[1,0])}(Au(Cl(n.extra_dim,[r,1,1]),[-1,4]),Au(e,[-1,4]));a=Au(a,[r,a.shape[0]/r,4]);const s=Du(Mu(t,[0,0,1],[-1,-1,-1]));let i=Mu(s,[0,0,0],[-1,-1,1]);return i=Au(i,[r,i.shape[1]]),{boxes:Uh(a),scores:Uh(i)}})}(a,s,t.output_layer)})}async forward(e){return this.forwardInput(await sU(e))}async locateFaces(e,t={}){const{maxResults:n,minConfidence:r}=new nG(t),a=await sU(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],u=i[0];for(let y=1;y<s.length;y++)s[y].dispose(),i[y].dispose();const l=Array.from(u.dataSync()),c=function(e,t,n,r,a){const s=Math.min(n,e.shape[0]),i=t.map((e,t)=>({score:e,boxIndex:t})).filter(e=>e.score>a).sort((e,t)=>t.score-e.score),o=[];return i.forEach(t=>{if(o.length>=s)return;const n=t.score;for(let r=o.length-1;r>=0;--r){const n=eG(e,t.boxIndex,o[r]);if(0!==n&&(t.score*=n<=.5?1:0,t.score<=a))break}n===t.score&&o.push(t.boxIndex)}),o}(o,l,n,0,r),h=a.getReshapedInputDimensions(0),d=a.inputSize,p=d/h.width,f=d/h.height,m=o.arraySync(),g=c.map(e=>{const[t,n]=[Math.max(0,m[e][0]),Math.min(1,m[e][2])].map(e=>e*f),[r,s]=[Math.max(0,m[e][1]),Math.min(1,m[e][3])].map(e=>e*p);return new CV(l[e],new $V(r,t,s-r,n-t),{height:a.getInputHeight(0),width:a.getInputWidth(0)})});return o.dispose(),u.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=function(e,t){const n=wU(e,t);function r(e,t,r){return{filters:n(`${e}/Conv2d_${t}_pointwise/weights`,4,r+"/filters"),batch_norm_offset:n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,r+"/batch_norm_offset")}}function a(e){const t="mobilenetv1/conv_"+e,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=t+"/depthwise_conv",i=t+"/pointwise_conv";return{depthwise_conv:{filters:n(a+"/depthwise_weights",4,s+"/filters"),batch_norm_scale:n(a+"/BatchNorm/gamma",1,s+"/batch_norm_scale"),batch_norm_offset:n(a+"/BatchNorm/beta",1,s+"/batch_norm_offset"),batch_norm_mean:n(a+"/BatchNorm/moving_mean",1,s+"/batch_norm_mean"),batch_norm_variance:n(a+"/BatchNorm/moving_variance",1,s+"/batch_norm_variance")},pointwise_conv:r("MobilenetV1",e,i)}}function s(e,t){return{filters:n(e+"/weights",4,t+"/filters"),bias:n(e+"/biases",1,t+"/bias")}}function i(e){return{box_encoding_predictor:s(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),class_predictor:s(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`)}}return{extractMobilenetV1Params:function(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}},extractPredictionLayerParams:function(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:i(0),box_predictor_1:i(1),box_predictor_2:i(2),box_predictor_3:i(3),box_predictor_4:i(4),box_predictor_5:i(5)}}}}(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!hV(a))throw new Error("expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have "+a);const s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return fU(e,t),{params:s,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=vU(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=function(e,t){function n(n,r,a,s,i){const o=Oh(e(n*r*a*a),[a,a,n,r]),u=Dh(e(r));return t.push({paramPath:s+"/filters"},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:u}}function r(e,t,r,a){const{filters:s,bias:i}=n(e,t,r,a,!0);return{filters:s,batch_norm_offset:i}}function a(n,a,s){return{depthwise_conv:function(n,r){const a=Oh(e(9*n),[3,3,n,1]),s=Dh(e(n)),i=Dh(e(n)),o=Dh(e(n)),u=Dh(e(n));return t.push({paramPath:r+"/filters"},{paramPath:r+"/batch_norm_scale"},{paramPath:r+"/batch_norm_offset"},{paramPath:r+"/batch_norm_mean"},{paramPath:r+"/batch_norm_variance"}),{filters:a,batch_norm_scale:s,batch_norm_offset:i,batch_norm_mean:o,batch_norm_variance:u}}(n,s+"/depthwise_conv"),pointwise_conv:r(n,a,1,s+"/pointwise_conv")}}return{extractMobilenetV1Params:function(){return{conv_0:r(3,32,3,"mobilenetv1/conv_0"),conv_1:a(32,64,"mobilenetv1/conv_1"),conv_2:a(64,128,"mobilenetv1/conv_2"),conv_3:a(128,128,"mobilenetv1/conv_3"),conv_4:a(128,256,"mobilenetv1/conv_4"),conv_5:a(256,256,"mobilenetv1/conv_5"),conv_6:a(256,512,"mobilenetv1/conv_6"),conv_7:a(512,512,"mobilenetv1/conv_7"),conv_8:a(512,512,"mobilenetv1/conv_8"),conv_9:a(512,512,"mobilenetv1/conv_9"),conv_10:a(512,512,"mobilenetv1/conv_10"),conv_11:a(512,512,"mobilenetv1/conv_11"),conv_12:a(512,1024,"mobilenetv1/conv_12"),conv_13:a(1024,1024,"mobilenetv1/conv_13")}},extractPredictionLayerParams:function(){return{conv_0:r(1024,256,1,"prediction_layer/conv_0"),conv_1:r(256,512,3,"prediction_layer/conv_1"),conv_2:r(512,128,1,"prediction_layer/conv_2"),conv_3:r(128,256,3,"prediction_layer/conv_3"),conv_4:r(256,128,1,"prediction_layer/conv_4"),conv_5:r(128,256,3,"prediction_layer/conv_5"),conv_6:r(256,64,1,"prediction_layer/conv_6"),conv_7:r(64,128,3,"prediction_layer/conv_7"),box_predictor_0:{box_encoding_predictor:n(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),class_predictor:n(512,9,1,"prediction_layer/box_predictor_0/class_predictor")},box_predictor_1:{box_encoding_predictor:n(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),class_predictor:n(1024,18,1,"prediction_layer/box_predictor_1/class_predictor")},box_predictor_2:{box_encoding_predictor:n(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),class_predictor:n(512,18,1,"prediction_layer/box_predictor_2/class_predictor")},box_predictor_3:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_3/class_predictor")},box_predictor_4:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_4/class_predictor")},box_predictor_5:{box_encoding_predictor:n(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),class_predictor:n(128,18,1,"prediction_layer/box_predictor_5/class_predictor")}}}}}(n,t),i=a(),o=s(),u={extra_dim:Wi(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error("weights remaing after extract: "+r().length);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:u},paramMappings:t}}(e)}},tinyFaceDetector:new class extends dG{constructor(){super({withSeparableConvs:!0,iouThreshold:.4,classes:["face"],anchors:yG,meanRgb:bG,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]})}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(e=>new CV(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight}))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},tinyYolov2:new class extends dG{constructor(e=!0){super({withSeparableConvs:e,iouThreshold:.4,classes:["face"],...e?{anchors:aG,meanRgb:sG}:{anchors:rG,withClassScores:!0}})}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(e=>new CV(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight}))}getDefaultModelName(){return this.withSeparableConvs?"tiny_yolov2_separable_conv_model":"tiny_yolov2_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},faceLandmark68Net:new class extends UU{constructor(e=new SU){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}},faceLandmark68TinyNet:new class extends UU{constructor(e=new GU){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},faceRecognitionNet:new class extends lU{constructor(){super("FaceRecognitionNet")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return Wo(()=>{let n=qU(_V(mi(e.toBatchTensor(150,!0),"float32"),[122.782,117.001,104.298]).div(255),t.conv32_down);n=yc(n,3,2,"valid"),n=KU(n,t.conv32_1),n=KU(n,t.conv32_2),n=KU(n,t.conv32_3),n=XU(n,t.conv64_down),n=KU(n,t.conv64_1),n=KU(n,t.conv64_2),n=KU(n,t.conv64_3),n=XU(n,t.conv128_down),n=KU(n,t.conv128_1),n=KU(n,t.conv128_2),n=XU(n,t.conv256_down),n=KU(n,t.conv256_1),n=KU(n,t.conv256_2),n=XU(n,t.conv256_down_out);const r=n.mean([1,2]);return Oi(r,t.fc)})}async forward(e){return this.forwardInput(await sU(e))}async computeFaceDescriptor(e){var t;if(null==(t=null==e?void 0:e.shape)?void 0:t.some(e=>e<=0))return new Float32Array(128);const n=await sU(e),r=Wo(()=>Uh(this.forwardInput(n))),a=await Promise.all(r.map(e=>e.data()));return r.forEach(e=>e.dispose()),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=function(e,t){const n=wU(e,t);function r(e){return{conv:{filters:n(e+"/conv/filters",4),bias:n(e+"/conv/bias",1)},scale:function(e){return{weights:n(e+"/scale/weights",1),biases:n(e+"/scale/biases",1)}}(e)}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e){return{conv1:r(e+"/conv1"),conv2:r(e+"/conv2")}}}}(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),u=r("conv64_down"),l=r("conv64_1"),c=r("conv64_2"),h=r("conv64_3"),d=r("conv128_down"),p=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!cV(x))throw new Error("expected weightMap[fc] to be a Tensor2D, instead have "+x);const w={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:u,conv64_1:l,conv64_2:c,conv64_3:h,conv128_down:d,conv128_1:p,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return fU(e,t),{params:w,paramMappings:t}}(e)}extractParams(e){return function(e){const{extractWeights:t,getRemainingWeights:n}=vU(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=function(e,t){function n(n,r,a,s){const i=function(t,n,r){const a=e(t),s=a.length/(n*r*r);if(pV(s))throw new Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return Wo(()=>Li(Oh(a,[n,s,r,r]),[2,3,1,0]))}(n,r,a),o=Dh(e(r));return t.push({paramPath:s+"/filters"},{paramPath:s+"/bias"}),{filters:i,bias:o}}function r(r,a,s,i){return{conv:n(r,a,s,i+"/conv"),scale:function(n,r){const a=Dh(e(n)),s=Dh(e(n));return t.push({paramPath:r+"/weights"},{paramPath:r+"/biases"}),{weights:a,biases:s}}(a,i+"/scale")}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e,t,n,a,s=!1){return{conv1:r((s?.5:1)*e,t,n,a+"/conv1"),conv2:r(e,t,n,a+"/conv2")}}}}(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),u=s(9216,32,3,"conv32_2"),l=s(9216,32,3,"conv32_3"),c=s(36864,64,3,"conv64_down",!0),h=s(36864,64,3,"conv64_1"),d=s(36864,64,3,"conv64_2"),p=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),w=s(589824,256,3,"conv256_down_out"),v=Wo(()=>Li(Mh(t(32768),[128,256]),[1,0]));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error("weights remaing after extract: "+n().length);return{params:{conv32_down:i,conv32_1:o,conv32_2:u,conv32_3:l,conv64_down:c,conv64_1:h,conv64_2:d,conv64_3:p,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:w,fc:v},paramMappings:r}}(e)}},faceExpressionNet:new class extends _U{constructor(e=new SU){super("FaceExpressionNet",e)}forwardInput(e){return Wo(()=>vh(this.runNet(e)))}async forward(e){return this.forwardInput(await sU(e))}async predictExpressions(e){const t=await sU(e),n=await this.forwardInput(t),r=await Promise.all(Uh(n).map(async e=>{const t=e.dataSync();return e.dispose(),t}));n.dispose();const a=r.map(e=>new AU(e));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}},ageGenderNet:new class extends lU{constructor(e=new VU(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){const{params:t}=this;if(!t)throw new Error(this._name+" - load model before inference");return Wo(()=>{const n=e instanceof aU?this.faceFeatureExtractor.forwardInput(e):e,r=$u(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1);return{age:CU(r,t.fc.age).as1D(),gender:CU(r,t.fc.gender)}})}forwardInput(e){return Wo(()=>{const{age:t,gender:n}=this.runNet(e);return{age:t,gender:vh(n)}})}async forward(e){return this.forwardInput(await sU(e))}async predictAgeAndGender(e){const t=await sU(e),n=await this.forwardInput(t),r=Uh(n.age),a=Uh(n.gender),s=r.map((e,t)=>({ageTensor:e,genderTensor:a[t]})),i=await Promise.all(s.map(async({ageTensor:e,genderTensor:t})=>{const n=e.dataSync()[0],r=t.dataSync()[0],a=r>.5,s=a?BU.MALE:BU.FEMALE,i=a?r:1-r;return e.dispose(),t.dispose(),{age:n,gender:s,genderProbability:i}}));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){const{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=vU(e),a=gU(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error("weights remaing after extract: "+r().length);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}(e)}extractParamsFromWeightMap(e){const{featureExtractorMap:t,classifierMap:n}=TU(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){const t=[],n=wU(e,t);function r(e){return{weights:n(e+"/weights",2),bias:n(e+"/bias",1)}}const a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return fU(e,t),{params:a,paramMappings:t}}(n)}extractParams(e){const t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}}},wG=class extends fG{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},vG=class extends wG{async run(){const e=await this.parentTask,t=await mG(e,this.input,async e=>Promise.all(e.map(e=>xG.faceExpressionNet.predictExpressions(e))),this.extractedFaces);return e.map((e,n)=>$U(e,t[n]))}withAgeAndGender(){return new CG(this,this.input)}},kG=class extends wG{async run(){const e=await this.parentTask;if(e)return $U(e,await gG(e,this.input,e=>xG.faceExpressionNet.predictExpressions(e),this.extractedFaces))}withAgeAndGender(){return new TG(this,this.input)}},IG=class extends vG{withAgeAndGender(){return new _G(this,this.input)}withFaceDescriptors(){return new $G(this,this.input)}},NG=class extends kG{withAgeAndGender(){return new EG(this,this.input)}withFaceDescriptor(){return new FG(this,this.input)}},SG=class extends fG{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},CG=class extends SG{async run(){const e=await this.parentTask,t=await mG(e,this.input,async e=>Promise.all(e.map(e=>xG.ageGenderNet.predictAgeAndGender(e))),this.extractedFaces);return e.map((e,n)=>{const{age:r,gender:a,genderProbability:s}=t[n];return ZU(JU(e,a,s),r)})}withFaceExpressions(){return new vG(this,this.input)}},TG=class extends SG{async run(){const e=await this.parentTask;if(!e)return;const{age:t,gender:n,genderProbability:r}=await gG(e,this.input,e=>xG.ageGenderNet.predictAgeAndGender(e),this.extractedFaces);return ZU(JU(e,n,r),t)}withFaceExpressions(){return new kG(this,this.input)}},_G=class extends CG{withFaceExpressions(){return new IG(this,this.input)}withFaceDescriptors(){return new $G(this,this.input)}},EG=class extends TG{withFaceExpressions(){return new NG(this,this.input)}withFaceDescriptor(){return new FG(this,this.input)}},AG=class extends fG{constructor(e,t){super(),this.parentTask=e,this.input=t}},$G=class extends AG{async run(){const e=await this.parentTask;return(await mG(e,this.input,e=>Promise.all(e.map(e=>xG.faceRecognitionNet.computeFaceDescriptor(e))),null,e=>e.landmarks.align(null,{useDlibAlignment:!0}))).map((t,n)=>YU(e[n],t))}withFaceExpressions(){return new IG(this,this.input)}withAgeAndGender(){return new _G(this,this.input)}},FG=class extends AG{async run(){const e=await this.parentTask;if(e)return YU(e,await gG(e,this.input,e=>xG.faceRecognitionNet.computeFaceDescriptor(e),null,e=>e.landmarks.align(null,{useDlibAlignment:!0})))}withFaceExpressions(){return new NG(this,this.input)}withAgeAndGender(){return new EG(this,this.input)}},RG=class extends fG{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?xG.faceLandmark68TinyNet:xG.faceLandmark68Net}},DG=class extends RG{async run(){const e=await this.parentTask,t=e.map(e=>e.detection),n=this.input instanceof La?await oU(this.input,t):await iU(this.input,t),r=await Promise.all(n.map(e=>this.landmarkNet.detectLandmarks(e)));return n.forEach(e=>e instanceof La&&e.dispose()),e.map((e,t)=>DU(e,r[t]))}withFaceExpressions(){return new IG(this,this.input)}withAgeAndGender(){return new _G(this,this.input)}withFaceDescriptors(){return new $G(this,this.input)}},MG=class extends RG{async run(){const e=await this.parentTask;if(!e)return;const{detection:t}=e,n=this.input instanceof La?await oU(this.input,[t]):await iU(this.input,[t]),r=await this.landmarkNet.detectLandmarks(n[0]);return n.forEach(e=>e instanceof La&&e.dispose()),DU(e,r)}withFaceExpressions(){return new NG(this,this.input)}withAgeAndGender(){return new EG(this,this.input)}withFaceDescriptor(){return new FG(this,this.input)}},OG=class extends fG{constructor(e,t=new nG){super(),this.input=e,this.options=t}},zG=class extends OG{async run(){const{input:e,options:t}=this;let n;if(t instanceof pG)n=xG.tinyFaceDetector.locateFaces(e,t);else if(t instanceof nG)n=xG.ssdMobilenetv1.locateFaces(e,t);else{if(!(t instanceof cG))throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");n=xG.tinyYolov2.locateFaces(e,t)}return n}runAndExtendWithFaceDetections(){return new Promise((e,t)=>{this.run().then(t=>e(t.map(e=>MV({},e)))).catch(e=>t(e))})}withFaceLandmarks(e=!1){return new DG(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new vG(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new CG(this.runAndExtendWithFaceDetections(),this.input)}},LG=class extends OG{async run(){const e=await new zG(this.input,this.options);let t=e[0];return e.forEach(e=>{e.score>t.score&&(t=e)}),t}runAndExtendWithFaceDetection(){return new Promise(async e=>{const t=await this.run();e(t?MV({},t):void 0)})}withFaceLandmarks(e=!1){return new MG(this.runAndExtendWithFaceDetection(),this.input,e)}withFaceExpressions(){return new kG(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new TG(this.runAndExtendWithFaceDetection(),this.input)}};"undefined"!=typeof navigator&&navigator;let PG=!1;addEventListener("message",({data:e})=>r(void 0,void 0,void 0,function*(){PG||(console.log("here"),yield function(){return r(this,void 0,void 0,function*(){yield xG.tinyFaceDetector.load("./face-models"),yield xG.faceLandmark68TinyNet.load("./face-models"),yield xG.faceRecognitionNet.load("./face-models")})}(),PG=!0);const t=new ImageData(new Uint8ClampedArray(e.image),e.width,e.height),n=new OffscreenCanvas(e.width,e.height);n.width=e.width,n.height=e.height,n.getContext("2d").putImageData(t,0,0);const a=yield function(e,t=new nG){return new LG(e,t)}(n,new pG({inputSize:192,scoreThreshold:.4})).withFaceLandmarks(!0).withFaceDescriptor();console.log(a),postMessage(Object.assign({},a))}))},"8Fpi":function(e,t){function n(){}function r(){}self.Canvas=self.HTMLCanvasElement=OffscreenCanvas,self.CanvasRenderingContext2D=OffscreenCanvasRenderingContext2D,self.Image=n,self.Video=r;class a extends EventTarget{}if(self.document=new a,self.window=self.Window=self,self.localStorage=new function(){let e={};this.clear=function(){return e={}},this.getItem=function(t){return e.hasOwnProperty(t)?e[t]:void 0},this.removeItem=function(t){return delete e[t]},this.setItem=function(t,n){return e[t]=String(n)}},document.createElement=function(e){switch(e){case"canvas":let t=new Canvas(1,1);return t.localName="canvas",t.nodeName="CANVAS",t.tagName="CANVAS",t.nodeType=1,t.innerHTML="",t.remove=()=>{console.log("nope")},t;default:console.log("arg",e)}},document.location=self.location,"undefined"==typeof document&&console.warn("Check failed: document"),"undefined"==typeof HTMLCanvasElement&&console.warn("Check failed: HTMLCanvasElement"),"undefined"==typeof ImageData&&console.warn("Check failed: ImageData"),"undefined"==typeof CanvasRenderingContext2D&&console.warn("Check failed: CanvasRenderingContext2D"),self.window=window,self.document=document,self.HTMLImageElement=n,self.HTMLVideoElement=r,"object"!=typeof window||"undefined"==typeof document||"undefined"==typeof HTMLCanvasElement||"undefined"==typeof ImageData||"undefined"==typeof CanvasRenderingContext2D)throw new Error("Failed to monkey patch for face-api, face-api will fail")},AfPn:function(e,t){function n(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id="AfPn"},PDX0:function(e,t){(function(t){e.exports=t}).call(this,{})}});