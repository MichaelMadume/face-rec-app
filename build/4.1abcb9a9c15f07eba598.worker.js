!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,(function(t){return e[t]}).bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s="/Ldn")}({"/Ldn":function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"shuffle",function(){return Z}),n.d(r,"shuffleCombo",function(){return J}),n.d(r,"clamp",function(){return Q}),n.d(r,"nearestLargerEven",function(){return ee}),n.d(r,"sum",function(){return te}),n.d(r,"randUniform",function(){return ne}),n.d(r,"distSquared",function(){return re}),n.d(r,"assert",function(){return ae}),n.d(r,"assertShapesMatch",function(){return se}),n.d(r,"assertNonNull",function(){return ie}),n.d(r,"flatten",function(){return oe}),n.d(r,"sizeFromShape",function(){return ue}),n.d(r,"isScalarShape",function(){return le}),n.d(r,"arraysEqual",function(){return ce}),n.d(r,"isInt",function(){return de}),n.d(r,"tanh",function(){return he}),n.d(r,"sizeToSquarishShape",function(){return pe}),n.d(r,"createShuffledIndices",function(){return fe}),n.d(r,"rightPad",function(){return me}),n.d(r,"repeatedTry",function(){return ge}),n.d(r,"inferFromImplicitShape",function(){return ye}),n.d(r,"parseAxisParam",function(){return be}),n.d(r,"squeezeShape",function(){return xe}),n.d(r,"getTypedArrayFromDType",function(){return we}),n.d(r,"getArrayFromDType",function(){return ve}),n.d(r,"checkConversionForErrors",function(){return ke}),n.d(r,"isValidDtype",function(){return Ie}),n.d(r,"hasEncodingLoss",function(){return Ne}),n.d(r,"isTypedArray",function(){return Se}),n.d(r,"bytesPerElement",function(){return Ce}),n.d(r,"bytesFromStringArray",function(){return Te}),n.d(r,"isString",function(){return Ee}),n.d(r,"isBoolean",function(){return _e}),n.d(r,"isNumber",function(){return Ae}),n.d(r,"inferDtype",function(){return $e}),n.d(r,"isFunction",function(){return Fe}),n.d(r,"nearestDivisor",function(){return Re}),n.d(r,"computeStrides",function(){return De}),n.d(r,"toNestedArray",function(){return Oe}),n.d(r,"makeOnesTypedArray",function(){return Le}),n.d(r,"makeZerosTypedArray",function(){return ze}),n.d(r,"makeZerosNestedTypedArray",function(){return Pe}),n.d(r,"assertNonNegativeIntegerDimensions",function(){return Be}),n.d(r,"locToIndex",function(){return We}),n.d(r,"indexToLoc",function(){return Ve}),n.d(r,"isPromise",function(){return Ue}),n.d(r,"hexToLong",function(){return ma}),n.d(r,"fingerPrint64",function(){return Ca}),n.d(r,"createScalarValue",function(){return Ta}),n.d(r,"toTypedArray",function(){return Ea}),n.d(r,"now",function(){return _a}),n.d(r,"fetch",function(){return Aa}),n.d(r,"encodeString",function(){return $a}),n.d(r,"decodeString",function(){return Fa});var a={};n.r(a),n.d(a,"makeTypesMatch",function(){return ns}),n.d(a,"assertTypesMatch",function(){return rs}),n.d(a,"isTensorInList",function(){return as}),n.d(a,"getTensorsInContainer",function(){return ss});var s={};n.r(s),n.d(s,"isMobile",function(){return ps}),n.d(s,"isBrowser",function(){return fs});var i={};n.r(i),n.d(i,"copyModel",function(){return pi}),n.d(i,"listModels",function(){return di}),n.d(i,"moveModel",function(){return fi}),n.d(i,"removeModel",function(){return hi}),n.d(i,"browserFiles",function(){return Ni}),n.d(i,"browserHTTPRequest",function(){return Ri}),n.d(i,"concatenateArrayBuffers",function(){return Fs}),n.d(i,"decodeWeights",function(){return Es}),n.d(i,"encodeWeights",function(){return Ts}),n.d(i,"fromMemory",function(){return Oi}),n.d(i,"getLoadHandlers",function(){return Bs}),n.d(i,"getModelArtifactsInfoForJSON",function(){return Ds}),n.d(i,"getSaveHandlers",function(){return Ps}),n.d(i,"http",function(){return Fi}),n.d(i,"isHTTPScheme",function(){return Ai}),n.d(i,"loadWeights",function(){return Ti}),n.d(i,"registerLoadRouter",function(){return zs}),n.d(i,"registerSaveRouter",function(){return Ls}),n.d(i,"weightsLoaderFactory",function(){return Ei}),n.d(i,"withSaveHandler",function(){return Li});var o={};n.r(o),n.d(o,"confusionMatrix",function(){return Wi});var u={};n.r(u),n.d(u,"fromPixelsAsync",function(){return Hi}),n.d(u,"toPixels",function(){return ji}),n.d(u,"fromPixels",function(){return qi});var l={};n.r(l),n.d(l,"prepareAndValidate",function(){return Ki});var c={};n.r(c),n.d(c,"validateUpdateShape",function(){return Xi}),n.d(c,"validateInput",function(){return Yi}),n.d(c,"calculateShapes",function(){return Zi});var d={};n.r(d),n.d(d,"assertParamsValid",function(){return Ji}),n.d(d,"maskToAxes",function(){return Qi}),n.d(d,"computeOutShape",function(){return eo}),n.d(d,"stridesWithElidedDims",function(){return to}),n.d(d,"getNormalizedAxes",function(){return ao}),n.d(d,"startIndicesWithElidedDims",function(){return so}),n.d(d,"stopIndicesWithElidedDims",function(){return io}),n.d(d,"stridesForAxis",function(){return oo}),n.d(d,"startForAxis",function(){return uo}),n.d(d,"stopForAxis",function(){return lo}),n.d(d,"isSliceContinous",function(){return co}),n.d(d,"computeFlatOffset",function(){return ho}),n.d(d,"parseSliceParams",function(){return po}),n.d(d,"sliceInfo",function(){return fo});var h={};n.r(h),n.d(h,"Serializable",function(){return mo}),n.d(h,"SerializationMap",function(){return go}),n.d(h,"registerClass",function(){return yo});var p={};n.r(p),n.d(p,"TEST_EPSILON_FLOAT16",function(){return bo}),n.d(p,"expectArraysClose",function(){return xo}),n.d(p,"testEpsilon",function(){return wo}),n.d(p,"expectPromiseToFail",function(){return ko}),n.d(p,"expectArraysEqual",function(){return Io}),n.d(p,"expectNumbersClose",function(){return No}),n.d(p,"expectValuesInRange",function(){return Co}),n.d(p,"expectArrayBuffersEqual",function(){return To}),n.d(p,"encodeStrings",function(){return Eo});var f={};n.r(f),n.d(f,"conv2d",function(){return gh}),n.d(f,"depthwiseConv2d",function(){return xh}),n.d(f,"matMul",function(){return wh});var m={};n.r(m),n.d(m,"segOpComputeOptimalWindowSize",function(){return sf}),n.d(m,"computeOutShape",function(){return of}),n.d(m,"collectGatherOpShapeInfo",function(){return uf});var g={};n.r(g),n.d(g,"axesAreInnerMostDims",function(){return fc}),n.d(g,"combineLocations",function(){return mc}),n.d(g,"computeOutAndReduceShapes",function(){return gc}),n.d(g,"expandShapeToKeepDim",function(){return yc}),n.d(g,"assertAxesAreInnerMostDims",function(){return bc}),n.d(g,"getAxesPermutation",function(){return xc}),n.d(g,"getUndoAxesPermutation",function(){return wc}),n.d(g,"getInnerMostAxes",function(){return vc}),n.d(g,"getBroadcastDims",function(){return wu}),n.d(g,"getReductionAxes",function(){return vu}),n.d(g,"assertAndGetBroadcastShape",function(){return ku}),n.d(g,"assertParamsConsistent",function(){return Ip}),n.d(g,"computeOutShape",function(){return Np}),n.d(g,"computeDilation2DInfo",function(){return Bu}),n.d(g,"computePool2DInfo",function(){return Wu}),n.d(g,"computePool3DInfo",function(){return Vu}),n.d(g,"computeConv2DInfo",function(){return Uu}),n.d(g,"computeConv3DInfo",function(){return Gu}),n.d(g,"computeDefaultPad",function(){return Hu}),n.d(g,"tupleValuesAreOne",function(){return Yu}),n.d(g,"eitherStridesOrDilationsAreOne",function(){return Zu}),n.d(g,"convertConv2DDataFormat",function(){return Ju}),n.d(g,"getFusedDyActivation",function(){return hh}),n.d(g,"getFusedBiasGradient",function(){return ph}),n.d(g,"applyActivation",function(){return fh}),n.d(g,"shouldFuse",function(){return mh}),n.d(g,"PARALLELIZE_THRESHOLD",function(){return Sp}),n.d(g,"computeOptimalWindowSize",function(){return Cp}),n.d(g,"slice_util",function(){return d}),n.d(g,"upcastType",function(){return es}),n.d(g,"getImageCenter",function(){return Tp}),n.d(g,"getReshaped",function(){return Ep}),n.d(g,"getPermuted",function(){return _p}),n.d(g,"getReshapedPermuted",function(){return Ap}),n.d(g,"getSliceBeginCoords",function(){return $p}),n.d(g,"getSliceSize",function(){return Fp}),n.d(g,"prepareAndValidate",function(){return Ki}),n.d(g,"validateUpdateShape",function(){return Xi}),n.d(g,"validateInput",function(){return Yi}),n.d(g,"calculateShapes",function(){return Zi}),n.d(g,"SELU_SCALEALPHA",function(){return Rp}),n.d(g,"SELU_SCALE",function(){return Dp}),n.d(g,"ERF_P",function(){return Mp}),n.d(g,"ERF_A1",function(){return Op}),n.d(g,"ERF_A2",function(){return Lp}),n.d(g,"ERF_A3",function(){return zp}),n.d(g,"ERF_A4",function(){return Pp}),n.d(g,"ERF_A5",function(){return Bp}),n.d(g,"warn",function(){return Wp}),n.d(g,"log",function(){return Vp}),n.d(g,"mergeRealAndImagArrays",function(){return Up}),n.d(g,"splitRealAndImagArrays",function(){return Gp}),n.d(g,"complexWithEvenIndex",function(){return Hp}),n.d(g,"complexWithOddIndex",function(){return jp}),n.d(g,"getComplexWithIndex",function(){return qp}),n.d(g,"assignToTypedArray",function(){return Kp}),n.d(g,"exponents",function(){return Xp}),n.d(g,"exponent",function(){return Yp}),n.d(g,"decodeEinsumEquation",function(){return Jp}),n.d(g,"getEinsumPermutation",function(){return Qp}),n.d(g,"checkEinsumDimSizes",function(){return ef}),n.d(g,"getEinsumComputePath",function(){return tf}),n.d(g,"isIdentityPermutation",function(){return nf}),n.d(g,"prepareSplitSize",function(){return af}),n.d(g,"segment_util",function(){return m}),n.d(g,"fromUint8ToStringArray",function(){return lf}),n.d(g,"fromStringArrayToUint8",function(){return cf});var y={};n.r(y),n.d(y,"nonMaxSuppressionV3Impl",function(){return Fh}),n.d(y,"nonMaxSuppressionV4Impl",function(){return Rh}),n.d(y,"nonMaxSuppressionV5Impl",function(){return Dh}),n.d(y,"whereImpl",function(){return Jd});var b={};n.r(b),n.d(b,"maxNorm",function(){return ag}),n.d(b,"unitNorm",function(){return sg}),n.d(b,"nonNeg",function(){return ig}),n.d(b,"minMaxNorm",function(){return og});var x={};n.r(x),n.d(x,"zeros",function(){return dy}),n.d(x,"ones",function(){return hy}),n.d(x,"constant",function(){return py}),n.d(x,"randomUniform",function(){return fy}),n.d(x,"randomNormal",function(){return my}),n.d(x,"truncatedNormal",function(){return gy}),n.d(x,"identity",function(){return yy}),n.d(x,"varianceScaling",function(){return by}),n.d(x,"glorotUniform",function(){return xy}),n.d(x,"glorotNormal",function(){return wy}),n.d(x,"heNormal",function(){return vy}),n.d(x,"heUniform",function(){return ky}),n.d(x,"leCunNormal",function(){return Iy}),n.d(x,"leCunUniform",function(){return Ny}),n.d(x,"orthogonal",function(){return Sy});var w={};n.r(w),n.d(w,"inputLayer",function(){return gv}),n.d(w,"elu",function(){return yv}),n.d(w,"reLU",function(){return bv}),n.d(w,"leakyReLU",function(){return xv}),n.d(w,"prelu",function(){return wv}),n.d(w,"softmax",function(){return vv}),n.d(w,"thresholdedReLU",function(){return kv}),n.d(w,"conv1d",function(){return Iv}),n.d(w,"conv2d",function(){return Nv}),n.d(w,"conv2dTranspose",function(){return Sv}),n.d(w,"conv3d",function(){return Cv}),n.d(w,"conv3dTranspose",function(){return Tv}),n.d(w,"separableConv2d",function(){return Ev}),n.d(w,"cropping2D",function(){return _v}),n.d(w,"upSampling2d",function(){return Av}),n.d(w,"depthwiseConv2d",function(){return $v}),n.d(w,"activation",function(){return Fv}),n.d(w,"dense",function(){return Rv}),n.d(w,"dropout",function(){return Dv}),n.d(w,"spatialDropout1d",function(){return Mv}),n.d(w,"flatten",function(){return Ov}),n.d(w,"repeatVector",function(){return Lv}),n.d(w,"reshape",function(){return zv}),n.d(w,"permute",function(){return Pv}),n.d(w,"embedding",function(){return Bv}),n.d(w,"add",function(){return Wv}),n.d(w,"average",function(){return Vv}),n.d(w,"concatenate",function(){return Uv}),n.d(w,"maximum",function(){return Gv}),n.d(w,"minimum",function(){return Hv}),n.d(w,"multiply",function(){return jv}),n.d(w,"dot",function(){return qv}),n.d(w,"batchNormalization",function(){return Kv}),n.d(w,"layerNormalization",function(){return Xv}),n.d(w,"zeroPadding2d",function(){return Yv}),n.d(w,"averagePooling1d",function(){return Zv}),n.d(w,"avgPool1d",function(){return Jv}),n.d(w,"avgPooling1d",function(){return Qv}),n.d(w,"averagePooling2d",function(){return ek}),n.d(w,"avgPool2d",function(){return tk}),n.d(w,"avgPooling2d",function(){return nk}),n.d(w,"averagePooling3d",function(){return rk}),n.d(w,"avgPool3d",function(){return ak}),n.d(w,"avgPooling3d",function(){return sk}),n.d(w,"globalAveragePooling1d",function(){return ik}),n.d(w,"globalAveragePooling2d",function(){return ok}),n.d(w,"globalMaxPooling1d",function(){return uk}),n.d(w,"globalMaxPooling2d",function(){return lk}),n.d(w,"maxPooling1d",function(){return ck}),n.d(w,"maxPooling2d",function(){return dk}),n.d(w,"maxPooling3d",function(){return hk}),n.d(w,"gru",function(){return pk}),n.d(w,"gruCell",function(){return fk}),n.d(w,"lstm",function(){return mk}),n.d(w,"lstmCell",function(){return gk}),n.d(w,"simpleRNN",function(){return yk}),n.d(w,"simpleRNNCell",function(){return bk}),n.d(w,"convLstm2d",function(){return xk}),n.d(w,"convLstm2dCell",function(){return wk}),n.d(w,"rnn",function(){return vk}),n.d(w,"stackedRNNCells",function(){return kk}),n.d(w,"bidirectional",function(){return Ik}),n.d(w,"timeDistributed",function(){return Nk}),n.d(w,"globalMaxPool1d",function(){return Sk}),n.d(w,"globalMaxPool2d",function(){return Ck}),n.d(w,"maxPool1d",function(){return Tk}),n.d(w,"maxPool2d",function(){return Ek}),n.d(w,"Layer",function(){return Uy}),n.d(w,"RNN",function(){return dw}),n.d(w,"RNNCell",function(){return hw}),n.d(w,"input",function(){return hx}),n.d(w,"gaussianNoise",function(){return _k}),n.d(w,"gaussianDropout",function(){return Ak}),n.d(w,"alphaDropout",function(){return $k}),n.d(w,"masking",function(){return Fk});var v={};n.r(v),n.d(v,"binaryAccuracy",function(){return Rk}),n.d(v,"binaryCrossentropy",function(){return Dk}),n.d(v,"sparseCategoricalAccuracy",function(){return Mk}),n.d(v,"categoricalAccuracy",function(){return Ok}),n.d(v,"categoricalCrossentropy",function(){return Lk}),n.d(v,"precision",function(){return zk}),n.d(v,"recall",function(){return Pk}),n.d(v,"cosineProximity",function(){return Bk}),n.d(v,"meanAbsoluteError",function(){return Wk}),n.d(v,"meanAbsolutePercentageError",function(){return Vk}),n.d(v,"MAPE",function(){return Uk}),n.d(v,"mape",function(){return Gk}),n.d(v,"meanSquaredError",function(){return Hk}),n.d(v,"MSE",function(){return jk}),n.d(v,"mse",function(){return qk});var k={};n.r(k),n.d(k,"modelFromJSON",function(){return ox});var I={};n.r(I),n.d(I,"l1l2",function(){return Kk}),n.d(I,"l1",function(){return Xk}),n.d(I,"l2",function(){return Yk});var N={};n.r(N),n.d(N,"json",function(){return mI});var S={};n.r(S),n.d(S,"json",function(){return gI});var C={};n.r(C),n.d(C,"json",function(){return yI});var T={};n.r(T),n.d(T,"json",function(){return bI});var E={};n.r(E),n.d(E,"json",function(){return xI});var _={};n.r(_),n.d(_,"json",function(){return wI});var A={};n.r(A),n.d(A,"json",function(){return vI});var $={};n.r($),n.d($,"json",function(){return kI});var F={};n.r(F),n.d(F,"json",function(){return II});var R={};n.r(R),n.d(R,"json",function(){return NI});var D={};n.r(D),n.d(D,"json",function(){return SI});var M={};n.r(M),n.d(M,"json",function(){return CI});var O={};n.r(O),n.d(O,"json",function(){return TI});var L={};n.r(L),n.d(L,"json",function(){return EI});var z={};n.r(z),n.d(z,"json",function(){return _I});var P={};n.r(P),n.d(P,"json",function(){return AI});var B={};n.r(B),n.d(B,"json",function(){return $I});var W={};n.r(W),n.d(W,"json",function(){return FI});var V={};n.r(V),n.d(V,"json",function(){return RI});var U={};n.r(U),n.d(U,"array",function(){return YN}),n.d(U,"Dataset",function(){return KN}),n.d(U,"zip",function(){return ZN}),n.d(U,"CSVDataset",function(){return iS}),n.d(U,"TextLineDataset",function(){return QN}),n.d(U,"csv",function(){return wS}),n.d(U,"func",function(){return vS}),n.d(U,"generator",function(){return kS}),n.d(U,"microphone",function(){return NS}),n.d(U,"webcam",function(){return IS}),n.d(U,"FileDataSource",function(){return bS}),n.d(U,"URLDataSource",function(){return xS}),n.d(U,"version_data",function(){return SS});var G={};n.r(G),n.d(G,"simpleAbsImpl",function(){return hC}),n.d(G,"addImpl",function(){return rC}),n.d(G,"bincountImpl",function(){return XC}),n.d(G,"bincountReduceImpl",function(){return YC}),n.d(G,"ceilImpl",function(){return QC}),n.d(G,"concatImpl",function(){return sT}),n.d(G,"equalImpl",function(){return WT}),n.d(G,"expImpl",function(){return JT}),n.d(G,"expm1Impl",function(){return rE}),n.d(G,"floorImpl",function(){return wE}),n.d(G,"gatherNdImpl",function(){return EE}),n.d(G,"gatherV2Impl",function(){return AE}),n.d(G,"greaterImpl",function(){return FE}),n.d(G,"greaterEqualImpl",function(){return ME}),n.d(G,"lessImpl",function(){return HE}),n.d(G,"lessEqualImpl",function(){return KE}),n.d(G,"linSpaceImpl",function(){return ZE}),n.d(G,"logImpl",function(){return QE}),n.d(G,"maxImpl",function(){return f_}),n.d(G,"maximumImpl",function(){return y_}),n.d(G,"minimumImpl",function(){return T_}),n.d(G,"multiplyImpl",function(){return RT}),n.d(G,"negImpl",function(){return L_}),n.d(G,"notEqualImpl",function(){return H_}),n.d(G,"prodImpl",function(){return aA}),n.d(G,"rangeImpl",function(){return iA}),n.d(G,"rsqrtImpl",function(){return bA}),n.d(G,"sliceImpl",function(){return HC}),n.d(G,"sparseFillEmptyRowsImpl",function(){return zA}),n.d(G,"sparseReshapeImpl",function(){return BA}),n.d(G,"sparseSegmentReductionImpl",function(){return VA}),n.d(G,"squaredDifferenceImpl",function(){return YA}),n.d(G,"stridedSliceImpl",function(){return t$}),n.d(G,"stringNGramsImpl",function(){return a$}),n.d(G,"stringSplitImpl",function(){return o$}),n.d(G,"stringToHashBucketFastImpl",function(){return l$}),n.d(G,"subImpl",function(){return lE}),n.d(G,"tileImpl",function(){return f$}),n.d(G,"topKImpl",function(){return m$}),n.d(G,"transposeImpl",function(){return xC}),n.d(G,"uniqueImpl",function(){return w$});var H={};n.r(H),n.d(H,"AdadeltaOptimizer",function(){return pu}),n.d(H,"AdagradOptimizer",function(){return mu}),n.d(H,"AdamOptimizer",function(){return bu}),n.d(H,"AdamaxOptimizer",function(){return Nu}),n.d(H,"MomentumOptimizer",function(){return Cu}),n.d(H,"Optimizer",function(){return hu}),n.d(H,"RMSPropOptimizer",function(){return Tu}),n.d(H,"SGDOptimizer",function(){return Su}),n.d(H,"Tensor",function(){return Ha}),n.d(H,"TensorBuffer",function(){return Wa}),n.d(H,"Variable",function(){return qa}),n.d(H,"Rank",function(){return Ka}),n.d(H,"sumOutType",function(){return ts}),n.d(H,"upcastType",function(){return es}),n.d(H,"abs",function(){return xu}),n.d(H,"acos",function(){return Eu}),n.d(H,"acosh",function(){return _u}),n.d(H,"add",function(){return Zo}),n.d(H,"addN",function(){return Au}),n.d(H,"all",function(){return $u}),n.d(H,"any",function(){return Fu}),n.d(H,"argMax",function(){return Ru}),n.d(H,"argMin",function(){return Du}),n.d(H,"asin",function(){return Mu}),n.d(H,"asinh",function(){return Ou}),n.d(H,"atan",function(){return Lu}),n.d(H,"atan2",function(){return zu}),n.d(H,"atanh",function(){return Pu}),n.d(H,"avgPool",function(){return el}),n.d(H,"avgPool3d",function(){return tl}),n.d(H,"basicLSTMCell",function(){return il}),n.d(H,"batchToSpaceND",function(){return ol}),n.d(H,"batchNorm",function(){return ul}),n.d(H,"batchNorm2d",function(){return ll}),n.d(H,"batchNorm3d",function(){return cl}),n.d(H,"batchNorm4d",function(){return dl}),n.d(H,"bincount",function(){return hl}),n.d(H,"broadcastTo",function(){return pl}),n.d(H,"buffer",function(){return yi}),n.d(H,"cast",function(){return bi}),n.d(H,"ceil",function(){return fl}),n.d(H,"clipByValue",function(){return ml}),n.d(H,"clone",function(){return xi}),n.d(H,"complex",function(){return Is}),n.d(H,"concat",function(){return nl}),n.d(H,"concat1d",function(){return gl}),n.d(H,"concat2d",function(){return yl}),n.d(H,"concat3d",function(){return bl}),n.d(H,"concat4d",function(){return xl}),n.d(H,"conv1d",function(){return vl}),n.d(H,"conv2d",function(){return wl}),n.d(H,"conv2dTranspose",function(){return Il}),n.d(H,"conv3d",function(){return Nl}),n.d(H,"conv3dTranspose",function(){return Cl}),n.d(H,"cos",function(){return Tl}),n.d(H,"cosh",function(){return El}),n.d(H,"cumsum",function(){return _l}),n.d(H,"denseBincount",function(){return Al}),n.d(H,"depthToSpace",function(){return $l}),n.d(H,"depthwiseConv2d",function(){return Fl}),n.d(H,"diag",function(){return Rl}),n.d(H,"dilation2d",function(){return Dl}),n.d(H,"div",function(){return Qo}),n.d(H,"divNoNan",function(){return Ll}),n.d(H,"dot",function(){return zl}),n.d(H,"einsum",function(){return Pl}),n.d(H,"elu",function(){return Bl}),n.d(H,"equal",function(){return Ml}),n.d(H,"erf",function(){return Wl}),n.d(H,"exp",function(){return Vl}),n.d(H,"expandDims",function(){return Ul}),n.d(H,"expm1",function(){return Gl}),n.d(H,"eye",function(){return jl}),n.d(H,"fill",function(){return fu}),n.d(H,"floor",function(){return ql}),n.d(H,"floorDiv",function(){return Jo}),n.d(H,"gather",function(){return Kl}),n.d(H,"greater",function(){return Xl}),n.d(H,"greaterEqual",function(){return Yl}),n.d(H,"imag",function(){return Zl}),n.d(H,"isFinite",function(){return Jl}),n.d(H,"isInf",function(){return Ql}),n.d(H,"isNaN",function(){return ec}),n.d(H,"leakyRelu",function(){return tc}),n.d(H,"less",function(){return nc}),n.d(H,"lessEqual",function(){return rc}),n.d(H,"linspace",function(){return ac}),n.d(H,"localResponseNormalization",function(){return sc}),n.d(H,"log",function(){return ic}),n.d(H,"log1p",function(){return oc}),n.d(H,"logSigmoid",function(){return cc}),n.d(H,"logSoftmax",function(){return pc}),n.d(H,"logSumExp",function(){return kc}),n.d(H,"logicalAnd",function(){return Ic}),n.d(H,"logicalNot",function(){return Nc}),n.d(H,"logicalOr",function(){return Sc}),n.d(H,"logicalXor",function(){return Cc}),n.d(H,"matMul",function(){return zi}),n.d(H,"max",function(){return dc}),n.d(H,"maxPool",function(){return Tc}),n.d(H,"maxPool3d",function(){return Ec}),n.d(H,"maxPoolWithArgmax",function(){return _c}),n.d(H,"maximum",function(){return Iu}),n.d(H,"mean",function(){return Ac}),n.d(H,"meshgrid",function(){return Rc}),n.d(H,"min",function(){return Dc}),n.d(H,"minimum",function(){return Mc}),n.d(H,"mirrorPad",function(){return Oc}),n.d(H,"mod",function(){return Lc}),n.d(H,"moments",function(){return zc}),n.d(H,"mul",function(){return eu}),n.d(H,"multiRNNCell",function(){return Pc}),n.d(H,"multinomial",function(){return Bc}),n.d(H,"neg",function(){return uc}),n.d(H,"notEqual",function(){return Wc}),n.d(H,"oneHot",function(){return Pi}),n.d(H,"ones",function(){return Fc}),n.d(H,"onesLike",function(){return Vc}),n.d(H,"outerProduct",function(){return Uc}),n.d(H,"pad",function(){return Gc}),n.d(H,"pad1d",function(){return Hc}),n.d(H,"pad2d",function(){return jc}),n.d(H,"pad3d",function(){return qc}),n.d(H,"pad4d",function(){return Kc}),n.d(H,"pool",function(){return Yc}),n.d(H,"pow",function(){return gu}),n.d(H,"prelu",function(){return Zc}),n.d(H,"print",function(){return wi}),n.d(H,"prod",function(){return Jc}),n.d(H,"rand",function(){return Qc}),n.d(H,"randomGamma",function(){return ad}),n.d(H,"randomNormal",function(){return sd}),n.d(H,"randomUniform",function(){return id}),n.d(H,"range",function(){return od}),n.d(H,"real",function(){return ud}),n.d(H,"reciprocal",function(){return ld}),n.d(H,"relu",function(){return cd}),n.d(H,"relu6",function(){return dd}),n.d(H,"reshape",function(){return Qu}),n.d(H,"reverse",function(){return hd}),n.d(H,"reverse1d",function(){return pd}),n.d(H,"reverse2d",function(){return fd}),n.d(H,"reverse3d",function(){return md}),n.d(H,"reverse4d",function(){return gd}),n.d(H,"round",function(){return yd}),n.d(H,"rsqrt",function(){return bd}),n.d(H,"scalar",function(){return du}),n.d(H,"selu",function(){return xd}),n.d(H,"separableConv2d",function(){return wd}),n.d(H,"setdiff1dAsync",function(){return vd}),n.d(H,"sigmoid",function(){return rl}),n.d(H,"sign",function(){return kd}),n.d(H,"sin",function(){return Id}),n.d(H,"sinh",function(){return Nd}),n.d(H,"slice",function(){return al}),n.d(H,"slice1d",function(){return Sd}),n.d(H,"slice2d",function(){return Cd}),n.d(H,"slice3d",function(){return Td}),n.d(H,"slice4d",function(){return Ed}),n.d(H,"softmax",function(){return _d}),n.d(H,"softplus",function(){return lc}),n.d(H,"spaceToBatchND",function(){return Xc}),n.d(H,"fft",function(){return Ad}),n.d(H,"ifft",function(){return $d}),n.d(H,"irfft",function(){return Fd}),n.d(H,"rfft",function(){return Dd}),n.d(H,"split",function(){return Rd}),n.d(H,"sqrt",function(){return tu}),n.d(H,"square",function(){return nu}),n.d(H,"squaredDifference",function(){return Md}),n.d(H,"squeeze",function(){return Od}),n.d(H,"stack",function(){return Ld}),n.d(H,"step",function(){return zd}),n.d(H,"stridedSlice",function(){return Pd}),n.d(H,"sub",function(){return yu}),n.d(H,"sum",function(){return hc}),n.d(H,"tan",function(){return Bd}),n.d(H,"tanh",function(){return sl}),n.d(H,"tensor",function(){return Ss}),n.d(H,"tensor1d",function(){return Wd}),n.d(H,"tensor2d",function(){return Vd}),n.d(H,"tensor3d",function(){return Vi}),n.d(H,"tensor4d",function(){return Ud}),n.d(H,"tensor5d",function(){return Gd}),n.d(H,"tensor6d",function(){return Hd}),n.d(H,"tile",function(){return Hl}),n.d(H,"topk",function(){return jd}),n.d(H,"truncatedNormal",function(){return qd}),n.d(H,"unique",function(){return Kd}),n.d(H,"unsortedSegmentSum",function(){return Xd}),n.d(H,"unstack",function(){return Yd}),n.d(H,"variable",function(){return Zd}),n.d(H,"where",function(){return Ol}),n.d(H,"whereAsync",function(){return Qd}),n.d(H,"zeros",function(){return $c}),n.d(H,"zerosLike",function(){return ru}),n.d(H,"booleanMaskAsync",function(){return eh}),n.d(H,"transpose",function(){return Bi}),n.d(H,"norm",function(){return nh}),n.d(H,"movingAverage",function(){return rh}),n.d(H,"scatterND",function(){return ah}),n.d(H,"sparseToDense",function(){return sh}),n.d(H,"gatherND",function(){return ih}),n.d(H,"dropout",function(){return oh}),n.d(H,"enclosingPowerOfTwo",function(){return uh}),n.d(H,"cosineWindow",function(){return lh}),n.d(H,"inTopKAsync",function(){return ch}),n.d(H,"op",function(){return ks}),n.d(H,"OP_SCOPE_SUFFIX",function(){return vs}),n.d(H,"image",function(){return fp}),n.d(H,"linalg",function(){return mp}),n.d(H,"losses",function(){return gp}),n.d(H,"spectral",function(){return hp}),n.d(H,"fused",function(){return f}),n.d(H,"signal",function(){return pp}),n.d(H,"sparse",function(){return yp}),n.d(H,"string",function(){return bp}),n.d(H,"Reduction",function(){return Xh}),n.d(H,"train",function(){return wp}),n.d(H,"enableProdMode",function(){return Ao}),n.d(H,"enableDebugMode",function(){return $o}),n.d(H,"disableDeprecationWarnings",function(){return Fo}),n.d(H,"deprecationWarn",function(){return Ro}),n.d(H,"disposeVariables",function(){return Do}),n.d(H,"engine",function(){return Mo}),n.d(H,"memory",function(){return Oo}),n.d(H,"profile",function(){return Lo}),n.d(H,"tidy",function(){return zo}),n.d(H,"dispose",function(){return Po}),n.d(H,"keep",function(){return Bo}),n.d(H,"time",function(){return Wo}),n.d(H,"setBackend",function(){return Vo}),n.d(H,"ready",function(){return Uo}),n.d(H,"getBackend",function(){return Go}),n.d(H,"removeBackend",function(){return Ho}),n.d(H,"findBackend",function(){return jo}),n.d(H,"findBackendFactory",function(){return qo}),n.d(H,"registerBackend",function(){return Ko}),n.d(H,"backend",function(){return Xo}),n.d(H,"setPlatform",function(){return Yo}),n.d(H,"getKernel",function(){return aa}),n.d(H,"getGradient",function(){return sa}),n.d(H,"getKernelsForBackend",function(){return ia}),n.d(H,"registerKernel",function(){return oa}),n.d(H,"registerGradient",function(){return ua}),n.d(H,"unregisterKernel",function(){return la}),n.d(H,"unregisterGradient",function(){return ca}),n.d(H,"copyRegisteredKernels",function(){return da}),n.d(H,"customGrad",function(){return lu}),n.d(H,"grad",function(){return au}),n.d(H,"grads",function(){return su}),n.d(H,"valueAndGrad",function(){return iu}),n.d(H,"valueAndGrads",function(){return ou}),n.d(H,"variableGrads",function(){return uu}),n.d(H,"Environment",function(){return Ge}),n.d(H,"env",function(){return je}),n.d(H,"ENV",function(){return Ke}),n.d(H,"version_core",function(){return _o}),n.d(H,"nextFrame",function(){return kp}),n.d(H,"browser",function(){return u}),n.d(H,"io",function(){return i}),n.d(H,"math",function(){return o}),n.d(H,"serialization",function(){return h}),n.d(H,"test_util",function(){return p}),n.d(H,"util",function(){return r}),n.d(H,"backend_util",function(){return g}),n.d(H,"tensor_util",function(){return a}),n.d(H,"slice_util",function(){return d}),n.d(H,"gather_util",function(){return l}),n.d(H,"scatter_util",function(){return c}),n.d(H,"device_util",function(){return s}),n.d(H,"kernel_impls",function(){return y}),n.d(H,"KernelBackend",function(){return X}),n.d(H,"DataStorage",function(){return K}),n.d(H,"Abs",function(){return Ze}),n.d(H,"Acos",function(){return Je}),n.d(H,"Acosh",function(){return Qe}),n.d(H,"Add",function(){return et}),n.d(H,"AddN",function(){return tt}),n.d(H,"All",function(){return nt}),n.d(H,"Any",function(){return rt}),n.d(H,"ArgMax",function(){return at}),n.d(H,"ArgMin",function(){return st}),n.d(H,"Asin",function(){return it}),n.d(H,"Asinh",function(){return ot}),n.d(H,"Atan",function(){return ut}),n.d(H,"Atanh",function(){return lt}),n.d(H,"Atan2",function(){return ct}),n.d(H,"AvgPool",function(){return dt}),n.d(H,"AvgPoolGrad",function(){return ht}),n.d(H,"AvgPool3D",function(){return pt}),n.d(H,"AvgPool3DGrad",function(){return ft}),n.d(H,"BatchMatMul",function(){return mt}),n.d(H,"BatchToSpaceND",function(){return gt}),n.d(H,"Bincount",function(){return yt}),n.d(H,"BroadcastTo",function(){return bt}),n.d(H,"Cast",function(){return xt}),n.d(H,"Ceil",function(){return wt}),n.d(H,"ClipByValue",function(){return vt}),n.d(H,"Complex",function(){return kt}),n.d(H,"ComplexAbs",function(){return It}),n.d(H,"Concat",function(){return Nt}),n.d(H,"Conv2D",function(){return St}),n.d(H,"Conv2DBackpropFilter",function(){return Ct}),n.d(H,"Conv2DBackpropInput",function(){return Tt}),n.d(H,"Conv3D",function(){return Et}),n.d(H,"Conv3DBackpropFilterV2",function(){return _t}),n.d(H,"Conv3DBackpropInputV2",function(){return At}),n.d(H,"Cos",function(){return $t}),n.d(H,"Cosh",function(){return Ft}),n.d(H,"Cumsum",function(){return Rt}),n.d(H,"CropAndResize",function(){return Dt}),n.d(H,"DenseBincount",function(){return Mt}),n.d(H,"DepthToSpace",function(){return Ot}),n.d(H,"DepthwiseConv2dNative",function(){return Lt}),n.d(H,"DepthwiseConv2dNativeBackpropFilter",function(){return zt}),n.d(H,"DepthwiseConv2dNativeBackpropInput",function(){return Pt}),n.d(H,"Diag",function(){return Bt}),n.d(H,"Dilation2D",function(){return Wt}),n.d(H,"Dilation2DBackpropInput",function(){return Vt}),n.d(H,"Dilation2DBackpropFilter",function(){return Ut}),n.d(H,"RealDiv",function(){return Gt}),n.d(H,"Einsum",function(){return Ht}),n.d(H,"Elu",function(){return jt}),n.d(H,"EluGrad",function(){return qt}),n.d(H,"Erf",function(){return Kt}),n.d(H,"Equal",function(){return Xt}),n.d(H,"Exp",function(){return Yt}),n.d(H,"ExpandDims",function(){return Zt}),n.d(H,"Expm1",function(){return Jt}),n.d(H,"FFT",function(){return Qt}),n.d(H,"Fill",function(){return en}),n.d(H,"FlipLeftRight",function(){return tn}),n.d(H,"Floor",function(){return nn}),n.d(H,"FloorDiv",function(){return rn}),n.d(H,"FusedBatchNorm",function(){return an}),n.d(H,"GatherV2",function(){return sn}),n.d(H,"GatherNd",function(){return on}),n.d(H,"Greater",function(){return un}),n.d(H,"GreaterEqual",function(){return ln}),n.d(H,"Identity",function(){return cn}),n.d(H,"IFFT",function(){return dn}),n.d(H,"Imag",function(){return hn}),n.d(H,"IsFinite",function(){return pn}),n.d(H,"IsInf",function(){return fn}),n.d(H,"IsNan",function(){return mn}),n.d(H,"LeakyRelu",function(){return gn}),n.d(H,"Less",function(){return yn}),n.d(H,"LessEqual",function(){return bn}),n.d(H,"LinSpace",function(){return xn}),n.d(H,"Log",function(){return wn}),n.d(H,"Log1p",function(){return vn}),n.d(H,"LogicalAnd",function(){return kn}),n.d(H,"LogicalNot",function(){return In}),n.d(H,"LogicalOr",function(){return Nn}),n.d(H,"LogSoftmax",function(){return Sn}),n.d(H,"LRN",function(){return Cn}),n.d(H,"LRNGrad",function(){return Tn}),n.d(H,"Max",function(){return En}),n.d(H,"Maximum",function(){return _n}),n.d(H,"MaxPool",function(){return An}),n.d(H,"MaxPoolGrad",function(){return $n}),n.d(H,"MaxPool3D",function(){return Fn}),n.d(H,"MaxPool3DGrad",function(){return Rn}),n.d(H,"MaxPoolWithArgmax",function(){return Dn}),n.d(H,"Mean",function(){return Mn}),n.d(H,"Min",function(){return On}),n.d(H,"Minimum",function(){return Ln}),n.d(H,"MirrorPad",function(){return zn}),n.d(H,"Mod",function(){return Pn}),n.d(H,"Multinomial",function(){return Bn}),n.d(H,"Multiply",function(){return Wn}),n.d(H,"Neg",function(){return Vn}),n.d(H,"NotEqual",function(){return Un}),n.d(H,"NonMaxSuppressionV3",function(){return Gn}),n.d(H,"NonMaxSuppressionV4",function(){return Hn}),n.d(H,"NonMaxSuppressionV5",function(){return jn}),n.d(H,"OnesLike",function(){return qn}),n.d(H,"OneHot",function(){return Kn}),n.d(H,"Pack",function(){return Xn}),n.d(H,"PadV2",function(){return Yn}),n.d(H,"Pool",function(){return Zn}),n.d(H,"Pow",function(){return Jn}),n.d(H,"Prelu",function(){return Qn}),n.d(H,"Prod",function(){return er}),n.d(H,"Range",function(){return tr}),n.d(H,"Real",function(){return nr}),n.d(H,"Reciprocal",function(){return rr}),n.d(H,"Relu",function(){return ar}),n.d(H,"Reshape",function(){return sr}),n.d(H,"ResizeNearestNeighbor",function(){return ir}),n.d(H,"ResizeNearestNeighborGrad",function(){return or}),n.d(H,"ResizeBilinear",function(){return ur}),n.d(H,"ResizeBilinearGrad",function(){return lr}),n.d(H,"Relu6",function(){return cr}),n.d(H,"Reverse",function(){return dr}),n.d(H,"Round",function(){return hr}),n.d(H,"Rsqrt",function(){return pr}),n.d(H,"ScatterNd",function(){return fr}),n.d(H,"Select",function(){return mr}),n.d(H,"Selu",function(){return gr}),n.d(H,"Slice",function(){return yr}),n.d(H,"Sin",function(){return br}),n.d(H,"Sinh",function(){return xr}),n.d(H,"Sign",function(){return wr}),n.d(H,"Sigmoid",function(){return vr}),n.d(H,"Softplus",function(){return kr}),n.d(H,"Sqrt",function(){return Ir}),n.d(H,"Sum",function(){return Nr}),n.d(H,"SpaceToBatchND",function(){return Sr}),n.d(H,"SplitV",function(){return Cr}),n.d(H,"Softmax",function(){return Tr}),n.d(H,"SparseFillEmptyRows",function(){return Er}),n.d(H,"SparseReshape",function(){return _r}),n.d(H,"SparseSegmentMean",function(){return Ar}),n.d(H,"SparseSegmentSum",function(){return $r}),n.d(H,"SparseToDense",function(){return Fr}),n.d(H,"SquaredDifference",function(){return Rr}),n.d(H,"Square",function(){return Dr}),n.d(H,"StridedSlice",function(){return Mr}),n.d(H,"StringNGrams",function(){return Or}),n.d(H,"StringSplit",function(){return Lr}),n.d(H,"StringToHashBucketFast",function(){return zr}),n.d(H,"Sub",function(){return Pr}),n.d(H,"Tan",function(){return Br}),n.d(H,"Tanh",function(){return Wr}),n.d(H,"Tile",function(){return Vr}),n.d(H,"TopK",function(){return Ur}),n.d(H,"Transform",function(){return Gr}),n.d(H,"Transpose",function(){return Hr}),n.d(H,"Unique",function(){return jr}),n.d(H,"Unpack",function(){return qr}),n.d(H,"UnsortedSegmentSum",function(){return Kr}),n.d(H,"ZerosLike",function(){return Xr}),n.d(H,"Step",function(){return Yr}),n.d(H,"FromPixels",function(){return Zr}),n.d(H,"RotateWithOffset",function(){return Jr}),n.d(H,"_FusedMatMul",function(){return Qr}),n.d(H,"FusedConv2D",function(){return ea}),n.d(H,"FusedDepthwiseConv2D",function(){return ta}),n.d(H,"CallbackList",function(){return Zy}),n.d(H,"CustomCallback",function(){return eb}),n.d(H,"History",function(){return Qy}),n.d(H,"Callback",function(){return Zk}),n.d(H,"callbacks",function(){return tI}),n.d(H,"EarlyStopping",function(){return eI}),n.d(H,"InputSpec",function(){return zy}),n.d(H,"SymbolicTensor",function(){return Py}),n.d(H,"LayersModel",function(){return sx}),n.d(H,"input",function(){return hx}),n.d(H,"loadLayersModel",function(){return dx}),n.d(H,"model",function(){return lx}),n.d(H,"registerCallbackConstructor",function(){return px}),n.d(H,"sequential",function(){return cx}),n.d(H,"RNN",function(){return dw}),n.d(H,"Sequential",function(){return ux}),n.d(H,"LayerVariable",function(){return My}),n.d(H,"version_layers",function(){return Db}),n.d(H,"constraints",function(){return b}),n.d(H,"initializers",function(){return x}),n.d(H,"layers",function(){return w}),n.d(H,"metrics",function(){return v}),n.d(H,"models",function(){return k}),n.d(H,"regularizers",function(){return I}),n.d(H,"GraphModel",function(){return gN}),n.d(H,"loadGraphModel",function(){return yN}),n.d(H,"deregisterOp",function(){return oI}),n.d(H,"registerOp",function(){return sI}),n.d(H,"version_converter",function(){return bN}),n.d(H,"data",function(){return U}),n.d(H,"version",function(){return JP});var j={};function q(e,t,n,r){return new(n||(n=Promise))(function(a,s){function i(e){try{u(r.next(e))}catch(t){s(t)}}function o(e){try{u(r.throw(e))}catch(t){s(t)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(i,o)}u((r=r.apply(e,t||[])).next())})}n.r(j),n.d(j,"BackendWasm",function(){return _V}),n.d(j,"setWasmPath",function(){return LV}),n.d(j,"setWasmPaths",function(){return zV}),n.d(j,"version_wasm",function(){return PV}),n("caHf");class K{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class X{refCount(e){return Y("refCount")}incRef(e){return Y("incRef")}timerAvailable(){return!0}time(e){return Y("time")}read(e){return Y("read")}readSync(e){return Y("readSync")}numDataIds(){return Y("numDataIds")}disposeData(e,t){return Y("disposeData")}write(e,t,n){return Y("write")}move(e,t,n,r,a){return Y("move")}memory(){return Y("memory")}floatPrecision(){return Y("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Y("dispose")}}function Y(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Z(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function J(e,t){if(e.length!==t.length)throw new Error("Array sizes must match to be shuffled together First array length was "+e.length+"Second array length was "+t.length);let n,r,a=e.length,s=0;for(;a>0;)s=Math.random()*a|0,a--,n=e[a],r=t[a],e[a]=e[s],t[a]=t[s],e[s]=n,t[s]=r}function Q(e,t,n){return Math.max(e,Math.min(t,n))}function ee(e){return e%2==0?e:e+1}function te(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function ne(e,t){const n=Math.random();return t*n+(1-n)*e}function re(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function ae(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function se(e,t,n=""){ae(ce(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function ie(e){ae(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function oe(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||Se(e)&&!n)for(let r=0;r<e.length;++r)oe(e[r],t,n);else t.push(e);return t}function ue(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function le(e){return 0===e.length}function ce(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function de(e){return e%1==0}function he(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function pe(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function fe(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Z(t),t}function me(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ge(e,t=(e=>0),n){return new Promise((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()})}function ye(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function be(e,t){const n=t.length;return ae((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e),ae(e.every(e=>de(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function xe(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:be(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=s){if(s[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==s[i]||s[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),s[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function we(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function ve(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function ke(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function Ie(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Ne(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Se(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function Ce(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function Te(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function Ee(e){return"string"==typeof e||e instanceof String}function _e(e){return"boolean"==typeof e}function Ae(e){return"number"==typeof e}function $e(e){return Array.isArray(e)?$e(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":Ae(e)?"float32":Ee(e)?"string":_e(e)?"bool":"float32"}function Fe(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Re(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function De(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Me(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce((e,t)=>e*t)*(r?2:1);for(let t=0;t<s;t++)a[t]=Me(e+t*o,i,n,r)}return a}function Oe(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Me(0,e,t,n)}function Le(e,t){const n=ze(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function ze(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function Pe(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return Oe(e,new Float32Array(n));if("int32"===t)return Oe(e,new Int32Array(n));if("bool"===t)return Oe(e,new Uint8Array(n));throw new Error("Unknown data type "+t)}function Be(e){e.forEach(t=>{ae(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function We(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function Ve(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function Ue(e){return e&&e.then&&"function"==typeof e.then}class Ge{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=He,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Ue(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}}function He(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}function je(){return Ke}let qe,Ke=null;function Xe(){if(null==qe){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}qe=e}return qe}function Ye(e,t){const n=function(){const e=Xe();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const Ze="Abs",Je="Acos",Qe="Acosh",et="Add",tt="AddN",nt="All",rt="Any",at="ArgMax",st="ArgMin",it="Asin",ot="Asinh",ut="Atan",lt="Atanh",ct="Atan2",dt="AvgPool",ht="AvgPoolGrad",pt="AvgPool3D",ft="AvgPool3DGrad",mt="BatchMatMul",gt="BatchToSpaceND",yt="Bincount",bt="BroadcastTo",xt="Cast",wt="Ceil",vt="ClipByValue",kt="Complex",It="ComplexAbs",Nt="Concat",St="Conv2D",Ct="Conv2DBackpropFilter",Tt="Conv2DBackpropInput",Et="Conv3D",_t="Conv3DBackpropFilterV2",At="Conv3DBackpropInputV2",$t="Cos",Ft="Cosh",Rt="Cumsum",Dt="CropAndResize",Mt="DenseBincount",Ot="DepthToSpace",Lt="DepthwiseConv2dNative",zt="DepthwiseConv2dNativeBackpropFilter",Pt="DepthwiseConv2dNativeBackpropInput",Bt="Diag",Wt="Dilation2D",Vt="Dilation2DBackpropInput",Ut="Dilation2DBackpropFilter",Gt="RealDiv",Ht="Einsum",jt="Elu",qt="EluGrad",Kt="Erf",Xt="Equal",Yt="Exp",Zt="ExpandDims",Jt="Expm1",Qt="FFT",en="Fill",tn="FlipLeftRight",nn="Floor",rn="FloorDiv",an="FusedBatchNorm",sn="GatherV2",on="GatherNd",un="Greater",ln="GreaterEqual",cn="Identity",dn="IFFT",hn="Imag",pn="IsFinite",fn="IsInf",mn="IsNan",gn="LeakyRelu",yn="Less",bn="LessEqual",xn="LinSpace",wn="Log",vn="Log1p",kn="LogicalAnd",In="LogicalNot",Nn="LogicalOr",Sn="LogSoftmax",Cn="LRN",Tn="LRNGrad",En="Max",_n="Maximum",An="MaxPool",$n="MaxPoolGrad",Fn="MaxPool3D",Rn="MaxPool3DGrad",Dn="MaxPoolWithArgmax",Mn="Mean",On="Min",Ln="Minimum",zn="MirrorPad",Pn="Mod",Bn="Multinomial",Wn="Multiply",Vn="Neg",Un="NotEqual",Gn="NonMaxSuppressionV3",Hn="NonMaxSuppressionV4",jn="NonMaxSuppressionV5",qn="OnesLike",Kn="OneHot",Xn="Pack",Yn="PadV2",Zn="Pool",Jn="Pow",Qn="Prelu",er="Prod",tr="Range",nr="Real",rr="Reciprocal",ar="Relu",sr="Reshape",ir="ResizeNearestNeighbor",or="ResizeNearestNeighborGrad",ur="ResizeBilinear",lr="ResizeBilinearGrad",cr="Relu6",dr="Reverse",hr="Round",pr="Rsqrt",fr="ScatterNd",mr="Select",gr="Selu",yr="Slice",br="Sin",xr="Sinh",wr="Sign",vr="Sigmoid",kr="Softplus",Ir="Sqrt",Nr="Sum",Sr="SpaceToBatchND",Cr="SplitV",Tr="Softmax",Er="SparseFillEmptyRows",_r="SparseReshape",Ar="SparseSegmentMean",$r="SparseSegmentSum",Fr="SparseToDense",Rr="SquaredDifference",Dr="Square",Mr="StridedSlice",Or="StringNGrams",Lr="StringSplit",zr="StringToHashBucketFast",Pr="Sub",Br="Tan",Wr="Tanh",Vr="Tile",Ur="TopK",Gr="Transform",Hr="Transpose",jr="Unique",qr="Unpack",Kr="UnsortedSegmentSum",Xr="ZerosLike",Yr="Step",Zr="FromPixels",Jr="RotateWithOffset",Qr="_FusedMatMul",ea="FusedConv2D",ta="FusedDepthwiseConv2D",na=Ye("kernelRegistry",()=>new Map),ra=Ye("gradRegistry",()=>new Map);function aa(e,t){const n=ha(e,t);return na.get(n)}function sa(e){return ra.get(e)}function ia(e){const t=na.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function oa(e){const{kernelName:t,backendName:n}=e,r=ha(t,n);na.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),na.set(r,e)}function ua(e){const{kernelName:t}=e;ra.has(t)&&je().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),ra.set(t,e)}function la(e,t){const n=ha(e,t);if(!na.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);na.delete(n)}function ca(e){if(!ra.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ra.delete(e)}function da(e,t){ia(e).forEach(e=>{oa(Object.assign({},e,{backendName:t}))})}function ha(e,t){return`${t}_${e}`}var pa=n("2lpH");const fa=n.n(pa).a||pa;function ma(e){return fa.fromString(e,!0,16)}const ga=ma("c3a5c85c97cb3127"),ya=ma("b492b66fbe98f273"),ba=ma("9ae16a3b2f90404f");function xa(e){return e.xor(e.shru(47))}function wa(e,t,n){const r=e.slice(t,t+n);return fa.fromBytes(Array.from(r),!0,!0)}function va(e,t){return wa(e,t,8)}function ka(e,t){return wa(e,t,4)}function Ia(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Na(e,t,n=ma("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Sa(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=Ia(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(Ia(a,44)),[a.add(r),s.add(i)]}(va(e,t),va(e,t+8),va(e,t+16),va(e,t+24),n,r)}function Ca(e,t=e.length){const n=fa.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=ba.add(2*t),r=va(e,0).add(ba),a=va(e,t-8);return Na(Ia(a,37).mul(n).add(r),Ia(r,25).add(a).mul(n),n)}if(t>=4){const n=ba.add(2*t);return Na(ka(e,0).shl(3).add(t),ka(e,t-4),n)}if(t>0){const n=t+(e[t-1]<<2);return xa(ba.mul(e[0]+(e[t>>1]<<8)).xor(ga.mul(n))).mul(ba)}return ba}(e,t):function(e,t=e.length){const n=ba.add(2*t),r=va(e,0).mul(ya),a=va(e,8),s=va(e,t-8).mul(n),i=va(e,t-16).mul(ba);return Na(Ia(r.add(a),43).add(Ia(s,30)).add(i),r.add(Ia(a.add(ba),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=ba.add(2*t),r=va(e,0).mul(ba),a=va(e,8),s=va(e,t-8).mul(n),i=va(e,t-16).mul(ba),o=Ia(r.add(a),43).add(Ia(s,30)).add(i),u=Na(o,r.add(Ia(a.add(ba),18)).add(s),n),l=va(e,16).mul(n),c=va(e,24),d=o.add(va(e,t-32)).mul(n),h=u.add(va(e,t-24)).mul(n);return Na(Ia(l.add(c),43).add(Ia(d,30)).add(h),l.add(Ia(c.add(r),18)).add(d),n)}(e,t);let r=n,a=n.mul(ya).add(113),s=xa(a.mul(ba).add(113)).mul(ba),i=[fa.UZERO,fa.UZERO],o=[fa.UZERO,fa.UZERO];r=r.mul(ba).add(va(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=Ia(r.add(a).add(i[0]).add(va(e,u+8)),37).mul(ya),a=Ia(a.add(i[1]).add(va(e,u+48)),42).mul(ya),r=r.xor(o[1]),a=a.add(i[0]).add(va(e,u+40)),s=Ia(s.add(o[0]),33).mul(ya),i=Sa(e,u,i[1].mul(ya),r.add(o[0])),o=Sa(e,u+32,s.add(o[1]),a.add(va(e,u+16))),[s,r]=[r,s],u+=64}while(u!==l);const d=ya.add(s.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Ia(r.add(a).add(i[0]).add(va(e,u+8)),37).mul(d),a=Ia(a.add(i[1]).add(va(e,u+48)),42).mul(d),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(va(e,u+40))),s=Ia(s.add(o[0]),33).mul(d),i=Sa(e,u,i[1].mul(d),r.add(o[0])),o=Sa(e,u+32,s.add(o[1]),a.add(va(e,u+16))),[s,r]=[r,s],Na(Na(i[0],o[0],d).add(xa(a).mul(ga)).add(s),Na(i[1],o[1],d).add(r),d)}function Ta(e,t){return"string"===t?$a(e):Ea([e],t)}function Ea(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=oe(e)),je().getBool("DEBUG")&&ke(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function _a(){return je().platform.now()}function Aa(e,t){return je().platform.fetch(e,t)}function $a(e,t="utf-8"){return t=t||"utf-8",je().platform.encode(e,t)}function Fa(e,t="utf-8"){return t=t||"utf-8",je().platform.decode(e,t)}class Ra{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Ma)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const i=_a();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:_a()-i})}if(je().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){const t=r[o];t.data().then(n=>{Da(n,t.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then(e=>e.kernelMs),extraInfo:s.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),r,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}}function Da(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class Ma{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?me(r+"ms",9):r.error,o=me(e,25),u=t.rank,l=t.size,c=me(t.shape.toString(),14);let d="";for(const h in a){const e=a[h];if(null!=e){const n=e.shape||t.shape,r=n.length;d+=`${h}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${d}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Oa(e,t,n,r){const a=De(t),s=function(e,t,n,r){const a=ue(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?Ba(e):e;if(o>1)for(let l=0;l<a/s;l++){const e=l*s;for(let t=0;t<s;t++)i[t]=Math.max(i[t],La(u[e+t],0,n).length)}return i}(e,t,n,a),i=t.length,o=Pa(e,t,n,a,s),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+i),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map(e=>"    "+e).join("\n")),u.join("\n")}function La(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(7))+" + "+parseFloat(e[1].toFixed(7))+"j":Ee(e)?`'${e}'`:"bool"===n?za(e):parseFloat(e.toFixed(7)).toString(),me(r,t)}function za(e){return 0===e?"false":"true"}function Pa(e,t,n,r,a,s=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[La(Ba(e)[0],0,n)]:"bool"===n?[za(e[0])]:[e[0].toString()];if(1===u){if(o>20){let t=Array.from(e.slice(0,3*i)),r=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(t=Ba(t),r=Ba(r)),["["+t.map((e,t)=>La(e,a[t],n)).join(", ")+", ..., "+r.map((e,t)=>La(e,a[o-3+t],n)).join(", ")+"]"]}return["["+("complex64"===n?Ba(e):Array.from(e)).map((e,t)=>La(e,a[t],n)).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),d=r[0]*i,h=[];if(o>20){for(let t=0;t<3;t++){const r=t*d;h.push(...Pa(e.slice(r,r+d),l,n,c,a,!1))}h.push("...");for(let t=o-3;t<o;t++){const r=t*d;h.push(...Pa(e.slice(r,r+d),l,n,c,a,t===o-1))}}else for(let m=0;m<o;m++){const t=m*d;h.push(...Pa(e.slice(t,t+d),l,n,c,a,m===o-1))}const p=2===u?",":"";h[0]="["+h[0]+p;for(let m=1;m<h.length-1;m++)h[m]=" "+h[m]+p;let f=",\n";for(let m=2;m<u;m++)f+="\n";return h[h.length-1]=" "+h[h.length-1]+"]"+(s?"":f),h}function Ba(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Wa{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ue(e),null!=n){const e=n.length;ae(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ve(t,this.size),this.strides=De(e)}set(e,...t){0===t.length&&(t=[0]),ae(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t])throw new Error(`Requested out of range element at ${e}.   Buffer shape=`+this.shape);t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Va().makeTensor(this.values,this.shape,this.dtype)}}let Va=null,Ua=null,Ga=null;class Ha{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ue(e),this.strides=De(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Ua.buffer(this.shape,this.dtype,e)}bufferSync(){return Ua.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Oe(this.shape,e,"complex64"===this.dtype)}arraySync(){return Oe(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Va().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map(e=>Fa(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Va().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>Fa(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Va().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Va().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ua.print(this,e)}clone(){return this.throwIfDisposed(),Ua.clone(this)}toString(e=!1){return Oa(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ua.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Va().makeVariable(this,e,t,n)}}function ja(){return Ye("Tensor",()=>Ha)}Object.defineProperty(Ha,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),ja();class qa extends Ha{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ce(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Va().disposeTensor(this),this.dataId=e.dataId,Va().incRef(this,null)}dispose(){Va().disposeVariable(this),this.isDisposedInternal=!0}}var Ka,Xa,Ya,Za,Ja;Object.defineProperty(qa,Symbol.hasInstance,{value:e=>e instanceof Ha&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Ka||(Ka={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Xa||(Xa={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Ya||(Ya={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Za||(Za={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Ja||(Ja={}));const Qa={float32:Za,int32:Xa,bool:Ya,complex64:Ja};function es(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Qa[e][t]}function ts(e){return es(e,"int32")}function ns(e,t){if(e.dtype===t.dtype)return[e,t];const n=es(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function rs(e,t){ae(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function as(e,t){return t.some(t=>t.id===e.id)}function ss(e){const t=[];return is(e,t,new Set),t}function is(e,t,n){if(null==e)return;if(e instanceof Ha)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const s in a){const e=a[s];n.has(e)||(n.add(e),is(e,t,n))}}function os(e){return null!=e.kernelName}class us{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ls{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new us}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void(await this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Ra(this.backendInstance),!0}setupRegisteredKernels(){ia(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){ia(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof X||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0))).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return ls.nextTensorId++}nextVariableId(){return ls.nextVariableId++}clone(e){const t=ds.runKernel(cn,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],e=>({x:()=>ds.runKernel(xt,{x:e},{dtype:"float32"})}),[],{}),t}runKernel(e,t,n){if(null==aa(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});const s=r-t-a-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(s>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const u=os(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(os(e)){const{kernelName:t,inputs:a,attrs:s}=e,u=aa(t,this.backendName);ae(null!=u,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),i=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const l=i.map(e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)});if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy(()=>t(this.backend,a));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,d=os(e)?null:e.backwardsFunc;let h;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(h=this.profiler.profileKernel(u,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),t=h.outputs):t=i()}),r&&this.addTapeNode(u,l,t,d,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(e=>null!=l[e]?l[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=sa(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(ae(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(t).map(e=>t[e])):s=e.map(e=>t[e]);const i=n.filter((e,t)=>a[t]);return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");r=r||this.backend;let a=e;"string"===(n=n||"float32")&&Ee(e[0])&&(a=e.map(e=>$a(e)));const s=r.write(a,t,n),i=new Ha(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=Te(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a=new Ha(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new qa(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Ce(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof qa||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Ce(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[e])}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=sa(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=ze(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ss(e),n=new Set(t.map(e=>e.id));for(let a=0;a<this.state.activeScope.track.length;a++){const e=this.state.activeScope.track[a];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(ae(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));ae(a instanceof Ha,()=>"The result y returned by f() must be a tensor.");const s=function(e,t,n){const r={},a={};for(let u=0;u<t.length;u++)r[t[u].id]=!0;for(let u=0;u<e.length;u++){const n=e[u],s=n.inputs;for(const e in s){const i=s[e];let o=!1;for(let e=0;e<t.length;e++)if(r[i.id]){n.outputs.forEach(e=>r[e.id]=!0),o=!0,a[n.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let u=e.length-1;u>=0;u--){const t=e[u],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let u=0;u<e.length;u++){const t=e[u];if(a[t.id]&&i[t.id]){const e={};for(const a in t.inputs){const n=t.inputs[a];r[n.id]&&(e[a]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[a.id]=null==n?function(e){const t=Le(ue(e),"float32");return ds.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach(t=>{const n=e[t.id];i.push(null!=n?n:null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n(()=>o[t]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!ce(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,e=>this.tidy(e),hs);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(e){return ae(Fe(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;ae(t.every(e=>e instanceof Ha),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),ae(n.value instanceof Ha,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),ae(Fe(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];ae(s.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),ae(s.every(e=>e instanceof Ha),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return s.forEach((e,t)=>{i[t]=()=>e}),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=_a(),n=await this.backend.time(e);return n.wallMs=_a()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new us;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function cs(){const e=Xe();if(null==e._tfengine){const t=new Ge(e);e._tfengine=new ls(t)}return Ke=e._tfengine.ENV,Va=()=>e._tfengine,e._tfengine}ls.nextTensorId=0,ls.nextVariableId=0;const ds=cs();function hs(e,t){return ds.runKernel(et,{a:e,b:t})}function ps(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function fs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const ms=je();function gs(e,t){let n=e;if(Se(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Se(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&je().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ys(e,r,[]),r}function ys(e,t,n){if(n=n||[],!Array.isArray(e)&&!Se(e))return void ae(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);ae(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),ae(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);const r=t.slice(1);for(let a=0;a<e.length;++a)ys(e[a],r,n.concat(a))}function bs(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function xs(e,t,n,r="numeric"){if(e instanceof Ha)return bs(r,e.dtype,t,n),e;let a=$e(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),bs(r,a,t,n),null==e||!Se(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${null==e?"null":e.constructor.name}'`);const s=gs(e,a);Se(e)||Array.isArray(e)||(e=[e]);const i="string"!==a?Ea(e,a):oe(e,[],!0);return ds.makeTensor(i,s,a)}function ws(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,a)=>xs(e,`${t}[${a}]`,n,r))}ms.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),ms.registerFlag("IS_BROWSER",()=>fs()),ms.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),ms.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),ms.registerFlag("PROD",()=>!1),ms.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ms.getBool("DEBUG")),ms.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),ms.registerFlag("IS_TEST",()=>!1),ms.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),ms.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);const vs="__op";function ks(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=vs;const a=(...e)=>{ds.startScope(n);try{const t=r(...e);return Ue(t)&&console.error("Cannot return a Promise inside of tidy."),ds.endScope(t),t}catch(t){throw ds.endScope(null),t}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}const Is=ks({complex_:function(e,t){const n=xs(e,"real","complex"),r=xs(t,"imag","complex");return se(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`),ds.runKernel(kt,{real:n,imag:r})}});function Ns(e,t,n,r){if(null==r&&(r=$e(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Se(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Be(t);const e=ue(t),r=ue(n);ae(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let a=0;a<n.length;++a){const e=n[a],r=a!==n.length-1||e!==ue(t.slice(a));ae(n[a]===t[a]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return Se(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Ea(e,r):oe(e,[],!0),ds.makeTensor(e,t,r)}function Ss(e,t,n){return Ns(e,t,gs(e,n),n)}const Cs={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Ts(e,t){const n=[],r=[],a=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise(async e=>{const t=await o.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,r=new Uint8Array(n);let a=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,a),a+=4,r.set(e,a),a+=e.length}e(r)});r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:_s(await Promise.all(r)),specs:n}}function Es(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,u=ue(o);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Cs[n.dtype],c=e.slice(a,a+u*o),d="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(d.length);for(let e=0;e<d.length;e++)l[e]=d[e]*n.scale+n.min}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Ms()),l=r(d)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(d.length);for(let e=0;e<d.length;e++)l[e]=Math.round(d[e]*n.scale+n.min)}a+=u*o}else if("string"===i){const t=ue(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=Cs[i],s=e.slice(a,a+u*r);if("float32"===i)l=new Float32Array(s);else if("int32"===i)l=new Int32Array(s);else if("bool"===i)l=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=Ss(e,o,"float32"),i=Ss(r,o,"float32");n[t]=Is(a,i),a.dispose(),i.dispose()}}a+=u*r}"complex64"!==i&&(n[t]=Ss(l,o,i))}return n}function _s(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)});const r=new Uint8Array(t);let a=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),r.buffer}const As="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function $s(e){return As?Buffer.byteLength(e):new Blob([e]).size}function Fs(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function Rs(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Ds(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:$s(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:$s(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Ms(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){const a=r[i];s[i]=e[n[a>>10]+(1023&a)]+t[a>>10]}return new Float32Array(a)}}class Os{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Os.instance&&(Os.instance=new Os),Os.instance}static registerSaveRouter(e){Os.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Os.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Os.getHandlers(e,"save")}static getLoadHandlers(e,t){return Os.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Os.getInstance().loadRouters:Os.getInstance().saveRouters).forEach(t=>{const a=t(e,n);null!==a&&r.push(a)}),r}}const Ls=e=>Os.registerSaveRouter(e),zs=e=>Os.registerLoadRouter(e),Ps=e=>Os.getSaveHandlers(e),Bs=(e,t)=>Os.getLoadHandlers(e,t),Ws="tensorflowjs",Vs="models_store",Us="model_info_store";function Gs(){if(!je().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Hs(e){const t=e.result;t.createObjectStore(Vs,{keyPath:"modelPath"}),t.createObjectStore(Us,{keyPath:"modelPath"})}class js{constructor(e){if(this.indexedDB=Gs(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open(Ws,1);r.onupgradeneeded=()=>Hs(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(Vs,"readonly"),r=t.objectStore(Vs).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Ds(t),s=a.transaction(Us,"readwrite");let i=s.objectStore(Us);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(Vs,"readwrite");const o=u.objectStore(Vs).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(Us);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)})}}js.URL_SCHEME="indexeddb://";const qs=e=>{return je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(js.URL_SCHEME)?(t=e.slice(js.URL_SCHEME.length),new js(t)):null;var t};Os.registerSaveRouter(qs),Os.registerLoadRouter(qs);class Ks{constructor(){this.indexedDB=Gs()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open(Ws,1);n.onupgradeneeded=()=>Hs(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(Us,"readonly"),s=a.objectStore(Us).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(js.URL_SCHEME)?t.slice(js.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open(Ws,1);r.onupgradeneeded=()=>Hs(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(Us,"readwrite"),i=s.objectStore(Us),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(Vs,"readwrite");const r=u.objectStore(Vs).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)})}}const Xs="/",Ys="tensorflowjs_models",Zs="info",Js="model_topology",Qs="weight_specs",ei="weight_data",ti="model_metadata";function ni(e){return{info:[Ys,e,Zs].join(Xs),topology:[Ys,e,Js].join(Xs),weightSpecs:[Ys,e,Qs].join(Xs),weightData:[Ys,e,ei].join(Xs),modelMetadata:[Ys,e,ti].join(Xs)}}function ri(e){const t=e.split(Xs);if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join(Xs)}class ai{constructor(e){if(!je().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ni(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),a=Ds(e);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(e){if(As)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(e.weightData));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:a}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(As){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}(s),t}}ai.URL_SCHEME="localstorage://";const si=e=>{return je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ai.URL_SCHEME)?(t=e.slice(ai.URL_SCHEME.length),new ai(t)):null;var t};Os.registerSaveRouter(si),Os.registerLoadRouter(si);class ii{constructor(){ae(je().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),ae("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Ys+Xs,n=Xs+Zs;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[ri(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=ni(e=(t=e).startsWith(ai.URL_SCHEME)?t.slice(ai.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}const oi="://";class ui{constructor(){this.managers={}}static getInstance(){return null==ui.instance&&(ui.instance=new ui),ui.instance}static registerManager(e,t){ae(null!=e,()=>"scheme must not be undefined or null."),e.endsWith(oi)&&(e=e.slice(0,e.indexOf(oi))),ae(e.length>0,()=>"scheme must not be an empty string.");const n=ui.getInstance();ae(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function li(e){if(-1===e.indexOf(oi))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+ui.getSchemes().join(","));return{scheme:e.split(oi)[0],path:e.split(oi)[1]}}async function ci(e,t,n=!1){ae(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=Os.getLoadHandlers(e);ae(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),ae(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);const a=r[0],s=Os.getSaveHandlers(t);ae(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),ae(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const i=s[0],o=li(e).scheme,u=li(e).path,l=o===li(e).scheme,c=await a.load();n&&l&&await ui.getManager(o).removeModel(u);const d=await i.save(c);return n&&!l&&await ui.getManager(o).removeModel(u),d.modelArtifactsInfo}async function di(){const e=ui.getSchemes(),t={};for(const n of e){const e=await ui.getManager(n).listModels();for(const r in e)t[n+oi+r]=e[r]}return t}async function hi(e){const t=li(e);return ui.getManager(t.scheme).removeModel(t.path)}async function pi(e,t){return ci(e,t,!1)}async function fi(e,t){return ci(e,t,!0)}class mi{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(je().get("IS_BROWSER")){je().setPlatform("browser",new mi);try{ui.registerManager(ai.URL_SCHEME,new ii)}catch(_H){}try{ui.registerManager(js.URL_SCHEME,new Ks)}catch(_H){}}let gi;function yi(e,t="float32",n){return t=t||"float32",Be(e),new Wa(e,t,n)}je().get("IS_NODE")&&je().setPlatform("node",new class{constructor(){this.util=n(1),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=je().global.fetch?je().global.fetch(e,t):(null==gi&&(gi=n(0)),gi(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const bi=ks({cast_:function(e,t){const n=xs(e,"x","cast");if(!Ie(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");return ds.runKernel(xt,{x:n},{dtype:t})}}),xi=ks({clone_:function(e){const t=xs(e,"x","clone","string_or_numeric");return ds.runKernel(cn,{x:t})}});function wi(e,t=!1){console.log(e.toString(t))}function vi(e){return new Promise(e=>setTimeout(e)).then(e)}cs(),Ua={buffer:yi,cast:bi,clone:xi,print:wi};class ki{constructor(e){if(!je().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ki.URL_SCHEME)&&(e=e.slice(ki.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]};null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer);const r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=r,await vi(()=>a.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await vi(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ds(e)}}}}ki.URL_SCHEME="downloads://";class Ii{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise((n,r)=>{const a=new FileReader;a.onload=a=>{const s=JSON.parse(a.target.result),i=s.modelTopology;if(null==i)return void r(new Error("modelTopology field is missing from file "+e.name));0===t.length&&n({modelTopology:i});const o=s.weightsManifest;if(null==o)return void r(new Error("weightManifest field is missing from file "+e.name));let u;try{u=this.checkManifestAndWeightFiles(o,t)}catch(_H){return void r(_H)}const l=[],c=[],d=[];o.forEach(e=>{e.paths.forEach(e=>{c.push(e),d.push(null)}),l.push(...e.weights)}),o.forEach(e=>{e.paths.forEach(e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,a=c.indexOf(e);if(d[a]=r,-1===d.indexOf(null)){const e={modelTopology:i,weightSpecs:l,weightData:Fs(d),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};null!=s.signature&&(e.signature=s.signature),null!=s.userDefinedMetadata&&(e.userDefinedMetadata=s.userDefinedMetadata),null!=s.modelInitializer&&(e.modelInitializer=s.modelInitializer),n(e)}},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(u[e])})})},a.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(e)})}checkManifestAndWeightFiles(e,t){const n=[],r=t.map(e=>Rs(e.name)),a={};for(const s of e)s.paths.forEach(e=>{const s=Rs(e);if(-1!==n.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);a[e]=t[r.indexOf(s)]});if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return a}}function Ni(e){return new Ii(e)}function Si(e,t,n,r){!function(e){ae(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){ae(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+e),ae(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+t),ae(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t)}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map(s=>(s.then(s=>{const i=n+ ++a/e.length*(r-n);return t(i),s}),s)))}async function Ci(e,t){null==t&&(t={});const n=null==t.fetchFunc?je().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),a=(null==t.onProgress?await Promise.all(r):await Si(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(a):await Si(a,t.onProgress,.5,1)}async function Ti(e,t="",n,r){return Ei(e=>Ci(e,{requestInit:r}))(e,t,n)}function Ei(e){return async(t,n="",r)=>{const a=t.map(()=>!1),s={},i=null!=r?r.map(()=>!1):[],o=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const u=Cs["quantization"in e?e.quantization.dtype:e.dtype]*ue(e.shape),l=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach((t,n)=>{t===e.name&&(l(),i[n]=!0)}):l(),o.push(e.name),n+=u})}),!i.every(e=>e)){const e=r.filter((e,t)=>!i[t]);throw new Error("Could not find weights in manifest with names: "+e.join(", ")+". \nManifest JSON has weights with names: "+o.join(", ")+".")}const u=a.reduce((e,t,n)=>(t&&e.push(n),e),[]),l=[];u.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)})});const c=await e(l),d={};let h=0;return u.forEach(e=>{const n=t[e].paths.length;let r=0;for(let t=0;t<n;t++)r+=c[h+t].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let t=0;t<n;t++){const e=new Uint8Array(c[h+t]);i.set(e,o),o+=e.byteLength}s[e].forEach(e=>{const t=Es(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)d[n]=t[n]}),h+=n}),d}}Os.registerSaveRouter(e=>je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ki.URL_SCHEME)?function(e="model"){return new ki(e)}(e.slice(ki.URL_SCHEME.length)):null);class _i{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(ae("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=je().platform.fetch,ae(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&ae(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:[{paths:["./model.weights.bin"],weights:e.weightSpecs}]};null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Ds(e),responses:[r]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+r.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(p){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest,a=t.generatedBy,s=t.convertedBy,i=t.format,o=t.signature,u=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let l,c;if(null!=r){const e=await this.loadWeights(r);[l,c]=e}const d={modelTopology:n,weightSpecs:l,weightData:c,generatedBy:a,convertedBy:s,format:i};null!=o&&(d.signature=o),null!=u&&(d.userDefinedMetadata=u);const h=t.modelInitializer;return h&&(d.modelInitializer=h),d}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const u of e)s.push(...u.weights);const i=[],o=[];for(const u of e)for(const e of u.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Fs(await Ci(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Ai(e){return null!=e.match(_i.URL_SCHEME_REGEX)}_i.URL_SCHEME_REGEX=/^https?:\/\//;const $i=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>Ai(e)):Ai(e),n)return Fi(e,t)}return null};function Fi(e,t){return new _i(e,t)}function Ri(e,t){return Fi(e,t)}Os.registerSaveRouter($i),Os.registerLoadRouter($i);class Di{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Mi{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Oi(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Di(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Di({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Di({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Li(e){return new Mi(e)}const zi=ks({matMul_:function(e,t,n=!1,r=!1){let a=xs(e,"a","matMul"),s=xs(t,"b","matMul");return[a,s]=ns(a,s),ds.runKernel(mt,{a:a,b:s},{transposeA:n,transposeB:r})}}),Pi=ks({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);const a=xs(e,"indices","oneHot","int32");return ds.runKernel(Kn,{indices:a},{depth:t,onValue:n,offValue:r})}}),Bi=ks({transpose_:function(e,t){const n=xs(e,"x","transpose");return null==t&&(t=n.shape.map((e,t)=>t).reverse()),ae(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{ae(e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t)}),n.rank<=1?n.clone():ds.runKernel(Hr,{x:n},{perm:t})}}),Wi=ks({confusionMatrix_:function(e,t,n){const r=xs(e,"labels","confusionMatrix"),a=xs(t,"predictions","confusionMatrix");ae(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),ae(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),ae(1===a.rank,()=>"Expected the rank of predictions to be 1, but got "+a.rank),ae(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),ae(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const s=Pi(bi(r,"int32"),n),i=Pi(bi(a,"int32"),n),o=Bi(s),u=zi(o,i);return bi(u,"int32")}});function Vi(e,t,n){if(ie(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=gs(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ns(e,t,r,n)}let Ui;function Gi(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=aa(Zr,ds.backendName))return ds.runKernel(Zr,{pixels:e},{numChannels:t});const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,d;if(i?c=e.getContext("2d").getImageData(0,0,u,l).data:r||n?c=e.data:(s||a||o)&&(null==Ui&&(Ui=document.createElement("canvas").getContext("2d")),Ui.canvas.width=u,Ui.canvas.height=l,Ui.drawImage(e,0,0,u,l),c=Ui.getImageData(0,0,u,l).data),4===t)d=new Int32Array(c);else{const e=u*l;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=c[4*n+e]}return Vi(d,[l,u,t],"int32")}async function Hi(e,t=3){let n=null;if(je().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Gi(n,t)}async function ji(e,t){let n=xs(e,"img","toPixels");if(!(e instanceof Ha)){const e=n;n=bi(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+s);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let l=0;l<r*a;++l){const e=[0,0,0,255];for(let r=0;r<s;r++){const t=i[l*s+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===s?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[r]=t*o}const t=4*l;u[t+0]=Math.round(e[0]),u[t+1]=Math.round(e[1]),u[t+2]=Math.round(e[2]),u[t+3]=Math.round(e[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const qi=ks({fromPixels_:Gi});function Ki(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===ue(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let d=0;d<a.length-1;++d)i*=a[d];const o=e.shape,u=a.slice();u.pop();let l=1;for(let d=s;d<n;++d)l*=o[d],u.push(o[d]);const c=[...De(e.shape).map(e=>e/l),1].slice(0,s);return[u,i,l,c]}function Xi(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let i=0;i<a;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==e[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function Yi(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}Xi(n,t,e)}function Zi(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let u=a;u<s;++u)i*=n[u];const o=a<1?1:a;return{sliceRank:a,numUpdates:ue(t.shape)/o,sliceSize:i,strides:[...De(n.slice(0,a)),1],outputSize:ue(n)}}function Ji(e,t,n){const r=e.shape.length;ae(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),ae(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)ae(t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function Qi(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function eo(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function to(e,t,n,r){const a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[t]=1:(a.splice(t,0,1),a.pop());return a}function no(e,t,n){return n<=e?n:n-(t-1)}function ro(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function ao(e,t,n,r,a,s,i,o,u){const l=e.length;let c=new Array(l),d=new Array(l),h=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=so(i,u,l,r,e),d=io(o,u,l,a,e),h=to(s,u,l,e)}else for(let p=0;p<l;p++)c[p]=uo(i,r,s,e,p,u),d[p]=lo(o,a,s,e,p,u),h[p]=oo(s,p,u);return{begin:c,end:d,strides:h}}function so(e,t,n,r,a){const s=[...a],i=ro(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{const a=no(t,n,o);let i=r[a];e&1<<a&&(i=0),s[o]=i}return s}function io(e,t,n,r,a){const s=[...a],i=ro(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{const a=no(t,n,o);let i=r[a];e&1<<a&&(i=Number.MAX_SAFE_INTEGER),s[o]=i}for(let o=0;o<s.length;o++){const e=a[o];s[o]<0&&(s[o]+=e),s[o]=Q(0,s[o],a[o])}return s}function oo(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function uo(e,t,n,r,a,s){let i=t[a];(e&1<<a||s&1<<a||null==i)&&(i=(n[a]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const o=r[a];return i<0&&(i+=o),i=Q(0,i,o-1),i}function lo(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=o>0?Q(0,i,u):Q(-1,i,u-1),i}function co(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function ho(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function po(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach(e=>{ae(-1!==e,()=>"slice() does not support negative begin indexing.")}),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map((t,n)=>t>=0?t:(ae(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,s]}function fo(e,t,n,r,a,s,i,o,u){let l=t.slice(),c=n.slice(),d=r;null==r&&(d=new Array(l.length));const h=Qi(i);if(h.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-l.length,f=Qi(o),m=e.slice();f.forEach(e=>{l[e]=0,c[e]=1,m.splice(e,0,1)});const{begin:g,end:y,strides:b}=ao(m,h,p,l,c,d,a,s,i);l=g,c=y,d=b;const x=Qi(u);x.forEach(e=>{c[e]=l[e]+1,d[e]=1});const w=eo(l,c,d),v=w.filter((e,t)=>-1===x.indexOf(t));return{nonStrided:d.every(e=>1===e),$begin:l,$end:c,$strides:d,size:w,newShape:m,outShape:v}}class mo{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class go{constructor(){this.classNameMap={}}static getMap(){return null==go.instance&&(go.instance=new go),go.instance}static register(e){go.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function yo(e){ae(null!=e.className,()=>"Class being registered does not have the static className property defined."),ae("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),ae(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),go.register(e)}const bo=.1;function xo(e,t,n){return null==n&&(n=wo()),vo(e,t,(e,t)=>So(e,t,n))}function wo(){return 32===ds.backend.floatPrecision()?.001:bo}function vo(e,t,n){let r=!0;if((Se(e)||Se(t))&&(r=!1),Se(e)&&Se(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: `+r)}if(Array.isArray(e)&&Array.isArray(t)){const n=gs(e),r=gs(t);if(!ce(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=Se(e)?e:oe(e),s=Se(t)?t:oe(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let i=0;i<s.length;++i){const e=a[i],t=s[i];if(!n(e,t))throw new Error(`Arrays differ: actual[${i}] = ${e}, expected[${i}] = ${t}.\nActual:   ${a}.\nExpected: ${s}.`)}}function ko(e,t){e().then(()=>t.fail(),()=>t())}function Io(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Ee(e)||Ee(e[0])||Ee(t)||Ee(t[0])?vo(e,n,(e,t)=>e==t):vo(e,t,(e,t)=>So(e,t,0))}function No(e,t,n){if(null==n&&(n=wo()),!So(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function So(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Co(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function To(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function Eo(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Eo(n):e[t]=$a(n)}return e}const _o="3.7.0";function Ao(){je().set("PROD",!0)}function $o(){je().set("DEBUG",!0)}function Fo(){je().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Ro(e){je().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Do(){ds.disposeVariables()}function Mo(){return ds}function Oo(){return ds.memory()}function Lo(e){return ds.profile(e)}function zo(e,t){return ds.tidy(e,t)}function Po(e){ss(e).forEach(e=>e.dispose())}function Bo(e){return ds.keep(e)}function Wo(e){return ds.time(e)}function Vo(e){return ds.setBackend(e)}function Uo(){return ds.ready()}function Go(){return ds.backendName}function Ho(e){ds.removeBackend(e)}function jo(e){return ds.findBackend(e)}function qo(e){return ds.findBackendFactory(e)}function Ko(e,t,n=1){return ds.registerBackend(e,t,n)}function Xo(){return ds.backend}function Yo(e,t){je().setPlatform(e,t)}Ga=Ro;const Zo=ks({add_:function(e,t){let n=xs(e,"a","add"),r=xs(t,"b","add");return[n,r]=ns(n,r),ds.runKernel(et,{a:n,b:r})}}),Jo=ks({floorDiv_:function(e,t){let n=xs(e,"a","floorDiv"),r=xs(t,"b","floorDiv");return[n,r]=ns(n,r),ds.runKernel(rn,{a:n,b:r})}}),Qo=ks({div_:function(e,t){let n=xs(e,"a","div"),r=xs(t,"b","div");return[n,r]=ns(n,r),"int32"===n.dtype&&"int32"===r.dtype?Jo(n,r):ds.runKernel(Gt,{a:n,b:r},{})}}),eu=ks({mul_:function(e,t){let n=xs(e,"a","mul"),r=xs(t,"b","mul");return[n,r]=ns(n,r),ds.runKernel(Wn,{a:n,b:r})}}),tu=ks({sqrt_:function(e){const t=xs(e,"x","sqrt");return ds.runKernel(Ir,{x:t})}}),nu=ks({square_:function(e){const t=xs(e,"x","square");return ds.runKernel("Square",{x:t},{})}}),ru=ks({zerosLike_:function(e){const t=xs(e,"x","zerosLike");return ds.runKernel(Xr,{x:t})}});function au(e){return ae(Fe(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const r=xs(t,"x","tf.grad","string_or_numeric"),a=null!=n?xs(n,"dy","tf.grad"):null;return ds.tidy(()=>{const{value:t,grads:n}=ds.gradients(()=>e(r),[r],a);return null!=a&&se(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),cu(n),n[0]})}}function su(e){return ae(Fe(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{ae(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=ws(t,"args","tf.grads","string_or_numeric"),a=null!=n?xs(n,"dy","tf.grads"):null;return ds.tidy(()=>{const{value:t,grads:n}=ds.gradients(()=>e(...r),r,a);return null!=a&&se(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),cu(n),n})}}function iu(e){return ae(Fe(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{ae(t instanceof Ha,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),ae(null==n||n instanceof Ha,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:a}=ds.gradients(()=>e(t),[t],n);return cu(r),{grad:r[0],value:a}}}function ou(e){return ae(Fe(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{ae(Array.isArray(t)&&t.every(e=>e instanceof Ha),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),ae(null==n||n instanceof Ha,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=ds.gradients(()=>e(...t),t,n);return null!=n&&se(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),cu(r.grads),r}}function uu(e,t){ae(Fe(e),()=>"The f passed in variableGrads(f) must be a function"),ae(null==t||Array.isArray(t)&&t.every(e=>e instanceof qa),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in ds.registeredVariables)t.push(ds.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,a=t.length;ae((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);const{value:s,grads:i}=ds.gradients(e,t,null,!0);ae(i.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),ae(0===s.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`);const o={};return t.forEach((e,t)=>{null!=i[t]&&(o[e.name]=i[t])}),null!=r&&r.forEach(e=>o[e.name]=null),{value:s,grads:o}}function lu(e){return ds.customGrad(e)}function cu(e){if(e.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function du(e,t){if((Se(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Se(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ns(e,[],[],t)}class hu extends mo{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:a[e.name]}));this.applyGradients(e)}else this.applyGradients(a);return Po(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return uu(e,t)}dispose(){null!=this.iterations_&&Po(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:du(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(hu,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class pu extends hu{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ds.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ds.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:zo(()=>ru(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:zo(()=>ru(r).variable(!1))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;zo(()=>{const e=Zo(eu(s,this.rho),eu(nu(a),1-this.rho)),t=eu(Qo(tu(Zo(i,this.epsilon)),tu(Zo(s,this.epsilon))),a),n=Zo(eu(i,this.rho),eu(nu(t),1-this.rho));s.assign(e),i.assign(n);const o=Zo(eu(t,-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Po(this.accumulatedGrads.map(e=>e.variable)),Po(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function fu(e,t,n){return ds.runKernel(en,{},{shape:e,value:t,dtype:n})}pu.className="Adadelta",yo(pu);class mu extends hu{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ds.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:zo(()=>fu(r.shape,this.initialAccumulatorValue).variable(e))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;zo(()=>{const e=Zo(s,nu(a));s.assign(e);const t=Zo(eu(Qo(a,tu(Zo(e,ds.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Po(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}mu.className="Adagrad",yo(mu);const gu=ks({pow_:function(e,t){let n=xs(e,"base","pow"),r=xs(t,"exp","pow");return[n,r]=ns(n,r),ds.runKernel(Jn,{a:n,b:r})}}),yu=ks({sub_:function(e,t){let n=xs(e,"a","sub"),r=xs(t,"b","sub");return[n,r]=ns(n,r),ds.runKernel(Pr,{a:n,b:r})}});class bu extends hu{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],zo(()=>{this.accBeta1=du(t).variable(),this.accBeta2=du(n).variable()}),null==r&&(this.epsilon=ds.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);zo(()=>{const n=yu(1,this.accBeta1),r=yu(1,this.accBeta2);t.forEach((t,a)=>{const s=ds.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:zo(()=>ru(s).variable(!1))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:t+"/v",variable:zo(()=>ru(s).variable(!1))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=Zo(eu(o,this.beta1),eu(i,1-this.beta1)),c=Zo(eu(u,this.beta2),eu(nu(i),1-this.beta2)),d=Qo(l,n),h=Qo(c,r);o.assign(l),u.assign(c);const p=Zo(eu(Qo(d,Zo(tu(h),this.epsilon)),-this.learningRate),s);s.assign(p)}),this.accBeta1.assign(eu(this.accBeta1,this.beta1)),this.accBeta2.assign(eu(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Po(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&Po(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),zo(()=>{this.accBeta1.assign(gu(this.beta1,this.iterations_+1)),this.accBeta2.assign(gu(this.beta2,this.iterations_+1))});const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}bu.className="Adam",yo(bu);const xu=ks({abs_:function(e){const t=xs(e,"x","abs");return ds.runKernel("complex64"===t.dtype?It:Ze,{x:t})}});function wu(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function vu(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function ku(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const Iu=ks({maximum_:function(e,t){let n=xs(e,"a","maximum"),r=xs(t,"b","maximum");return[n,r]=ns(n,r),"bool"===n.dtype&&(n=bi(n,"int32"),r=bi(r,"int32")),ku(n.shape,r.shape),ds.runKernel(_n,{a:n,b:r})}});class Nu extends hu{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],zo(()=>{this.iteration=du(0).variable(),this.accBeta1=du(t).variable()}),null==r&&(this.epsilon=ds.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);zo(()=>{const n=yu(1,this.accBeta1),r=Qo(-this.learningRate,Zo(eu(this.iteration,this.decay),1));t.forEach((t,a)=>{const s=ds.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:ru(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:t+"/v",variable:ru(s).variable(!1)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=Zo(eu(o,this.beta1),eu(i,1-this.beta1)),c=eu(u,this.beta2),d=xu(i),h=Iu(c,d);o.assign(l),u.assign(h);const p=Zo(eu(Qo(r,n),Qo(l,Zo(h,this.epsilon))),s);s.assign(p)}),this.iteration.assign(Zo(this.iteration,1)),this.accBeta1.assign(eu(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Po(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&Po(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Nu.className="Adamax",yo(Nu);class Su extends hu{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=ds.registeredVariables[t];zo(()=>{const e=Zo(eu(this.c,r),a);a.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Bo(du(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Su.className="SGD",yo(Su);class Cu extends Su{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=du(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ds.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:t+"/momentum",variable:zo(()=>ru(r).variable(e))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&zo(()=>{let e;const t=Zo(eu(this.m,a),s);e=Zo(eu(this.c,this.useNesterov?Zo(s,eu(t,this.m)):t),r),a.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Po(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Cu.className="Momentum",yo(Cu);class Tu extends hu{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=ds.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=ds.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:zo(()=>ru(r).variable(a))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:zo(()=>ru(r).variable(a))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:zo(()=>ru(r).variable(a))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;zo(()=>{const e=Zo(eu(i,this.decay),eu(nu(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=Zo(eu(t,this.decay),eu(s,1-this.decay)),u=Qo(eu(s,this.learningRate),tu(yu(e,Zo(nu(a),this.epsilon)))),l=Zo(eu(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(l);const c=yu(r,l);r.assign(c)}else{const e=Zo(eu(i,this.decay),eu(nu(s),1-this.decay)),t=Zo(eu(o,this.momentum),Qo(eu(s,this.learningRate),tu(Zo(e,this.epsilon))));i.assign(e),o.assign(t);const n=yu(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Po(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Po(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&Po(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Tu.className="RMSProp",yo(Tu);const Eu=ks({acos_:function(e){const t=xs(e,"x","acos");return ds.runKernel(Je,{x:t})}}),_u=ks({acosh_:function(e){const t=xs(e,"x","acosh");return ds.runKernel(Qe,{x:t})}}),Au=ks({addN_:function(e){ae(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),ae(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+e.length);const t=e.map((e,t)=>xs(e,"tensors"+t,"addN")),n=t[0];return t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!ce(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}),ds.runKernel(tt,t)}}),$u=ks({all_:function(e,t=null,n=!1){const r=xs(e,"x","all","bool");return ds.runKernel(nt,{x:r},{axis:t,keepDims:n})}}),Fu=ks({any_:function(e,t=null,n=!1){const r=xs(e,"x","any","bool");return ds.runKernel(rt,{x:r},{axis:t,keepDims:n})}}),Ru=ks({argMax_:function(e,t=0){const n=xs(e,"x","argMax");return ds.runKernel(at,{x:n},{axis:t})}}),Du=ks({argMin_:function(e,t=0){const n=xs(e,"x","argMin");return ds.runKernel(st,{x:n},{axis:t})}}),Mu=ks({asin_:function(e){const t=xs(e,"x","asin");return ds.runKernel(it,{x:t})}}),Ou=ks({asinh_:function(e){const t=xs(e,"x","asinh");return ds.runKernel(ot,{x:t})}}),Lu=ks({atan_:function(e){const t=xs(e,"x","atan");return ds.runKernel(ut,{x:t})}}),zu=ks({atan2_:function(e,t){let n=xs(e,"a","atan2"),r=xs(t,"b","atan2");return[n,r]=ns(n,r),ds.runKernel(ct,{a:n,b:r})}}),Pu=ks({atanh_:function(e){const t=xs(e,"x","atanh");return ds.runKernel(lt,{x:t})}});function Bu(e,t,n,r,a="NHWC",s){return Uu(e,[...t,e[3]],n,s,r,null,null,Ju(a))}function Wu(e,t,n,r,a,s,i="channelsLast"){const[o,u]=ju(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);l=[o,u,e[1],e[1]]}return Uu(e,l,n,r,a,s,!1,i)}function Vu(e,t,n,r,a,s,i="NDHWC"){const[o,u,l]=qu(t);let c,d;if("NDHWC"===i)d="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);d="channelsFirst",c=[o,u,l,e[1],e[1]]}return Gu(e,c,n,r,a,!1,d,s)}function Uu(e,t,n,r,a,s,i=!1,o="channelsLast"){let[u,l,c,d]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,d]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[u,d,l,c]=e}const[h,p,,f]=t,[m,g]=ju(n),[y,b]=ju(r),x=Ku(h,y),w=Ku(p,b),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,r,a,s,i,o,u){let l,c,d;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=Hu(e,t,n));const s=e[1];return[Xu((e[0]-t+2*r)/n+1,a),Xu((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);c=a[0],d=a[1]}else if("same"===e){c=Math.ceil(t/r),d=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+s-t),o=Math.max(0,(d-1)*a+i-n),u=Math.floor(e/2),h=e-u,p=Math.floor(o/2);l={top:u,bottom:h,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),d=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);{const h="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:h,bottom:p,left:f,right:m,type:0===h&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Xu((t-s+h+p)/r+1,o),d=Xu((n-i+f+m)/a+1,o)}}return{padInfo:l,outHeight:c,outWidth:d}}(a,l,c,m,g,x,w,s,o),N=i?f*d:f;let S;return"channelsFirst"===o?S=[u,N,k,I]:"channelsLast"===o&&(S=[u,k,I,N]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:d,outHeight:k,outWidth:I,outChannels:N,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:S,filterShape:t}}function Gu(e,t,n,r,a,s=!1,i="channelsLast",o){let[u,l,c,d,h]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,d,h]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[u,h,l,c,d]=e}const[p,f,m,,g]=t,[y,b,x]=qu(n),[w,v,k]=qu(r),I=Ku(p,w),N=Ku(f,v),S=Ku(m,k),{padInfo:C,outDepth:T,outHeight:E,outWidth:_}=function(e,t,n,r,a,s,i,o,u,l,c){let d,h,p,f;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=Hu(e,t,r));const i=e[1],o=e[2];return[Xu((e[0]-t+2*a)/r+1,s),Xu((i-t+2*a)/r+1,s),Xu((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,c);h=s[0],p=s[1],f=s[2]}else if("same"===e){h=Math.ceil(t/a),p=Math.ceil(n/s),f=Math.ceil(r/i);const e=(h-1)*a+o-t,c=(p-1)*s+u-n,m=(f-1)*i+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);d={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((t-o+1)/a),p=Math.ceil((n-u+1)/s),f=Math.ceil((r-l+1)/i)}return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}(a,l,c,d,y,b,x,I,N,S,o),A=s?g*h:g;let $;return"channelsFirst"===i?$=[u,A,T,E,_]:"channelsLast"===i&&($=[u,T,E,_,A]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:d,inChannels:h,outDepth:T,outHeight:E,outWidth:_,outChannels:A,padInfo:C,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:N,effectiveFilterWidth:S,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:$,filterShape:t}}function Hu(e,t,n,r=1){const a=Ku(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function ju(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function qu(e){return"number"==typeof e?[e,e,e]:e}function Ku(e,t){return t<=1?e:e+(e-1)*(t-1)}function Xu(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function Yu(e){const[t,n,r]=ju(e);return 1===t&&1===n&&1===r}function Zu(e,t){return Yu(e)||Yu(t)}function Ju(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}const Qu=ks({reshape_:function(e,t){const n=xs(e,"x","reshape","string_or_numeric");return ds.runKernel(sr,{x:n},{shape:t})}}),el=ks({avgPool_:function(e,t,n,r,a){const s=xs(e,"x","avgPool","float32");ae(Zu(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let i=s,o=!1;3===s.rank&&(o=!0,i=Qu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ae(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),null!=a&&ae(de(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);let u=ds.runKernel(dt,{x:i},{filterSize:t,strides:n,pad:r,dimRoundingMode:a});return u=bi(u,s.dtype),o?Qu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),tl=ks({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const i=xs(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=Qu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ae(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),ae("NDHWC"===s,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+s),null!=a&&ae(de(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);let l=ds.runKernel(pt,{x:o},{filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s});return l=bi(l,o.dtype),u?Qu(l,[l.shape[1],l.shape[2],l.shape[3],l.shape[4]]):l}}),nl=ks({concat_:function(e,t=0){ae(e.length>=1,()=>"Pass at least one tensor to concat");const n=ws(e,"tensors","concat","string_or_numeric");return"complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length?xi(n[0]):ds.runKernel(Nt,n,{axis:t})}}),rl=ks({sigmoid_:function(e){const t=xs(e,"x","sigmoid");return ds.runKernel(vr,{x:t})}}),al=ks({slice_:function(e,t,n){const r=xs(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");return ds.runKernel(yr,{x:r},{begin:t,size:n})}}),sl=ks({tanh_:function(e){const t=xs(e,"x","tanh");return ds.runKernel(Wr,{x:t})}}),il=ks({basicLSTMCell_:function(e,t,n,r,a,s){const i=xs(e,"forgetBias","basicLSTMCell"),o=xs(t,"lstmKernel","basicLSTMCell"),u=xs(n,"lstmBias","basicLSTMCell"),l=xs(r,"data","basicLSTMCell"),c=xs(a,"c","basicLSTMCell"),d=xs(s,"h","basicLSTMCell"),h=nl([l,d],1),p=zi(h,o),f=Zo(p,u),m=f.shape[1]/4,g=[f.shape[0],m],y=al(f,[0,0],g),b=al(f,[0,m],g),x=al(f,[0,2*m],g),w=al(f,[0,3*m],g),v=Zo(eu(rl(y),sl(b)),eu(c,rl(Zo(i,x))));return[v,eu(sl(v),rl(w))]}}),ol=ks({batchToSpaceND_:function(e,t,n){const r=xs(e,"x","batchToSpaceND"),a=t.reduce((e,t)=>e*t);return ae(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),ae(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),ae(r.shape[0]%a==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`),ds.runKernel(gt,{x:r},{blockShape:t,crops:n})}}),ul=ks({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const i=xs(e,"x","batchNorm"),o=xs(t,"mean","batchNorm"),u=xs(n,"variance","batchNorm");let l,c;null!=a&&(l=xs(a,"scale","batchNorm")),null!=r&&(c=xs(r,"offset","batchNorm")),ae(o.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),ae(null==c||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),ae(null==l||o.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d=function(e){let t;return t=0===e.rank||1===e.rank?Qu(e,[1,1,1,e.size]):2===e.rank?Qu(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Qu(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),h=ds.runKernel(an,{x:d,scale:l,offset:c,mean:o,variance:u},{varianceEpsilon:s});return Qu(h,i.shape)}}),ll=ks({batchNorm2d_:function(e,t,n,r,a,s){const i=xs(e,"x","batchNorm"),o=xs(t,"mean","batchNorm"),u=xs(n,"variance","batchNorm");let l,c;return null!=a&&(l=xs(a,"scale","batchNorm")),null!=r&&(c=xs(r,"offset","batchNorm")),ae(2===i.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+i.rank+"."),ae(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),ae(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=l&&ae(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=c&&ae(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),ul(i,o,u,c,l,s)}}),cl=ks({batchNorm3d_:function(e,t,n,r,a,s){const i=xs(e,"x","batchNorm"),o=xs(t,"mean","batchNorm"),u=xs(n,"variance","batchNorm");let l,c;return null!=a&&(l=xs(a,"scale","batchNorm")),null!=r&&(c=xs(r,"offset","batchNorm")),ae(3===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+"."),ae(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),ae(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=l&&ae(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=c&&ae(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),ul(i,o,u,c,l,s)}}),dl=ks({batchNorm4d_:function(e,t,n,r,a,s){const i=xs(e,"x","batchNorm"),o=xs(t,"mean","batchNorm"),u=xs(n,"variance","batchNorm");let l,c;return null!=a&&(l=xs(a,"scale","batchNorm")),null!=r&&(c=xs(r,"offset","batchNorm")),ae(4===i.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+"."),ae(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),ae(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=l&&ae(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=c&&ae(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),ul(i,o,u,c,l,s)}}),hl=ks({bincount_:function(e,t,n){const r=xs(e,"x","bincount"),a=xs(t,"weights","bincount");return ae("int32"===r.dtype,()=>"Error in bincount: input dtype must be int32, but got "+r.dtype),ae(n>=0,()=>`size must be non-negative, but got ${n}.`),ae(a.size===r.size||0===a.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: `+a.shape+"."),ds.runKernel(yt,{x:r,weights:a},{size:n})}}),pl=ks({broadcastTo_:function(e,t){let n=xs(e,"broadcastTo","x");const r=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Qu(n,e)}const a=n.shape,s=Array.from(t);for(let i=t.length-1;i>=0;i--)if(a[i]===t[i])s[i]=1;else if(1!==n.shape[i])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);return 0===s.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length?xi(n):ds.runKernel(Vr,{x:n},{reps:s})}}),fl=ks({ceil_:function(e){const t=xs(e,"x","ceil");return ds.runKernel(wt,{x:t})}}),ml=ks({clipByValue_:function(e,t,n){const r=xs(e,"x","clipByValue");return ae(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),ds.runKernel(vt,{x:r},{clipValueMin:t,clipValueMax:n})}}),gl=ks({concat1d_:function(e){return nl(e,0)}}),yl=ks({concat2d_:function(e,t){return nl(e,t)}}),bl=ks({concat3d_:function(e,t){return nl(e,t)}}),xl=ks({concat4d_:function(e,t){return nl(e,t)}}),wl=ks({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=xs(e,"x","conv2d"),u=xs(t,"filter","conv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=Qu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ae(4===l.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),ae(4===u.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."),null!=i&&ae(de(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const d="NHWC"===a?l.shape[3]:l.shape[1];ae(d===u.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`),ae(Zu(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);const h=ds.runKernel(St,{x:l,filter:u},{strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i});return c?Qu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),vl=ks({conv1d_:function(e,t,n,r,a="NWC",s=1,i){const o=xs(e,"x","conv1d"),u=xs(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=Qu(o,[1,o.shape[0],o.shape[1]])),ae(3===l.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),ae(3===u.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."),null!=i&&ae(de(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),ae(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),ae(Zu(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),ae("NWC"===a,()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);const d=Qu(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=Qu(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=wl(h,d,[1,n],r,"NHWC",[1,s],i);return Qu(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),kl=ks({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){ae(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=Qu(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),ae(4===o.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+o.length+"."),ae(4===u.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank),ae(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const c="NHWC"===s?o[3]:o[1],d="NHWC"===s?u.shape[3]:u.shape[1];ae(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),ae(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),null!=i&&ae(de(a),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const h=ds.runKernel(Tt,{dy:u,filter:n},{strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o});return l?Qu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Il=ks({conv2dTranspose_:function(e,t,n,r,a,s){const i=xs(e,"x","conv2dTranspose"),o=xs(t,"filter","conv2dTranspose");return kl(n,i,o,r,a,"NHWC",s)}}),Nl=ks({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const i=xs(e,"x","conv3d"),o=xs(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=Qu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ae(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),ae(5===o.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+o.rank+"."),ae(u.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`),ae(Zu(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),ae("NDHWC"===a,()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`);const c=ds.runKernel(Et,{x:u,filter:o},{strides:n,pad:r,dataFormat:a,dilations:s});return l?Qu(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),Sl=ks({conv3DBackpropInput_:function(e,t,n,r,a){ae(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Qu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=i.shape[4];ae(5===s.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+s.length+"."),ae(5===i.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank),ae(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),ae(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),ae(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const c=ds.runKernel(At,{dy:i,filter:n},{pad:a,strides:r,inputShape:s});return o?Qu(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),Cl=ks({conv3dTranspose_:function(e,t,n,r,a){const s=xs(e,"x","conv3dTranspose"),i=xs(t,"filter","conv3dTranspose");return Sl(n,s,i,r,a)}}),Tl=ks({cos_:function(e){const t=xs(e,"x","cos");return ds.runKernel($t,{x:t})}}),El=ks({cosh_:function(e){const t=xs(e,"x","cosh");return ds.runKernel(Ft,{x:t})}}),_l=ks({cumsum_:function(e,t=0,n=!1,r=!1){const a=xs(e,"x","cumsum");return ds.runKernel(Rt,{x:a},{axis:t,exclusive:n,reverse:r})}}),Al=ks({denseBincount_:function(e,t,n,r=!1){const a=xs(e,"x","denseBincount"),s=xs(t,"weights","denseBincount");return ae("int32"===a.dtype,()=>"Error in denseBincount: input dtype must be int32, but got "+a.dtype),ae(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),ae(n>=0,()=>`size must be non-negative, but got ${n}.`),ae(s.size===a.size||0===s.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: `+s.shape+"."),ds.runKernel(Mt,{x:a,weights:s},{size:n,binaryOutput:r})}}),$l=ks({depthToSpace_:function(e,t,n="NHWC"){const r=xs(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];return ae(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),ae(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`),ae(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`),ds.runKernel(Ot,{x:r},{blockSize:t,dataFormat:n})}}),Fl=ks({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=xs(e,"x","depthwiseConv2d"),u=xs(t,"filter","depthwiseConv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=Qu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ae(4===l.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),ae(4===u.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."),ae(l.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),null!=i&&ae(de(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const d=ds.runKernel(Lt,{x:l,filter:u},{strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i});return c?Qu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Rl=ks({diag_:function(e){const t=xs(e,"x","diag");return ds.runKernel(Bt,{x:t})}}),Dl=ks({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const i=xs(e,"x","dilation2d"),o=xs(t,"filter","dilation2d");ae(3===i.rank||4===i.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+i.rank+"."),ae(3===o.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+o.rank+"."),ae("NHWC"===s,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+s);let u=i,l=!1;3===i.rank&&(u=Qu(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const c=ds.runKernel(Wt,{x:u,filter:o},{strides:n,pad:r,dilations:a});return l?Qu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ml=ks({equal_:function(e,t){let n=xs(e,"a","equal","string_or_numeric"),r=xs(t,"b","equal","string_or_numeric");return[n,r]=ns(n,r),ku(n.shape,r.shape),ds.runKernel(Xt,{a:n,b:r})}}),Ol=ks({where_:function(e,t,n){const r=xs(t,"a","where"),a=xs(n,"b","where"),s=xs(e,"condition","where","bool"),i=ku(ku(s.shape,r.shape),a.shape),o=pl(s,i),u=pl(r,i),l=pl(a,i);return ds.runKernel(mr,{condition:o,t:u,e:l})}}),Ll=ks({divNoNan_:function(e,t){let n=xs(e,"a","div"),r=xs(t,"b","div");[n,r]=ns(n,r);const a=Qo(n,r),s=ru(a),i=Ml(r,s);return Ol(i,s,a)}}),zl=ks({dot_:function(e,t){const n=xs(e,"t1","dot"),r=xs(t,"t2","dot");ae(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(ae(a===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`),1===n.rank&&1===r.rank){const e=Qu(n,[1,-1]),t=Qu(r,[-1,1]),a=zi(e,t);return Qu(a,[])}if(1===n.rank&&2===r.rank){const e=Qu(n,[1,-1]),t=Qu(r,[r.shape[0],r.shape[1]]),a=zi(e,t);return Qu(a,[a.size])}if(2===n.rank&&1===r.rank){const e=Qu(r,[-1,1]),t=zi(n,e);return Qu(t,[t.size])}{const e=Qu(r,[r.shape[0],r.shape[1]]);return zi(n,e)}}}),Pl=ks({einsum_:function(e,...t){const n=t.map((e,t)=>xs(e,"tensors"+t,"einsum"));return ds.runKernel(Ht,n,{equation:e})}}),Bl=ks({elu_:function(e){const t=xs(e,"x","elu");return ds.runKernel(jt,{x:t})}}),Wl=ks({erf_:function(e){let t=xs(e,"x","erf");return ae("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=bi(t,"float32")),ds.runKernel(Kt,{x:t})}}),Vl=ks({exp_:function(e){const t=xs(e,"x","exp");return ds.runKernel(Yt,{x:t})}}),Ul=ks({expandDims_:function(e,t=0){const n=xs(e,"x","expandDims","string_or_numeric");return ae(t<=n.rank,()=>"Axis must be <= rank of the tensor"),ds.runKernel(Zt,{input:n},{dim:t})}}),Gl=ks({expm1_:function(e){const t=xs(e,"x","expm1");return ds.runKernel(Jt,{x:t})}}),Hl=ks({tile_:function(e,t){const n=xs(e,"x","tile","string_or_numeric");return ae(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`),ds.runKernel(Vr,{x:n},{reps:t})}}),jl=ks({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=yi([e,t],r),s=e<=t?e:t;for(let o=0;o<s;++o)a.set(1,o,o);const i=Qu(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Hl(Ul(i,0),[n[0],1,1]);if(2===n.length)return Hl(Ul(Ul(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Hl(Ul(Ul(Ul(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),ql=ks({floor_:function(e){const t=xs(e,"x","floor");return ds.runKernel(nn,{x:t})}}),Kl=ks({gather_:function(e,t,n=0,r=0){const a=xs(e,"x","gather"),s=xs(t,"indices","gather","int32");return ds.runKernel(sn,{x:a,indices:s},{axis:n,batchDims:r})}}),Xl=ks({greater_:function(e,t){let n=xs(e,"a","greater","string_or_numeric"),r=xs(t,"b","greater","string_or_numeric");return[n,r]=ns(n,r),ku(n.shape,r.shape),ds.runKernel(un,{a:n,b:r})}}),Yl=ks({greaterEqual_:function(e,t){let n=xs(e,"a","greaterEqual","string_or_numeric"),r=xs(t,"b","greaterEqual","string_or_numeric");return[n,r]=ns(n,r),ku(n.shape,r.shape),ds.runKernel(ln,{a:n,b:r})}}),Zl=ks({imag_:function(e){const t=xs(e,"input","imag");return ds.runKernel(hn,{input:t})}}),Jl=ks({isFinite_:function(e){const t=xs(e,"x","isFinite");return ds.runKernel(pn,{x:t})}}),Ql=ks({isInf_:function(e){const t=xs(e,"x","isInf");return ds.runKernel(fn,{x:t})}}),ec=ks({isNaN_:function(e){const t=xs(e,"x","isNaN");return ds.runKernel(mn,{x:t})}}),tc=ks({leakyRelu_:function(e,t=.2){const n=xs(e,"x","leakyRelu");return ds.runKernel(gn,{x:n},{alpha:t})}}),nc=ks({less_:function(e,t){let n=xs(e,"a","less","string_or_numeric"),r=xs(t,"b","less","string_or_numeric");return[n,r]=ns(n,r),ku(n.shape,r.shape),ds.runKernel(yn,{a:n,b:r})}}),rc=ks({lessEqual_:function(e,t){let n=xs(e,"a","lessEqual","string_or_numeric"),r=xs(t,"b","lessEqual","string_or_numeric");return[n,r]=ns(n,r),ku(n.shape,r.shape),ds.runKernel(bn,{a:n,b:r})}});function ac(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");return ds.runKernel(xn,{},{start:e,stop:t,num:n})}const sc=ks({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=xs(e,"x","localResponseNormalization");ae(4===s.rank||3===s.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`),ae(de(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;3===s.rank&&(o=!0,i=Qu(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u=ds.runKernel(Cn,{x:i},{depthRadius:t,bias:n,alpha:r,beta:a});return o?Qu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),ic=ks({log_:function(e){const t=xs(e,"x","log");return ds.runKernel(wn,{x:t})}}),oc=ks({log1p_:function(e){const t=xs(e,"x","log1p");return ds.runKernel(vn,{x:t})}}),uc=ks({neg_:function(e){const t=xs(e,"x","neg");return ds.runKernel(Vn,{x:t})}}),lc=ks({softplus_:function(e){const t=xs(e,"x","softplus");return ds.runKernel(kr,{x:t})}}),cc=ks({logSigmoid_:function(e){const t=xs(e,"x","logSigmoid");return lu(e=>({value:uc(lc(uc(e))),gradFunc:t=>eu(t,rl(uc(e)))}))(t)}}),dc=ks({max_:function(e,t=null,n=!1){const r=xs(e,"x","max");return ds.runKernel(En,{x:r},{reductionIndices:t,keepDims:n})}}),hc=ks({sum_:function(e,t=null,n=!1){let r=xs(e,"x","sum");return"bool"===r.dtype&&(r=bi(r,"int32")),ds.runKernel(Nr,{x:r},{axis:t,keepDims:n})}}),pc=ks({logSoftmax_:function(e,t=-1){const n=xs(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return lu((e,n)=>{const r=dc(e,t,!0),a=yu(e,r),s=yu(bi(a,"float32"),ic(hc(Vl(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[r]=n,a=Vl(r);return yu(e,eu(hc(e,t,!0),a))}}})(n)}});function fc(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function mc(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function gc(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map(t=>e[t])]}function yc(e,t){return mc(e,t.map(e=>1),t)}function bc(e,t,n){ae(fc(t,n),()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`)}function xc(e,t){if(fc(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function wc(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function vc(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const kc=ks({logSumExp_:function(e,t=null,n=!1){const r=xs(e,"x","logSumExp"),a=be(t,r.shape),s=dc(r,a,!0),i=yu(r,s),o=Vl(i),u=hc(o,a),l=ic(u),c=Zo(Qu(s,l.shape),l);if(n){const e=yc(c.shape,a);return Qu(c,e)}return c}}),Ic=ks({logicalAnd_:function(e,t){const n=xs(e,"a","logicalAnd","bool"),r=xs(t,"b","logicalAnd","bool");return ku(n.shape,r.shape),ds.runKernel(kn,{a:n,b:r})}}),Nc=ks({logicalNot_:function(e){const t=xs(e,"x","logicalNot","bool");return ds.runKernel(In,{x:t})}}),Sc=ks({logicalOr_:function(e,t){const n=xs(e,"a","logicalOr","bool"),r=xs(t,"b","logicalOr","bool");return ku(n.shape,r.shape),ds.runKernel(Nn,{a:n,b:r})}}),Cc=ks({logicalXor_:function(e,t){const n=xs(e,"a","logicalXor","bool"),r=xs(t,"b","logicalXor","bool");return ku(n.shape,r.shape),Ic(Sc(e,t),Nc(Ic(e,t)))}}),Tc=ks({maxPool_:function(e,t,n,r,a){const s=xs(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=Qu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ae(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),ae(Zu(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=a&&ae(de(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const u=ds.runKernel(An,{x:i},{filterSize:t,strides:n,pad:r,dimRoundingMode:a});return o?Qu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Ec=ks({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const i=xs(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=Qu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ae(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),ae("NDHWC"===s,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+s),null!=a&&ae(de(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const l=ds.runKernel(Fn,{x:o},{filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s});return u?Qu(l,[l.shape[1],l.shape[2],l.shape[3],l.shape[4]]):l}}),_c=ks({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s=xs(e,"x","maxPoolWithArgmax"),i=ds.runKernel(Dn,{x:s},{filterSize:t,strides:n,pad:r,includeBatchInIndex:a});return{result:i[0],indexes:i[1]}}}),Ac=ks({mean_:function(e,t=null,n=!1){const r=xs(e,"x","mean");return ds.runKernel(Mn,{x:r},{axis:t,keepDims:n})}});function $c(e,t="float32"){if("complex64"===t){const t=$c(e,"float32"),n=$c(e,"float32");return Is(t,n)}const n=ze(ue(e),t);return ds.makeTensor(n,e,t)}function Fc(e,t="float32"){if("complex64"===t){const t=Fc(e,"float32"),n=$c(e,"float32");return Is(t,n)}const n=Le(ue(e),t);return ds.makeTensor(n,e,t)}function Rc(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(n+" is not a valid third argument to meshgrid");if(void 0===e)return[];let r=xs(e,"x","meshgrid",e instanceof Ha?e.dtype:"float32");if(void 0===t)return[r];let a=xs(t,"y","meshgrid",t instanceof Ha?t.dtype:"float32");const s=ue(r.shape),i=ue(a.shape);return"xy"===n?(r=Qu(r,[1,-1]),a=Qu(a,[-1,1]),[zi(Fc([i,1],r.dtype),r),zi(a,Fc([1,s],a.dtype))]):(r=Qu(r,[-1,1]),a=Qu(a,[1,-1]),[zi(r,Fc([1,i],r.dtype)),zi(Fc([s,1],a.dtype),a)])}const Dc=ks({min_:function(e,t=null,n=!1){const r=xs(e,"x","min");return ds.runKernel(On,{x:r},{axis:t,keepDims:n})}}),Mc=ks({minimum_:function(e,t){let n=xs(e,"a","minimum"),r=xs(t,"b","minimum");return[n,r]=ns(n,r),"bool"===n.dtype&&(n=bi(n,"int32"),r=bi(r,"int32")),ku(n.shape,r.shape),ds.runKernel(Ln,{a:n,b:r})}}),Oc=ks({mirrorPad_:function(e,t,n){ae("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=xs(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");ae(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const a="reflect"===n?1:0;for(let s=0;s<r.rank;s++)ae(2===t[s].length,()=>"Invalid number of paddings. Must be length of 2 each."),ae(t[s][0]>=0&&t[s][0]<=r.shape[s]-a&&t[s][1]>=0&&t[s][1]<=r.shape[s]-a,()=>`Padding in dimension ${s} cannot be greater than or equal to ${r.shape[s]-a} or less than 0 for input of shape `+r.shape);return ds.runKernel(zn,{x:r},{paddings:t,mode:n})}}),Lc=ks({mod_:function(e,t){let n=xs(e,"a","mod"),r=xs(t,"b","mod");return[n,r]=ns(n,r),ds.runKernel(Pn,{a:n,b:r})}}),zc=ks({moments_:function(e,t=null,n=!1){const r=be(t,(e=xs(e,"x","moments")).shape),a=Ac(e,r,n);let s=a.shape;n||(s=yc(a.shape,r));const i=nu(yu(bi(e,"float32"),Qu(a,s)));return{mean:a,variance:Ac(i,r,n)}}}),Pc=ks({multiRNNCell_:function(e,t,n,r){const a=xs(t,"data","multiRNNCell"),s=ws(n,"c","multiRNNCell"),i=ws(r,"h","multiRNNCell");let o=a;const u=[];for(let d=0;d<e.length;d++){const t=e[d](o,s[d],i[d]);u.push(t[0]),u.push(t[1]),o=t[1]}const l=[],c=[];for(let d=0;d<u.length;d+=2)l.push(u[d]),c.push(u[d+1]);return[l,c]}}),Bc=ks({multinomial_:function(e,t,n,r=!1){const a=xs(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+s+".");if(i>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+i);n=n||Math.random();const o=1===i?Qu(a,[1,-1]):a,u=ds.runKernel(Bn,{logits:o},{numSamples:t,seed:n,normalized:r});return 1===i?Qu(u,[u.size]):u}}),Wc=ks({notEqual_:function(e,t){let n=xs(e,"a","notEqual","string_or_numeric"),r=xs(t,"b","notEqual","string_or_numeric");return[n,r]=ns(n,r),ku(n.shape,r.shape),ds.runKernel(Un,{a:n,b:r})}}),Vc=ks({onesLike_:function(e){const t=xs(e,"x","onesLike");return ds.runKernel(qn,{x:t})}}),Uc=ks({outerProduct_:function(e,t){const n=xs(e,"v1","outerProduct"),r=xs(t,"v2","outerProduct");ae(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const a=Qu(n,[-1,1]),s=Qu(r,[1,-1]);return zi(a,s)}}),Gc=ks({pad_:function(e,t,n=0){const r=xs(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return ds.runKernel(Yn,{x:r},{paddings:t,constantValue:n})}}),Hc=ks({pad1d_:function(e,t,n=0){return ae(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),Gc(e,[t],n)}}),jc=ks({pad2d_:function(e,t,n=0){return ae(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Gc(e,t,n)}}),qc=ks({pad3d_:function(e,t,n=0){return ae(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Gc(e,t,n)}}),Kc=ks({pad4d_:function(e,t,n=0){return ae(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Gc(e,t,n)}}),Xc=ks({spaceToBatchND_:function(e,t,n){const r=xs(e,"x","spaceToBatchND");return ae(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),ae(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),ae(r.shape.reduce((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`),ds.runKernel(Sr,{x:r},{blockShape:t,paddings:n})}}),Yc=ks({pool_:function(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const i=xs(e,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=Qu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),ae(Zu(s,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`);const l=Wu(o.shape,t,s,a,r),c=[l.dilationHeight,l.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),a=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],a[t]])}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const h=1===c[0]&&1===c[1],[p,f]=function(e,t,n){const r=n.map(e=>e[0]),a=n.map(e=>e[1]),s=e.concat(r,a),i=t.map((e,t)=>(e-s[t]%e)%e),o=a.map((e,t)=>e+i[t]);return[t.map((e,t)=>[r[t],o[t]]),t.map((e,t)=>[0,i[t]])]}([l.inHeight,l.inWidth],c,d),m=h?r:"valid",g=h?o:Xc(o,c,p),y=("avg"===n?()=>el(g,t,s,m):()=>Tc(g,t,s,m))(),b=h?y:ol(y,c,f);return u?Qu(b,[b.shape[1],b.shape[2],b.shape[3]]):b}}),Zc=ks({prelu_:function(e,t){const n=xs(e,"x","prelu"),r=xs(t,"alpha","prelu");return ds.runKernel(Qn,{x:n,alpha:r})}}),Jc=ks({prod_:function(e,t=null,n=!1){let r=xs(e,"x","prod");return"bool"===r.dtype&&(r=bi(r,"int32")),ds.runKernel(er,{x:r},{axis:t,keepDims:n})}}),Qc=ks({rand_:function(e,t,n){const r=ue(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);a=new Uint8Array(r)}for(let s=0;s<r;s++)a[s]=t();return ds.makeTensor(a,e,n)}});var ed=n("YSVl");class td{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=ed.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class nd{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=ed.alea(a.toString()),this.randn=new td(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s*=1/this.beta*this.d,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class rd{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ed.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const ad=ks({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const s=new nd(t,n,r,a),i=yi(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}}),sd=ks({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const s=new td(t,n,r,!1,a),i=yi(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}}),id=ks({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=yi(e,r),i=new rd(t,n,null,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}});function od(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");return ds.runKernel(tr,{},{start:e,stop:t,step:n,dtype:r})}const ud=ks({real_:function(e){const t=xs(e,"input","real");return ds.runKernel(nr,{input:t})}}),ld=ks({reciprocal_:function(e){const t=xs(e,"x","reciprocal");return ds.runKernel(rr,{x:t})}}),cd=ks({relu_:function(e){const t=xs(e,"x","relu");return ds.runKernel(ar,{x:t})}}),dd=ks({relu6_:function(e){const t=xs(e,"x","relu6");return ds.runKernel(cr,{x:t})}}),hd=ks({reverse_:function(e,t){const n=xs(e,"x","reverse");return ds.runKernel(dr,{x:n},{dims:t})}}),pd=ks({reverse1d_:function(e){const t=xs(e,"x","reverse");return ae(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),hd(t,0)}}),fd=ks({reverse2d_:function(e,t){const n=xs(e,"x","reverse");return ae(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),hd(n,t)}}),md=ks({reverse3d_:function(e,t){const n=xs(e,"x","reverse");return ae(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),hd(n,t)}}),gd=ks({reverse4d_:function(e,t){const n=xs(e,"x","reverse");return ae(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),hd(n,t)}}),yd=ks({round_:function(e){const t=xs(e,"x","round");return ds.runKernel(hr,{x:t})}}),bd=ks({rsqrt_:function(e){const t=xs(e,"x","rsqrt");return ds.runKernel(pr,{x:t})}}),xd=ks({selu_:function(e){const t=xs(e,"x","selu");return ds.runKernel(gr,{x:t})}}),wd=ks({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){const o=xs(e,"x","separableConv2d"),u=xs(t,"depthwiseFilter","separableConv2d"),l=xs(n,"pointwiseFilter","separableConv2d");let c=o,d=!1;if(3===o.rank&&(d=!0,c=Qu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");ae(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),ae(4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),ae(4===l.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),ae(1===l.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),ae(1===l.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const h=u.shape[2],p=u.shape[3];ae(l.shape[2]===h*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${l.shape[2]}.`);const f=Fl(c,u,r,a,i,s),m=wl(f,l,1,"valid",i);return d?Qu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),vd=async function(e,t){const n=xs(e,"x","setdiff1d"),r=xs(t,"y","setdiff1d");ae(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),ae(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),ae(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const a=await n.data(),s=await r.data(),i=new Set(s);let o=0;for(let c=0;c<a.length;c++)i.has(a[c])||o++;const u=new Wa([o],n.dtype),l=new Wa([o],"int32");for(let c=0,d=0;c<a.length;c++)i.has(a[c])||(u.values[d]=a[c],l.values[d]=c,d++);return[u.toTensor(),l.toTensor()]},kd=ks({sign_:function(e){const t=xs(e,"x","sign");return ds.runKernel(wr,{x:t})}}),Id=ks({sin_:function(e){const t=xs(e,"x","sin");return ds.runKernel(br,{x:t})}}),Nd=ks({sinh_:function(e){const t=xs(e,"x","sinh");return ds.runKernel(xr,{x:t})}}),Sd=ks({slice1d_:function(e,t,n){const r=xs(e,"x","slice1d");return ae(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),al(r,[t],[n])}}),Cd=ks({slice2d_:function(e,t,n){const r=xs(e,"x","slice2d");return ae(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),al(r,t,n)}}),Td=ks({slice3d_:function(e,t,n){const r=xs(e,"x","slice3d");return ae(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),al(r,t,n)}}),Ed=ks({slice4d_:function(e,t,n){const r=xs(e,"x","slice4d");return ae(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),al(r,t,n)}}),_d=ks({softmax_:function(e,t=-1){const n=xs(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);return ds.runKernel(Tr,{logits:n},{dim:t})}}),Ad=ks({fft_:function(e){return ae("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`),ds.runKernel(Qt,{input:e})}}),$d=ks({ifft_:function(e){return ae("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`),ds.runKernel(dn,{input:e})}}),Fd=ks({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Qu(e,[n,t]);r=$d(a)}else{const a=[n,2*(t-1)],s=Qu(ud(e),[n,t]),i=Qu(Zl(e),[n,t]),o=hd(al(s,[0,1],[n,t-2]),1),u=eu(hd(al(i,[0,1],[n,t-2]),1),du(-1)),l=nl([s,o],1),c=nl([i,u],1),d=Qu(Is(l,c),[a[0],a[1]]);r=$d(d)}if(r=ud(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Qu(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Rd=ks({split_:function(e,t,n=0){const r=xs(e,"x","split");return ds.runKernel(Cr,{x:r},{numOrSizeSplits:t,axis:n})}}),Dd=ks({rfft_:function(e,t){ae("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got "+e.dtype);let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map(e=>0),s=e.shape.map(e=>e);s[e.shape.length-1]=t,a=al(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,a=nl([e,$c(r)],e.shape.length-1),n=t}else a=e;const s=ru(a),i=Qu(Is(a,s),[r,n]),o=Ad(i),u=Math.floor(n/2)+1,l=ud(o),c=Zl(o),d=Rd(l,[u,n-u],l.shape.length-1),h=Rd(c,[u,n-u],c.shape.length-1),p=a.shape.slice();return p[a.shape.length-1]=u,Qu(Is(d[0],h[0]),p)}}),Md=ks({squaredDifference_:function(e,t){let n=xs(e,"a","squaredDifference"),r=xs(t,"b","squaredDifference");return[n,r]=ns(n,r),ku(n.shape,r.shape),ds.runKernel(Rr,{a:n,b:r},{})}}),Od=ks({squeeze_:function(e,t){const n=xs(e,"x","squeeze");return Qu(n,xe(n.shape,t).newShape)}}),Ld=ks({stack_:function(e,t=0){const n=ws(e,"tensors","stack","string_or_numeric");return ae(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&ae(t<=n[0].rank,()=>"Axis must be <= rank of the tensor"),ds.runKernel(Xn,n,{axis:t})}}),zd=ks({step_:function(e,t=0){const n=xs(e,"x","step");return ds.runKernel(Yr,{x:n},{alpha:t})}}),Pd=ks({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,u=0){const l=xs(e,"x","stridedSlice","string_or_numeric");return ds.runKernel(Mr,{x:l},{begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u})}}),Bd=ks({tan_:function(e){const t=xs(e,"x","tan");return ds.runKernel(Br,{x:t})}});function Wd(e,t){ie(e);const n=gs(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ns(e,null,n,t)}function Vd(e,t,n){if(ie(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=gs(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ns(e,t,r,n)}function Ud(e,t,n){if(ie(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=gs(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ns(e,t,r,n)}function Gd(e,t,n){if(ie(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=gs(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ns(e,t,r,n)}function Hd(e,t,n){if(ie(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=gs(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ns(e,t=t||r,r,n)}const jd=ks({topk_:function(e,t=1,n=!0){const r=xs(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got `+t);const s={x:r},i={k:t,sorted:n},[o,u]=ds.runKernel(Ur,s,i);return{values:o,indices:u}}}),qd=ks({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new td(t,n,r,!0,a),i=yi(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}}),Kd=ks({unique_:function(e,t=0){const n=xs(e,"x","unique","string_or_numeric");ae(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},a={axis:t},[s,i]=ds.runKernel(jr,r,a);return{values:s,indices:i}}}),Xd=ks({unsortedSegmentSum_:function(e,t,n){const r=xs(e,"x","unsortedSegmentSum"),a=xs(t,"segmentIds","unsortedSegmentSum","int32");return ae(de(n),()=>"numSegments must be of dtype int"),ds.runKernel(Kr,{x:r,segmentIds:a},{numSegments:n})}}),Yd=ks({unstack_:function(e,t=0){const n=xs(e,"x","unstack","string_or_numeric");return ae(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`),ds.runKernel(qr,{value:n},{axis:t})}});function Zd(e,t=!0,n,r){return ds.makeVariable(e,t,n,r)}function Jd(e,t){const n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);const r=yi(e,"int32"),a=yi([n.length,e.length],"int32");for(let s=0;s<n.length;s++){const t=r.indexToLoc(n[s]);a.values.set(t,s*e.length)}return a.toTensor()}const Qd=async function(e){const t=xs(e,"condition","whereAsync","bool"),n=await t.data(),r=Jd(t.shape,n);return e!==t&&t.dispose(),r},eh=async function(e,t,n){const r=xs(e,"tensor","boolMask"),a=xs(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;ae(i>0,()=>"mask cannot be scalar"),se(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=s;m<s+i;m++)u*=o[m];const l=o.slice(0,s).concat([u],o.slice(s+i)),c=Qu(r,l),d=Qu(a,[-1]),h=await Qd(d),p=Od(h,[1]),f=Kl(c,p,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),p.dispose(),c.dispose(),d.dispose(),h.dispose(),f};function th(e,t,n=null){if(0===e.rank)return xu(e);if(1!==e.rank&&null===n)return th(Qu(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return hc(xu(e),n);if(t===1/0)return dc(xu(e),n);if(t===-1/0)return Dc(xu(e),n);if("euclidean"===t||2===t)return tu(hc(gu(xu(e),du(2,"int32")),n));throw new Error("Error in norm: invalid ord value: "+t)}if(Array.isArray(n)&&2===n.length){if(1===t)return dc(hc(xu(e),n[0]),n[1]-1);if(t===1/0)return dc(hc(xu(e),n[1]),n[0]);if(t===-1/0)return Dc(hc(xu(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return tu(hc(nu(e),n));throw new Error("Error in norm: invalid ord value: "+t)}throw new Error("Error in norm: invalid axis: "+n)}const nh=ks({norm_:function(e,t="euclidean",n=null,r=!1){const a=th(e=xs(e,"x","norm"),t,n);let s=a.shape;if(r){const t=be(n,e.shape);s=yc(a.shape,t)}return Qu(a,s)}}),rh=ks({movingAverage_:function(e,t,n,r,a=!0){const s=xs(e,"v","movingAverage"),i=xs(t,"x","movingAverage"),o=xs(n,"decay","movingAverage");rs(s,i),ae(ce(s.shape,i.shape),()=>"Shape mismatch in v and x");const u=du(1),l=yu(u,o);let c=eu(yu(i,s),l);if(a){ae(null!=r,()=>"When using zeroDebias: true, step is required.");const e=xs(r,"step","movingAverage");c=Qo(c,yu(u,gu(o,e)))}return Zo(s,c)}}),ah=ks({scatterND_:function(e,t,n){const r=xs(e,"indices","scatterND","int32"),a=xs(t,"updates","scatterND");return Yi(a,r,n),ds.runKernel(fr,{indices:r,updates:a},{shape:n})}}),sh=ks({sparseToDense_:function(e,t,n,r=0){const a=xs(e,"sparseIndices","sparseToDense","int32"),s=xs(t,"sparseValues","sparseToDense"),i=xs(r,"defaultValue","sparseToDense",s.dtype);return function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);if(0!==t.rank&&(1!==t.rank||t.size!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i),ds.runKernel(Fr,{sparseIndices:a,sparseValues:s,defaultValue:i},{outputShape:n})}}),ih=ks({gatherND_:function(e,t){const n=xs(t,"indices","gatherND","int32"),r=xs(e,"x","gatherND","string_or_numeric");return ds.runKernel(on,{params:r,indices:n})}}),oh=ks({dropout_:function(e,t,n,r){const a=xs(e,"x","dropout");if(ae("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),ae(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof Ha?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(ce(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)n.push(null==t[r]&&null!=e.shape[r]?e.shape[r]:t[r]);return n}return t}(a,n),i=1-t,o=Qo(ql(Zo(id(s,0,1,"float32",r),i)),i);return eu(a,o)}});function uh(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function lh(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Wd(a,"float32")}const ch=async function(e,t,n=1){const r=xs(e,"predictions","inTopK"),a=xs(t,"targets","inTopK");ae(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),ae(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),se(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];ae(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);const i=await r.data(),o=await a.data(),[u,l]=[i.length/s,s],c=we("bool",u);for(let d=0;d<u;d++){const e=d*l,t=i.subarray(e,e+l),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort((e,t)=>t.value-e.value),c[d]=0;for(let a=0;a<n;a++)if(r[a].index===o[d]){c[d]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Ss(c,a.shape,"bool")},dh=ks({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=Qu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Qu(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ae(4===o.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+o.shape+"."),ae(4===u.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."),ae(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const l="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];return ae(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),ae(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),null!=i&&ae(de(a),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`),ds.runKernel(Ct,{x:o,dy:u},{strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n})}});function hh(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return eu(e,zd(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function ph(e,t){let n=t;const r=vu(e.shape,t.shape);return r.length>0&&(n=hc(n,r)),Qu(n,e.shape)}function fh(e,t,n,r){if("linear"===t)return e;if("relu"===t)return cd(e);if("elu"===t)return Bl(e);if("relu6"===t)return dd(e);if("prelu"===t)return Zc(e,n);if("leakyrelu"===t)return tc(e,r);if("sigmoid"===t)return rl(e);throw new Error(`Unknown fused activation ${t}.`)}const mh=(e,t)=>!(e>0)||"linear"===t,gh=ks({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===mh(ds.state.gradientDepth,u=u||"linear")){let d=wl(e,t,n,r,a,s,i);return null!=o&&(d=Zo(d,o)),fh(d,u,l,c)}const d=xs(e,"x","conv2d"),h=xs(t,"filter","conv2d");let p=d,f=!1;3===d.rank&&(f=!0,p=Qu(d,[1,d.shape[0],d.shape[1],d.shape[2]])),ae(4===p.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+p.rank+"."),ae(4===h.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+h.rank+"."),null!=i&&ae(de(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),ae(p.shape[3]===h.shape[2],()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${h.shape[2]}.`),ae(Zu(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),ae("NHWC"===a,()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`);const m=Uu(p.shape,h.shape,n,s,r,i);let g,y;null!=o&&(g=xs(o,"bias","fused conv2d"),[g]=ns(g,d),ku(m.outShape,g.shape)),null!=l&&(y=xs(l,"prelu weights","fused conv2d"));const b=(e,t)=>{const[a,i,o,l]=t,c=hh(e,o,u);ae(Yu(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const d=[kl(i.shape,c,a,n,r),dh(i,c,a.shape,n,r)];if(null!=l){const e=ph(l,c);d.push(e)}return d},x={x:p,filter:h,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};return null==o?lu((e,t,n)=>{let r=ds.runKernel(ea,x,w);return n([t,e,r]),f&&(r=Qu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}})(p,h):lu((e,t,n,r)=>{let a=ds.runKernel(ea,x,w);return r([t,e,a,n]),f&&(a=Qu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}})(p,h,g)}}),yh=ks({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=Qu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;return 3===u.rank&&(u=Qu(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ds.runKernel(zt,{x:o,dy:u},{strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n})}}),bh=ks({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=Qu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l=ds.runKernel(Pt,{dy:o,filter:n},{strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e});return u?Qu(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),xh=ks({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===mh(ds.state.gradientDepth,u)){let d=Fl(e,t,n,r,a,s,i);return null!=o&&(d=Zo(d,o)),fh(d,u,l,c)}const d=xs(e,"x","depthwiseConv2d"),h=xs(t,"filter","depthwiseConv2d");let p=d,f=!1;3===d.rank&&(f=!0,p=Qu(d,[1,d.shape[0],d.shape[1],d.shape[2]])),ae(4===p.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),ae(4===h.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),ae(p.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),null==s&&(s=[1,1]),ae(Zu(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),null!=i&&ae(de(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const m=Uu(p.shape,h.shape,n,s,r,i,!0);let g,y;null!=o&&(g=xs(o,"bias","fused conv2d"),[g]=ns(g,d),ku(m.outShape,g.shape)),null!=l&&(y=xs(l,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{ae(Yu(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);const[a,o,l,c]=t,d=hh(e,l,u),h=bh(o.shape,d,a,n,r,s,i),p=yh(o,d,a.shape,n,r,s,i);return null!=c?[h,p,ph(g,d)]:[h,p]},x={x:p,filter:h,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};return null==o?lu((e,t,n)=>{let r=ds.runKernel(ta,x,w);return n([t,e,r]),f&&(r=Qu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}})(p,h):lu((e,t,n,r)=>{let a=ds.runKernel(ta,x,w);return r([t,e,a,n]),f&&(a=Qu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}})(p,h,g)}}),wh=ks({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===mh(ds.state.gradientDepth,s)){let u=zi(e,t,n,r);return null!=a&&(u=Zo(u,a)),fh(u,s,i,o)}let u=xs(e,"a","fused matMul"),l=xs(t,"b","fused matMul");[u,l]=ns(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?l.shape[l.rank-1]:l.shape[l.rank-2],h=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=ue(f),y=ue(m);ae(u.rank>=2&&l.rank>=2&&u.rank===l.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${l.rank}.`),ae(ce(f,m),()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${u.shape} and `+l.shape+" must match."),ae(c===d,()=>`Error in fused matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const b=u.shape.slice(0,-2).concat([h,p]),x=Qu(u,n?[g,c,h]:[g,h,c]),w=Qu(l,r?[y,p,d]:[y,d,p]);let v,k;null!=a&&(v=xs(a,"bias","fused matMul"),[v]=ns(v,u),ku(b,v.shape)),null!=i&&(k=xs(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,u,l]=t,c=hh(Qu(e,u.shape),u,s);let d,h;return n||r?!n&&r?(d=zi(c,o,!1,!1),h=zi(c,i,!0,!1)):n&&!r?(d=zi(o,c,!1,!0),h=zi(i,c,!1,!1)):(d=zi(o,c,!0,!0),h=zi(c,i,!0,!0)):(d=zi(c,o,!1,!0),h=zi(i,c,!0,!1)),null!=a?[d,h,ph(l,c)]:[d,h]},N={a:x,b:w,bias:v,preluActivationWeights:k},S={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return null==a?lu((e,t,n)=>{const r=ds.runKernel(Qr,N,S);return n([e,t,r]),{value:Qu(r,b),gradFunc:I}})(x,w):lu((e,t,n,r)=>{const a=ds.runKernel(Qr,N,S);return r([e,t,a,n]),{value:Qu(a,b),gradFunc:I}})(x,w,v)}}),vh=ks({hammingWindow_:function(e){return lh(e,.54,.46)}}),kh=ks({hannWindow_:function(e){return lh(e,.5,.5)}}),Ih=ks({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(al(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=nl([al(e,s,t-r),fu([r],a)]);i.push(o),s+=n}return 0===i.length?Vd([],[0,t]):Qu(nl(i),[i.length,t])}}),Nh=ks({stft_:function(e,t,n,r,a=kh){null==r&&(r=uh(t));const s=Ih(e,t,n),i=eu(s,a(t));return Dd(i,r)}}),Sh=ks({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=xs(e,"image","cropAndResize"),o=xs(t,"boxes","cropAndResize","float32"),u=xs(n,"boxInd","cropAndResize","int32"),l=o.shape[0];return ae(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),ae(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`),ae(1===u.rank&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`),ae(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),ae(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),ae("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was "+a),ds.runKernel(Dt,{image:i,boxes:o,boxInd:u},{method:a,extrapolationValue:s,cropSize:r})}}),Ch=ks({flipLeftRight_:function(e){const t=xs(e,"image","flipLeftRight","float32");return ae(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),ds.runKernel(tn,{image:t},{})}}),Th=ks({rotateWithOffset_:function(e,t,n=0,r=.5){const a=xs(e,"image","rotateWithOffset","float32");return ae(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`),ds.runKernel(Jr,{image:a},{radians:t,fillValue:n,center:r})}});function Eh(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),ae(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),ae(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),ae(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),ae(1===t.rank,()=>"scores must be a 1D tensor"),ae(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was `+t.shape[0]),ae(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const _h=ks({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=xs(e,"boxes","nonMaxSuppression"),i=xs(t,"scores","nonMaxSuppression"),o=Eh(s,i,n,r,a);return ds.runKernel(Gn,{boxes:s,scores:i},{maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold})}});function Ah(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||$h)}(e,t,n);e.splice(r<0?-(r+1):r,0,t)}function $h(e,t){return e>t?1:e<t?-1:0}function Fh(e,t,n,r,a){return Mh(e,t,n,r,a,0)}function Rh(e,t,n,r,a,s){return Mh(e,t,n,r,a,0,!1,s,!0)}function Dh(e,t,n,r,a,s){return Mh(e,t,n,r,a,s,!0)}function Mh(e,t,n,r,a,s,i=!1,o=!1,u=!1){const l=[];for(let g=0;g<t.length;g++)t[g]>a&&l.push({score:t[g],boxIndex:g,suppressBeginIndex:0});l.sort(zh);const c=s>0?-.5/s:0,d=[],h=[];for(;d.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let u=d.length-1;u>=i;--u){const n=Oh(e,s,d[u]);if(n>=r){o=!0;break}if(t.score=t.score*Lh(r,c,n),t.score<=a)break}t.suppressBeginIndex=d.length,o||(t.score===n?(d.push(s),h.push(t.score)):t.score>a&&Ah(l,t,zh))}const p=d.length,f=n-p;o&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return i&&(m.selectedScores=h),u&&(m.validOutputs=p),m}function Oh(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(d-l)*(h-c);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(i,c),y=Math.min(o,d),b=Math.min(u,h),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function Lh(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function zh(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Ph=ks({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=xs(e,"boxes","nonMaxSuppression"),o=xs(t,"scores","nonMaxSuppression"),u=Eh(i,o,n,r,a,s),l=ds.runKernel(jn,{boxes:i,scores:o},{maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma});return{selectedIndices:l[0],selectedScores:l[1]}}}),Bh=ks({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=xs(e,"boxes","nonMaxSuppression"),o=xs(t,"scores","nonMaxSuppression"),u=Eh(i,o,n,r,a,null),l=ds.runKernel(Hn,{boxes:i,scores:o},{maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s});return{selectedIndices:l[0],validOutputs:l[1]}}}),Wh=ks({resizeBilinear_:function(e,t,n=!1,r=!1){const a=xs(e,"images","resizeBilinear");ae(3===a.rank||4===a.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),ae(2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+"."),ae(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;3===a.rank&&(i=!0,s=Qu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o=ds.runKernel(ur,{images:s},{alignCorners:n,halfPixelCenters:r,size:t});return i?Qu(o,[o.shape[1],o.shape[2],o.shape[3]]):o}}),Vh=ks({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=xs(e,"images","resizeNearestNeighbor");ae(3===a.rank||4===a.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),ae(2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."),ae("float32"===a.dtype||"int32"===a.dtype,()=>"`images` must have `int32` or `float32` as dtype"),ae(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;3===a.rank&&(i=!0,s=Qu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o=ds.runKernel(ir,{images:s},{alignCorners:n,halfPixelCenters:r,size:t});return i?Qu(o,[o.shape[1],o.shape[2],o.shape[3]]):o}}),Uh=ks({threshold_:function(e,t="binary",n=!1,r=.5){const a=xs(e,"image","threshold"),s=a.shape[0]*a.shape[1];let i,o,u,l,c=eu(Wd([r]),255);if(ae(3===a.rank,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),ae(3===a.shape[2]||1===a.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),ae("int32"===a.dtype||"float32"===a.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),ae("otsu"===t||"binary"===t,()=>"Method must be binary or otsu, but was "+t),3===a.shape[2]){[i,o,u]=Rd(a,[1,1,1],-1);const e=eu(i,.2989),t=eu(o,.587),n=eu(u,.114);l=Zo(Zo(e,t),n)}else l=e;"otsu"===t&&(c=function(e,t){let n,r,a,s,i,o,u=Wd([-1]),l=Wd([0]),c=Wd([0]);for(let d=0;d<e.size-1;d++){n=al(e,0,d+1),r=al(e,d+1),i=Qo(hc(n),t),o=Qo(hc(r),t);const h=hc(eu(n,od(0,n.size)));a=Qo(h,hc(n));const p=fu(r.shape,n.size),f=Zo(od(0,r.size),p),m=eu(r,f);s=Qo(hc(m),hc(r));const g=yu(a,s),y=yu(a,s),b=eu(i,o);c=eu(eu(b,g),y);const x=Xl(c,l);l=Ol(x,c,l),u=Ol(x,Wd([d]),u)}return u}(hl(bi(yd(l),"int32"),Ss([]),256),s));const d=n?rc(l,c):Xl(l,c);return bi(eu(d,255),"int32")}}),Gh=ks({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=xs(e,"image","transform","float32"),o=xs(t,"transforms","transform","float32");return ae(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),ae(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),ae(null==s||2===s.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`),ds.runKernel(Gr,{image:i,transforms:o},{interpolation:n,fillMode:r,fillValue:a,outputShape:s})}}),Hh=ks({bandPart_:function(e,t,n){ae(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),ae(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=xs(e,"a","bandPart");ae(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=Qu(od(0,s,1,"int32"),[-1,1]),u=od(0,i,1,"int32"),l=yu(o,u),c=Ic(rc(l,du(+t,"int32")),Yl(l,du(-n,"int32"))),d=$c([s,i],r.dtype);return Qu(Ld(Yd(Qu(r,[-1,s,i])).map(e=>Ol(c,e,d))),a)}}),jh=ks({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,ae(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)ae(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=Rd(e,e.shape[0],0).map(e=>Od(e,[0]));ae(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let a=0;a<e.length;++a)n.push(ds.tidy(()=>{let e=r[a];if(a>0)for(let t=0;t<a;++t){const r=eu(hc(eu(n[t],e)),n[t]);e=yu(e,r)}return Qo(e,nh(e,"euclidean"))}));return t?Ld(n,0):n}});function qh(e,t=!1){return ds.tidy(()=>{ae(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let a=jl(n),s=xi(e);const i=Vd([[1]],[1,1]);let o=xi(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,l=a;[o,s,a]=ds.tidy(()=>{const t=al(s,[e,e],[n-e,1]),u=nh(t),l=al(s,[e,e],[1,1]),c=Ol(Xl(l,0),Vd([[-1]]),Vd([[1]])),d=yu(l,eu(c,u)),h=Qo(t,d);o=1===h.shape[0]?xi(i):nl([i,al(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=uc(Qo(zi(c,d),u)),f=al(s,[e,0],[n-e,r]),m=eu(p,o),g=Bi(o);if(0===e)s=yu(f,zi(m,zi(g,f)));else{const t=yu(f,zi(m,zi(g,f)));s=nl([al(s,[0,0],[e,r]),t],0)}const y=Bi(m),b=al(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=yu(b,zi(zi(b,o),y));else{const t=yu(b,zi(zi(b,o),y));a=nl([al(a,[0,0],[n,e]),t],1)}return[o,s,a]}),Po([t,u,l])}return!t&&n>r&&(a=al(a,[0,0],[n,r]),s=al(s,[0,0],[r,r])),[a,s]})}const Kh=ks({qr_:function(e,t=!1){if(ae(e.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank),2===e.rank)return qh(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=Yd(Qu(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach(e=>{const[n,r]=qh(e,t);a.push(n),s.push(r)}),[Qu(Ld(a,0),e.shape),Qu(Ld(s,0),e.shape)]}}});var Xh;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Xh||(Xh={}));const Yh=ks({computeWeightedLoss_:function(e,t,n=Xh.SUM_BY_NONZERO_WEIGHTS){const r=xs(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=xs(t,"weights","computeWeightedLoss"));const s=null==a?r:eu(r,a);if(n===Xh.NONE)return s;if(n===Xh.SUM)return hc(s);if(n===Xh.MEAN){if(null==a)return Ac(s);{const e=r.size/a.size,t=Qo(hc(s),hc(a));return e>1?Qo(t,du(e)):t}}if(n===Xh.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Qo(hc(s),du(r.size));{const e=eu(a,Fc(r.shape)),t=bi(hc(Wc(e,du(0))),"float32");return Qo(hc(s),t)}}throw Error("Unknown reduction: "+n)}}),Zh=ks({absoluteDifference_:function(e,t,n,r=Xh.SUM_BY_NONZERO_WEIGHTS){const a=xs(e,"labels","absoluteDifference"),s=xs(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=xs(n,"weights","absoluteDifference")),se(a.shape,s.shape,"Error in absoluteDifference: ");const o=xu(yu(a,s));return Yh(o,i,r)}}),Jh=ks({cosineDistance_:function(e,t,n,r,a=Xh.SUM_BY_NONZERO_WEIGHTS){const s=xs(e,"labels","cosineDistance"),i=xs(t,"predictions","cosineDistance");let o=null;null!=r&&(o=xs(r,"weights","cosineDistance")),se(s.shape,i.shape,"Error in cosineDistance: ");const u=du(1),l=yu(u,hc(eu(s,i),n,!0));return Yh(l,o,a)}}),Qh=ks({hingeLoss_:function(e,t,n,r=Xh.SUM_BY_NONZERO_WEIGHTS){let a=xs(e,"labels","hingeLoss");const s=xs(t,"predictions","hingeLoss");let i=null;null!=n&&(i=xs(n,"weights","hingeLoss")),se(a.shape,s.shape,"Error in hingeLoss: ");const o=du(1);a=yu(eu(du(2),a),o);const u=cd(yu(o,eu(a,s)));return Yh(u,i,r)}}),ep=ks({huberLoss_:function(e,t,n,r=1,a=Xh.SUM_BY_NONZERO_WEIGHTS){const s=xs(e,"labels","huberLoss"),i=xs(t,"predictions","huberLoss");let o=null;null!=n&&(o=xs(n,"weights","huberLoss")),se(s.shape,i.shape,"Error in huberLoss: ");const u=du(r),l=xu(yu(i,s)),c=Mc(l,u),d=yu(l,c),h=Zo(eu(du(.5),nu(c)),eu(u,d));return Yh(h,o,a)}}),tp=ks({logLoss_:function(e,t,n,r=1e-7,a=Xh.SUM_BY_NONZERO_WEIGHTS){const s=xs(e,"labels","logLoss"),i=xs(t,"predictions","logLoss");let o=null;null!=n&&(o=xs(n,"weights","logLoss")),se(s.shape,i.shape,"Error in logLoss: ");const u=du(1),l=du(r),c=uc(eu(s,ic(Zo(i,l)))),d=eu(yu(u,s),ic(Zo(yu(u,i),l))),h=yu(c,d);return Yh(h,o,a)}}),np=ks({meanSquaredError_:function(e,t,n,r=Xh.SUM_BY_NONZERO_WEIGHTS){const a=xs(e,"labels","meanSquaredError"),s=xs(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=xs(n,"weights","meanSquaredError")),se(a.shape,s.shape,"Error in meanSquaredError: ");const o=Md(a,s);return Yh(o,i,r)}}),rp=ks({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Xh.SUM_BY_NONZERO_WEIGHTS){let s=xs(e,"multiClassLabels","sigmoidCrossEntropy");const i=xs(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=xs(n,"weights","sigmoidCrossEntropy")),se(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=du(r),t=du(1),n=du(.5);s=Zo(eu(s,yu(t,e)),eu(n,e))}const u=function(e,t){const n=xs(e,"labels","sigmoidCrossEntropyWithLogits"),r=xs(t,"logits","sigmoidCrossEntropyWithLogits");se(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=cd(r),s=eu(r,n),i=oc(Vl(uc(xu(r))));return Zo(yu(a,s),i)}(s,i);return Yh(u,o,a)}}),ap=ks({softmaxCrossEntropy_:function(e,t,n,r=0,a=Xh.SUM_BY_NONZERO_WEIGHTS){let s=xs(e,"onehotLabels","softmaxCrossEntropy");const i=xs(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=xs(n,"weights","softmaxCrossEntropy")),se(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=du(r),t=du(1),n=du(s.shape[1]);s=Zo(eu(s,yu(t,e)),Qo(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was `+n);return lu((e,t,r)=>{const a=kc(t,[n],!0),s=yu(bi(t,"float32"),a);r([e,s]);const i=uc(eu(s,e));return{value:hc(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=yc(e.shape,[n]);return[eu(Qu(e,s),yu(bi(r,"float32"),Vl(a))),eu(Qu(e,s),yu(Vl(a),bi(r,"float32")))]}}})(e,t)}(s,i);return Yh(u,o,a)}}),sp=ks({sparseFillEmptyRows_:function(e,t,n,r){const a=xs(e,"indices","sparseFillEmptyRows"),s=xs(t,"values","sparseFillEmptyRows"),i=xs(n,"denseShape","sparseFillEmptyRows"),o=xs(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error("Indices should be Tensor2D but received shape\n        "+a.shape);if(1!==s.rank)throw new Error("Values should be Tensor1D but received shape "+s.shape);if(1!==i.rank)throw new Error("Dense shape should be Tensor1D but received shape "+i.shape);if(0!==o.rank)throw new Error("Default value should be a scalar but received shape "+o.shape);const u=ds.runKernel(Er,{indices:a,values:s,denseShape:i,defaultValue:o});return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),ip=ks({sparseReshape_:function(e,t,n){const r=xs(e,"inputIndices","sparseReshape"),a=xs(t,"inputShape","sparseReshape"),s=xs(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error("Input indices should be Tensor2D but received shape\n        "+r.shape);if(1!==a.rank)throw new Error("Input shape should be Tensor1D but received shape "+a.shape);if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape "+s.shape);const i=ds.runKernel(_r,{inputIndices:r,inputShape:a,newShape:s});return{outputIndices:i[0],outputShape:i[1]}}}),op=ks({sparseSegmentMean_:function(e,t,n){const r=xs(e,"data","sparseSegmentMean"),a=xs(t,"indices","sparseSegmentMean"),s=xs(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error("Indices should be Tensor1D but received shape\n          "+a.shape);if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          "+s.shape);return ds.runKernel(Ar,{data:r,indices:a,segmentIds:s})}}),up=ks({sparseSegmentSum_:function(e,t,n){const r=xs(e,"data","sparseSegmentSum"),a=xs(t,"indices","sparseSegmentSum"),s=xs(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error("Indices should be Tensor1D but received shape\n         "+a.shape);if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         "+s.shape);return ds.runKernel($r,{data:r,indices:a,segmentIds:s})}}),lp=ks({stringNGrams_:function(e,t,n,r,a,s,i,o){const u=xs(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error("Data must be a vector, saw: "+u.shape);const l=xs(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c=ds.runKernel(Or,{data:u,dataSplits:l},{separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o});return{nGrams:c[0],nGramsSplits:c[1]}}}),cp=ks({stringSplit_:function(e,t,n=!0){const r=xs(e,"input","stringSplit","string"),a=xs(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error("Input should be Tensor1D but received shape "+r.shape);if(0!==a.rank)throw new Error("Delimiter should be a scalar but received shape "+a.shape);const s=ds.runKernel(Lr,{input:r,delimiter:a},{skipEmpty:n});return{indices:s[0],values:s[1],shape:s[2]}}}),dp=ks({stringToHashBucketFast_:function(e,t){const n=xs(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");return ds.runKernel(zr,{input:n},r)}}),hp={fft:Ad,ifft:$d,rfft:Dd,irfft:Fd},pp={hammingWindow:vh,hannWindow:kh,frame:Ih,stft:Nh},fp={flipLeftRight:Ch,resizeNearestNeighbor:Vh,resizeBilinear:Wh,rotateWithOffset:Th,cropAndResize:Sh,nonMaxSuppression:_h,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=xs(e,"boxes","nonMaxSuppressionAsync"),i=xs(t,"scores","nonMaxSuppressionAsync"),o=Eh(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:d}=Fh(l,c,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Wd(d,"int32")},nonMaxSuppressionWithScore:Ph,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=xs(e,"boxes","nonMaxSuppressionAsync"),o=xs(t,"scores","nonMaxSuppressionAsync"),u=Eh(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],d=l[1],{selectedIndices:h,selectedScores:p}=Dh(c,d,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Wd(h,"int32"),selectedScores:Wd(p)}},nonMaxSuppressionPadded:Bh,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=xs(e,"boxes","nonMaxSuppressionAsync"),o=xs(t,"scores","nonMaxSuppressionAsync"),u=Eh(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Rh(h,p,l,c,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Wd(f,"int32"),validOutputs:du(m,"int32")}},threshold:Uh,transform:Gh},mp={bandPart:Hh,gramSchmidt:jh,qr:Kh},gp={absoluteDifference:Zh,computeWeightedLoss:Yh,cosineDistance:Jh,hingeLoss:Qh,huberLoss:ep,logLoss:tp,meanSquaredError:np,sigmoidCrossEntropy:rp,softmaxCrossEntropy:ap},yp={sparseFillEmptyRows:sp,sparseReshape:ip,sparseSegmentMean:op,sparseSegmentSum:up},bp={stringNGrams:lp,stringSplit:cp,stringToHashBucketFast:dp};class xp{static sgd(e){return new Su(e)}static momentum(e,t,n=!1){return new Cu(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Tu(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new bu(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new pu(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Nu(e,t,n,r,a)}static adagrad(e,t=.1){return new mu(e,t)}}const wp={sgd:xp.sgd,momentum:xp.momentum,adadelta:xp.adadelta,adagrad:xp.adagrad,rmsprop:xp.rmsprop,adamax:xp.adamax,adam:xp.adam},vp="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function kp(){return new Promise(e=>vp(()=>e()))}function Ip(e,t){const n=e[0].length;e.forEach((e,t)=>{ae(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),ae(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,a)=>{for(let s=0;s<n;s++)ae(s===t||e[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function Np(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const Sp=30;function Cp(e){return e<=Sp?e:Re(e,Math.floor(Math.sqrt(e)))}function Tp(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Ep(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function _p(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Ap(e,t,n,r=!0){const a=[];a.push(r?e[0]/n:e[0]*n);for(let s=1;s<e.length;++s)a.push(s<=t.length?r?t[s-1]*e[s]:e[s]/t[s-1]:e[s]);return a}function $p(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Fp(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}const Rp=1.7580993408473768,Dp=1.0507009873554805,Mp=.3275911,Op=.254829592,Lp=-.284496736,zp=1.421413741,Pp=-1.453152027,Bp=1.061405429;function Wp(...e){je().getBool("IS_TEST")||console.warn(...e)}function Vp(...e){je().getBool("IS_TEST")||console.log(...e)}function Up(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Gp(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Hp(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function jp(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function qp(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Kp(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Xp(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Yp(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Zp=/->/g;function Jp(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Zp,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split("->");ae(-1===r.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let d=0;d<a.length;++d){const e=a[d];if(!s.some(t=>-1!==t.indexOf(e)))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let d=0;d<r.length;++d){const e=r[d];-1===o.indexOf(e)&&","!==e&&o.push(e)}const u=new Array(s.length);for(let d=0;d<i;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error(`Found duplicate axes in input component ${s[d]}. Support for duplicate axes in input is not implemented yet.`);u[d]=[];for(let e=0;e<s[d].length;++e)u[d].push(o.indexOf(s[d][e]))}const l=o.length,c=[];for(let d=a.length;d<l;++d)c.push(d);return{allDims:o,summedDims:c,idDims:u}}function Qp(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;const r=[];for(let a=0;a<e;++a)-1===n[a]&&r.push(a);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:r}}function ef(e,t,n){const r=new Array(e);for(let a=0;a<n.length;++a){const e=n[a].shape;for(let n=0;n<t[a].length;++n)void 0===r[t[a][n]]?r[t[a][n]]=e[n]:ae(r[t[a][n]]===e[n],()=>`Expected dimension ${r[t[a][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension `+e[n])}}function tf(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let i=0;i<a;++i)r.push([]);const s=[];for(let i=0;i<n.length;++i){const e=rf(t,n[i]);for(const t of e)-1===s.indexOf(t)&&(r[i].push(t),s.push(t))}return{path:n,steps:r}}function nf(e){return e.every((e,t)=>e===t)}function rf(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function af(e,t,n=0){let r=[];if("number"==typeof t)ae(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{ae(t.reduce((e,t)=>(-1===t&&(e+=1),e),0)<=1,()=>"There should be only one negative value in split array.");const a=t.indexOf(-1);if(-1!==a){const r=t.reduce((e,t)=>t>0?e+t:e);t[a]=e.shape[n]-r}ae(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function sf(e,t){let n,r=!1;for(e<=Sp?(n=e,r=!0):n=Re(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Re(e,n+1);return n}function of(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)r.push(s!==t?e[s]:n);return r}function uf(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let d=0;d<r;++d)o.push(e.shape[d]),u*=e.shape[d];for(let d=r;d<n;d++)o.push(e.shape[d]),l*=e.shape[d];for(let d=r;d<a;d++)o.push(t.shape[d]);for(let d=n+1;d<s;d++)o.push(e.shape[d]),c*=e.shape[d];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function lf(e){try{return e.map(e=>Fa(e))}catch(_H){throw new Error("Failed to decode encoded string bytes into utf-8, error: "+_H)}}function cf(e){return e.map(e=>$a(e))}const df={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>eu(e,zd(bi(n,"float32"),-1))}}},hf={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=nu(bi(n,"float32")),r=tu(yu(du(1),t));return uc(Qo(e,r))}}}},pf={kernelName:Qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=tu(yu(nu(bi(n,"float32")),1));return Qo(e,t)}}}},ff={kernelName:et,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=ku(n.shape,r.shape);return{a:()=>{let t=e;const r=vu(n.shape,a);return r.length>0&&(t=hc(t,r)),Qu(t,n.shape)},b:()=>{let t=e;const n=vu(r.shape,a);return n.length>0&&(t=hc(t,n)),Qu(t,r.shape)}}}},mf={kernelName:tt,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}},gf={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(n)}}},yf={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(n)}}},bf={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qo(e,tu(yu(du(1),nu(bi(n,"float32")))))}}},xf={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=tu(Zo(du(1),nu(bi(n,"float32"))));return Qo(e,t)}}}},wf={kernelName:ct,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=ku(n.shape,r.shape);return{a:()=>{const t=Zo(nu(n),nu(r));let s=eu(e,Qo(r,t));const i=vu(n.shape,a);return i.length>0&&(s=hc(s,i)),Qu(s,n.shape)},b:()=>{const t=Zo(nu(n),nu(r));let s=uc(eu(e,Qo(n,t)));const i=vu(r.shape,a);return i.length>0&&(s=hc(s,i)),Qu(s,r.shape)}}}},vf={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qo(e,Zo(nu(bi(n,"float32")),1))}}},kf={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qo(e,yu(du(1),nu(bi(n,"float32"))))}}},If=ks({avgPool3dGrad_:function(e,t,n,r,a,s){const i=xs(e,"dy","avgPool3dGrad"),o=xs(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=Qu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=Qu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ae(5===u.rank,()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+u.rank+"."),ae(5===l.rank,()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+l.rank+"."),null!=s&&ae(de(a),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`);const d=ds.runKernel(ft,{dy:u,input:l},{filterSize:n,strides:r,pad:a,dimRoundingMode:s});return c?Qu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Nf={kernelName:pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>If(e,r,a,s,i,o)}}},Sf=ks({avgPoolGrad_:function(e,t,n,r,a){const s=xs(e,"dy","avgPoolGrad"),i=xs(t,"input","avgPoolGrad");ae(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,u=s,l=!1;3===i.rank&&(l=!0,o=Qu(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Qu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ae(4===u.rank,()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+u.rank+"."),ae(4===o.rank,()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+o.rank+".");const c=ds.runKernel(ht,{dy:u,input:o},{filterSize:n,strides:r,pad:a});return l?Qu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Cf={kernelName:dt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>Sf(e,r,a,s,i)}}},Tf={kernelName:mt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>zi(e,a,!1,!1),b:()=>zi(e,r,!0,!1)}:s&&!i?{a:()=>zi(a,e,!1,!0),b:()=>zi(r,e,!1,!1)}:{a:()=>zi(a,e,!0,!0),b:()=>zi(e,r,!0,!0)}:{a:()=>zi(e,a,!1,!0),b:()=>zi(r,e,!0,!1)}}},Ef={kernelName:gt,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Xc(e,r,a)}}},_f={kernelName:bt,gradFunc:(e,t,n)=>{const r=n.inputShape,a=n.shape,s=Array.from(a);for(let o=r.length-1;o>=0;o--)if(r[o]===a[o])s[o]=1;else if(1!==r[o])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const i=[];for(let o=0;o<s.length;o++)s[o]>1&&i.push(o);return{x:()=>hc(e,i,!0)}}},Af={kernelName:xt,gradFunc:e=>({x:()=>e.clone()})},$f={kernelName:wt,gradFunc:e=>({x:()=>ru(e)})},Ff={kernelName:vt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Ol(Ic(Yl(r,a),rc(r,s)),e,ru(e))}}},Rf={kernelName:It,inputsToSave:["x"],gradFunc:df.gradFunc},Df={kernelName:Nt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:a}=n,s=be(a,t[0].shape)[0],i=r.map(e=>e[s]);return Rd(e,i,s).map(e=>()=>e)}},Mf={kernelName:St,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return ae(Yu(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>kl(r.shape,e,a,i,o,u),filter:()=>dh(r,e,a.shape,i,o,u)}}},Of={kernelName:Tt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>wl(e,a,s,i,o,1,u),filter:()=>dh(e,r,a.shape,s,i,o,u)}}},Lf=ks({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Qu(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;return 4===i.rank&&(i=Qu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),ae(5===s.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+s.shape+"."),ae(5===i.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+i.shape+"."),ae(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),ae(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),ae(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`),ds.runKernel(_t,{x:s,dy:i},{strides:r,pad:a,filterShape:n})}}),zf={kernelName:Et,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;ae(Yu(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,o]=t;return{x:()=>Sl(i.shape,e,o,a,s),filter:()=>Lf(i,e,o.shape,a,s)}}},Pf={kernelName:$t,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>eu(uc(Id(bi(n,"float32"))),e)}}},Bf={kernelName:Ft,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>eu(Nd(bi(n,"float32")),e)}}},Wf={kernelName:Rt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=xc([a],r.rank);let n=_l(e,a,s,!i);return null!=t&&(n=Bi(n,t)),n}}}},Vf={kernelName:Lt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;ae(Yu(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[u,l]=t;return ae(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),ae(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),ae(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),ae(Zu(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),null!=i&&ae(de(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`),{x:()=>bh(u.shape,e,l,a,s,r,i),filter:()=>yh(u,e,l.shape,a,s,r,i)}}},Uf={kernelName:Wt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>ds.runKernel(Vt,s,n),filter:()=>ds.runKernel(Ut,i,n)}}},Gf={kernelName:jt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>ds.runKernel(qt,r)}}},Hf={kernelName:Kt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=eu(Vl(uc(nu(n))),2/Math.sqrt(Math.PI));return{x:()=>eu(e,r)}}},jf={kernelName:Yt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>eu(e,n)}}},qf={kernelName:Zt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Qu(e,n.shape)}}},Kf={kernelName:Jt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>eu(e,Vl(n))}}},Xf={kernelName:nn,gradFunc:e=>({x:()=>ru(e)})},Yf={kernelName:rn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=ku(n.shape,r.shape);return{a:()=>{const t=Qo(e,bi(r,"float32")),s=vu(n.shape,a);return s.length>0?Qu(hc(t,s),n.shape):t},b:()=>{let t=eu(e,bi(n,"float32"));const s=vu(r.shape,a);s.length>0&&(t=Qu(hc(t,s),r.shape));const i=nu(r);return uc(Qo(t,bi(i,"float32")))}}}},Zf={kernelName:an,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?du(1):o,l=vu(s.shape,a.shape),c=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const d=yu(a,s),h=eu(e,u),p=bd(Zo(i,du(r))),f=eu(eu(eu(p,p),p),du(-.5));return{x:()=>Qu(eu(eu(e,1===s.rank?Hl(Qu(p,[1,1,1,s.shape[0]]),c):p),u),a.shape),mean:()=>{let e=eu(eu(p,du(-1)),h);return 1===s.rank&&(e=hc(e,l)),Qu(e,s.shape)},variance:()=>{let e=eu(eu(f,d),h);return 1===s.rank&&(e=hc(e,l)),Qu(e,s.shape)},scale:()=>{const t=eu(d,p);let n=eu(e,t);return 1===s.rank&&(n=hc(n,l)),Qu(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=hc(t,l)),Qu(t,s.shape)}}}},Jf={kernelName:sn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=be(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),u=o.length,l=t.slice(s,t.length).slice(1),c=l.length,d=Qf(0,u),h=Qf(u+1,u+1+c),p=em([o,[n],l]),f=Qu(e,p),m=Qu(a,[n]),g=em([[u],d,h]),y=Bi(f,g);let b=Xd(y,m,r.shape[i]);const x=wc(g);return b=Bi(b,x),b},indices:()=>a}}};function Qf(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function em(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const tm={kernelName:ln,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>ru(n),b:()=>ru(r)}}},nm={kernelName:cn,gradFunc:e=>({x:()=>bi(e,"float32")})},rm={kernelName:pn,gradFunc:e=>({x:()=>ru(e)})},am={kernelName:fn,gradFunc:e=>({x:()=>ru(e)})},sm={kernelName:mn,gradFunc:e=>({x:()=>ru(e)})},im={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=Xl(r,0);return{x:()=>Ol(s,e,eu(e,a))}}},om={kernelName:vn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qo(e,Zo(n,1))}}},um={kernelName:wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qo(e,bi(n,"float32"))}}},lm={kernelName:Sn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=Vl(r);return yu(e,eu(hc(e,a,!0),t))}}}},cm=ks({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){return ds.runKernel(Tn,{x:e,y:t,dy:n},{depthRadius:r,bias:a,alpha:s,beta:i})}}),dm={kernelName:Cn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>cm(r,a,e,s,i,o,u)}}};function hm(e,t,n,r){return t.rank<n.rank&&(t=Qu(t,yc(t.shape,r))),e.rank<n.rank&&(e=Qu(e,yc(e.shape,r))),{x:()=>eu(e,bi(Ml(n,t),e.dtype))}}const pm={kernelName:En,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=hm(e,t[1],s,be(a,s.shape));return{x:()=>i.x()}}},fm={kernelName:_n,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>eu(e,bi(Yl(n,r),"float32")),b:()=>eu(e,bi(nc(n,r),"float32"))}}},mm=ks({maxPool3dGrad_:function(e,t,n,r,a,s,i){const o=xs(e,"dy","maxPool3dGrad"),u=xs(t,"input","maxPool3dGrad"),l=xs(n,"output","maxPool3dGrad");let c=o,d=u,h=l,p=!1;4===u.rank&&(p=!0,c=Qu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=Qu(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=Qu(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),ae(5===c.rank,()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+c.rank+"."),ae(5===d.rank,()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+d.rank+"."),ae(5===h.rank,()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+h.rank+"."),null!=i&&ae(de(s),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const f=ds.runKernel(Rn,{dy:c,input:d,output:h},{filterSize:r,strides:a,pad:s,dimRoundingMode:i});return p?Qu(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),gm={kernelName:Fn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>mm(e,r,a,s,i,o,u)}}},ym=ks({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=xs(e,"dy","maxPoolGrad"),u=xs(t,"input","maxPoolGrad"),l=xs(n,"output","maxPoolGrad");return ae(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`),ae(4===o.rank,()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+o.rank+"."),ae(4===u.rank,()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+u.rank+"."),null!=i&&ae(de(s),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`),ds.runKernel($n,{dy:o,input:u,output:l},{filterSize:r,strides:a,pad:s,dimRoundingMode:i})}}),bm={kernelName:Yn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>al(e,s,r.shape)}}},xm={kernelName:Sr,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>ol(e,r,a)}}},wm={kernelName:Cr,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>nl(e,r)}}},vm=[df,hf,pf,ff,mf,gf,yf,bf,xf,wf,vf,kf,Nf,Cf,Tf,Ef,_f,Af,$f,Ff,Rf,Df,Of,Mf,zf,Pf,Bf,Wf,Vf,Uf,{kernelName:Gt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=ku(n.shape,r.shape);return{a:()=>{const t=Qo(e,bi(r,"float32")),s=vu(n.shape,a);return s.length>0?Qu(hc(t,s),n.shape):t},b:()=>{let t=eu(e,bi(n,"float32"));const s=vu(r.shape,a);s.length>0&&(t=Qu(hc(t,s),r.shape));const i=nu(r);return uc(Qo(t,bi(i,"float32")))}}}},Gf,Hf,jf,qf,Kf,Yf,Xf,Zf,Jf,tm,nm,rm,am,sm,im,om,um,lm,dm,pm,pm,fm,gm,{kernelName:An,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>ym(e,r,a,s,i,o)}}},{kernelName:Mn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=be(a,r.shape),i=ue(gc(r.shape,s)[1]);return{x:()=>{const t=r.shape.slice();s.forEach(e=>{t[e]=1});const n=Qu(e,t);return Qo(eu(n,Fc(r.shape,"float32")),i)}}}},{kernelName:On,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=hm(e,i,s,be(a,s.shape));return{x:()=>o.x()}}},{kernelName:Ln,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>eu(e,bi(rc(n,r),"float32")),b:()=>eu(e,bi(Xl(n,r),"float32"))}}},{kernelName:zn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>al(e,s,r.shape)}}},{kernelName:Pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=ku(n.shape,r.shape);return{a:()=>{const t=vu(n.shape,a);return t.length>0?Qu(hc(e,t),n.shape):e},b:()=>{const t=eu(e,uc(ql(Qo(n,r)))),s=vu(r.shape,a);return s.length>0?Qu(hc(t,s),r.shape):t}}}},{kernelName:Wn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=ku(n.shape,r.shape);return{a:()=>{const t=eu(e,bi(r,"float32")),s=vu(n.shape,a);return s.length>0?Qu(hc(t,s),n.shape):t},b:()=>{const t=eu(e,bi(n,"float32")),s=vu(r.shape,a);return s.length>0?Qu(hc(t,s),r.shape):t}}}},{kernelName:Vn,gradFunc:e=>({x:()=>uc(e)})},{kernelName:Kn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>$c(n.shape,"float32")}}},{kernelName:qn,gradFunc:e=>({x:()=>ru(e)})},{kernelName:Xn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Yd(e,r).map(e=>()=>e)}},bm,bm,{kernelName:Jn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=ku(s.shape,i.shape);return{a:()=>{const t=bi(i,"float32");let n=eu(e,eu(t,gu(s,yu(t,du(1)))));const r=vu(s.shape,o);return r.length>0&&(n=hc(n,r)),Qu(n,s.shape)},b:()=>{const t=Xl(s,0),n=Ol(t,ic(s),ru(s));let r=eu(e,eu(a,n));const u=vu(i.shape,o);return u.length>0&&(r=hc(r,u)),Qu(r,i.shape)}}}},{kernelName:Qn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=Xl(n,0);return{x:()=>Ol(a,e,eu(e,r)),alpha:()=>{let t=Ol(a,ru(e),eu(e,n));const s=vu(r.shape,e.shape);return s.length>0&&(t=hc(t,s)),Qu(t,r.shape)}}}},{kernelName:rr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qo(e,uc(nu(n)))}}},{kernelName:cr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=eu(rc(n,6),zd(n));return{x:()=>eu(e,bi(r,"float32"))}}},{kernelName:ar,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>eu(e,bi(zd(n),"float32"))}}},{kernelName:sr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qu(e,n.shape)}}},{kernelName:ur,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>ds.runKernel(lr,a,n)}}},{kernelName:ir,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>ds.runKernel(or,a,n)}}},{kernelName:dr,gradFunc:(e,t,n)=>{const{dims:r}=n,a=be(r,e.shape);return{x:()=>hd(e,a)}}},{kernelName:hr,gradFunc:e=>({x:()=>ru(e)})},{kernelName:pr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>uc(Qo(e,eu(gu(n,1.5),2)))}}},{kernelName:mr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>bi(ru(n),"float32"),t:()=>eu(e,bi(n,e.dtype)),e:()=>eu(e,bi(Nc(n),e.dtype))}}},{kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Xl(n,du(0)),r=du(Rp),a=du(Dp),s=eu(e,a),i=eu(eu(e,r),Vl(bi(n,"float32")));return Ol(t,s,i)}}}},{kernelName:vr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>eu(e,eu(n,yu(du(1),n)))}}},{kernelName:wr,gradFunc:e=>({x:()=>ru(e)})},{kernelName:br,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>eu(Tl(bi(n,"float32")),e)}}},{kernelName:xr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>eu(El(bi(n,"float32")),e)}}},{kernelName:yr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=po(r,a,s),l=[];for(let c=0;c<e.rank;c++)l.push([o[c],i[c]-o[c]-u[c]]);return{x:()=>Gc(e,l)}}},{kernelName:Tr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=eu(e,r);return{logits:()=>yu(s,eu(hc(s,[a],!0),r))}}},{kernelName:kr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>eu(e,rl(n))}}},xm,xm,wm,wm,{kernelName:Ir,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qo(e,eu(tu(bi(n,"float32")),2))}}},{kernelName:Rr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=du(2);return{a:()=>eu(e,eu(a,yu(n,r))),b:()=>eu(e,eu(a,yu(r,n)))}}},{kernelName:Dr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>eu(e,eu(bi(n,"float32"),2))}}},{kernelName:Yr,gradFunc:e=>({x:()=>ru(e)})},{kernelName:Pr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=ku(n.shape,r.shape);return{a:()=>{let t=e;const r=vu(n.shape,a);return r.length>0&&(t=hc(t,r)),Qu(t,n.shape)},b:()=>{let t=e;const n=vu(r.shape,a);return n.length>0&&(t=hc(t,n)),Qu(uc(t),r.shape)}}}},{kernelName:Nr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;be(s,r.shape).forEach(e=>{a[e]=1});const i=Qu(e,a),o=eu(i,Fc(r.shape,"float32"));return{x:()=>o}}},{kernelName:Br,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qo(e,nu(Tl(n)))}}},{kernelName:Wr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>eu(yu(du(1),nu(n)),e)}}},{kernelName:Vr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=ru(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Zo(t,al(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=Zo(t,al(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=Zo(t,al(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=Zo(t,al(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Hr,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=wc(a);return{x:()=>Bi(e,s)}}},{kernelName:qr,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Ld(e,a)}}},{kernelName:Kr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Iu(t,ru(t)),r=Kl(e,n);let a=Yl(t,du(0,"int32"));const s=r.rank-a.rank;for(let o=0;o<s;++o)a=Ul(a,o+1);a=Ic(a,Fc(r.shape,"bool"));const i=ru(r);return Ol(a,r,i)}(e,n)}}},{kernelName:Xr,gradFunc:e=>({x:()=>ru(e)})}];for(const AH of vm)ua(AH);let km;function Im(){return null==km&&(km=Xo().epsilon()),km}ja().prototype.abs=function(){return this.throwIfDisposed(),xu(this)},ja().prototype.acos=function(){return this.throwIfDisposed(),Eu(this)},ja().prototype.acosh=function(){return this.throwIfDisposed(),_u(this)},ja().prototype.add=function(e){return this.throwIfDisposed(),Zo(this,e)},ja().prototype.all=function(e,t){return this.throwIfDisposed(),$u(this,e,t)},ja().prototype.any=function(e,t){return this.throwIfDisposed(),Fu(this,e,t)},ja().prototype.argMax=function(e){return this.throwIfDisposed(),Ru(this,e)},ja().prototype.argMin=function(e){return this.throwIfDisposed(),Du(this,e)},ja().prototype.asScalar=function(){return this.throwIfDisposed(),ae(1===this.size,()=>"The array must have only 1 element."),Qu(this,[])},ja().prototype.asType=function(e){return this.throwIfDisposed(),bi(this,e)},ja().prototype.as1D=function(){return this.throwIfDisposed(),Qu(this,[this.size])},ja().prototype.as2D=function(e,t){return this.throwIfDisposed(),Qu(this,[e,t])},ja().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Qu(this,[e,t,n])},ja().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Qu(this,[e,t,n,r])},ja().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Qu(this,[e,t,n,r,a])},ja().prototype.asin=function(){return this.throwIfDisposed(),Mu(this)},ja().prototype.asinh=function(){return this.throwIfDisposed(),Ou(this)},ja().prototype.atan=function(){return this.throwIfDisposed(),Lu(this)},ja().prototype.atan2=function(e){return this.throwIfDisposed(),zu(this,e)},ja().prototype.atanh=function(){return this.throwIfDisposed(),Pu(this)},ja().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),el(this,e,t,n,r)},ja().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),ol(this,e,t)},ja().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),ul(this,e,t,n,r,a)},ja().prototype.broadcastTo=function(e){return this.throwIfDisposed(),pl(this,e)},ja().prototype.cast=function(e){return this.throwIfDisposed(),bi(this,e)},ja().prototype.ceil=function(){return this.throwIfDisposed(),fl(this)},ja().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),ml(this,e,t)},ja().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ha&&(e=[e]),nl([this,...e],t)},ja().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),vl(this,e,t,n,r,a,s)},ja().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Il(this,e,t,n,r,a)},ja().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),wl(this,e,t,n,r,a,s)},ja().prototype.cos=function(){return this.throwIfDisposed(),Tl(this)},ja().prototype.cosh=function(){return this.throwIfDisposed(),El(this)},ja().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),_l(this,e,t,n)},ja().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),$l(this,e,t)},ja().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Fl(this,e,t,n,r,a,s)},ja().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Dl(this,e,t,n,r,a)},ja().prototype.divNoNan=function(e){return this.throwIfDisposed(),Ll(this,e)},ja().prototype.div=function(e){return this.throwIfDisposed(),Qo(this,e)},ja().prototype.dot=function(e){return this.throwIfDisposed(),zl(this,e)},ja().prototype.elu=function(){return this.throwIfDisposed(),Bl(this)},ja().prototype.equal=function(e){return this.throwIfDisposed(),Ml(this,e)},ja().prototype.erf=function(){return this.throwIfDisposed(),Wl(this)},ja().prototype.exp=function(){return this.throwIfDisposed(),Vl(this)},ja().prototype.expandDims=function(e){return this.throwIfDisposed(),Ul(this,e)},ja().prototype.expm1=function(){return this.throwIfDisposed(),Gl(this)},ja().prototype.fft=function(){return this.throwIfDisposed(),Ad(this)},ja().prototype.flatten=function(){return this.throwIfDisposed(),Qu(this,[this.size])},ja().prototype.floor=function(){return this.throwIfDisposed(),ql(this)},ja().prototype.floorDiv=function(e){return this.throwIfDisposed(),Jo(this,e)},ja().prototype.gather=function(e,t){return this.throwIfDisposed(),Kl(this,e,t)},ja().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Yl(this,e)},ja().prototype.greater=function(e){return this.throwIfDisposed(),Xl(this,e)},ja().prototype.ifft=function(){return this.throwIfDisposed(),$d(this)},ja().prototype.irfft=function(){return this.throwIfDisposed(),Fd(this)},ja().prototype.isFinite=function(){return this.throwIfDisposed(),Jl(this)},ja().prototype.isInf=function(){return this.throwIfDisposed(),Ql(this)},ja().prototype.isNaN=function(){return this.throwIfDisposed(),ec(this)},ja().prototype.leakyRelu=function(e){return this.throwIfDisposed(),tc(this,e)},ja().prototype.lessEqual=function(e){return this.throwIfDisposed(),rc(this,e)},ja().prototype.less=function(e){return this.throwIfDisposed(),nc(this,e)},ja().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),sc(this,e,t,n,r)},ja().prototype.logSigmoid=function(){return this.throwIfDisposed(),cc(this)},ja().prototype.logSoftmax=function(e){return this.throwIfDisposed(),pc(this,e)},ja().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),kc(this,e,t)},ja().prototype.log=function(){return this.throwIfDisposed(),ic(this)},ja().prototype.log1p=function(){return this.throwIfDisposed(),oc(this)},ja().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Ic(this,e)},ja().prototype.logicalNot=function(){return this.throwIfDisposed(),Nc(this)},ja().prototype.logicalOr=function(e){return this.throwIfDisposed(),Sc(this,e)},ja().prototype.logicalXor=function(e){return this.throwIfDisposed(),Cc(this,e)},ja().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),zi(this,e,t,n)},ja().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Tc(this,e,t,n,r)},ja().prototype.max=function(e,t){return this.throwIfDisposed(),dc(this,e,t)},ja().prototype.maximum=function(e){return this.throwIfDisposed(),Iu(this,e)},ja().prototype.mean=function(e,t){return this.throwIfDisposed(),Ac(this,e,t)},ja().prototype.min=function(e,t){return this.throwIfDisposed(),Dc(this,e,t)},ja().prototype.minimum=function(e){return this.throwIfDisposed(),Mc(this,e)},ja().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Oc(this,e,t)},ja().prototype.mod=function(e){return this.throwIfDisposed(),Lc(this,e)},ja().prototype.mul=function(e){return this.throwIfDisposed(),eu(this,e)},ja().prototype.neg=function(){return this.throwIfDisposed(),uc(this)},ja().prototype.norm=function(e,t,n){return this.throwIfDisposed(),nh(this,e,t,n)},ja().prototype.notEqual=function(e){return this.throwIfDisposed(),Wc(this,e)},ja().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Pi(this,e,t,n)},ja().prototype.onesLike=function(){return this.throwIfDisposed(),Vc(this)},ja().prototype.pad=function(e,t){return this.throwIfDisposed(),Gc(this,e,t)},ja().prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),Yc(this,e,t,n,r,a)},ja().prototype.pow=function(e){return this.throwIfDisposed(),gu(this,e)},ja().prototype.prelu=function(e){return this.throwIfDisposed(),Zc(this,e)},ja().prototype.prod=function(e,t){return this.throwIfDisposed(),Jc(this,e,t)},ja().prototype.reciprocal=function(){return this.throwIfDisposed(),ld(this)},ja().prototype.relu=function(){return this.throwIfDisposed(),cd(this)},ja().prototype.relu6=function(){return this.throwIfDisposed(),dd(this)},ja().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Qu(this,e.shape)},ja().prototype.reshape=function(e){return this.throwIfDisposed(),Qu(this,e)},ja().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Wh(this,e,t,n)},ja().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Vh(this,e,t,n)},ja().prototype.reverse=function(e){return this.throwIfDisposed(),hd(this,e)},ja().prototype.rfft=function(){return this.throwIfDisposed(),Dd(this)},ja().prototype.round=function(){return this.throwIfDisposed(),yd(this)},ja().prototype.rsqrt=function(){return this.throwIfDisposed(),bd(this)},ja().prototype.selu=function(){return this.throwIfDisposed(),xd(this)},ja().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),wd(this,e,t,n,r,a,s)},ja().prototype.sigmoid=function(){return this.throwIfDisposed(),rl(this)},ja().prototype.sign=function(){return this.throwIfDisposed(),kd(this)},ja().prototype.sin=function(){return this.throwIfDisposed(),Id(this)},ja().prototype.sinh=function(){return this.throwIfDisposed(),Nd(this)},ja().prototype.slice=function(e,t){return this.throwIfDisposed(),al(this,e,t)},ja().prototype.softmax=function(e){return this.throwIfDisposed(),_d(this,e)},ja().prototype.softplus=function(){return this.throwIfDisposed(),lc(this)},ja().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Xc(this,e,t)},ja().prototype.split=function(e,t){return this.throwIfDisposed(),Rd(this,e,t)},ja().prototype.sqrt=function(){return this.throwIfDisposed(),tu(this)},ja().prototype.square=function(){return this.throwIfDisposed(),nu(this)},ja().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Md(this,e)},ja().prototype.squeeze=function(e){return this.throwIfDisposed(),Od(this,e)},ja().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Ha?[this,e]:[this,...e];return Ld(n,t)},ja().prototype.step=function(e){return this.throwIfDisposed(),zd(this,e)},ja().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Pd(this,e,t,n,r,a,s,i,o)},ja().prototype.sub=function(e){return this.throwIfDisposed(),yu(this,e)},ja().prototype.sum=function(e,t){return this.throwIfDisposed(),hc(this,e,t)},ja().prototype.tan=function(){return this.throwIfDisposed(),Bd(this)},ja().prototype.tanh=function(){return this.throwIfDisposed(),sl(this)},ja().prototype.tile=function(e){return this.throwIfDisposed(),Hl(this,e)},ja().prototype.toBool=function(){return this.throwIfDisposed(),bi(this,"bool")},ja().prototype.toFloat=function(){return this.throwIfDisposed(),bi(this,"float32")},ja().prototype.toInt=function(){return this.throwIfDisposed(),bi(this,"int32")},ja().prototype.topk=function(e,t){return this.throwIfDisposed(),jd(this,e,t)},ja().prototype.transpose=function(e){return this.throwIfDisposed(),Bi(this,e)},ja().prototype.unique=function(e){return this.throwIfDisposed(),Kd(this,e)},ja().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Xd(this,e,t)},ja().prototype.unstack=function(e){return this.throwIfDisposed(),Yd(this,e)},ja().prototype.where=function(e,t){return this.throwIfDisposed(),Ol(e,this,t)},ja().prototype.zerosLike=function(){return this.throwIfDisposed(),ru(this)};class Nm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Nm.prototype)}}class Sm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Sm.prototype)}}class Cm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Cm.prototype)}}class Tm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Tm.prototype)}}class Em extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Em.prototype)}}function _m(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Am(e,t){if(!e)throw new Em(t)}function $m(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Fm(e){return 1===e.length?e[0]:e}function Rm(e){return Array.isArray(e)?e:[e]}function Dm(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Mm(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}Error;let Om={};function Lm(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function zm(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>zm(e));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?zm(t):e[n]=t.value)}}}function Pm(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in Om)s=Om[a];else if(s=t[a],null==s)throw new Cm(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new Cm(r+": Improper config format: "+JSON.stringify(s)+".\n'className' and 'config' must set.");const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in Om?[o,u]=Om.className:i in t&&([o,u]=t[i]),null==o)throw new Cm(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const n of Object.keys(Om))e[n]=Om[n];for(const a of Object.keys(n))e[a]=n[a];s.config.customObjects=e;const t=Object.assign({},Om);for(const a of Object.keys(n))Om[a]=n[a];zm(s.config);const r=u(o,s.config,n,a);return Om=Object.assign({},t),r}{const e=Object.assign({},Om);for(const r of Object.keys(n))Om[r]=n[r];const t=new o(s.config);return Om=Object.assign({},e),t}}}function Bm(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Wm(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Vm(e){if(null==e)throw new Cm("Invalid value in obj: "+JSON.stringify(e));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Um(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Cm(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Gm(e,t,n=0,r=1/0){return Am(n>=0),Am(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function Hm(e,t){Array.isArray(e)?(r.assert(e.length>0,()=>t+" is unexpectedly an empty array."),e.forEach((e,n)=>Hm(e,`element ${n+1} of ${t}`))):r.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got `+jm(e)+".")}function jm(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>jm(e)).join(",")+"]":"string"==typeof e?`"${e}"`:""+e}function qm(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Km(e,t){return zo(()=>tu(hc(eu(e,e),t,!0)))}class Xm extends h.Serializable{getConfig(){return{}}}class Ym extends Xm{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return zo(()=>{const t=Km(e,this.axis),n=ml(t,0,this.maxValue);return eu(e,Qo(n,Zo(Im(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Ym.className="MaxNorm",h.registerClass(Ym);class Zm extends Xm{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return zo(()=>Qo(e,Zo(Im(),Km(e,this.axis))))}getConfig(){return{axis:this.axis}}}Zm.className="UnitNorm",h.registerClass(Zm);class Jm extends Xm{apply(e){return cd(e)}}Jm.className="NonNeg",h.registerClass(Jm);class Qm extends Xm{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return zo(()=>{const t=Km(e,this.axis),n=Zo(eu(this.rate,ml(t,this.minValue,this.maxValue)),eu(1-this.rate,t));return eu(e,Qo(n,Zo(Im(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Qm.className="MinMaxNorm",h.registerClass(Qm);const eg={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function tg(e){return Lm(e)}function ng(e,t={}){return Pm(e,h.SerializationMap.getMap().classNameMap,t,"constraint")}function rg(e){return null==e?null:"string"==typeof e?ng({className:e in eg?eg[e]:e,config:{}}):e instanceof Xm?e:ng(e)}function ag(e){return new Ym(e)}function sg(e){return new Zm(e)}function ig(){return new Jm}function og(e){return new Qm(e)}const ug=["channelsFirst","channelsLast"],lg=["nearest","bilinear"],cg=["valid","same","causal"],dg=["max","avg"],hg=["sum","mul","concat","ave"],pg=new Map;function fg(e){Um(ug,"DataFormat",e)}function mg(e){Um(cg,"PaddingMode",e)}function gg(e){Um(dg,"PoolMode",e)}const yg=[];function bg(e,t){yg.push(e);try{const e=t();return yg.pop(),e}catch(n){throw yg.pop(),n}}function xg(e){if(!kg(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===yg.length?"":yg.join("/")+"/")+e}function wg(e){if(!kg(e))throw new Error("Not a valid tensor name: '"+e+"'");pg.has(e)||pg.set(e,0);const t=pg.get(e);if(pg.set(e,pg.get(e)+1),t>0){const n=`${e}_${t}`;return pg.set(n,1),n}return e}const vg=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function kg(e){return!!e.match(vg)}function Ig(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Ng(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function Sg(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Cg(e,t){if(t<e)throw new Cm(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Tg(e,t){return e.asType(t)}function Eg(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function _g(e,t,n){return zo(()=>{switch(e.rank){case 1:return Sd(e,t,n);case 2:return Cd(e,[t,0],[n,e.shape[1]]);case 3:return Td(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Ed(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return al(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return al(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Cm("sliceAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}})}function Ag(e,t,n){return zo(()=>{switch(e.rank){case 1:return Sd(e,t,n);case 2:return Cd(e,[0,t],[e.shape[0],n]);case 3:return Td(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Ed(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Cm("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}})}function $g(e,t,n,r){return zo(()=>{switch(e.rank){case 1:return Sd(e,t,n);case 2:switch(r){case 1:return _g(e,t,n);case 2:return Ag(e,t,n);default:throw new Cm("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return _g(e,t,n);case 2:return Td(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Ag(e,t,n);default:throw new Cm("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return _g(e,t,n);case 2:return Ed(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Ed(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Ag(e,t,n);default:throw new Cm("The axis is not within the rank of the tensor "+r)}default:throw new Cm("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}})}function Fg(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),nl(e,t)}function Rg(e,t){switch(e.rank){case 1:return gl([e,t]);case 2:return yl([e,t],0);case 3:return bl([e,t],0);case 4:return xl([e,t],0);default:throw new Cm("concatAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}}function Dg(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Cm(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Hl(e,t)}function Mg(e,t=0,n=1,r,a){return sd(e,t,n,r,a)}function Og(e,t,n,r){if(e.rank<2||t.rank<2)throw new Tm(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Tm(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = `+t.shape);if(2===e.rank&&2===t.rank)return f.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Pg(e.rank,r,"channelsLast"):null,activation:n});{const a=e.shape.slice(),s=a.pop();e=e.reshape([-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=t.transpose(c).reshape([u,-1]);const d=[...a,...l];return f.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Pg(e.rank,r,"channelsLast"):null,activation:n}).reshape(d)}}function Lg(e,t,n){return zo(()=>(t=Array.isArray(t)?Wd(t,"int32"):t.toInt(),Kl(e,t,n)))}function zg(e){return eu(e,e)}function Pg(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Cm("Unexpected bias dimensions: "+t.rank+"; expected it to be 1 or "+e);if(5===e){if("channelsFirst"===n)return t.reshape(1===r.length?[1,r[0],1,1,1]:[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return t.reshape(1===r.length?[1,1,1,1,r[0]]:[1].concat(r))}else if(4===e){if("channelsFirst"===n)return t.reshape(1===r.length?[1,r[0],1,1]:[1,r[2],r[0],r[1]]);if("channelsLast"===n)return t.reshape(1===r.length?[1,1,1,r[0]]:[1].concat(r))}else if(3===e){if("channelsFirst"===n)return t.reshape(1===r.length?[1,r[0],1]:[1,r[1],r[0]]);if("channelsLast"===n)return t.reshape(1===r.length?[1,1,r[0]]:[1].concat(r))}else if(e<3)return t;throw new Cm("Unsupported input rank by biasAdd: "+t.rank)}function Bg(e,t,n){return zo(()=>(null==n&&(n="channelsLast"),fg(n),e.add(Pg(e.rank,t,n))))}function Wg(e,t,n,r){return zo(()=>oh(e,t,n,r))}function Vg(e,t,n=!1){return n?e():t()}const Ug=["fanIn","fanOut","fanAvg"],Gg=["normal","uniform","truncatedNormal"];class Hg extends h.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class jg extends Hg{apply(e,t){return $c(e,t)}}jg.className="Zeros",h.registerClass(jg);class qg extends Hg{apply(e,t){return Fc(e,t)}}qg.className="Ones",h.registerClass(qg);class Kg extends Hg{constructor(e){if(super(),"object"!=typeof e)throw new Cm("Expected argument of type ConstantConfig but got "+e);if(void 0===e.value)throw new Cm("config must have value set but got "+e);this.value=e.value}apply(e,t){return zo(()=>eu(du(this.value),Fc(e,t)))}getConfig(){return{value:this.value}}}Kg.className="Constant",h.registerClass(Kg);class Xg extends Hg{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return id(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Xg.className="RandomUniform",h.registerClass(Xg);class Yg extends Hg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Tm(`randomNormal does not support dType ${t}.`);return Mg(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Yg.className="RandomNormal",h.registerClass(Yg);class Zg extends Hg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Tm(`truncatedNormal does not support dType ${t}.`);return qd(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Zg.className="TruncatedNormal",h.registerClass(Zg);class Jg extends Hg{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return zo(()=>{if(2!==e.length||e[0]!==e[1])throw new Cm("Identity matrix initializer can only be used for 2D square matrices.");return eu(this.gain,jl(e[0]))})}getConfig(){return{gain:this.gain}}}Jg.className="Identity",h.registerClass(Jg);class Qg extends Hg{constructor(e){if(super(),e.scale<0)throw new Cm("scale must be a positive float. Got: "+e.scale);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,Um(Ug,"FanMode",this.mode),this.distribution=null==e.distribution?"normal":e.distribution,Um(Gg,"Distribution",this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(fg(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Ig(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Ig(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Ig(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let s=this.scale;if(s/="fanIn"===this.mode?Math.max(1,r):"fanOut"===this.mode?Math.max(1,a):Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Tm(`${this.getClassName()} does not support dType ${t}.`);return qd(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return id(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Qg.className="VarianceScaling",h.registerClass(Qg);class ey extends Qg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Qg.className}}ey.className="GlorotUniform",h.registerClass(ey);class ty extends Qg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Qg.className}}ty.className="GlorotNormal",h.registerClass(ty);class ny extends Qg{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Qg.className}}ny.className="HeNormal",h.registerClass(ny);class ry extends Qg{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Qg.className}}ry.className="HeUniform",h.registerClass(ry);class ay extends Qg{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Qg.className}}ay.className="LeCunNormal",h.registerClass(ay);class sy extends Qg{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Qg.className}}sy.className="LeCunNormal",h.registerClass(sy);class iy extends Hg{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Tm("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return zo(()=>{if(e.length<2)throw new Tm("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Mg(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=mp.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),eu(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}iy.className="Orthogonal",h.registerClass(iy);const oy={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function uy(e,t={}){return Pm(e,h.SerializationMap.getMap().classNameMap,t,"initializer")}function ly(e){return Lm(e)}function cy(e){if("string"==typeof e){const t=e in oy?oy[e]:e;if("GlorotNormal"===t)return new ty;if("GlorotUniform"===t)return new ey;if("HeNormal"===t)return new ny;if("HeUniform"===t)return new ry;if("LeCunNormal"===t)return new ay;if("LeCunUniform"===t)return new sy;{const e={};return e.className=t,e.config={},uy(e)}}return e instanceof Hg?e:uy(e)}function dy(){return new jg}function hy(){return new qg}function py(e){return new Kg(e)}function fy(e){return new Xg(e)}function my(e){return new Yg(e)}function gy(e){return new Zg(e)}function yy(e){return new Jg(e)}function by(e){return new Qg(e)}function xy(e){return new ey(e)}function wy(e){return new ty(e)}function vy(e){return new ny(e)}function ky(e){return new ry(e)}function Iy(e){return new ay(e)}function Ny(e){return new sy(e)}function Sy(e){return new iy(e)}let Cy=0;function Ty(){return Cy++}const Ey={};function _y(e=""){return e in Ey||(Ey[e]=0),Ey[e]+=1,e+Ey[e].toString()}function Ay(e){return Array.isArray(e)&&Array.isArray(e[0])}function $y(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Fy(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Cm("Expected Tensor length to be 1; got "+e.length);t=e[0]}else t=e;return t}function Ry(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new Cm("Expected exactly 1 Shape; got "+e.length)}return e}function Dy(e){let t=0;for(const n of e)t+=0===n.shape.length?1:n.shape.reduce((e,t)=>e*t);return t}class My{constructor(e,t="float32",n="Variable",r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Ty(),this.originalName=xg(n=null==n?"Variable":n),this.name=wg(this.originalName),this.trainable_=r,this.constraint=a,this.val=Zd(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Oy(e){return e.map(e=>e.read())}function Ly(e){e.forEach(e=>{e[0].write(e[1])})}class zy{constructor(e){this.dtype=e.dtype,this.shape=e.shape,this.ndim=null!=e.shape?e.shape.length:e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Py{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=Ty(),null!=s&&(this.originalName=xg(s),this.name=wg(this.originalName)),this.rank=t.length}}let By=0;class Wy{constructor(e,t){this.callArgs=t,this.id=By++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)e.push(null!=t?t.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Vy=0;class Uy extends h.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Vy++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Dm(e)+"_"+_y(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}this.initialWeights=null!=e.weights?e.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Sm(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Cm(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Fm(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Fm(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Nm("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new Nm("Layer "+this.name+" is not connected, no input to return.");return Fm(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Nm("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new Nm("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return Fm(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Rm(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Rm(this.inputSpec);if(e.length!==t.length)throw new Cm(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: `+e);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new Cm(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new Cm(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new Cm(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new Cm(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new Cm(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new Cm(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Rm(e);let r=!0;for(const s of n)if(!(s instanceof Py)){r=!1;break}let a=!0;for(const s of n)if(s instanceof Py){a=!1;break}if(r===a)throw new Cm("Arguments to apply() must be all SymbolicTensors or all Tensors");return bg(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Rm(e))t.push(n.shape);this.build(Fm(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=Rm(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=Fm(s),null!=this.activityRegularizer)throw new Tm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Rm(e);const t=[];for(const n of e)t.push(n.shape);return Fm(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new Py(s,n,this,Rm(e),t,this.name,r)):new Py(s,r,this,Rm(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Tm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(e)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer `+this.name);else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Nm(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Nm(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Sm(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Dy(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Oy(e?this.trainableWeights:this.weights)}setWeights(e){zo(()=>{const t=this.weights;if(t.length!==e.length)throw new Cm(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],a=Oy(t);for(let s=0;s<a.length;++s){const i=a[s],o=t[s],u=e[s];if(!r.arraysEqual(i.shape,u.shape))throw new Cm(`Layer weight shape ${i.shape} not compatible with provided weight shape `+u.shape);n.push([o,u])}Ly(n)})}addWeight(e,t,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Cm(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=cy("zeros"));const o=r.apply(t,n),u=new My(o,n,e,s,i);return o.dispose(),null!=a&&this.addLoss(()=>a.apply(u.read())),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Rm(e),null!=this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach(e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=Rm(e);t=Rm(t),n=Rm(n),r=Rm(r),a=$y(a),s=$y(s);const u=[],l=[],c=[];for(const d of o)u.push(d.sourceLayer),l.push(d.nodeIndex),c.push(d.tensorIndex);new Wy({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Gy(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Gy(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class Hy extends Uy{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:_y("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Cm("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Cm("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Cm("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Py(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Wy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Cm("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function jy(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Cm("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Hy({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function qy(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];Po(r)}}function Ky(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Xy;Hy.className="InputLayer",h.registerClass(Hy),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Xy||(Xy={}));class Yy{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Zy{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Jy extends Yy{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"==typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const a=zo(()=>Zo(this.totals[r],eu(e,n)));this.totals[r]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?t[n]=this.totals[n]/this.seen:zo(()=>{const e=eu(Qo(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),Bo(t[n])}))}}class Qy extends Yy{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const a in this.history){const r=this.history[a];for(let s=0;s<r.length;++s)"number"!=typeof r[s]&&(e.push(r[s].data()),t.push(a),n.push(s))}const r=await Promise.all(e);for(let a=0;a<r.length;++a)this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=r[a][0]}}class eb extends Yy{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");r.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,a=r.now();return(...s)=>{const i=r.now();return i-a<t||(a=i,n=e(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await qy(n),r.push(this.yield(e,t,n))),r.push(kp()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await qy(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await qy(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(kp()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await qy(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await qy(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(kp()):r.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await qy(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await qy(e),await this.trainEnd(e))}}function tb(e,t){return null==e&&(e={}),e instanceof Yy?[e]:Array.isArray(e)&&e[0]instanceof Yy?e:Rm(e).map(e=>new eb(e,t))}class nb{constructor(){}static registerCallbackConstructor(e,t){r.assert(e>=0&&Number.isInteger(e),()=>"Verbosity level is expected to be an integer >= 0, but got "+e),nb.checkForDuplicate(t),null==nb.constructors[e]&&(nb.constructors[e]=[]),nb.constructors[e].push(t)}static checkForDuplicate(e){for(const t in nb.constructors)nb.constructors[+t].forEach(t=>{if(t===e)throw new Cm("Duplicate callback constructor.")})}static clear(){nb.constructors={}}static createCallbacks(e){const t=[];for(const n in nb.constructors){const r=+n;e>=r&&t.push(...nb.constructors[r])}return t.map(e=>new e)}}function rb(e,t,n,r,a,s,i,o,u){const l=new Qy,c=[new Jy,...nb.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const d=new Zy(c);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:d,history:l}}function ab(e,t={},n=!1){return Pm(e,h.SerializationMap.getMap().classNameMap,t,"layer",n)}function sb(e,t){return zo(()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=hc(zg(e),t,!0),r=fu(n.shape,Im()),a=tu(Iu(n,r));return Qo(e,a)})}function ib(e,t){return zo(()=>Ac(zg(yu(t,e)),-1))}function ob(e,t){return zo(()=>Ac(xu(yu(t,e)),-1))}function ub(e,t){return zo(()=>{const n=yu(e,t),r=ml(xu(e),Im(),Number.MAX_VALUE),a=xu(Qo(n,r));return eu(100,Ac(a,-1))})}function lb(e,t,n=!1){return zo(()=>{if(n)t=_d(t);else{const e=hc(t,t.shape.length-1,!0);t=Qo(t,e)}return t=ml(t,Im(),1-Im()),uc(hc(eu(e.toFloat(),ic(t)),t.shape.length-1))})}function cb(e,t,n=!1){return zo(()=>{const r=ql(function(e){const t=[Ig(e.shape)];return e.reshape(t)}(e)).toInt(),a=(t=ml(t,Im(),1-Im())).shape;return lb(Pi(r,a[a.length-1]).reshape(a),t,n)})}function db(e,t){return zo(()=>{let n;return n=ml(t,Im(),1-Im()),n=ic(Qo(n,yu(1,n))),Ac(function(e,t){if(!r.arraysEqual(e.shape,t.shape))throw new Cm(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return zo(()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())})}(e,n),-1)})}function hb(e,t){return zo(()=>{const n=sb(e,-1),r=sb(t,-1),a=eu(n,r);return uc(hc(a,-1))})}nb.constructors={};const pb={meanSquaredError:ib,meanAbsoluteError:ob,meanAbsolutePercentageError:ub,meanSquaredLogarithmicError:function(e,t){return zo(()=>{const n=ml(t,Im(),Number.MAX_VALUE),r=ic(Zo(1,n)),a=ml(e,Im(),Number.MAX_VALUE),s=ic(Zo(1,a));return Ac(zg(yu(r,s)),-1)})},squaredHinge:function(e,t){return zo(()=>{const n=Iu(0,yu(1,eu(e,t)));return Ac(zg(n),-1)})},hinge:function(e,t){return zo(()=>{const n=Iu(0,yu(1,eu(e,t)));return Ac(n,-1)})},categoricalHinge:function(e,t){return zo(()=>{const n=hc(eu(e,t),-1),r=dc(eu(yu(1,e),t),-1);return Iu(0,Zo(1,yu(r,n)))})},logcosh:function(e,t){return zo(()=>{const n=Math.log(2),r=yu(t,e),a=yu(Zo(r,lc(eu(-2,r))),n);return Ac(a,-1)})},categoricalCrossentropy:lb,sparseCategoricalCrossentropy:cb,binaryCrossentropy:db,kullbackLeiblerDivergence:function(e,t){return zo(()=>{const n=ml(e,Im(),1),r=ml(t,Im(),1);return hc(eu(e,ic(Qo(n,r))),-1)})},poisson:function(e,t){return zo(()=>{const n=ic(Zo(Im(),t));return Ac(yu(t,eu(e,n)),-1)})},cosineProximity:hb};function fb(e){if("string"==typeof e){if(e in pb)return pb[e];let t="Unknown loss "+e;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Cm(t)}return e}function mb(e,t){return zo(()=>{const n=eu(.5,Vc(t)),r=Tg(Xl(t,n),e.dtype);return Ac(Ml(e,r),-1)})}function gb(e,t){return zo(()=>Tg(Ml(Ru(e,-1),Ru(t,-1)),"float32"))}function yb(e,t){return zo(()=>Ic(e.equal(1),t.equal(1)).sum().cast("float32"))}function bb(e,t){return zo(()=>{const n=yb(e,t),r=function(e,t){return zo(()=>Ic(e.equal(0),t.equal(1)).sum().cast("float32"))}(e,t),a=n.add(r);return Ol(Xl(a,0),n.div(a),0).cast("float32")})}function xb(e,t){return db(e,t)}function wb(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),Ml(e,t).asType("float32")}const vb=lb,kb=cb,Ib={binaryAccuracy:mb,categoricalAccuracy:gb,precision:bb,categoricalCrossentropy:vb,sparseCategoricalCrossentropy:kb,mse:ib,MSE:ib,mae:ob,MAE:ob,mape:ub,MAPE:ub,cosine:hb};function Nb(e){if("string"==typeof e&&e in Ib)return Ib[e];if("string"!=typeof e&&null!=e)return e;throw new Cm("Unknown metric "+e)}function Sb(e){if(Am(null!==e,"Unknown LossOrMetricFn "+e),"string"==typeof e)return e;{let t;for(const n of Object.keys(pb))if(pb[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Ib))if(Ib[n]===e){t=n;break}return void 0!==t?t:e.name}}function Cb(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Tb(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Tb(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Tb(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Tb(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Eb(e,t,n=console.log){let r="";for(let a=0;a<e.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=e[a],r=r.slice(0,t[a]),r+=" ".repeat(t[a]-r.length);n(r)}function _b(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(_H){r="multiple"}Eb([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Ab(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(_H){a="multiple"}const s=[];for(const l of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(l)))for(let e=0;e<l.inboundLayers.length;++e)s.push(`${l.inboundLayers[e].name}[${l.nodeIndices[e]}][${l.tensorIndices[e]}]`);const i=e.name,o=e.getClassName(),u=0===s.length?"":s[0];Eb([`${i} (${o})`,a,e.countParams().toString(),u],t,r);for(let l=1;l<s.length;++l)Eb(["","","",s[l]],t,r)}function $b(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Fb(e,t){if(null===e)return null;if("string"==typeof e)return Mm(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];$b(t,a,r)?n.push(r):n.push(Fb(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Mm(n);t[e]=Fb(r,e)}}return t}}function Rb(e,t){if(null==e)return null;if("string"==typeof e)return Dm(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];$b(t,a,r)?n.push(r):n.push(Rb(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[Dm(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Rb(r,n):r}return t}}const Db="3.7.0";class Mb{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Mb)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Cm(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return bi(t,e.dtype)}catch(_H){throw new Cm(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Py){if(null==this.id2Value[e.id])throw new Cm("Nonexistent key: "+e.name);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Cm("Feed dict has no SymbolicTensor name: "+e);return this.id2Value[t]}}getMask(e){if(e instanceof Py){if(null==this.id2Value[e.id])throw new Cm("Nonexistent key: "+e.name);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Cm("Feed dict has no SymbolicTensor name: "+e);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Po(this.id2Mask)}}const Ob={},Lb={};function zb(e,t,n,a){const s=null!=n&&n.training,i=Array.isArray(e),o=i?e:[e],u=o.map(e=>e.name),l=[],c=t.names();for(const r of u)-1!==c.indexOf(r)?l.push(t.getValue(r)):l.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const d=u.join(",")+"|"+t.names().join(",");let h,p;if(null==Ob[d]){const e=function(e,t){r.assert(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],a={};if(1===e.length){const r=Bb(e[0],t);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const s of e){const{sorted:e,recipientMap:i}=Bb(s,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in i)null==a[t]&&(a[t]=new Set),i[t].forEach(e=>a[t].add(e))}}return{sorted:n,recipientCounts:Pb(a)}}(o,t);h=e.sorted,p=e.recipientCounts,Ob[d]=h,Lb[d]=p}h=Ob[d],p={},s||Object.assign(p,Lb[d]);const f=new Mb(t);for(let r=0;r<h.length;++r){if(null!=a){const e=Oo().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const e=h[r],i=e.sourceLayer;if(i instanceof Hy)continue;const o=[],c=[],d=[];let m=!1;for(const n of e.inputs){const e=f.getValue(n),r=f.getMask(n);o.push(e),c.push(r),null!=r&&(m=!0),s||(p[n.name]--,0!==p[n.name]||t.hasKey(n)||-1!==u.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||d.push(e))}m&&((n=n||{}).mask=c[0]);const g=Rm(i.apply(o,n));let y=null;i.supportsMasking&&(y=i.computeMask(o,c));const b=Wb(e),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){f.hasKey(x[t])||f.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=u.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}s||Po(d)}return f.disposeMasks(),i?l:l[0]}function Pb(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Bb(e,t){const n=new Set,r=[],a={};for(const o of t.names())n.add(o);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function Wb(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class Vb extends Uy{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=_y(e)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(e.inputs)?e.inputs.slice():[e.inputs],this.outputs=Array.isArray(e.outputs)?e.outputs.slice():[e.outputs],Wm(this.inputs).length!==this.inputs.length)throw new Cm("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map(e=>e.name));Wm(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map(e=>e.name)),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.nodeIndex,t=y.tensorIndex;this.outputLayers.push(y.sourceLayer),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(t)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;Am(0===t,"input layer has >1 nodes"),Am(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof Hy))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new Sm(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(Vb.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let s=0;s<c;s++)o(l.inputTensors[s],t,n,l.inboundLayers[s],l.nodeIndices[s],l.tensorIndices[s]);for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const y of this.outputs)o(y,u,l);const c=i.slice().reverse();for(const y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];e=Math.max(e,null==r[y.outboundLayer.id]?0:r[y.outboundLayer.id]),r[y.outboundLayer.id]=e,a[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let r=0;r<y.inboundLayers.length;r++){const a=y.inboundLayers[r].inboundNodes[y.nodeIndices[r]];t[a.id]=Math.max(e+1,null==t[a.id]?0:t[a.id]),n[a.id]=a}}const d={};for(const y in t){const e=t[y];e in d||(d[e]=[]),d[e].push(n[y])}const h={};for(const y in r){const e=r[y];e in h||(h[e]=[]),h[e].push(a[y])}let p=Object.keys(h).map(e=>parseInt(e,10)).sort(Bm);this.layers=[];for(const y of p){const e=h[y];e.sort((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0});for(const t of e)t instanceof Vb&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=h,p=Object.keys(d).map(e=>parseInt(e,10)).sort(Bm);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of d[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Sm("Graph disconnected: cannot obtain value for tensor "+n+` at layer "${t.name}". The following previous layers were accessed without issue: `+m);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=d;const g=this.layers.map(e=>e.name);for(const y of g){const e=g.filter(e=>e===y).length;if(1!==e)throw new Sm(`The name "${y}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Wy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Cm("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const s of this.layers)for(const e of s.weights){if(null!=n[e.originalName])throw new Cm("Duplicate weight name: "+e.originalName);n[e.originalName]=e,r++}const a=[];for(const s in e){let r=s;if(null==n[s]){const e=s.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])a.push([n[r],e[s]]);else if(t)throw new Cm("Provided weight data has no target variable: "+s);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Cm(`${e.length} of ${r} weights are not set: `+e)}Ly(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers "+Db,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Rb(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return zo(()=>{e=Rm(e);const n=new Mb;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return zb(this.outputs,n,t)})}computeMask(e,t){return zo(()=>{let n;return e=Rm(e),n=null==t?_m(null,e.length):Rm(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){const t=$y(e);if(t.length!==this.inputLayers.length)throw new Cm(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++)n[this.inputLayers[i].name+"_0_0"]=t[i];const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(Bm);if(r.length>1)for(const i of r){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(e.id))continue;const r=[];for(let i=0;i<t.inboundLayers.length;i++)r.push(n[`${t.inboundLayers[i].name}_${t.nodeIndices[i]}_${t.tensorIndices[i]}`]);const a=$y(e.computeOutputShape(Fm(r))),s=e.inboundNodes.indexOf(t);for(let t=0;t<a.length;t++)n[`${e.name}_${s}_${t}`]=a[t]}}const a=[],s=[];for(let i=0;i<this.outputLayers.length;i++)s.push(`${this.outputLayers[i].name}_${this.outputLayersNodeIndices[i]}_${this.outputLayersTensorIndices[i]}`);for(let i=0;i<s.length;i++){const e=s[i];Am(e in n),a.push(n[e])}return Fm(a)}runInternalGraph(e,t){null==t&&(t=_m(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o)n[this.inputs[o].id]=[e[o],t[o]];const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(Bm);for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,a=t.outputTensors,s=new Array;for(const t of r)t.id in n&&s.push(n[t.id]);if(s.length===r.length){let r,i,o,u,l={};if(null!=t.callArgs&&(l=t.callArgs),1===s.length){const[t,n]=s[0];null==l.mask&&(l.mask=n),o=Rm(e.call(t,l)),u=Rm(e.computeMask(t,n)),r=[t],i=[n]}else r=s.map(e=>e[0]),i=s.map(e=>e[1]),null==l.mask&&(l.mask=i),o=Rm(e.call(r,l)),u=Rm(e.computeMask(r,i));if(e.activityRegularizer)throw new Tm("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e)n[a[e].id]=[o[e],u[e]]}}}const a=[],s=[],i=[];for(const o of this.outputs){Am(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];i.push(e.shape),a.push(e),s.push(t)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof Vb?1:0;for(let e=0;e<r.inboundNodes.length;e++){const a=Vb.nodeKey(r,e);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Cm(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Cm("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===e)return n;throw new Cm("No such layer: "+e)}calculateLosses(){return zo(()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Vb.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const s of this.layers){const e=s.getClassName(),r=s.getConfig(),a=[];for(let n=0;n<s.inboundNodes.length;n++){const e=s.inboundNodes[n],r=Vb.nodeKey(s,n);let i={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch(_H){console.warn(`Layer ${s.name} was passed non-serializable keyword arguments: `+e.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),i={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],s=e.tensorIndices[r];let o=t[Vb.nodeKey(a,e.nodeIndices[r])];null==o&&(o=0),n.push([a.name,o,s,i])}a.push(n)}}}const i={};i.name=s.name,i.className=e,i.config=r,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let s=0;s<this.inputLayers.length;s++){const e=this.inputLayers[s],n=Vb.nodeKey(e,this.inputLayersNodeIndices[s]);if(!this.containerNodes.has(n))continue;let a=t[n];null==a&&(a=0),r.push([e.name,a,this.inputLayersTensorIndices[s]])}e.inputLayers=r;const a=[];for(let s=0;s<this.outputLayers.length;s++){const e=this.outputLayers[s],n=Vb.nodeKey(e,this.outputLayersNodeIndices[s]);if(!this.containerNodes.has(n))continue;let r=t[n];null==r&&(r=0),a.push([e.name,r,this.outputLayersTensorIndices[s]])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],u=s[1],l=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const c=a[o];if(c.inboundNodes.length<=u)return void i(e,t);n.push(c.inboundNodes[u].outputTensors[l])}n.length>0&&e.apply(Fm(n),r)}function u(e){const n=e.name,s=ab(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new Cm("Corrupted configuration, expected array for nodeData: "+e);i(s,e)})}const l=t.name,c=t.layers;for(const m of c)u(m);for(;!Vm(s);)for(const e of c){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const d=[],h=[],p=t.inputLayers;for(const m of p){const e=m[0],t=m[1],n=m[2];Am(e in a),d.push(a[e].inboundNodes[t].outputTensors[n])}const f=t.outputLayers;for(const m of f){const e=m[0],t=m[1],n=m[2];Am(e in a),h.push(a[e].inboundNodes[t].outputTensors[n])}return new e({inputs:d,outputs:h,name:l})}get stateful(){if(this._stateful)throw new Cm("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){zo(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function Ub(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided classWeight is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach(t=>{n.push(t in e?e[t]:null)}),n}throw new Error(`The model has multiple (${r}) outputs, so classWeight must be either an array with ${r} elements or an object with ${t} keys. Provided classWeight not understood: ${JSON.stringify(e)}`)}(e,t)}async function Gb(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=zo(()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1)return e.argMax(1);if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await t.data());Po(t);const a=[];return r.forEach(e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])}),Wd(a,"float32")}return null}function Hb(e,t){return eu(e,t)}function jb(e,t){let n,a;n=t.xs,a=t.ys,r.assert(null!=n&&null!=a,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+t);const s=qb("input",e.inputNames,n),i=qb("output",e.outputNames,a),o=s[0].shape[0];r.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: `+JSON.stringify(e.inputNames)+")"),r.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: `+JSON.stringify(e.outputNames)+")");for(let u=0;u<s.length;u++)r.assert(s[u].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[u]} has ${s[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let u=0;u<i.length;u++)r.assert(i[u].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[u]} has ${i[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function qb(e,t,n){if(n instanceof Ha)return[n];if(Array.isArray(n))return r.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{const r=[];for(const a of t){if(null==n[a])throw new Cm(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function Kb(e){return"function"==typeof e.iterator}function Xb(e){r.assert(e>0&&Number.isInteger(e),()=>"batchSize is required to be a positive integer, but got "+e)}function Yb(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>_g(e,t,n-t)):_g(e,t,n-t)}function Zb(e,t){return zo(()=>null==e?null:Array.isArray(e)?e.map(e=>Zb(e,t)):Lg(e,"int32"===t.dtype?t:t.toInt()))}function Jb(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function Qb(e){const t=[];e instanceof Ha&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Eg(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function ex(e,t){if(null==e)return;const n=[];if(t instanceof Ha)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(const a in t)n.push(t[a].id);const r=[];if(e instanceof Ha)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&r.push(e)});else if(null!=e)for(const a in e){const t=e[a];-1===n.indexOf(t.id)&&r.push(t)}r.forEach(e=>{e.isDisposed||e.dispose()})}function tx(e){return Array.isArray(e)}function nx(e){return!function(e){return e instanceof Ha}(e)&&!tx(e)}function rx(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(tx(e)&&e.length>0)t=!0;else if(nx(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Cm(`Error when checking model ${a} expected no data, but got `+e)}return[]}if(null==e)return t.map(e=>null);let s;if(nx(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new Cm(`No data provided for "${n}". Need data for each key in: `+t);s.push(e[n])}}else if(tx(e)){if((e=e).length!==t.length)throw new Cm(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): `+e);s=e}else{if(e=e,t.length>1)throw new Cm(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape `+e.shape);s=[e]}if(s=Qb(s),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=s[i];if(e.shape.length!==n[i].length)throw new Cm(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape `+e.shape);for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;const o=e.shape[s],u=n[i][s];if(null!=u&&u>=0&&o!==u)throw new Cm(`Error when checking ${a}: expected ${t[i]} to have shape [${n[i]}], but got array with shape [${e.shape}].`)}}return s}function ax(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new Cm(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new Cm(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape `+JSON.stringify(e.shape)+".");s=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=s[i];if(e.shape.length!==n[i].length)throw new Cm(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape `+JSON.stringify(e.shape));for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;const o=e.shape[s],u=n[i][s];if(null!=u&&u!==o)throw new Cm(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}class sx extends Vb{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Cm("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(const a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){t=!1;break}r.push(...a)}if(t)for(const a of e.layers){let e=!1;for(const n of a.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Eb(s,n,r),r("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)a?_b(o[c],n,r):Ab(o[c],n,i,r),r((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=Dy(null!=e.collectedTrainableWeights?e.collectedTrainableWeights:e.trainableWeights),t}(e),l=Dy(e.nonTrainableWeights);r("Total params: "+(u+l)),r("Trainable params: "+u),r("Non-trainable params: "+l),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>wp.adagrad(.01),Adadelta:()=>wp.adadelta(1,.95,Im()),Adam:()=>wp.adam(.001,.9,.999,Im()),Adamax:()=>wp.adamax(.002,.9,.999,Im(),0),RMSProp:()=>wp.rmsprop(.001,.9,0,Im()),SGD:()=>wp.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Cm("Unknown Optimizer "+e)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof hu))throw new Cm("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Cm(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(e=>fb(e))}else{const n=fb(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Cm(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: `+this.outputNames);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(fb(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const e=this.internalOutputShapes[s];this.feedOutputNames.push(this.outputNames[s]),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],bg("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+e);n=e}if(Array.isArray(n))return t.map(e=>n);{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};bg("metric",()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===db?-1!==["accuracy","acc"].indexOf(i)?r=mb:-1!==["crossentropy","ce"].indexOf(i)&&(r=xb):this.lossFunctions[e]===cb?-1!==["accuracy","acc"].indexOf(i)?r=wb:-1!==["crossentropy","ce"].indexOf(i)&&(r=kb):-1!==["accuracy","acc"].indexOf(i)?r=gb:-1!==["crossentropy","ce"].indexOf(i)&&(r=vb),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=Nb(i);s=e,n=""+Sb(i)}let t;bg(n,()=>{t=s}),a(e,n,t)}})(r[e])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Xb(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);return this.makeTestFunction(),Fm(this.testLoop(this.testFunction,s,r,n.verbose,n.steps))}finally{ex(a[0],e),ex(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,s=e.testFunction;let i=[];if(n.verbose>0)throw new Tm("Verbose mode is not implemented yet.");r.assert(!a||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches));const o="function"==typeof t.next?t:await t.iterator();let u=0,l=0;for(;!a||l<n.batches;){const t=await o.next();if(i=zo(()=>{if(t.value){const{xs:n,ys:r}=jb(e,t.value),a=n.concat(r),o=zo(()=>s(a));if(Po(a),0===l)for(let e=0;e<o.length;++e)i.push(du(0));const c=a[0].shape[0];for(let e=0;e<o.length;++e){const t=o[e],n=i[e];i[e]=zo(()=>Zo(i[e],eu(c,t))),l>0&&Po(n)}Po(o),u+=c,++l}return i}),t.done){a&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let r=0;r<i.length;++r){const e=i[r];i[r]=Qo(i[r],u),Po(e)}return Fm(i)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new Cm(`If ${r} is set, batchSize must be null or undefined.Got batchSize = `+t)}else{if(null==e)throw new Cm("Either the input data should have a defined shape, or "+r+" shoud be specified.");a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Cm("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=this.retrieveSymbolicTensors(n?t:[t]),a=new Mb;if(e instanceof Ha&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Cm(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new Cm("No value is provided for the model's input "+i.name);a.add(i,t)}const s=zb(r,a);return n?s:s[0]}retrieveSymbolicTensors(e){const t=_m(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map(e=>e.name);for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach((t,r)=>{null==t&&n.push(e[r])}),new Cm("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return t}predictLoop(e,t=32,n=!1){return zo(()=>{const r=this.checkNumSamples(e);if(n)throw new Tm("Verbose predictLoop() is not implemented yet.");const a=Jb(r,t),s=this.outputs.map(e=>[]);for(let t=0;t<a.length;++t)zo(()=>{const n=Yb(e,a[t][0],a[t][1]),r=[];if(Array.isArray(n))for(let e=0;e<n.length;++e)r.push({key:this.inputs[e],value:n[e]});else r.push({key:this.inputs[0],value:n});const s=new Mb(r);return zb(this.outputs,s)}).forEach((e,t)=>s[t].push(e));return Fm(s.map(e=>nl(e,0)))})}predict(e,t={}){const n=Qb(e);ax(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return Xb(r),this.predictLoop(n,r)}finally{ex(n,e)}}predictOnBatch(e){ax(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,a){if(null==this.optimizer_)throw new Sm("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];s.push(this.feedLossFns[r]===cb?e.slice(0,e.length-1).concat([1]):e)}if(function(e,t,n){const a=Wm(e.map(e=>e.shape[0]));a.sort();const s=Wm(t.map(e=>e.shape[0]));if(s.sort(),a.length>1)throw new Cm("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map(e=>e.shape)));if(s.length>1)throw new Cm("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map(e=>e.shape)));if(a.length>0&&s.length>0&&!r.arraysEqual(a,s))throw new Cm(`Input Tensors should have the same number of samples as target Tensors. Found ${a[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=rx(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=rx(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[ib,db,lb];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===lb&&1===s.shape[s.shape.length-1])throw new Cm(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new Cm(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=a&&a>0&&e[0].shape[0]%a!=0)throw new Cm(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=Ub(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Gb(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,a){return zo(()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new Tm("Verbose mode is not implemented yet.");if(null!=a)throw new Tm("steps mode in testLoop() is not implemented yet");{const r=Jb(s,n),a=Wd(Cg(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=_g(a,s,o-s),l=Zb(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(du(0));for(let e=0;e<c.length;++e)i[e]=Zo(i[e],eu(o-s,c[e]))}for(let e=0;e<i.length;++e)i[e]=Qo(i[e],s)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;$m(e,r)>1&&(a+="_"+$m(e.slice(0,n),r)),t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Mb(e),o=zb(this.outputs,i,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(r[n],o[n]);null!=a[n]&&(e=Hb(e,a[n]));const s=Ac(e);t.push(s),u=0===n?e:Zo(u,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][1];e=Ac((0,this.metricsTensors[n][0])(r[t],o[t]))}Bo(e),s.push(e)}return u=Ac(u),this.calculateLosses().forEach(e=>{u=Zo(u,e)}),u},!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>zo(()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new Mb(s),o=zb(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=Ac((0,this.lossFunctions[e])(a[e],o[e]));n=0===e?r:Zo(n,r),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][1],r=Ac((0,this.metricsTensors[e][0])(a[n],o[n]));t.push(r)}return t})}async fit(e,t,n={}){return async function(e,t,n,a={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,i,o,u,l,c,d;e.isTraining=!0;try{const h=null==a.batchSize?32:a.batchSize;Xb(h);const p=!1,f=await e.standardizeUserData(t,n,a.sampleWeight,a.classWeight,p,h);s=f[0],i=f[1],d=f[2];let m,g=!1;if(null!=a.validationData&&a.validationData.length>0){if(g=!0,2!==a.validationData.length)throw 3===a.validationData.length?new Tm("validationData including sample weights is not supported yet."):new Cm("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+a.validationData+" is invalid.");o=a.validationData[0],u=a.validationData[1];const t=!0,n=await e.standardizeUserData(o,u,null,null,t,h);l=n[0],c=n[1],m=l.concat(c)}else if(null!=a.validationSplit&&a.validationSplit>0&&a.validationSplit<1){g=!0;const e=Math.floor(s[0].shape[0]*(1-a.validationSplit)),t=s[0].shape[0];l=Yb(s,e,t),s=Yb(s,0,e),c=Yb(i,e,t),i=Yb(i,0,e),m=l.concat(c)}else null!=a.validationSteps&&(g=!0);const y=s.concat(i).concat(d);e.checkTrainableWeightsConsistency();const b=e.makeTrainFunction(),x=e.getDedupedMetricsNames();let w,v;g?(e.makeTestFunction(),w=e.testFunction,v=x.slice().concat(x.map(e=>"val_"+e))):(w=null,m=[],v=x.slice());const k=tb(a.callbacks,a.yieldEvery);return await async function(e,t,n,a,s,i,o,u,l,c,d,h,p,f,m){null==s&&(s=32),null==i&&(i=1),null==d&&(d=!0),null==p&&(p=0);let g=!1;null!=l&&null!=c&&(g=!0);const y=e.checkNumSamples(n,s,null,"steps_per_epoch");let b;null!=y&&(b=Cg(0,y)),null==o&&(o=1);const{callbackList:x,history:w}=rb(u,o,i,p,y,null,s,g,h);x.setModel(e),e.history=w,await x.onTrainBegin(),e.stopTraining_=!1;for(let v=p;v<i;++v){await x.onEpochBegin(v);const i={};{if("batch"===d)throw new Tm("batch shuffling is not implemneted yet");d&&r.shuffle(b);const o=Wd(b),u=Jb(y,s);for(let r=0;r<u.length;++r){const d={};if(await x.onBatchBegin(r,d),zo(()=>{const h=u[r][0],p=u[r][1],f=_g(o,h,p-h);d.batch=r,d.size=p-h;const m=Zb(n,f),y=t(m);for(let e=0;e<a.length;++e){const t=y[e];d[a[e]]=t,Bo(t)}if(r===u.length-1&&g){const t=e.testLoop(l,c,s);for(let e=0;e<a.length;++e){const n=a[e],r=t[e];Bo(r),i["val_"+n]=r}}}),await x.onBatchEnd(r,d),Ky(d),e.stopTraining_)break}o.dispose()}if(await x.onEpochEnd(v,i),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,b,y,x,h,a.epochs,a.verbose,k,w,m,a.shuffle,v,a.initialEpoch)}finally{e.isTraining=!1,ex(s,t),ex(i,n),ex(l,o),ex(c,u),null!=d&&Po(d)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const a=null!=n.batchesPerEpoch;if(r.assert(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),r.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),r.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs),r.assert(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch),r.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let i,o;if(s)if(Kb(n.validationData))r.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches);else{const e=function(e){if(3===e.length)throw new Tm("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,o=e.ys}const u=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let c;c=s?l.slice().concat(l.map(e=>"val_"+e)):l.slice();const d=tb(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=rb(d,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,c);p.setModel(e),e.history=f,await p.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const r={};await p.onEpochBegin(m);let c=0,d=0;for(a||(g=await t.iterator());!a||c<n.batchesPerEpoch;){const t=await g.next();if(a&&t.done){console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+c+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=jb(e,t.value),s={};s.batch=d,s.size=r[0].shape[0],await p.onBatchBegin(d,s);const i=[];if(null!=n.classWeight){const t=Ub(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Gb(a[e],null,t[e]))}const o=r.concat(a).concat(i),h=u(o);Po(o);for(let e=0;e<l.length;++e){const t=h[e];s[l[e]]=t,Bo(t)}await p.onBatchEnd(d,s),Ky(s),d++,c++}if(a?c>=n.batchesPerEpoch:t.done){if(s){let t;t=Kb(n.validationData)?Rm(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Rm(e.evaluate(i,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)r["val_"+e.metricsNames[n]]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(m,r),m++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const o of s){const e=await o.data();i.push(e[0])}return Po(s),Fm(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||t.push({name:r[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Oo().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Oo().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Dm(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>Dm(e))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Dm(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Dm(Sb(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Dm(Sb(e)));{const e={};for(const t in this.metrics)e[t]=Dm(Sb(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=ab(Fb(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Mm(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(e=>Mm(e));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Mm(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map(e=>Mm(e));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Mm(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=i.getSaveHandlers(e);if(0===t.length)throw new Cm(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Cm(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Cm("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await i.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v"+Db,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await i.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=i.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&(Cb(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Cb(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}sx.className="Model",h.registerClass(sx);class ix extends sx{}async function ox(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);const r=ab(Fb(n),t);if(null!=e.weightsManifest){const t=await i.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(e=>e.originalName)),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),Po(t)}return r}ix.className="Functional",h.registerClass(ix);class ux extends sx{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:_y("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new Cm("Negative dimension size caused by adding layer "+e.name+" with input shape ["+e.inboundNodes[0].inputTensors[0].shape+"]")}add(e){const t=e instanceof ux||e instanceof sx;let n;if(t){if(n=e,1!==n.outputs.length)throw new Cm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Cm("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Cm("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=jy({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Cm(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Cm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Gy(this.outputs[0])}this.inboundNodes=[],new Wy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:_m(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Ry(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new sx({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Sm("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Sm("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Sm("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Sm("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},a=!1){let s,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Cm("Legacy serialization format not supported yet.");s=t}else r.assert(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,i=t;const o=new e(i);if(!(o instanceof ux))throw new Tm("Sequential.fromConfig called on non-Sequential input: "+o);for(const r of s){const e=ab(r,void 0,a);a&&e.setFastWeightInitDuringBuild(!0),o.add(e)}return o}set stopTraining(e){if(null==this.model)throw new Cm("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Cm("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function lx(e){return new sx(e)}function cx(e){return new ux(e)}function dx(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=i.getLoadHandlers(e,t);if(0===n.length)n.push(i.browserHTTPRequest(e,t));else if(n.length>1)throw new Cm(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new Cm("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let a=r.modelTopology;null!=a.model_config&&(a=a.model_config);const s=null==n.strict||n.strict,o=null!=r.weightData&&null!=r.weightSpecs&&s,u=ab(Fb(a),void 0,o),l=r.trainingConfig;if(null!=l&&u.loadTrainingConfig(l),null!=r.userDefinedMetadata&&u.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new Cm("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=i.decodeWeights(e,t),r={},a=[];return t.forEach(e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]}),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);u.loadWeights(e,s),null!=u.optimizer&&t.length>0&&await u.optimizer.setWeights(t),Po(e),Po(t.map(e=>e.tensor))}return u}(e,0,t)}(e,t)}function hx(e){return jy(e)}function px(e,t){nb.registerCallbackConstructor(e,t)}ux.className="Sequential",h.registerClass(ux);class fx extends h.Serializable{getConfig(){return{}}}class mx extends fx{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Tm(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Bl(e)}(e,t)}}mx.className="elu",h.registerClass(mx);class gx extends fx{apply(e){return xd(e)}}gx.className="selu",h.registerClass(gx);class yx extends fx{apply(e){return cd(e)}}yx.className="relu",h.registerClass(yx);class bx extends fx{apply(e){return zo(()=>Mc(6,cd(e)))}}bx.className="relu6",h.registerClass(bx);class xx extends fx{apply(e){return e}}xx.className="linear",h.registerClass(xx);class wx extends fx{apply(e){return rl(e)}}wx.className="sigmoid",h.registerClass(wx);class vx extends fx{apply(e){return function(e){return zo(()=>{const t=Zo(.5,eu(.2,e));return ml(t,0,1)})}(e)}}vx.className="hardSigmoid",h.registerClass(vx);class kx extends fx{apply(e){return lc(e)}}kx.className="softplus",h.registerClass(kx);class Ix extends fx{apply(e){return function(e){return zo(()=>Qo(e,xu(e).add(1)))}(e)}}Ix.className="softsign",h.registerClass(Ix);class Nx extends fx{apply(e){return sl(e)}}Nx.className="tanh",h.registerClass(Nx);class Sx extends fx{apply(e,t=-1){return _d(e,t)}}Sx.className="softmax",h.registerClass(Sx);class Cx extends fx{apply(e,t=-1){return pc(e,t)}}Cx.className="logSoftmax",h.registerClass(Cx);class Tx extends fx{apply(e,t=1){return zo(()=>rl(e.mul(t)).mul(e))}}Tx.className="swish",h.registerClass(Tx);class Ex extends fx{apply(e){return zo(()=>eu(e,sl(lc(e))))}}function _x(e){return e.getClassName()}function Ax(e,t={}){return Pm(e,h.SerializationMap.getMap().classNameMap,t,"activation")}function $x(e){if(null==e)return Ax({className:"linear",config:{}});if("string"==typeof e){const t={};return t.className=e,t.config={},Ax(t)}return e instanceof fx?e:Ax(e)}function Fx(e){if(null!=e&&"object"!=typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+e)}Ex.className="mish",h.registerClass(Ex);class Rx extends h.Serializable{}class Dx extends Rx{constructor(e){super(),Fx(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return zo(()=>{let t=$c([1]);return this.hasL1&&(t=Zo(t,hc(eu(this.l1,xu(e))))),this.hasL2&&(t=Zo(t,hc(eu(this.l2,zg(e))))),t.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Dx.className="L1L2",h.registerClass(Dx);const Mx={l1l2:"L1L2"};function Ox(e){return Lm(e)}function Lx(e,t={}){return Pm(e,h.SerializationMap.getMap().classNameMap,t,"regularizer")}function zx(e){return null==e?null:"string"==typeof e?Lx({className:e in Mx?Mx[e]:e,config:{}}):e instanceof Rx?e:Lx(e)}class Px extends Uy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Fy(e);let n=cd(e);return null!=this.maxValue&&(n=ml(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Px.className="ReLU",h.registerClass(Px);class Bx extends Uy{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Fy(e);return tc(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Bx.className="LeakyReLU",h.registerClass(Bx);class Wx extends Uy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=cy(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=zx(e.alphaRegularizer),this.alphaConstraint=rg(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Cm("Expected sharedAxes to be a number or an array of numbers, but got "+e.sharedAxes);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Ry(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new zy({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Fy(e),Zc(e,this.alpha.read())}getConfig(){const e={alphaInitializer:ly(this.alphaInitializer),alphaRegularizer:Ox(this.alphaRegularizer),alphaConstraint:tg(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Wx.className="PReLU",h.registerClass(Wx);class Vx extends Uy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Tm(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Fy(e);return Bl(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Vx.className="ELU",h.registerClass(Vx);class Ux extends Uy{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Fy(e);return n.mul(Tg(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Ux.className="ThresholdedReLU",h.registerClass(Ux);class Gx extends Uy{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Sx).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Fy(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Hx(e,t,n){if("number"==typeof e)return _m(e,t);if(e.length!==t)throw new Cm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new Cm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number `+s)}return e;var r}function jx(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function qx(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Sg([n-t,0]);else{if("same"!==r)throw new Cm(`Unsupport padding mode: ${r}.`);e*=t}return e}function Kx(e,t){return zo(()=>(fg(t),"channelsFirst"===t?Bi(e,[0,2,3,1]):e))}function Xx(e,t){return zo(()=>(fg(t),"channelsFirst"===t?Bi(e,[0,2,3,4,1]):e))}function Yx(e,t,n,r=[1,1],a="valid",s,i,o=null){return zo(()=>{if(null==s&&(s="channelsLast"),fg(s),3!==e.rank&&4!==e.rank)throw new Cm(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Cm(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Kx(e,s);if("causal"===a)throw new Tm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=f.conv2d({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=Bi(u,[0,3,1,2])),u})}Gx.className="Softmax",h.registerClass(Gx);class Zx extends Uy{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Zx.verifyArgs(t),this.rank=e,Hm(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Tm(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Hx(t.kernelSize,e,"kernelSize"),this.strides=Hx(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,mg(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,fg(this.dataFormat),this.activation=$x(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=cy(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=rg(t.biasConstraint),this.biasRegularizer=zx(t.biasRegularizer),this.activityRegularizer=zx(t.activityRegularizer),this.dilationRate=Hx(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Cm("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Cm("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Cm("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(e){if(Am("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Gm(e.kernelSize,"number",1,3))throw new Cm(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:_x(this.activation),useBias:this.useBias,biasInitializer:ly(this.biasInitializer),biasRegularizer:Ox(this.biasRegularizer),activityRegularizer:Ox(this.activityRegularizer),biasConstraint:tg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Jx extends Zx{constructor(e,t){super(e,t),this.kernel=null,Jx.verifyArgs(t),this.filters=t.filters,Hm(this.filters,"filters"),this.kernelInitializer=cy(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=rg(t.kernelConstraint),this.kernelRegularizer=zx(t.kernelRegularizer)}build(e){e=Ry(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Cm("The channel dimension of the input should be defined. Found "+e[t]);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return zo(()=>{let t;e=Fy(e);const n=null==this.bias?null:this.bias.read(),r=qm(this.activation.getClassName());if(null!=r&&2===this.rank)t=Yx(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return zo(()=>{if(null==s&&(s="channelsLast"),fg(s),3!==e.shape.length)throw new Cm("The input of a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead.");if(3!==t.shape.length)throw new Cm("The kernel for a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new Cm("The bias for a conv1dWithBias operation should be 1, but is "+t.shape.length+" instead");if("channelsFirst"===s&&(e=Bi(e,[0,2,1])),"causal"===a)throw new Tm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=vl(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=Bg(o,n)),o})}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Yx(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Tm("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return zo(()=>{if(null==s&&(s="channelsLast"),fg(s),4!==e.rank&&5!==e.rank)throw new Cm("conv3dWithBias expects input to be of rank 4 or 5, but received "+e.rank+".");if(4!==t.rank&&5!==t.rank)throw new Cm("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+e.rank+".");let o=Xx(e,s);if("causal"===a)throw new Tm("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Nl(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=Bg(o,n)),"channelsFirst"===s&&(o=Bi(o,[0,4,1,2,3])),o})}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=Ry(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<n.length;++a){const e=jx(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:ly(this.kernelInitializer),kernelRegularizer:Ox(this.kernelRegularizer),kernelConstraint:tg(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Cm("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(e.filters))}}class Qx extends Jx{constructor(e){super(2,e),Qx.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Gm(e.kernelSize,"number",1,2))throw new Cm(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Qx.className="Conv2D",h.registerClass(Qx);class ew extends Jx{constructor(e){super(3,e),ew.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Cm(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}ew.className="Conv3D",h.registerClass(ew);class tw extends Qx{constructor(e){if(super(e),this.inputSpec=[new zy({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Cm("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(e){if(4!==(e=Ry(e)).length)throw new Cm("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Cm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new zy({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return zo(()=>{let t=Fy(e);if(4!==t.shape.length)throw new Cm("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+t.shape.length);const n=t.shape;let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const s=n[a],i=this.kernelSize[1],o=this.strides[1],u=[n[0],qx(n[r],this.strides[0],this.kernelSize[0],this.padding),qx(s,o,i,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Bi(t,[0,2,3,1]));let l=Il(t,this.kernel.read(),u,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(l=Bi(l,[0,3,1,2])),null!=this.bias&&(l=Bg(l,this.bias.read(),this.dataFormat)),null!=this.activation&&(l=this.activation.apply(l)),l})}computeOutputShape(e){const t=(e=Ry(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=qx(t[r],o,s,this.padding),t[a]=qx(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}tw.className="Conv2DTranspose",h.registerClass(tw);class nw extends ew{constructor(e){if(super(e),this.inputSpec=[new zy({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Cm("Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(e){if(5!==(e=Ry(e)).length)throw new Cm("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Cm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new zy({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return zo(()=>{let t=Fy(e);if(5!==t.shape.length)throw new Cm("Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+t.shape.length);const n=t.shape;let r,a,s;"channelsFirst"===this.dataFormat?(s=2,r=3,a=4):(s=1,r=2,a=3);const i=n[r],o=n[a],u=this.kernelSize[1],l=this.kernelSize[2],c=this.strides[1],d=this.strides[2],h=[n[0],qx(n[s],this.strides[0],this.kernelSize[0],this.padding),qx(i,c,u,this.padding),qx(o,d,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Bi(t,[0,2,3,4,1]));let p=Cl(t,this.kernel.read(),h,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Bi(p,[0,4,1,2,3])),null!==this.bias&&(p=Bg(p,this.bias.read(),this.dataFormat)),null!==this.activation&&(p=this.activation.apply(p)),p})}computeOutputShape(e){const t=(e=Ry(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=qx(t[r],l,i,this.padding),t[a]=qx(t[a],c,o,this.padding),t[s]=qx(t[s],d,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}nw.className="Conv3DTranspose",h.registerClass(nw);class rw extends Jx{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Cm("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Cm("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Cm(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received `+JSON.stringify(t.padding));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=cy(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=zx(t.depthwiseRegularizer),this.depthwiseConstraint=rg(t.depthwiseConstraint),this.pointwiseInitializer=cy(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=zx(t.pointwiseRegularizer),this.pointwiseConstraint=rg(t.pointwiseConstraint)}build(e){if((e=Ry(e)).length<this.rank+2)throw new Cm(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Cm("The channel dimension of the inputs should be defined, but found "+JSON.stringify(e[t]));const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):null,this.inputSpec=[new zy({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return zo(()=>{let t;if(e=Fy(e),1===this.rank)throw new Tm("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Bi(e,[0,2,3,1])),t=wd(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Bg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Bi(t,[0,3,1,2])),t})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=ly(this.depthwiseInitializer),e.pointwiseInitializer=ly(this.pointwiseInitializer),e.depthwiseRegularizer=Ox(this.depthwiseRegularizer),e.pointwiseRegularizer=Ox(this.pointwiseRegularizer),e.depthwiseConstraint=tg(this.depthwiseConstraint),e.pointwiseConstraint=tg(this.pointwiseConstraint),e}}rw.className="SeparableConv";class aw extends rw{constructor(e){super(2,e)}}aw.className="SeparableConv2D",h.registerClass(aw);class sw extends Jx{constructor(e){super(1,e),sw.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Gm(e.kernelSize,"number",1,1))throw new Cm(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}sw.className="Conv1D",h.registerClass(sw);class iw extends Uy{constructor(e){super(e),this.cropping="number"==typeof e.cropping?[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return zo(()=>{if(e=Fy(e),"channelsLast"===this.dataFormat){const t=$g(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return $g(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=$g(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return $g(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}iw.className="Cropping2D",h.registerClass(iw);class ow extends Uy{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,fg(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,Um(lg,"InterpolationFormat",this.interpolation)}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],null==e[2]?null:this.size[0]*e[2],null==e[3]?null:this.size[1]*e[3]]:[e[0],null==e[1]?null:this.size[0]*e[1],null==e[2]?null:this.size[1]*e[2],e[3]]}call(e,t){return zo(()=>{let t=Fy(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Bi(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return Bi(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}ow.className="UpSampling2D",h.registerClass(ow);class uw extends Zx{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=cy(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=rg(e.depthwiseConstraint),this.depthwiseRegularizer=zx(e.depthwiseRegularizer)}build(e){if((e=Ry(e)).length<4)throw new Cm(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Cm(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return zo(()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return zo(()=>{null==a&&(a="channelsLast"),fg(a);let i=Kx(e,a);if(4!==e.rank)throw new Cm("Input for depthwiseConv2d is required to be 4-D, but is instead "+e.rank+"-D");if(4!==t.rank)throw new Cm("depthwiseKernel is required to be 4-D, but is instead "+t.rank+"-D");return i=Fl(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Bi(i,[0,3,1,2])),i})}(e=Fy(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Bg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=Ry(e);const t="channelsFirst"===this.dataFormat?e[3]:e[2],n="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=jx("channelsFirst"===this.dataFormat?e[2]:e[1],this.kernelSize[0],this.padding,this.strides[0]),a=jx(t,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],n,r,a]:[e[0],r,a,n]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=ly(this.depthwiseInitializer),e.depthwiseRegularizer=Ox(this.depthwiseRegularizer),e.depthwiseConstraint=tg(this.depthwiseRegularizer),e}}function lw(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Cm("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function cw(e,t,n,r=!1,a,s,i=!1,o=!1){return zo(()=>{const u=t.shape.length;if(u<3)throw new Cm(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(Cg(2,u));if(t=Bi(t,l),null!=s)throw new Tm("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=a.asType("bool").asType("float32")).rank===u-1&&(a=Ul(a,-1)),a=Bi(a,l)),r&&(t=hd(t,0),null!=a&&(a=hd(a,0)));const c=[];let d,h=n;const p=t.shape[0],f=Yd(t);let m,g;null!=a&&(m=Yd(a));for(let t=0;t<p;++t){const n=f[t],r=zo(()=>e(n,h));if(null==a)d=r[0],h=r[1];else{const e=zo(()=>{const e=m[t],n=Vc(e).sub(e);return{output:r[0].mul(e).add(h[0].mul(n)),newStates:h.map((t,a)=>r[1][a].mul(e).add(t.mul(n)))}});d=e.output,h=e.newStates}o&&c.push(d)}return o&&(g=Ld(c,1)),[d,g,h]})}uw.className="DepthwiseConv2D",h.registerClass(uw);class dw extends Uy{constructor(e){let t;if(super(e),null==e.cell)throw new Cm("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new xw({cells:e.cell}):e.cell,null==t.stateSize)throw new Cm("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new zy({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Cg(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Ay(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return zo(()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Tm("Constants support is not implemented in RNN yet.");Ay(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new zy({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let s;if(this.cell.build(a),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!r.arraysEqual(this.stateSpec.map(e=>e.shape[e.shape.length-1]),s))throw new Cm(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is `+this.cell.stateSize)}else this.stateSpec=s.map(e=>new zy({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){zo(()=>{if(!this.stateful)throw new Nm("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Cm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>$c([n,e])):[$c([n,this.cell.stateSize])];else if(null==e)Po(this.states_),null!=this.keptStates&&(Po(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>$c([n,e])):this.states_[0]=$c([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Cm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: `+e);!0===t?this.keptStates.push(this.states_.slice()):Po(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,s];if(!r.arraysEqual(a.shape,i))throw new Cm(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${a.shape}`);this.states_[t]=a}}this.states_=this.states_.map(e=>Bo(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=lw(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new zy({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Py){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return zo(()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=Fy(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new Cm(`RNN Layer has ${s} state(s) but was passed `+a.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=cw((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]},e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const d=this.returnSequences?l:u;return this.returnState?[d].concat(c):d})}getInitialState(e){return zo(()=>{let t=$c(e.shape);return t=hc(t,[1,2]),t=Eg(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?Dg(t,[1,e]):t):this.cell.stateSize>1?[Dg(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===dw.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=ab(t.cell,n);return new e(Object.assign(t,{cell:r}))}}dw.className="RNN",h.registerClass(dw);class hw extends Uy{}class pw extends hw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Hm(this.units,"units"),this.activation=$x(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=cy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=cy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=cy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=zx(e.kernelRegularizer),this.recurrentRegularizer=zx(e.recurrentRegularizer),this.biasRegularizer=zx(e.biasRegularizer),this.kernelConstraint=rg(e.kernelConstraint),this.recurrentConstraint=rg(e.recurrentConstraint),this.biasConstraint=rg(e.biasConstraint),this.dropout=Ng([1,Sg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ng([1,Sg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ry(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return zo(()=>{if(2!==(e=e).length)throw new Cm(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ww({ones:()=>Vc(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ww({ones:()=>Vc(n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=Og(null!=s?eu(e,s):e,this.kernel.read()),null!=this.bias&&(a=Bg(a,this.bias.read())),null!=i&&(n=eu(n,i));let o=Zo(a,Og(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:_x(this.activation),useBias:this.useBias,kernelInitializer:ly(this.kernelInitializer),recurrentInitializer:ly(this.recurrentInitializer),biasInitializer:ly(this.biasInitializer),kernelRegularizer:Ox(this.kernelRegularizer),recurrentRegularizer:Ox(this.recurrentRegularizer),biasRegularizer:Ox(this.biasRegularizer),activityRegularizer:Ox(this.activityRegularizer),kernelConstraint:tg(this.kernelConstraint),recurrentConstraint:tg(this.recurrentConstraint),biasConstraint:tg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}pw.className="SimpleRNNCell",h.registerClass(pw);class fw extends dw{constructor(e){e.cell=new pw(e),super(e)}call(e,t){return zo(()=>(null!=this.cell.dropoutMask&&(Po(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Po(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return new e(t)}}fw.className="SimpleRNN",h.registerClass(fw);class mw extends hw{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Cm("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Hm(this.units,"units"),this.activation=$x(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=$x(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=cy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=cy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=cy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=zx(e.kernelRegularizer),this.recurrentRegularizer=zx(e.recurrentRegularizer),this.biasRegularizer=zx(e.biasRegularizer),this.kernelConstraint=rg(e.kernelConstraint),this.recurrentConstraint=rg(e.recurrentConstraint),this.biasConstraint=rg(e.biasConstraint),this.dropout=Ng([1,Sg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ng([1,Sg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ry(e),this.kernel=this.addWeight("kernel",[e[e.length-1],3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return zo(()=>{if(2!==(e=e).length)throw new Cm("GRUCell expects 2 input Tensors (inputs, h, c), got "+e.length+".");const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ww({ones:()=>Vc(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ww({ones:()=>Vc(r),rate:this.recurrentDropout,training:n,count:3}));const a=this.recurrentDropoutMask;let s,i,o;0<this.dropout&&this.dropout<1&&(e=eu(e,this.dropoutMask[0]));let u=Og(e,this.kernel.read());this.useBias&&(u=Bg(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=eu(r,a[0]));const l=this.recurrentKernel.read(),[c,d]=Rd(l,[2*this.units,this.units],l.rank-1),h=Og(r,c),[p,f,m]=Rd(u,3,u.rank-1),[g,y]=Rd(h,2,h.rank-1);s=this.recurrentActivation.apply(Zo(p,g)),i=this.recurrentActivation.apply(Zo(f,y));const b=Og(eu(i,r),d);o=this.activation.apply(Zo(m,b));const x=Zo(eu(s,r),eu(Zo(1,uc(s)),o));return[x,x]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:_x(this.activation),recurrentActivation:_x(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ly(this.kernelInitializer),recurrentInitializer:ly(this.recurrentInitializer),biasInitializer:ly(this.biasInitializer),kernelRegularizer:Ox(this.kernelRegularizer),recurrentRegularizer:Ox(this.recurrentRegularizer),biasRegularizer:Ox(this.biasRegularizer),activityRegularizer:Ox(this.activityRegularizer),kernelConstraint:tg(this.kernelConstraint),recurrentConstraint:tg(this.recurrentConstraint),biasConstraint:tg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}mw.className="GRUCell",h.registerClass(mw);class gw extends dw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new mw(e),super(e)}call(e,t){return zo(()=>(null!=this.cell.dropoutMask&&(Po(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Po(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}gw.className="GRU",h.registerClass(gw);class yw extends hw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Hm(this.units,"units"),this.activation=$x(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=$x(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=cy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=cy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=cy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=zx(e.kernelRegularizer),this.recurrentRegularizer=zx(e.recurrentRegularizer),this.biasRegularizer=zx(e.biasRegularizer),this.kernelConstraint=rg(e.kernelConstraint),this.recurrentConstraint=rg(e.recurrentConstraint),this.biasConstraint=rg(e.biasConstraint),this.dropout=Ng([1,Sg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ng([1,Sg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n;if(e=Ry(e),this.kernel=this.addWeight("kernel",[e[e.length-1],4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,r=this.units;n=new((t=class extends Hg{apply(t,n){const a=e.apply([r]),s=(new qg).apply([r]),i=e.apply([2*r]);return Rg(Rg(a,s),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return zo(()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new Cm("LSTMCell expects 3 input Tensors (inputs, h, c), got "+e.length+".");let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ww({ones:()=>Vc(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ww({ones:()=>Vc(r),rate:this.recurrentDropout,training:n,count:4}));const s=this.recurrentDropoutMask;let i,o,u,l;0<this.dropout&&this.dropout<1&&(e=eu(e,this.dropoutMask[0]));let c=Og(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=eu(r,s[0])),c=Zo(c,Og(r,this.recurrentKernel.read())),this.useBias&&(c=Bg(c,this.bias.read()));const[d,h,p,f]=Rd(c,4,c.rank-1);i=this.recurrentActivation.apply(d),o=this.recurrentActivation.apply(h),u=Zo(eu(o,a),eu(i,this.activation.apply(p))),l=this.recurrentActivation.apply(f);const m=eu(l,this.activation.apply(u));return[m,m,u]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:_x(this.activation),recurrentActivation:_x(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ly(this.kernelInitializer),recurrentInitializer:ly(this.recurrentInitializer),biasInitializer:ly(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ox(this.kernelRegularizer),recurrentRegularizer:Ox(this.recurrentRegularizer),biasRegularizer:Ox(this.biasRegularizer),activityRegularizer:Ox(this.activityRegularizer),kernelConstraint:tg(this.kernelConstraint),recurrentConstraint:tg(this.recurrentConstraint),biasConstraint:tg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}yw.className="LSTMCell",h.registerClass(yw);class bw extends dw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new yw(e),super(e)}call(e,t){return zo(()=>(null!=this.cell.dropoutMask&&(Po(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Po(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}bw.className="LSTM",h.registerClass(bw);class xw extends hw{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return zo(()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)})}build(e){let t;Ay(e)&&(e=e[0]),e=e,this.cells.forEach((n,r)=>{bg("RNNCell_"+r,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}));return Object.assign({},e,{cells:t})}static fromConfig(e,t,n={}){const r=[];for(const a of t.cells)r.push(ab(a,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Oy(e)}setWeights(e){const t=[];for(const n of this.cells){const r=e.splice(n.weights.length);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}Ly(t)}}function ww(e){const{ones:t,rate:n,training:r=!1,count:a=1}=e,s=()=>Wg(t(),n),i=()=>Vg(s,t,r);return!a||a<=1?Bo(i().clone()):Array(a).fill(void 0).map(i).map(e=>Bo(e.clone()))}xw.className="StackedRNNCells",h.registerClass(xw);class vw extends dw{constructor(e){if(e.unroll)throw new Tm("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Tm("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new zy({ndim:5})]}call(e,t){return zo(()=>{if(null!=this.cell.dropoutMask&&(Po(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Po(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Cm("ConvRNN2D cell does not support constants");return super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return zo(()=>{const{stateSize:t}=this.cell,n=this.computeSingleOutputShape(e.shape),r=$c([n[0],...n.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]})}resetStates(e,t=!1){zo(()=>{if(!this.stateful)throw new Nm("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),s=[a[0],...a.slice(2)];if(null==n[0])throw new Cm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(()=>$c(s)):[$c(s)];else if(null==e)Po(this.states_),null!=this.keptStates&&(Po(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>$c(s)):this.states_[0]=$c(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Cm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: `+e);t?this.keptStates.push(this.states_.slice()):Po(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=s;if(!r.arraysEqual(n.shape,a))throw new Cm(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>Bo(e.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?4:3],l=jx(e[o?3:2],r[0],a,s[0],i[0]),c=jx(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,l,c]:[l,c,n]]}}vw.className="ConvRNN2D";class kw extends yw{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Hm(this.filters,"filters"),this.kernelSize=Hx(n,2,"kernelSize"),this.kernelSize.forEach(e=>Hm(e,"kernelSize")),this.strides=Hx(r||1,2,"strides"),this.strides.forEach(e=>Hm(e,"strides")),this.padding=a||"valid",mg(this.padding),this.dataFormat=s||"channelsLast",fg(this.dataFormat),this.dilationRate=Hx(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>Hm(e,"dilationRate"))}build(e){var t;e=Ry(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Cm("The channel dimension of the input should be defined. Found "+e[n]);const r=this.kernelSize.concat([e[n],4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Hg{apply(e,t){return Fg([n.apply([r]),Fc([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return zo(()=>{if(3!==e.length)throw new Cm("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+e.length+".");const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ww({ones:()=>Vc(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?eu(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),d=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ww({ones:()=>Vc(a),rate:this.recurrentDropout,training:n,count:4}));const h=this.recurrentDropoutMask;let p=o(a,h,0),f=o(a,h,1),m=o(a,h,2),g=o(a,h,3);const[y,b,x,w]=Rd(this.kernel.read(),4,3),[v,k,I,N]=this.useBias?Rd(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),d=this.inputConv(d,w,N,this.padding);const[S,C,T,E]=Rd(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,S),f=this.recurrentConv(f,C),m=this.recurrentConv(m,T),g=this.recurrentConv(g,E);const _=this.recurrentActivation.apply(Zo(u,p)),A=this.recurrentActivation.apply(Zo(l,f)),$=Zo(eu(A,s),eu(_,this.activation.apply(Zo(c,m)))),F=eu(this.recurrentActivation.apply(Zo(d,g)),this.activation.apply($));return[F,F,$]})}getConfig(){const e=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(super.getConfig(),["units"]);return Object.assign({},e,{filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides})}inputConv(e,t,n,r){const a=wl(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Bg(a,n,this.dataFormat):a}recurrentConv(e,t){return wl(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}kw.className="ConvLSTM2DCell",h.registerClass(kw);class Iw extends vw{constructor(e){const t=new kw(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Iw.className="ConvLSTM2D",h.registerClass(Iw);class Nw extends Uy{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return zo(()=>{this.invokeCallHook(e,t);const n=Fy(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Vg(()=>Wg(n,this.rate,r,this.seed),()=>n,e)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Nw.className="Dropout",h.registerClass(Nw);class Sw extends Nw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Sw.className="SpatialDropout1D",h.registerClass(Sw);class Cw extends Uy{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Hm(this.units,"units"),this.activation=$x(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=cy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=cy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=rg(e.kernelConstraint),this.biasConstraint=rg(e.biasConstraint),this.kernelRegularizer=zx(e.kernelRegularizer),this.biasRegularizer=zx(e.biasRegularizer),this.activityRegularizer=zx(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Ry(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Ry(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return zo(()=>{this.invokeCallHook(e,t);const n=Fy(e),r=qm(this.activation.getClassName());let a;return null!=r?a=Og(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Og(n,this.kernel.read()),null!=this.bias&&(a=Bg(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){const e={units:this.units,activation:_x(this.activation),useBias:this.useBias,kernelInitializer:ly(this.kernelInitializer),biasInitializer:ly(this.biasInitializer),kernelRegularizer:Ox(this.kernelRegularizer),biasRegularizer:Ox(this.biasRegularizer),activityRegularizer:Ox(this.activityRegularizer),kernelConstraint:tg(this.kernelConstraint),biasConstraint:tg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Cw.className="Dense",h.registerClass(Cw);class Tw extends Uy{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ry(e);for(const t of e.slice(1))if(null==t)throw new Cm(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ig(e,1)]}call(e,t){return zo(()=>{this.invokeCallHook(e,t);let n=Fy(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new Cm(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Ig(e.shape,1)];return e.reshape(t)}(n)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Tw.className="Flatten",h.registerClass(Tw);class Ew extends Uy{constructor(e){super(e),this.supportsMasking=!0,this.activation=$x(e.activation)}call(e,t){return zo(()=>{this.invokeCallHook(e,t);const n=Fy(e);return this.activation.apply(n)})}getConfig(){const e={activation:_x(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Ew.className="Activation",h.registerClass(Ew);class _w extends Uy{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return zo(()=>{return e=Fy(e),t=e,n=this.n,zo(()=>{if(2!==t.shape.length)throw new Cm(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Dg(Eg(t,1),[1,n,1])});var t,n})}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}_w.className="RepeatVector",h.registerClass(_w);class Aw extends Uy{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let o=0;o<r.length;++o){const e=r[o];if(this.isUnknown(e)){if(null!==s)throw new Cm("Can only specifiy one unknown dimension.");s=o}else a*=e}const i=Ig(e);if(null!==s){if(0===a||i%a!=0)throw new Cm(n);r[s]=i/a}else if(i!==a)throw new Cm(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return zo(()=>{this.invokeCallHook(e,t);const n=Fy(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(a)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Aw.className="Reshape",h.registerClass(Aw);class $w extends Uy{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+e.dims+" instead.");const t=Cg(1,e.dims.length+1);if(!r.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new zy({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Ry(e)).slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return Bi(Fy(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}$w.className="Permute",h.registerClass($w);class Fw extends Uy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Fy(e);return Fu(Wc(n,this.maskValue),-1)}call(e,t){return zo(()=>{this.invokeCallHook(e,t);const n=Fy(e),r=Fu(Wc(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))})}}Fw.className="Masking",h.registerClass(Fw);class Rw extends Uy{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=null==e.inputLength?[t,null]:[t].concat(Rm(e.inputLength))}this.inputDim=e.inputDim,Hm(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Hm(this.outputDim,"outputDim"),this.embeddingsInitializer=cy(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=zx(e.embeddingsRegularizer),this.activityRegularizer=zx(e.activityRegularizer),this.embeddingsConstraint=rg(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return zo(()=>this.maskZero?(e=Fy(e),Wc(e,ru(e))):null)}computeOutputShape(e){if(e=Ry(e),null==this.inputLength)return[...e,this.outputDim];const t=Rm(this.inputLength);if(t.length!==e.length-1)throw new Cm(`"inputLength" is ${this.inputLength}, but received input shape has shape `+e);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new Cm(`"inputLength" is ${this.inputLength}, but received input shape has shape `+e);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return zo(()=>{this.invokeCallHook(e,t);let n=Fy(e);return"int32"!==n.dtype&&(n=Tg(n,"int32")),Lg(this.embeddings.read(),n.as1D()).reshape(Ry(this.computeOutputShape(n.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ly(this.embeddingsInitializer),embeddingsRegularizer:Ox(this.embeddingsRegularizer),activityRegularizer:Ox(this.activityRegularizer),embeddingsConstraint:tg(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Rw.className="Embedding",h.registerClass(Rw);class Dw extends Uy{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Tm}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new Cm("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ry(e)]),(e=e).length<2)throw new Cm(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const a of e)null!=a&&null!==a[0]&&t.push(a[0]);if(t=Wm(t),t.length>1)throw new Cm(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const t=null==e[a]?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map(e=>e.length);this.reshapeRequired=-1!==e.indexOf(null)||1!==Wm(r).length}call(e,t){return zo(()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){const r=Sg(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Eg(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,r=e[0],a=e.slice(1).concat([r]);let i=s.reshape([r].concat(Ig(e.slice(1))));i=Bi(i,[1,0]),i=i.reshape(a),t.push(i),n=!0}else if(e>1){const r=Cg(1,e).concat([0]);t.push(Bi(s,r)),n=!0}else t.push(s)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Bi(r.reshape([-1,t]),[1,0]).reshape(n)}else if(a>1){const e=[a-1].concat(Cg(0,a-1));r=Bi(r,e)}return r}}return this.mergeFunction(e)})}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=Wm(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return zo(()=>{if(null==t)return null;if(!Array.isArray(t))throw new Cm("`mask` should be an Array");if(!Array.isArray(e))throw new Cm("`inputs` should be an Array");if(t.length!==e.length)throw new Cm(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let n=(t=t.map(e=>null==e?e:Ul(e,0)))[0];for(let e=1;e<t.length-1;++e)n=Ic(n,t[e]);return n})}}class Mw extends Dw{constructor(e){super(e)}mergeFunction(e){return zo(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Zo(t,e[n]);return t})}}Mw.className="Add",h.registerClass(Mw);class Ow extends Dw{constructor(e){super(e)}mergeFunction(e){return zo(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=eu(t,e[n]);return t})}}Ow.className="Multiply",h.registerClass(Ow);class Lw extends Dw{constructor(e){super(e)}mergeFunction(e){return zo(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Zo(t,e[n]);return eu(1/e.length,t)})}}Lw.className="Average",h.registerClass(Lw);class zw extends Dw{constructor(e){super(e)}mergeFunction(e){return zo(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Iu(t,e[n]);return t})}}zw.className="Maximum",h.registerClass(zw);class Pw extends Dw{constructor(e){super(e)}mergeFunction(e){return zo(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Mc(t,e[n]);return t})}}Pw.className="Minimum",h.registerClass(Pw);class Bw extends Dw{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Cm("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let a=0;a<e.length;++a){const t=e[a].slice();t.splice(this.axis,1);let s=!1;for(const e of n)if(r.arraysEqual(e,t)){s=!0;break}s||n.push(t)}if(n.length>1)throw new Cm("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return zo(()=>Fg(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Cm("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const a of t.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Cm("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Cm("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Cm(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return zo(()=>{let n=!0;if(t.forEach(e=>{null==e||(n=!1)}),n)return null;const r=[];for(let s=0;s<e.length;++s)r.push(null==t[s]?Vc(e[s]).asType("bool"):t[s].rank<e[s].rank?Ul(t[s],-1):t[s]);const a=nl(r,this.axis);return $u(a,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Ww(e,t){for(;e<0;)e+=t;return e}Bw.className="Concatenate",h.registerClass(Bw);class Vw extends Dw{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){r.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Tm("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new Cm(`Dimension incompatibility: ${t[a[0]]} !== ${n[a[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Cm(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,n)=>Ww(t,e[n].shape.length)):[Ww(this.axes,n.shape.length),Ww(this.axes,a.shape.length)],this.normalize&&(n=sb(n,t[0]),a=sb(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Tm("batchDot is not implemented for tensors of 4D or higher rank yet");if(r.assert(e.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, but got "+e.shape.length),r.assert(e.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, but got "+t.shape.length),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Tm("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,s=t.shape.length;null==n&&(n=[a-1,s-2]);const i=n;return zo(()=>{let n,r;if(a>s){n=a-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(s>a){n=s-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(r=2===e.shape.length&&2===t.shape.length?i[0]===i[1]?e.mul(t).sum(i[0]):e.transpose([1,0]).mul(t).sum(i[1]):e.matMul(t,i[0]!==e.shape.length-1,i[1]===t.shape.length-1),n>0){let e;e=a>s?a+s-3:a-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);r=r.squeeze(t)}return 1===r.shape.length&&(r=r.expandDims(1)),r})}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Ww(this.axes,e.length),Ww(this.axes,t.length)],n}computeOutputShape(e){r.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Tm("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Vw.className="Dot",h.registerClass(Vw);class Uw extends Uy{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return zo(()=>{this.invokeCallHook(e,t);const n=Fy(e);return Vg(()=>Mg(n.shape,0,this.stddev).add(n),()=>n,t.training||!1)})}}Uw.className="GaussianNoise",h.registerClass(Uw);class Gw extends Uy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return zo(()=>{this.invokeCallHook(e,t);const n=Fy(e);return this.rate>0&&this.rate<1?Vg(()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(Mg(n.shape,1,e))},()=>n,t.training||!1):n})}}Gw.className="GaussianDropout",h.registerClass(Gw);class Hw extends Uy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Fy(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return zo(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Vg(()=>{const t=Fy(e),r=-1.7580993408473766;let a=Yl(id(n),this.rate);a=Tg(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate;return t.mul(a).add(a.add(-1).mul(r)).mul(s).add(i)},()=>Fy(e),t.training||!1)}return e})}}function jw(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=ll(e,t,n,r,a,s);else if(3===e.rank)i=cl(e,t,n,r,a,s);else{if(4!==e.rank)throw new Tm(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=dl(e,t,n,r,a,s)}return i}Hw.className="AlphaDropout",h.registerClass(Hw);class qw extends Uy{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=cy(e.betaInitializer||"zeros"),this.gammaInitializer=cy(e.gammaInitializer||"ones"),this.movingMeanInitializer=cy(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=cy(e.movingVarianceInitializer||"ones"),this.betaConstraint=rg(e.betaConstraint),this.gammaConstraint=rg(e.gammaConstraint),this.betaRegularizer=zx(e.betaRegularizer),this.gammaRegularizer=zx(e.gammaRegularizer)}build(e){e=Ry(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Cm(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape `+JSON.stringify(e)+".");this.inputSpec=[new zy({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return zo(()=>{const n=null!=t.training&&t.training,a=Fy(e),s=a.shape,i=s.length,o=Cg(0,i),u=this.axis>=0?this.axis:this.axis+i;o.splice(u,1);const l=_m(1,i);l[u]=s[u];const c=o.slice();c.sort();const d=!r.arraysEqual(c,Cg(0,i).slice(0,i-1));if(!n)return(()=>{if(d){const e=this.movingMean.read().reshape(l),t=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,r=this.scale?this.gamma.read().reshape(l):null;return jw(a,e,t,n,r,this.epsilon)}return jw(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,f]=function(e,t,n,a,s=.001){return r.arraysEqual(a.slice().sort(),Cg(0,e.rank-1))?function(e,t,n,r,a=.001){return zo(()=>{const s=zc(e,r),i=s.mean,o=s.variance;return[jw(e,i,o,n,t,a),i,o]})}(e,t,n,a,s):function(e,t,n,r,a=.001){return zo(()=>{const s=zc(e,r),i=s.mean,o=s.variance,u=[];for(const t of Cg(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=i.reshape(u),c=o.reshape(u),d=null==t?null:t.reshape(u),h=null==n?null:n.reshape(u);return[jw(e,l,c,h,d,a),i,o]})}(e,t,n,a,s)}(a,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(e,t,n)=>{zo(()=>{const r=1-n,a=e.read(),s=a.sub(t).mul(r);e.write(a.sub(s))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ly(this.betaInitializer),gammaInitializer:ly(this.gammaInitializer),movingMeanInitializer:ly(this.movingMeanInitializer),movingVarianceInitializer:ly(this.movingVarianceInitializer),betaRegularizer:Ox(this.betaRegularizer),gammaRegularizer:Ox(this.gammaRegularizer),betaConstraint:tg(this.betaConstraint),gammaConstraint:tg(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}qw.className="BatchNormalization",h.registerClass(qw);class Kw extends Uy{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=cy(e.betaInitializer||"zeros"),this.gammaInitializer=cy(e.gammaInitializer||"ones"),this.betaRegularizer=zx(e.betaRegularizer),this.gammaRegularizer=zx(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Ry(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error("Invalid axis: "+r);if(this.axis.length!==Wm(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map(t=>e[t]);this.gamma=this.scale?this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):null,this.beta=this.center?this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):null,this.built=!0}call(e,t){const n=Fy(e),r=n.shape,a=r.length;return zo(()=>{let{mean:e,variance:t}=zc(n,this.axis,!0);const s=_m(1,a);for(const n of this.axis)s[n]=r[n];const i=e=>null!=e&&e.shape.length!==a&&this.axis!==[a-1]?e.reshape(s):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let n=0;n<a;++n)-1!==this.axis.indexOf(n)?(l.push(r[n]),c.push(1)):(l.push(1),c.push(r[n]));return e=e.tile(l),t=t.tile(l),o=o.tile(c),u=u.tile(c),jw(n,e,t,u,o,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ly(this.betaInitializer),gammaInitializer:ly(this.gammaInitializer),betaRegularizer:Ox(this.betaRegularizer),gammaRegularizer:Ox(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Kw.className="LayerNormalization",h.registerClass(Kw);class Xw extends Uy{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Cm(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Cm(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Cm(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new zy({ndim:4})]}computeOutputShape(e){let t,n;return e=Ry(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return zo(()=>{return t=Fy(e),n=this.padding,r=this.dataFormat,zo(()=>{if(4!==t.rank)throw new Cm("temporalPadding expects input tensor to be 4-D, but received a "+t.rank+"-D tensor.");if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Cm("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Cm(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Gc(t,e)});var t,n,r})}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Yw(e,t,n,r,a,s){return zo(()=>{let i;fg(a),gg(s),mg(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Kx(e,a);const o="same"===r?"same":"valid";return i="max"===s?Tc(e,t,n,o):el(e,t,n,o),"channelsFirst"===a&&(i=Bi(i,[0,3,1,2])),i})}function Zw(e,t,n,r,a,s){return zo(()=>{let i;fg(a),gg(s),mg(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Xx(e,a);const o="same"===r?"same":"valid";return i="max"===s?Ec(e,t,n,o):tl(e,t,n,o),"channelsFirst"===a&&(i=Bi(i,[0,4,1,2,3])),i})}Xw.className="ZeroPadding2D",h.registerClass(Xw);class Jw extends Uy{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Cm("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.poolSize));this.poolSize=e.poolSize}if(Hm(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Cm("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.strides));this.strides=e.strides}Hm(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,mg(this.padding),this.inputSpec=[new zy({ndim:3})]}computeOutputShape(e){const t=jx((e=Ry(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return zo(()=>{this.invokeCallHook(e,t),e=Eg(Fy(e),2);const n=this.poolingFunction(Fy(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Od(n,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Qw extends Jw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return fg(a),mg(r),Yw(e,t,n,r,a,"max")}}Qw.className="MaxPooling1D",h.registerClass(Qw);class ev extends Jw{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return fg(a),mg(r),Yw(e,t,n,r,a,"avg")}}ev.className="AveragePooling1D",h.registerClass(ev);class tv extends Uy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Cm("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+e.strides.length+".");this.strides=e.strides}else this.strides=[e.strides,e.strides];Hm(this.poolSize,"poolSize"),Hm(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,fg(this.dataFormat),mg(this.padding),this.inputSpec=[new zy({ndim:4})]}computeOutputShape(e){e=Ry(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=jx(t,this.poolSize[0],this.padding,this.strides[0]),n=jx(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return zo(()=>(this.invokeCallHook(e,t),this.poolingFunction(Fy(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class nv extends tv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return fg(a),mg(r),Yw(e,t,n,r,a,"max")}}nv.className="MaxPooling2D",h.registerClass(nv);class rv extends tv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return fg(a),mg(r),Yw(e,t,n,r,a,"avg")}}rv.className="AveragePooling2D",h.registerClass(rv);class av extends Uy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Cm("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+e.strides.length+".");this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Hm(this.poolSize,"poolSize"),Hm(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,fg(this.dataFormat),mg(this.padding),this.inputSpec=[new zy({ndim:5})]}computeOutputShape(e){e=Ry(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=jx(t,this.poolSize[0],this.padding,this.strides[0]),n=jx(n,this.poolSize[1],this.padding,this.strides[1]),r=jx(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return zo(()=>(this.invokeCallHook(e,t),this.poolingFunction(Fy(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class sv extends av{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return fg(a),mg(r),Zw(e,t,n,r,a,"max")}}sv.className="MaxPooling3D",h.registerClass(sv);class iv extends av{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return fg(a),mg(r),Zw(e,t,n,r,a,"avg")}}iv.className="AveragePooling3D",h.registerClass(iv);class ov extends Uy{constructor(e){super(e),this.inputSpec=[new zy({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Tm}}class uv extends ov{constructor(e){super(e||{})}call(e,t){return zo(()=>{const t=Fy(e);return Ac(t,1)})}}uv.className="GlobalAveragePooling1D",h.registerClass(uv);class lv extends ov{constructor(e){super(e||{})}call(e,t){return zo(()=>{const t=Fy(e);return dc(t,1)})}}lv.className="GlobalMaxPooling1D",h.registerClass(lv);class cv extends Uy{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,fg(this.dataFormat),this.inputSpec=[new zy({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Tm}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class dv extends cv{call(e,t){return zo(()=>{const t=Fy(e);return Ac(t,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}dv.className="GlobalAveragePooling2D",h.registerClass(dv);class hv extends cv{call(e,t){return zo(()=>{const t=Fy(e);return dc(t,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}hv.className="GlobalMaxPooling2D",h.registerClass(hv);class pv extends Uy{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=ab(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class fv extends pv{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Ry(e)).length<3)throw new Cm("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(e));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Ry(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t);return[n[0],e[1]].concat(n.slice(1))}call(e,t){return zo(()=>cw((e,n)=>[Fy(this.layer.call(e,t)),[]],e=Fy(e),[],!1,null,null,!1,!0)[1])}}fv.className="TimeDistributed",h.registerClass(fv);class mv extends pv{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=ab(n),t.goBackwards=!0!==t.goBackwards;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=ab(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,Um(hg,"BidirectionalMergeMode",this.mergeMode),e.weights)throw new Tm("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,t)),this.backwardLayer.setWeights(e.slice(t))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Fm(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=lw(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Cm("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map(e=>new zy({shape:e.shape}));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Tm("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Py;for(const u of s)if(u instanceof Py!==o)throw new Cm("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return zo(()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=hd(a,1)),"concat"===this.mergeMode?i=Fg([r,a]):"sum"===this.mergeMode?i=Zo(r,a):"ave"===this.mergeMode?i=eu(.5,Zo(r,a)):"mul"===this.mergeMode?i=eu(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){bg(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),bg(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=ab(t.layer);if(delete t.layer,null!=t.numConstants)throw new Tm("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function gv(e){return new Hy(e)}function yv(e){return new Vx(e)}function bv(e){return new Px(e)}function xv(e){return new Bx(e)}function wv(e){return new Wx(e)}function vv(e){return new Gx(e)}function kv(e){return new Ux(e)}function Iv(e){return new sw(e)}function Nv(e){return new Qx(e)}function Sv(e){return new tw(e)}function Cv(e){return new ew(e)}function Tv(e){return new nw(e)}function Ev(e){return new aw(e)}function _v(e){return new iw(e)}function Av(e){return new ow(e)}function $v(e){return new uw(e)}function Fv(e){return new Ew(e)}function Rv(e){return new Cw(e)}function Dv(e){return new Nw(e)}function Mv(e){return new Sw(e)}function Ov(e){return new Tw(e)}function Lv(e){return new _w(e)}function zv(e){return new Aw(e)}function Pv(e){return new $w(e)}function Bv(e){return new Rw(e)}function Wv(e){return new Mw(e)}function Vv(e){return new Lw(e)}function Uv(e){return new Bw(e)}function Gv(e){return new zw(e)}function Hv(e){return new Pw(e)}function jv(e){return new Ow(e)}function qv(e){return new Vw(e)}function Kv(e){return new qw(e)}function Xv(e){return new Kw(e)}function Yv(e){return new Xw(e)}function Zv(e){return new ev(e)}function Jv(e){return Zv(e)}function Qv(e){return Zv(e)}function ek(e){return new rv(e)}function tk(e){return ek(e)}function nk(e){return ek(e)}function rk(e){return new iv(e)}function ak(e){return rk(e)}function sk(e){return rk(e)}function ik(e){return new uv(e)}function ok(e){return new dv(e)}function uk(e){return new lv(e)}function lk(e){return new hv(e)}function ck(e){return new Qw(e)}function dk(e){return new nv(e)}function hk(e){return new sv(e)}function pk(e){return new gw(e)}function fk(e){return new mw(e)}function mk(e){return new bw(e)}function gk(e){return new yw(e)}function yk(e){return new fw(e)}function bk(e){return new pw(e)}function xk(e){return new Iw(e)}function wk(e){return new kw(e)}function vk(e){return new dw(e)}function kk(e){return new xw(e)}function Ik(e){return new mv(e)}function Nk(e){return new fv(e)}mv.className="Bidirectional",h.registerClass(mv);const Sk=uk,Ck=lk,Tk=ck,Ek=dk;function _k(e){return new Uw(e)}function Ak(e){return new Gw(e)}function $k(e){return new Hw(e)}function Fk(e){return new Fw(e)}function Rk(e,t){return mb(e,t)}function Dk(e,t){return xb(e,t)}function Mk(e,t){return wb(e,t)}function Ok(e,t){return gb(e,t)}function Lk(e,t){return vb(e,t)}function zk(e,t){return bb(e,t)}function Pk(e,t){return function(e,t){return zo(()=>{const n=yb(e,t),r=function(e,t){return zo(()=>Ic(e.equal(1),t.equal(0)).sum().cast("float32"))}(e,t),a=n.add(r);return Ol(Xl(a,0),n.div(a),0).cast("float32")})}(e,t)}function Bk(e,t){return hb(e,t)}function Wk(e,t){return ob(e,t)}function Vk(e,t){return ub(e,t)}function Uk(e,t){return ub(e,t)}function Gk(e,t){return ub(e,t)}function Hk(e,t){return ib(e,t)}function jk(e,t){return ib(e,t)}function qk(e,t){return ib(e,t)}function Kk(e){return new Dx(e)}function Xk(e){return Fx(t=e),new Dx({l1:null!=t?t.l1:null,l2:0});var t}function Yk(e){return Fx(t=e),new Dx({l2:null!=t?t.l2:null,l1:0});var t}class Zk extends Yy{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof sx))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function Jk(e,t){return e<t}function Qk(e,t){return e>t}class eI extends Zk{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new Tm("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.monitorFunc="min"===this.mode?Jk:"max"===this.mode||-1!==this.monitor.indexOf("acc")?Qk:Jk,this.monitorFunc===Jk&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.best=null!=this.baseline?this.baseline:this.monitorFunc===Jk?1/0:-1/0}async onEpochEnd(e,t){await qy(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: `+Object.keys(e)),t}}const tI={earlyStopping:function(e){return new eI(e)}};var nI,rI;!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(nI||(nI={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(rI||(rI={}));const aI={};function sI(e,t){aI[e]={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t}}function iI(e){return aI[e]}function oI(e){delete aI[e]}function uI(e,t,n,a,s){const i=t.inputParams[e];if(i&&void 0!==i.inputIndexStart){const e=i.inputIndexStart,o=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?e+1:i.inputIndexEnd;if("tensor"===i.type)return lI(t.inputNames[i.inputIndexStart],n,a,s);if("tensors"===i.type)return t.inputNames.slice(e,o).map(e=>lI(e,n,a,s));const u=lI(t.inputNames.slice(e)[0],n,a,s),l=u.dataSync();return"number"===i.type?l[0]:r.toNestedArray(u.shape,l)}const o=t.attrParams[e];return o&&o.value}function lI(e,t,n,r){const[a,s]=hI(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find(e=>!!t[dI(a,e)]);return void 0!==i?t[dI(a,i)][s]:void 0}function cI(e,t){const[n,r,a]=hI(e);return[dI(n,t&&t.currentContextId),r,a]}function dI(e,t){return t?`${e}-${t}`:e}function hI(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=3===t.length?t[1]:void 0;return[t[0],Number(t[t.length-1]),n]}function pI(e,t,n){let r=uI("pad",e,t,n);if("explicit"===r){r=uI("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function fI(e){return e.kept?e:xi(e)}const mI=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],gI=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],yI=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],bI=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],xI=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],wI=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],vI=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],kI=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],II=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],NI=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],SI=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],CI=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],TI=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],EI=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],_I=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],AI=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],$I=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],FI=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],RI=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class DI{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[N,S,C,T,E,_,A,$,F,R,D,M,O,L,z,P,B,W,V].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){const n=[],r=[],a=[],s=e.node.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?n.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e),{});let i=[];const o=[];let u={},l={};null!=t&&(u=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));const c=Object.keys(s);c.forEach(e=>{const t=s[e];t.inputNames.forEach((e,n)=>{const[r,,a]=cI(e),i=s[r];if(null!=i.outputs){const e=i.outputs.indexOf(a);-1!==e&&(t.inputNames[n]=`${r}:${e}`)}t.inputs.push(i),i.children.push(t)})}),0===Object.keys(l).length?c.forEach(e=>{const t=s[e];0===t.children.length&&o.push(t)}):Object.keys(l).forEach(e=>{const[t]=cI(e),n=s[t];null!=n&&(n.signatureKey=l[e],o.push(n))}),Object.keys(u).length>0?Object.keys(u).forEach(e=>{const[t]=cI(e),n=s[t];n&&(n.signatureKey=u[e],i.push(n))}):i=n;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));const h={nodes:s,inputs:i,outputs:o,weights:r,placeholders:n,signature:t,functions:d};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=iI(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.substr(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=OI(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=OI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=jI(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=jI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=zI(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=zI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=HI(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=HI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=LI(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=LI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=KI(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=KI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=GI(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=GI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=qI(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=qI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=WI(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=WI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=VI(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=VI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=BI(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=BI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t},{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));const a=[],s=[];e.signature.inputArg.forEach(e=>{const[t]=cI(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:PI(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n}),Object.keys(r).forEach(e=>{const t=r[e];t.inputNames.forEach((e,n)=>{const[a,,s]=cI(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);-1!==e&&(t.inputNames[n]=`${a}:${e}`)}t.inputs.push(i),i.children.push(t)})});const i=e.ret;e.signature.outputArg.forEach(e=>{const[t,n]=cI(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))});const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function MI(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=je().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function OI(e,t,n,r=!1){const a=e[t];return null!=a?MI(a.s,r):n}function LI(e,t,n){const r=e[t];return r?r.b:n}function zI(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function PI(e){switch("string"==typeof e&&(e=nI[e]),e){case nI.DT_FLOAT:return"float32";case nI.DT_INT32:case nI.DT_INT64:case nI.DT_INT8:case nI.DT_UINT8:return"int32";case nI.DT_BOOL:return"bool";case nI.DT_DOUBLE:return"float32";case nI.DT_STRING:return"string";default:return null}}function BI(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function WI(e,t,n){const r=e[t];return r&&r.type?PI(r.type):n}function VI(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>PI(e)):n}function UI(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function GI(e,t,n){const r=e[t];return r&&r.shape?UI(r.shape):n}function HI(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function jI(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>MI(e,r)):n}function qI(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>UI(e)):n}function KI(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class XI{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return lI(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return lI(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return zI(this.node.rawAttrs,e,t);if(null!=n.s)return OI(this.node.rawAttrs,e,t);if(null!=n.b)return LI(this.node.rawAttrs,e,t);if(null!=n.shape)return GI(this.node.rawAttrs,e,t);if(null!=n.type)return WI(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return HI(this.node.rawAttrs,e,t);if(null!=n.list.s)return jI(this.node.rawAttrs,e,t);if(null!=n.list.shape)return qI(this.node.rawAttrs,e,t);if(null!=n.list.b)return KI(this.node.rawAttrs,e,t);if(null!=n.list.type)return VI(this.node.rawAttrs,e,t)}return t}}function YI(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){r.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let a=0;a<e.length;a++){const s=e[a],i=t[a];r.assert(s<0||i<0||s===i,()=>n+` Shapes ${e} and ${t} must match`)}}}function ZI(e){return"number"!=typeof e&&!e.some(e=>e<0)}function JI(e,t,n){let r=QI(e,n);const a=!ZI(r);if(a&&0===t.length)throw new Error("Tried to calculate elements of an empty list with non-fully-defined elementShape: "+r);if(a&&t.forEach(e=>{r=QI(e.shape,r)}),!ZI(r))throw new Error("Non-fully-defined elementShape: "+r);return r}function QI(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class eN{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=du(0),Bo(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),YI(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Bo(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Ss([],[0].concat(this.elementShape));const n=this.readMany(e);return YI(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Ld(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Ss([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return YI(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),nl(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Yd(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];zo(()=>{t=Qu(t,[1,n,a]);for(let n=0;n<e.length;++n)s[n]=Qu(al(t,[0,0===n?0:r[n-1],0],[1,e[n],a]),this.elementShape);return s});const i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}}class tN{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);YI(t,e.shape,"TensorList shape mismatch: "),Bo(e)}),this.idTensor=du(0),this.maxNumElements=r,Bo(this.idTensor)}get id(){return this.idTensor.id}copy(){return new tN([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);YI(e,this.elementShape,"TensorList shape mismatch: ");const r=JI(this.elementShape,this.tensors,e);return zo(()=>{const e=this.tensors.map(e=>Qu(e,r));return Ld(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=JI(this.elementShape,this.tensors,e),r=this.tensors.pop();return YI(r.shape,e,"TensorList shape mismatch: "),Qu(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(YI(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Bo(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+e);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);YI(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=JI(this.elementShape,this.tensors,t);return Qu(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);YI(this.elementShape,t.shape,"TensorList shape mismatch: "),Bo(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);YI(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=JI(this.elementShape,this.tensors,n);return 0===e.length?Ss([],[0].concat(r)):zo(()=>{const t=e.map(e=>Qu(this.tensors[e],r));return Ld(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);YI(this.elementShape,t,"TensorList shape mismatch: ");const n=JI(this.elementShape,this.tensors,t);return 0===this.size()?Ss([],[0].concat(n)):zo(()=>{const e=this.tensors.map(e=>Qu(e,n));return nl(e,0)})}}function nN(e,t,n){const[r,a]=uI("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,u="fusedbatchnorm"===r,l=uI("numArgs",e,t,n);if(s){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=uI("strides",e,t,n),d=pI(e,t,n),h=uI("dataFormat",e,t,n).toUpperCase(),p=uI("dilations",e,t,n);let[f,m]=uI("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:uI("leakyreluAlpha",e,t,n)}}function rN(e,t,n){return{boxes:uI("boxes",e,t,n),scores:uI("scores",e,t,n),maxOutputSize:uI("maxOutputSize",e,t,n),iouThreshold:uI("iouThreshold",e,t,n),scoreThreshold:uI("scoreThreshold",e,t,n),softNmsSigma:uI("softNmsSigma",e,t,n)}}class aN{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=du(0),this.tensorMap=new Map,Bo(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return du(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),zo(()=>{const e=Yd(t),a=n.length,s=e.length;r.assert(a===s,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${s} elements.`);for(let t=0;t<a;t++){const r=n[t],a=e[t];Bo(a),this.tensorMap.set(r,a)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return zo(()=>{const e=[];for(let r=0;r<n.length;r++){const a=this.findWithDefault(n[r],t);e.push(a)}return Ld(e)})}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got `+e.dtype);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got `+t.dtype)}}function sN(e,t,n,a){const s=((e,t,n)=>{switch(e.category){case"arithmetic":return zo(()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Zo(uI("a",e,t,n),uI("b",e,t,n))];case"AddN":return[Au(uI("tensors",e,t,n))];case"FloorMod":case"Mod":return[Lc(uI("a",e,t,n),uI("b",e,t,n))];case"Mul":return[eu(uI("a",e,t,n),uI("b",e,t,n))];case"RealDiv":case"Div":return[Qo(uI("a",e,t,n),uI("b",e,t,n))];case"DivNoNan":return[Ll(uI("a",e,t,n),uI("b",e,t,n))];case"FloorDiv":return[Jo(uI("a",e,t,n),uI("b",e,t,n))];case"Sub":return[yu(uI("a",e,t,n),uI("b",e,t,n))];case"Minimum":return[Mc(uI("a",e,t,n),uI("b",e,t,n))];case"Maximum":return[Iu(uI("a",e,t,n),uI("b",e,t,n))];case"Pow":return[gu(uI("a",e,t,n),uI("b",e,t,n))];case"SquaredDifference":return[Md(uI("a",e,t,n),uI("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"basic_math":return zo(()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[xu(uI("x",e,t,n))];case"Acos":return[Eu(uI("x",e,t,n))];case"Acosh":return[_u(uI("x",e,t,n))];case"Asin":return[Mu(uI("x",e,t,n))];case"Asinh":return[Ou(uI("x",e,t,n))];case"Atan":return[Lu(uI("x",e,t,n))];case"Atan2":return[zu(uI("x",e,t,n),uI("y",e,t,n))];case"Atanh":return[Pu(uI("x",e,t,n))];case"Ceil":return[fl(uI("x",e,t,n))];case"Complex":return[Is(uI("real",e,t,n),uI("imag",e,t,n))];case"Cos":return[Tl(uI("x",e,t,n))];case"Cosh":return[El(uI("x",e,t,n))];case"Elu":return[Bl(uI("x",e,t,n))];case"Erf":return[Wl(uI("x",e,t,n))];case"Exp":return[Vl(uI("x",e,t,n))];case"Expm1":return[Gl(uI("x",e,t,n))];case"Floor":return[ql(uI("x",e,t,n))];case"Log":return[ic(uI("x",e,t,n))];case"Log1p":return[oc(uI("x",e,t,n))];case"Imag":return[Zl(uI("x",e,t,n))];case"Neg":return[uc(uI("x",e,t,n))];case"Reciprocal":return[ld(uI("x",e,t,n))];case"Real":return[ud(uI("x",e,t,n))];case"Relu":return[cd(uI("x",e,t,n))];case"Round":return[yd(uI("x",e,t,n))];case"Selu":return[xd(uI("x",e,t,n))];case"Sigmoid":return[rl(uI("x",e,t,n))];case"Sin":return[Id(uI("x",e,t,n))];case"Sign":return[kd(uI("x",e,t,n))];case"Sinh":return[Nd(uI("x",e,t,n))];case"Softplus":return[lc(uI("x",e,t,n))];case"Sqrt":return[tu(uI("x",e,t,n))];case"Square":return[nu(uI("x",e,t,n))];case"Tanh":return[sl(uI("x",e,t,n))];case"Tan":return[Bd(uI("x",e,t,n))];case"ClipByValue":return[ml(uI("x",e,t,n),uI("clipValueMin",e,t,n),uI("clipValueMax",e,t,n))];case"Relu6":return[dd(uI("x",e,t,n))];case"Rsqrt":return[bd(lI(e.inputNames[0],t,n))];case"Prod":return[Jc(uI("x",e,t,n),uI("axes",e,t,n))];case"LeakyRelu":return[tc(uI("x",e,t,n),uI("alpha",e,t,n))];case"Prelu":return[Zc(uI("x",e,t,n),uI("alpha",e,t,n))];case"IsNan":return[ec(lI(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=uI("thenBranch",e,t,n),a=uI("elseBranch",e,t,n),s=uI("cond",e,t,n),i=uI("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=uI("body",e,t,n),a=uI("cond",e,t,n),s=uI("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(e=>e.id);let u=await i[0].data();i.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()});let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map(e=>e.id);e.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return l}case"LoopCond":return[fI(uI("pred",e,t,n))];case"Switch":{const r=uI("pred",e,t,n);let a=uI("data",e,t,n);return a.kept||(a=fI(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find(e=>void 0!==lI(e,t,n));return r?[fI(lI(r,t,n))]:void 0}case"Enter":{const r=uI("frameName",e,t,n),a=uI("tensor",e,t,n);return n.enterFrame(r),[fI(a)]}case"Exit":{const r=uI("tensor",e,t,n);return n.exitFrame(),[fI(r)]}case"NextIteration":{const r=uI("tensor",e,t,n);return n.nextIteration(),[fI(r)]}case"TensorArrayV3":{const r=uI("size",e,t,n),a=uI("dtype",e,t,n),s=uI("elementShape",e,t,n),i=uI("dynamicSize",e,t,n),o=uI("clearAfterRead",e,t,n),u=uI("identicalElementShapes",e,t,n),l=uI("name",e,t,n),c=new eN(l,a,r,s,u,i,o);return n.addTensorArray(c),[c.idTensor,du(1)]}case"TensorArrayWriteV3":{const r=uI("tensorArrayId",e,t,n),a=uI("index",e,t,n),s=uI("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=uI("tensorArrayId",e,t,n),a=uI("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=uI("tensorArrayId",e,t,n),a=uI("indices",e,t,n),s=uI("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=uI("tensorArrayId",e,t,n),a=uI("indices",e,t,n),s=uI("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=uI("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=uI("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=uI("tensorArrayId",e,t,n),a=uI("tensor",e,t,n),s=uI("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=uI("tensorArrayId",e,t,n);return[du(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=uI("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=uI("tensorListId",e,t,n),a=uI("index",e,t,n),s=uI("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=uI("tensorListId",e,t,n),a=uI("index",e,t,n),s=uI("elementShape",e,t,n),i=uI("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=uI("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new tN([],n,e.dtype,r),i=Yd(e,0);return t.forEach((e,t)=>{s.setItem(e,i[t])}),s}(uI("tensor",e,t,n),r,uI("elementShape",e,t,n),uI("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=uI("elementShape",e,t,n),a=uI("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new tN([],e,t,n)}(r,a,uI(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=uI("tensorListId",e,t,n),a=uI("indices",e,t,n),s=uI("elementShape",e,t,n),i=uI("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=uI("tensorListId",e,t,n),a=uI("elementShape",e,t,n),s=uI("elementDType",e,t,n),i=uI("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+e.shape);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);YI(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=Yd(e);return new tN(a,t,r)}(uI("tensor",e,t,n),uI("elementShape",e,t,n),uI("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=uI("tensorListId",e,t,n),a=n.getTensorList(r.id),s=uI("dtype",e,t,n),i=uI("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=uI("tensorListId",e,t,n),a=uI("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=uI("tensorListId",e,t,n),a=uI("elementShape",e,t,n),s=uI("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=uI("tensor",e,t,n),a=uI("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map(e=>(r+=e,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=QI(e.shape.slice(1),n),i=0===r?0:e.size/r,o=zo(()=>{const n=[];e=Qu(e,[1,r,i]);for(let r=0;r<t.length;++r)n[r]=Qu(al(e,[0,0===r?0:a[r-1],0],[1,t[r],i]),s);return e.dispose(),n}),u=new tN([],n,e.dtype,t.length);for(let l=0;l<o.length;l++)u.setItem(l,o[l]);return u}(r,uI("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return zo(()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=uI("stride",e,t,n),a=uI("pad",e,t,n),s=uI("dataFormat",e,t,n).toUpperCase(),i=uI("dilation",e,t,n);return[vl(uI("x",e,t,n),uI("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=uI("strides",e,t,n),a=pI(e,t,n),s=uI("dataFormat",e,t,n).toUpperCase(),i=uI("dilations",e,t,n);return[wl(uI("x",e,t,n),uI("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=nN(e,t,n);return[f.conv2d({x:uI("x",e,t,n),filter:uI("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=nN(e,t,n);return[f.depthwiseConv2d({x:uI("x",e,t,n),filter:uI("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=uI("outputShape",e,t,n),a=uI("strides",e,t,n),s=pI(e,t,n);return[Il(uI("x",e,t,n),uI("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=uI("strides",e,t,n),a=pI(e,t,n),s=uI("dilations",e,t,n),i=uI("dataFormat",e,t,n).toUpperCase();return[Fl(uI("input",e,t,n),uI("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=uI("strides",e,t,n),a=uI("pad",e,t,n),s=uI("dataFormat",e,t,n).toUpperCase(),i=uI("dilations",e,t,n);return[Nl(uI("x",e,t,n),uI("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=uI("strides",e,t,n),a=uI("pad",e,t,n),s=uI("kernelSize",e,t,n);return[el(uI("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=uI("strides",e,t,n),a=uI("pad",e,t,n),s=uI("kernelSize",e,t,n);return[Tc(uI("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=uI("strides",e,t,n),a=uI("pad",e,t,n),s=uI("kernelSize",e,t,n),i=uI("includeBatchInIndex",e,t,n),{result:o,indexes:u}=_c(uI("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=uI("strides",e,t,n),a=uI("pad",e,t,n),s=uI("kernelSize",e,t,n);return[tl(uI("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=uI("strides",e,t,n),a=uI("pad",e,t,n),s=uI("kernelSize",e,t,n);return[Ec(uI("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=uI("strides",e,t,n),a=uI("pad",e,t,n),s=uI("dilations",e,t,n),i=r[1],o=r[2],u=s[1],l=s[2];return[Dl(uI("x",e,t,n),uI("filter",e,t,n),[i,o],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"creation":return zo(()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=uI("shape",e,t,n),a=uI("dtype",e,t,n);return[fu(r,uI("value",e,t,n),a)]}case"LinSpace":return[ac(uI("start",e,t,n),uI("stop",e,t,n),uI("num",e,t,n))];case"Multinomial":{const r=uI("logits",e,t,n),a=uI("numSamples",e,t,n),s=uI("seed",e,t,n);return[Bc(r,a,s)]}case"OneHot":{const r=uI("indices",e,t,n),a=uI("depth",e,t,n),s=uI("onValue",e,t,n),i=uI("offValue",e,t,n);return[Pi(r,a,s,i)]}case"Ones":return[Fc(uI("shape",e,t,n),uI("dtype",e,t,n))];case"OnesLike":return[Vc(uI("x",e,t,n))];case"RandomUniform":return[id(uI("shape",e,t,n),uI("minval",e,t,n),uI("maxval",e,t,n),uI("dtype",e,t,n))];case"Range":return[od(uI("start",e,t,n),uI("stop",e,t,n),uI("step",e,t,n),uI("dtype",e,t,n))];case"TruncatedNormal":{const r=uI("shape",e,t,n),a=uI("mean",e,t,n),s=uI("stdDev",e,t,n),i=uI("seed",e,t,n);return[qd(r,a,s,uI("dtype",e,t,n),i)]}case"Zeros":return[$c(uI("shape",e,t,n),uI("dtype",e,t,n))];case"ZerosLike":return[ru(uI("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=rN(e,t,n),l=await fp.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=rN(e,t,n),u=uI("padToMaxOutputSize",e,t,n),l=await fp.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=rN(e,t,n);return[await fp.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=bi(uI("condition",e,t,n),"bool"),a=[await Qd(r)];return r.dispose(),a}case"ListDiff":return vd(uI("x",e,t,n),uI("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return zo(()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=uI("x",e,t,n),a=uI("k",e,t,n),s=uI("sorted",e,t,n),i=jd(r,a,s);return[i.values,i.indices]}case"Unique":{const r=uI("x",e,t,n),a=Kd(r);return[a.values,a.indices]}case"UniqueV2":{const r=uI("x",e,t,n),a=uI("axis",e,t,n),s=Kd(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"image":return zo(()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=uI("images",e,t,n),a=uI("size",e,t,n),s=uI("alignCorners",e,t,n),i=uI("halfPixelCenters",e,t,n);return[fp.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=uI("images",e,t,n),a=uI("size",e,t,n),s=uI("alignCorners",e,t,n),i=uI("halfPixelCenters",e,t,n);return[fp.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=uI("image",e,t,n),a=uI("boxes",e,t,n),s=uI("boxInd",e,t,n),i=uI("cropSize",e,t,n),o=uI("method",e,t,n),u=uI("extrapolationValue",e,t,n);return[fp.cropAndResize(r,a,s,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"graph":return zo(()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=uI("default",e,t,n);return[lI(e.name,t,n)||r];case"Placeholder":return[lI(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[fI(uI("x",e,t,n))];case"IdentityN":return uI("x",e,t,n).map(e=>fI(e));case"Snapshot":return[fI(uI("x",e,t,n))];case"Shape":return[Wd(uI("x",e,t,n).shape,"int32")];case"ShapeN":return uI("x",e,t,n).map(e=>Wd(e.shape));case"Size":return[du(uI("x",e,t,n).size,"int32")];case"Rank":return[du(uI("x",e,t,n).rank,"int32")];case"NoOp":return[du(1)];case"Print":const a=uI("x",e,t,n),s=uI("data",e,t,n),i=uI("message",e,t,n),o=uI("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"logical":return zo(()=>((e,t,n)=>{switch(e.op){case"Equal":return[Ml(uI("a",e,t,n),uI("b",e,t,n))];case"NotEqual":return[Wc(uI("a",e,t,n),uI("b",e,t,n))];case"Greater":return[Xl(uI("a",e,t,n),uI("b",e,t,n))];case"GreaterEqual":return[Yl(uI("a",e,t,n),uI("b",e,t,n))];case"Less":return[nc(uI("a",e,t,n),uI("b",e,t,n))];case"LessEqual":return[rc(uI("a",e,t,n),uI("b",e,t,n))];case"LogicalAnd":return[Ic(uI("a",e,t,n),uI("b",e,t,n))];case"LogicalNot":return[Nc(uI("a",e,t,n))];case"LogicalOr":return[Sc(uI("a",e,t,n),uI("b",e,t,n))];case"Select":case"SelectV2":return[Ol(uI("condition",e,t,n),uI("a",e,t,n),uI("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"matrices":return zo(()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[zi(uI("a",e,t,n),uI("b",e,t,n),uI("transposeA",e,t,n),uI("transposeB",e,t,n))];case"Einsum":return[Pl(uI("equation",e,t,n),...uI("tensors",e,t,n))];case"Transpose":return[Bi(uI("x",e,t,n),uI("perm",e,t,n))];case"_FusedMatMul":const[r,a]=uI("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=uI("numArgs",e,t,n),u=uI("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=uI("args",e,t,n);return[f.matMul({a:uI("a",e,t,n),b:uI("b",e,t,n),transposeA:uI("transposeA",e,t,n),transposeB:uI("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"normalization":return zo(()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[ul(uI("x",e,t,n),uI("mean",e,t,n),uI("variance",e,t,n),uI("offset",e,t,n),uI("scale",e,t,n),uI("epsilon",e,t,n))];case"LRN":return[sc(uI("x",e,t,n),uI("radius",e,t,n),uI("bias",e,t,n),uI("alpha",e,t,n),uI("beta",e,t,n))];case"Softmax":return[_d(uI("x",e,t,n))];case"LogSoftmax":return[pc(uI("x",e,t,n))];case"SparseToDense":return[sh(uI("sparseIndices",e,t,n),uI("outputShape",e,t,n),uI("sparseValues",e,t,n),uI("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"reduction":return zo(()=>((e,t,n)=>{switch(e.op){case"Max":{const r=uI("axis",e,t,n),a=uI("keepDims",e,t,n);return[dc(uI("x",e,t,n),r,a)]}case"Mean":{const r=uI("axis",e,t,n),a=uI("keepDims",e,t,n);return[Ac(uI("x",e,t,n),r,a)]}case"Min":{const r=uI("axis",e,t,n),a=uI("keepDims",e,t,n);return[Dc(uI("x",e,t,n),r,a)]}case"Sum":{const r=uI("axis",e,t,n),a=uI("keepDims",e,t,n);return[hc(uI("x",e,t,n),r,a)]}case"All":{const r=uI("axis",e,t,n),a=uI("keepDims",e,t,n);return[$u(uI("x",e,t,n),r,a)]}case"Any":{const r=uI("axis",e,t,n),a=uI("keepDims",e,t,n);return[Fu(uI("x",e,t,n),r,a)]}case"ArgMax":{const r=uI("axis",e,t,n);return[Ru(uI("x",e,t,n),r)]}case"ArgMin":{const r=uI("axis",e,t,n);return[Du(uI("x",e,t,n),r)]}case"Prod":{const r=uI("axis",e,t,n),a=uI("keepDims",e,t,n);return[Jc(uI("x",e,t,n),r,a)]}case"Cumsum":{const r=uI("axis",e,t,n),a=uI("exclusive",e,t,n),s=uI("reverse",e,t,n);return[_l(uI("x",e,t,n),r,a,s)]}case"Bincount":const r=uI("x",e,t,n),a=uI("weights",e,t,n),s=uI("size",e,t,n);return[hl(r,a,s)];case"DenseBincount":{const r=uI("x",e,t,n),a=uI("weights",e,t,n),s=uI("size",e,t,n),i=uI("binaryOutput",e,t,n);return[Al(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"slice_join":return zo(()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=uI("n",e,t,n),a=uI("axis",e,t,n);let s=uI("tensors",e,t,n);return s=s.slice(0,r),[nl(s,a)]}case"Gather":{const r=uI("x",e,t,n),a=uI("indices",e,t,n);return[Kl(r,bi(a,"int32"),0)]}case"GatherV2":{const r=uI("axis",e,t,n),a=uI("batchDims",e,t,n),s=uI("x",e,t,n),i=uI("indices",e,t,n);return[Kl(s,bi(i,"int32"),r,a)]}case"Reverse":{const r=uI("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=uI("x",e,t,n);return[hd(s,a)]}case"ReverseV2":{const r=uI("axis",e,t,n),a=uI("x",e,t,n);return[hd(a,r)]}case"Slice":{const r=uI("begin",e,t,n),a=uI("size",e,t,n);return[al(uI("x",e,t,n),r,a)]}case"StridedSlice":{const r=uI("begin",e,t,n),a=uI("end",e,t,n),s=uI("strides",e,t,n),i=uI("beginMask",e,t,n),o=uI("endMask",e,t,n),u=uI("ellipsisMask",e,t,n),l=uI("newAxisMask",e,t,n),c=uI("shrinkAxisMask",e,t,n),d=uI("x",e,t,n);return[Pd(d,r,a,s,i,o,u,l,c)]}case"Pack":return zo(()=>{const a=uI("axis",e,t,n),s=uI("tensors",e,t,n),i=s[0].shape,o=Od(s[0]).shape,u=s.map(e=>{const t=r.arraysEqual(e.shape,i);if(!t&&!r.arraysEqual(Od(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:Qu(e,i)});return[Ld(u,a)]});case"Unpack":{const r=uI("axis",e,t,n),a=uI("tensor",e,t,n);return Yd(a,r)}case"Tile":{const r=uI("reps",e,t,n);return[Hl(uI("x",e,t,n),r)]}case"Split":case"SplitV":{const r=uI("axis",e,t,n),a=uI("numOrSizeSplits",e,t,n),s=uI("x",e,t,n);return Rd(s,a,r)}case"ScatterNd":{const r=uI("indices",e,t,n),a=uI("values",e,t,n),s=uI("shape",e,t,n);return[ah(r,a,s)]}case"GatherNd":{const r=uI("x",e,t,n),a=uI("indices",e,t,n);return[ih(r,a)]}case"SparseToDense":{const r=uI("sparseIndices",e,t,n),a=uI("outputShape",e,t,n),s=uI("sparseValues",e,t,n),i=uI("defaultValue",e,t,n);return[sh(r,s,a,s.dtype===i.dtype?i:bi(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"sparse":return zo(()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=yp.sparseFillEmptyRows(uI("indices",e,t,n),uI("values",e,t,n),uI("denseShape",e,t,n),uI("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=yp.sparseReshape(uI("inputIndices",e,t,n),uI("inputShape",e,t,n),uI("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[yp.sparseSegmentMean(uI("data",e,t,n),uI("indices",e,t,n),uI("segmentIds",e,t,n))];case"SparseSegmentSum":return[yp.sparseSegmentSum(uI("data",e,t,n),uI("indices",e,t,n),uI("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"spectral":return zo(()=>((e,t,n)=>{switch(e.op){case"FFT":return[Ad(uI("x",e,t,n))];case"IFFT":return[$d(uI("x",e,t,n))];case"RFFT":return[Dd(uI("x",e,t,n))];case"IRFFT":return[Fd(uI("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"string":return zo(()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=bp.stringNGrams(uI("data",e,t,n),uI("dataSplits",e,t,n),uI("separator",e,t,n),uI("nGramWidths",e,t,n),uI("leftPad",e,t,n),uI("rightPad",e,t,n),uI("padWidth",e,t,n),uI("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=bp.stringSplit(uI("input",e,t,n),uI("delimiter",e,t,n),uI("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[bp.stringToHashBucketFast(uI("input",e,t,n),uI("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"transformation":return zo(()=>((e,t,n)=>{switch(e.op){case"Cast":return[bi(uI("x",e,t,n),uI("dtype",e,t,n))];case"ExpandDims":{const r=uI("axis",e,t,n);return[Ul(uI("x",e,t,n),r)]}case"Squeeze":{const r=uI("axis",e,t,n);return[Od(uI("x",e,t,n),r)]}case"Reshape":return[Qu(uI("x",e,t,n),uI("shape",e,t,n))];case"MirrorPad":return[Oc(uI("x",e,t,n),uI("padding",e,t,n),uI("mode",e,t,n))];case"PadV2":case"Pad":return[Gc(uI("x",e,t,n),uI("padding",e,t,n),uI("constantValue",e,t,n))];case"SpaceToBatchND":{const r=uI("blockShape",e,t,n),a=uI("paddings",e,t,n);return[Xc(uI("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=uI("blockShape",e,t,n),a=uI("crops",e,t,n);return[ol(uI("x",e,t,n),r,a)]}case"DepthToSpace":{const r=uI("blockSize",e,t,n),a=uI("dataFormat",e,t,n).toUpperCase();return[$l(uI("x",e,t,n),r,a)]}case"BroadcastTo":return[pl(uI("x",e,t,n),uI("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=uI("keyDType",e,t,n),s=uI("valueDType",e,t,n),i=new aN(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=uI("tableHandle",e,t,n,r),s=uI("keys",e,t,n),i=uI("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=uI("tableHandle",e,t,n,r),s=uI("keys",e,t,n),i=uI("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=uI("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,a);case"custom":const s=iI(e.op);if(s&&s.customExecutor)return s.customExecutor(new XI(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return r.isPromise(s)?s.then(e=>[].concat(e)):[].concat(s)}class iN{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function oN(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map(e=>hI(e)[0]);let c=[];null!=r&&(c=r.map(e=>hI(e.name)[0]));const d=[...t];for(;d.length>0;){const e=d.pop();(dN(e)||hN(e)||pN(e))&&null==i&&(i=e,o=i.children.map(e=>e.name).filter(e=>a.has(e))),a.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach(e=>{u.has(e.name)||(u.add(e.name),d.push(e))}):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}const uN=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],lN=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],cN=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function dN(e){return uN.indexOf(e.op)>=0}function hN(e){return lN.indexOf(e.op)>=0}function pN(e){return cN.indexOf(e.op)>=0}class fN{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new fN(e.functions[t],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=oN(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map(e=>e.name),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map(e=>hI(e)[0]).map(t=>e.nodes[t]),o=e.initNodes;i.forEach(e=>{r.has(e.name)&&s.push(e)}),e.weights.forEach(e=>{r.has(e.name)&&s.push(e)}),null!=o&&o.forEach(e=>{r.has(e.name)&&s.push(e)});const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach(e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every(e=>u.has(e.name))&&s.push(e)})}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map(e=>this.graph.nodes[hI(e)[0]]),s=t.map(e=>hI(e)[0]);let i=s.map(e=>this.graph.nodes[e]);0===i.length&&(i=this._outputs);const o=this.getCompilationKey(a,i);let u=this.compiledMap.get(o);null==u&&(u=this.compile(e,i),this.compiledMap.set(o,u));const l={},c={};return zo(()=>{const n=new iN(this.weightMap,l,c,this.functionExecutorMap),a=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=hI(t),s=[];s[r]=e[t],a[n]=s});const i=this.getFrozenTensorIds(a),o={};for(let e=0;e<u.length;e++){const t=u[e];if(!a[t.name]){const e=sN(t,a,n,this._resourceManager);if(r.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);a[t.name]=e,this.checkTensorForDisposal(t.name,t,a,n,i,s,o)}}return null==this.parent&&n.dispose(i),t.map(e=>lI(e,a,n))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach(e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)}),t.inputs.forEach(e=>{if("control"!==e.category){const t=function(e,t,n){return t[dI(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach(e=>{if(e&&!e.kept&&!a.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new iN(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map(e=>lI(e,i,s)),u=o.map(e=>e.id),l=Object.keys(e).map(t=>e[t].id),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach(e=>{i[e].forEach(e=>{!e||e.kept||e.isDisposed||c.has(e.id)||e.dispose()})}),null==this.parent&&s.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map(e=>this.graph.nodes[hI(e)[0]]),i=n.map(e=>hI(e)[0]);let o=i.map(e=>this.graph.nodes[e]);0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:d}=oN(e,o,this.weightMap,this._initNodes),h=[...s,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),p=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=hI(t),a=[];a[r]=e[t],p[n]=a});const f={},m=this.getFrozenTensorIds(p),g={};for(;h.length>0;){const e=this.processStack(s,h,t,p,g,m,i,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter(e=>!dN(e)&&!lI(e.name,p,t)).map(e=>e.name);if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return p}processStack(e,t,n,a,s,i,o,u,l){const c=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let d="";if("Enter"===e.node.op&&uI("isConstant",e.node,a,n)&&([d]=cI(e.node.name,n)),null==a[e.node.name]){const h=sN(e.node,a,n,this._resourceManager);d||([d]=cI(e.node.name,n));const p=n.currentContext;r.isPromise(h)?c.push(h.then(r=>(a[d]=r,n.currentContext=p,this.checkTensorForDisposal(d,e.node,a,n,i,o,u),this.processChildNodes(e.node,t,n,a,s,l),r))):(a[d]=h,this.checkTensorForDisposal(d,e.node,a,n,i,o,u),this.processChildNodes(e.node,t,n,a,s,l))}else this.processChildNodes(e.node,t,n,a,s,l)}return c}processChildNodes(e,t,n,r,a,s){e.children.forEach(e=>{const[i]=cI(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!lI(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!lI(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[a]=hI(t),s=this.graph.nodes[a];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t);r.assert(t,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&r.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter(e=>{const[t]=hI(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e,{})}checkOutputs(e){e.forEach(e=>{const[t]=hI(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}}class mN{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class gN{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new mN}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=i.browserHTTPRequest(e,this.loadOptions);else{const t=i.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(i.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=i.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new fN(DI.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=DI.Instance.transformGraph(e.modelInitializer);this.initializer=new fN(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=i.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Ha||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,r)=>(t[n]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function yN(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e+="model.json?tfjs-format=file");const n=new gN(e,t);return await n.load(),n}const bN="3.7.0";function xN(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(NN(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=xN(e[s],t,n,r);a[s]=i}return r.delete(e),a}throw new Error("Can't recurse into non-iterable type: "+e)}return n.set(e,a.value),a.value}function wN(e,t=kN){return vN(e,t)}function vN(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(NN(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=vN(e.map(e=>e[s]),t,n);a[s]=r}return n.delete(r),a}throw new Error("Can't recurse into non-iterable type: "+r)}return a.value}function kN(e){return null===e?null:NN(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function IN(e,t){const n=new Map;xN(e,t,n);for(const a of Array.from(n.keys())){const e=n.get(a);if(r.isPromise(e)){const t=await e;n.set(a,t)}}return xN(e,t,n)}function NN(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Ha))}function SN(e){return e instanceof Ha?{value:e.clone(),recurse:!1}:NN(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class CN{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class TN extends CN{constructor(){super(TN.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function EN(e){return new $N(e)}function _N(e){return new FN(e)}TN.INITIAL_CAPACITY=32;class AN{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new PN(this,e)}filter(e){return new LN(this,e)}map(e){return new zN(this,e)}mapAsync(e){return new BN(this,e)}serialMapAsync(e){return new BN(this,e).serial()}flatmap(e){return new VN(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new ON(this,e,t)}columnMajorBatch(e,t=!0,n=kN){return this.rowMajorBatch(e,t).map(e=>wN(e,n))}concatenate(e,t){return new UN(EN([this,e]),t)}take(e){return e<0||null==e?this:new MN(this,e)}skip(e){return e<0||null==e?this:new DN(this,e)}prefetch(e){return new jN(this,e)}shuffle(e,t){return new qN(this,e,t)}serial(){return new RN(this)}}class $N extends AN{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,xN(t,SN)),done:!1};var t}}class FN extends AN{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: "+e.message,e}}}class RN extends AN{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class DN extends AN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Po(e.value)}return this.upstream.next()}}class MN extends AN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class ON extends AN{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class LN extends AN{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Po(e.value)}}}class zN extends AN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Map"}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=a.getTensorsInContainer(e.value),n=this.transform(e.value),r=a.getTensorsInContainer(n);for(const s of t)a.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class PN extends AN{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class BN extends AN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=a.getTensorsInContainer(e.value),n=await this.transform(e.value),r=a.getTensorsInContainer(n);for(const s of t)a.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class WN extends AN{constructor(){super(),this.outputQueue=new TN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!(await this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class VN extends WN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=a.getTensorsInContainer(e.value),n=this.transform(e.value),r=a.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const s of t)a.isTensorInList(s,r)||s.dispose();return!0}}class UN extends AN{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var GN;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(GN||(GN={}));class HN extends AN{constructor(e,t=GN.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await IN(this.iterators,function(e){return e instanceof AN?{value:e.next().then(e=>(t++,e.done&&n++,e.value)),recurse:!1}:{value:null,recurse:!0}});if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case GN.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case GN.SHORTEST:return{value:null,done:!0}}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class jN extends AN{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new CN(t)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class qN extends jN{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=ed.alea(n||r.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class KN{constructor(){this.size=null}batch(e,t=!0){const n=this;let a;return r.assert(e>0,()=>"batchSize needs to be positive, but it is\n      "+e),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),XN(async()=>(await n.iterator()).columnMajorBatch(e,t,JN),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,XN(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,XN(async()=>(await t.iterator()).filter(t=>zo(()=>e(t))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return XN(async()=>(await t.iterator()).map(t=>zo(()=>e(t))),this.size)}mapAsync(e){const t=this;return XN(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return XN(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,XN(async()=>{return n=_N(async()=>({value:await t.iterator(),done:!1})).take(e),new UN(n,undefined);var n},n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,XN(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const a=this,s=ed.alea(t||r.now().toString());return XN(async()=>{let t=s.int32();return n&&(t+=s.int32()),(await a.iterator()).shuffle(e,t.toString())},this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,XN(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function XN(e,t=null){return new class extends KN{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function YN(e){return XN(async()=>EN(e),e.length)}function ZN(e){if(!NN(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return XN(async()=>function(e,t=GN.FAIL){return new HN(e,t)}(await IN(e,e=>{if(e instanceof KN)return{value:e.iterator(),recurse:!1};if(NN(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}),GN.SHORTEST),t)}function JN(e){return null===e?null:null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof Ha||r.isTypedArray(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ha?Ld(e):Ss(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}KN.MAX_BUFFER_SIZE=1e4;class QN extends KN{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}}const eS='"',tS=Symbol("out"),nS=Symbol("field"),rS=Symbol("quote"),aS=Symbol("quoteafterquote"),sS=Symbol("quoteinquote");class iS extends KN{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new QN(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(r.assert(null==t.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&r.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce((e,t)=>(e[t]=e[t]+1||1,e),{}),n=Object.keys(t).filter(e=>t[e]>1);if(r.assert(0===n.length,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs)for(const r of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(r))throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");return this.parseRow(t.value,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(e=>this.makeDataElement(e))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){const o=t[a];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o);break;default:u=e}else u=e}i&&i.isLabel?r[s]=u:n[s]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const a=e.length;let s=tS;for(let i=0;i<a;i++)switch(s){case tS:switch(e.charAt(i)){case eS:r=i+1,s=rS;break;case this.delimiter:if(r=i+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=tS;break;default:s=nS,r=i}break;case nS:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i)),s=tS,r=i+1}break;case rS:switch(e.charAt(i)){case eS:s=aS}break;case aS:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i-1)),s=tS,r=i+1;break;case eS:s=rS;break;default:s=sS}break;case sS:switch(e.charAt(i)){case eS:s=rS}}if(n.push(s===aS?e.substring(r,a-1):e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class oS extends AN{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error("Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got "+this.fftSize);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(je().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new oS(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(n){throw new Error("Error thrown while initializing video stream: "+n.message)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: `+this.audioContext.sampleRate)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise(r=>{const a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((e,r)=>n.set(e,r*t)),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(r.sizeFromShape(t));return n.set(e,n.length-e.length),Ss(n,t)}}class uS extends AN{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Wd([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2;this.cropBox=Vd([r,n,t+r,n+e],[1,4])}else this.cropBox=Vd([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(je().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new uS(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&r.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message="Error thrown while initializing video stream: "+e.message,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=u.fromPixels(this.webcamVideoElement)}catch(t){throw new Error("Error thrown converting video to pixels: "+JSON.stringify(t))}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error("Error thrown cropping the video: "+t.message)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return zo(()=>{const t=Ul(bi(e,"float32"),0);let n;return n=fp.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear"),Qu(n,n.shape.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class lS{}class cS extends AN{split(e){return new dS(this,e)}}class dS extends cS{constructor(e,t){super(),this.upstream=e,this.impl=new hS(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class hS extends WN{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}}class pS extends AN{decodeUTF8(){return new fS(this)}}class fS extends cS{constructor(e){super(),this.upstream=e,this.impl=new mS(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class mS extends WN{constructor(e){if(super(),this.upstream=e,je().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(3);this.decoder=new e("utf8")}}summary(){return this.upstream.summary()+" -> Utf8"}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=je().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class gS extends pS{constructor(e,t={}){super(),this.file=e,this.options=t,r.assert(e instanceof Uint8Array||!!je().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return"FileChunks "+this.file}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n});return{value:await e,done:!1}}}function yS(e){return"string"==typeof e&&"file://"===e.substr(0,7)}class bS extends lS{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(yS(this.input)&&je().get("IS_NODE")){const e=n(4);this.input=e.readFileSync(this.input.substr(7))}return new gS(this.input,this.options)}}class xS extends lS{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return yS(this.url)?new bS(this.url,this.fileOptions).iterator():async function(e,t={}){let n,a;var s;"string"==typeof e?n=e:(n=e.url,a={method:(s=e).method,headers:s.headers,body:s.body,mode:s.mode,credentials:s.credentials,cache:s.cache,redirect:s.redirect,referrer:s.referrer,integrity:s.integrity});const i=await r.fetch(n,a);if(i.ok){const e=new Uint8Array(await i.arrayBuffer());return new gS(e,t)}throw new Error(i.statusText)}(this.url,this.fileOptions)}}function wS(e,t={}){return new iS(new xS(e),t)}function vS(e){const t=_N(e);return XN(async()=>t)}function kS(e){return XN(async()=>{const t=await e();return _N(()=>t.next())})}async function IS(e,t){return uS.create(e,t)}async function NS(e){return oS.create(e)}const SS="3.7.0";function CS(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r.assert("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the CPU backend.")})}const TS=y.whereImpl;class ES extends X{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new K(this,Mo())}nextDataId(){return ES.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,je().get("IS_NODE")&&g.warn("\n============================\nHi there \ud83d\udc4b. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.isString(n[0])){const s=n.map(e=>r.encodeString(e));a=this.write(s,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return g.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>r.decodeString(e))}catch(a){throw new Error("Failed to decode encoded string bytes into utf-8")}return yi(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Mo().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=r.now();return e(),{kernelMs:r.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){CS([e],"where");const t=this.readSync(e.dataId);return TS(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function _S(e,t,n){return({inputs:a,attrs:s,backend:i})=>{const{x:o}=a;if(CS(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=i,l=u.data.get(o.dataId).values,c=r.sizeFromShape(o.shape),d=n||o.dtype,h=r.getArrayFromDType(d,c);for(let e=0;e<c;++e)h[e]=t(l[e],s);return u.makeTensorInfo(o.shape,d,h)}}function AS(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(CS(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,a);return o.makeTensorInfo(i.shape,l,c)}}ES.nextDataId=0,Ko("cpu",()=>new ES,1);const $S=_S(jt,e=>e>=0?e:Math.exp(e)-1),FS={kernelName:jt,backendName:"cpu",kernelFunc:$S};function RS(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const DS={kernelName:cn,backendName:"cpu",kernelFunc:RS};function MS(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{alpha:i}=a;CS([s],"leakyRelu");const o=r.sizeFromShape(s.shape),u=n.data.get(s.dataId).values,l=r.getTypedArrayFromDType("float32",o);for(let r=0;r<u.length;r++)l[r]=u[r]<0?i*u[r]:u[r];return n.makeTensorInfo(s.shape,"float32",l)}const OS={kernelName:gn,backendName:"cpu",kernelFunc:MS};function LS(e){return(t,n,a,s,i)=>{const o=g.assertAndGetBroadcastShape(t,n),u=o.length,l=r.computeStrides(o),c=r.sizeFromShape(o),d=r.getTypedArrayFromDType(i,c),h=t.length,p=n.length,f=r.computeStrides(t),m=r.computeStrides(n),y=g.getBroadcastDims(t,o),b=g.getBroadcastDims(n,o);if(y.length+b.length===0)for(let r=0;r<d.length;++r)d[r]=e(a[r%a.length],s[r%s.length]);else for(let g=0;g<d.length;++g){const t=r.indexToLoc(g,u,l),n=t.slice(-h);y.forEach(e=>n[e]=0);const i=r.locToIndex(n,h,f),o=t.slice(-p);b.forEach(e=>o[e]=0);const c=r.locToIndex(o,p,m);d[g]=e(a[i],s[c])}return[d,o]}}const zS=LS((e,t)=>e<0?t*e:e);function PS(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;CS([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=zS(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const BS={kernelName:Qn,backendName:"cpu",kernelFunc:PS},WS=_S(ar,e=>Math.max(0,e)),VS={kernelName:ar,backendName:"cpu",kernelFunc:WS},US=_S(cr,e=>Math.min(Math.max(0,e),6)),GS={kernelName:cr,backendName:"cpu",kernelFunc:US},HS=_S(vr,e=>1/(1+Math.exp(-e))),jS={kernelName:vr,backendName:"cpu",kernelFunc:HS};function qS(e,t,n,r,a){if("linear"===n)return RS({inputs:{x:t},backend:e});if("relu"===n)return WS({inputs:{x:t},backend:e});if("elu"===n)return $S({inputs:{x:t},backend:e});if("relu6"===n)return US({inputs:{x:t},backend:e});if("prelu"===n)return PS({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return MS({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return HS({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function KS(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const XS={kernelName:kt,backendName:"cpu",kernelFunc:KS};function YS(e,t,n="float32"){if("complex64"===n)return KS({inputs:{real:YS(e,t,"float32"),imag:YS(e,t,"float32")},backend:e});const a=r.makeZerosTypedArray(r.sizeFromShape(t),n);return e.makeTensorInfo(t,n,a)}function ZS(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const JS={kernelName:nr,backendName:"cpu",kernelFunc:ZS};function QS(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return RS({inputs:{x:s},backend:n});const e=YS(n,s.shape,s.dtype),t=QS({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=KS({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=ZS({inputs:{input:s},backend:n}),t=QS({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!r.hasEncodingLoss(s.dtype,i)){const e=RS({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===i){const e=n.data.get(s.dataId).values,t=r.toTypedArray([0],s.dtype),[a,i]=LS((e,t)=>e!==t?1:0)(s.shape,[],e,t,"bool");return n.makeTensorInfo(i,"bool",a)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}const eC={kernelName:xt,backendName:"cpu",kernelFunc:QS};function tC(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;CS([s,i],e);const u=o.data.get(s.dataId).values,l=o.data.get(i.dataId).values,c="string"===s.dtype?g.fromUint8ToStringArray(u):u,d="string"===s.dtype?g.fromUint8ToStringArray(l):l,h=r||s.dtype,[p,f]=t(s.shape,i.shape,c,d,h);return o.makeTensorInfo(f,h,p)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=QS({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.imag,a=o.data.get(t.complexTensorInfos.real.dataId).values,u=o.data.get(r.dataId).values,l=QS({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),c=o.data.get(l.dataId),d=c.complexTensorInfos.imag,h=o.data.get(c.complexTensorInfos.real.dataId).values,p=o.data.get(d.dataId).values,[f,m,g]=n(s.shape,i.shape,a,u,h,p),y=o.makeTensorInfo(g,"float32",f),b=o.makeTensorInfo(g,"float32",m),x=KS({inputs:{real:y,imag:b},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(l),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(b),x}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,l]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(l,a,u)}}}function nC(e){return(t,n,a,s,i,o)=>{const u=g.assertAndGetBroadcastShape(t,n),l=r.sizeFromShape(u),c=u.length,d=r.computeStrides(u),h=r.getTypedArrayFromDType("float32",l),p=r.getTypedArrayFromDType("float32",l),f=g.getBroadcastDims(t,u),m=g.getBroadcastDims(n,u),y=g.mergeRealAndImagArrays(a,s),b=g.mergeRealAndImagArrays(i,o),x=t.length,w=r.computeStrides(t),v=n.length,k=r.computeStrides(n);if(f.length+m.length===0)for(let r=0;r<h.length;r++){const t=r%y.length,n=r%b.length,a=e(y[2*t],y[2*t+1],b[2*n],b[2*n+1]);h[r]=a.real,p[r]=a.imag}else for(let g=0;g<h.length;g++){const t=r.indexToLoc(g,c,d),n=t.slice(-x);f.forEach(e=>n[e]=0);const a=r.locToIndex(n,x,w),s=t.slice(-v);m.forEach(e=>s[e]=0);const i=r.locToIndex(s,v,k),o=e(y[2*a],y[2*a+1],b[2*i],b[2*i+1]);h[g]=o.real,p[g]=o.imag}return[h,p,u]}}const rC=LS((e,t)=>e+t),aC=nC((e,t,n,r)=>({real:e+n,imag:t+r})),sC=tC(et,rC,aC),iC={kernelName:et,backendName:"cpu",kernelFunc:sC};function oC(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:i}=a,o=r.sizeFromShape(s.shape),u=r.inferFromImplicitShape(i,o),l=r.sizeFromShape(u);r.assert(o===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(s.dataId);const c=n.data.get(s.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.imag;c.complexTensorInfos.real.shape=u,e.shape=u}return{dataId:s.dataId,shape:u,dtype:s.dtype}}const uC={kernelName:sr,backendName:"cpu",kernelFunc:oC};function lC(e){const{inputs:t,backend:n,attrs:a}=e,{a:s,b:i}=t,{transposeA:o,transposeB:u}=a;CS([s,i],"matMul");const l=s.shape.length,c=i.shape.length,d=o?s.shape[l-2]:s.shape[l-1],h=u?i.shape[c-1]:i.shape[c-2],p=o?s.shape[l-1]:s.shape[l-2],f=u?i.shape[c-2]:i.shape[c-1],m=s.shape.slice(0,-2),g=i.shape.slice(0,-2),y=r.sizeFromShape(m),b=r.sizeFromShape(g);r.assert(l>=2&&c>=2&&(y===b||1===y||1===b),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`);const x=(y>b?s.shape.slice(0,-2):i.shape.slice(0,-2)).concat([p,f]);r.assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${o} and transposeB=${u} must match.`);const w=u?[b,f,h]:[b,h,f],v=oC({inputs:{x:s},backend:n,attrs:{shape:o?[y,d,p]:[y,p,d]}}),k=oC({inputs:{x:i},backend:n,attrs:{shape:w}}),I=o?v.shape[1]:v.shape[2],N=o?v.shape[2]:v.shape[1],S=u?k.shape[1]:k.shape[2],C=Math.max(y,b),T=n.data.get(v.dataId).values,E=n.data.get(k.dataId).values,_=r.computeStrides(v.shape),A=r.computeStrides(k.shape),[$,F,R]=o?[_[0],1,_[1]]:[_[0],_[1],1],[D,M,O]=u?[1,A[1],A[0]]:[A[1],1,A[0]],L=N*S,z=yi([C,N,S],v.dtype),P=z.values,B=n.blockSize;for(let r=0;r<C;r++)for(let e=0;e<N;e+=B)for(let t=0;t<S;t+=B)for(let n=0;n<I;n+=B){const a=Math.min(e+B,N),s=Math.min(t+B,S),i=Math.min(n+B,I);for(let o=e;o<a;o++)for(let e=t;e<s;e++){let t=0;for(let a=n;a<i;a++){const n=Math.min(r,y-1)*$,s=Math.min(r,b-1)*O;t+=T[n+o*F+a*R]*E[a*D+e*M+s]}P[r*L+(o*S+e)]+=t}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(x,z.dtype,z.values)}const cC={kernelName:mt,backendName:"cpu",kernelFunc:lC},dC={kernelName:Qr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;let h,p,f;const m=[];h=lC({inputs:{a:a,b:s},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=sC({inputs:{a:h,b:i},backend:n}),m.push(h),h=p),c&&(f=qS(n,h,c,o,d),m.push(h),h=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return h}};function hC(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const pC={kernelName:Ze,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;CS(t,"abs");let a=new Float32Array(r.sizeFromShape(t.shape));return a=hC(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,"float32")}},fC=_S(Je,e=>Math.acos(e)),mC={kernelName:Je,backendName:"cpu",kernelFunc:fC},gC=_S(Qe,e=>Math.acosh(e)),yC={kernelName:Qe,backendName:"cpu",kernelFunc:gC},bC={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;CS(t,"addN");const a=r.map(e=>n.data.get(e.dataId).values),s=yi(r[0].shape,r[0].dtype),i=s.values;for(let o=0;o<r.length;o++){const e=a[o];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function xC(e,t,n,a,s){const i=t.length,o=r.sizeFromShape(t),u=r.computeStrides(t),l=r.computeStrides(s),c=r.getTypedArrayFromDType(n,r.sizeFromShape(s));for(let d=0;d<o;++d){const t=r.indexToLoc(d,i,u),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];c[r.locToIndex(n,i,l)]=e[d]}return c}function wC(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;CS(a,"transpose");const i=new Array(a.shape.length);for(let u=0;u<i.length;u++)i[u]=a.shape[s[u]];const o=xC(r.data.get(a.dataId).values,a.shape,a.dtype,s,i);return{dataId:r.write(o,i,a.dtype),shape:i,dtype:a.dtype}}const vC={kernelName:Hr,backendName:"cpu",kernelFunc:wC},kC={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a;CS(s,"all");const u=r.parseAxisParam(i,s.shape);let l=u;const c=g.getAxesPermutation(l,s.shape.length);let d=s;null!=c&&(d=wC({inputs:{x:s},backend:n,attrs:{perm:c}}),l=g.getInnerMostAxes(l.length,s.shape.length)),g.assertAxesAreInnerMostDims("all",l,d.shape.length);const[h,p]=g.computeOutAndReduceShapes(d.shape,l),f=r.sizeFromShape(p),m=r.makeZerosTypedArray(r.sizeFromShape(h),d.dtype),y=n.data.get(d.dataId).values;for(let r=0;r<m.length;++r){const e=r*f;let t=y[e];for(let n=0;n<f;++n){const r=y[e+n];t=t&&r}m[r]=t}null!=c&&n.disposeIntermediateTensorInfo(d);const b=n.makeTensorInfo(h,d.dtype,m);if(o){const e=oC({inputs:{x:b},backend:n,attrs:{shape:g.expandShapeToKeepDim(h,u)}});return n.disposeIntermediateTensorInfo(b),e}return b}},IC={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a;CS(s,"any");const u=r.parseAxisParam(i,s.shape);let l=u;const c=g.getAxesPermutation(l,s.shape.length);let d=s;null!=c&&(d=wC({inputs:{x:s},backend:n,attrs:{perm:c}}),l=g.getInnerMostAxes(l.length,s.shape.length)),g.assertAxesAreInnerMostDims("any",l,d.shape.length);const[h,p]=g.computeOutAndReduceShapes(d.shape,l),f=r.sizeFromShape(p),m=r.makeZerosTypedArray(r.sizeFromShape(h),d.dtype),y=n.data.get(d.dataId).values;for(let r=0;r<m.length;++r){const e=r*f;let t=y[e];for(let n=0;n<f;++n){const r=y[e+n];t=t||r}m[r]=t}null!=c&&n.disposeIntermediateTensorInfo(d);const b=n.makeTensorInfo(h,d.dtype,m);if(o){const e=oC({inputs:{x:b},backend:n,attrs:{shape:g.expandShapeToKeepDim(h,u)}});return n.disposeIntermediateTensorInfo(b),e}return b}},NC={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i}=a;CS(s,"argMax");let o=r.parseAxisParam(i,s.shape);const u=g.getAxesPermutation(o,s.shape.length);let l=s;const c=[];null!=u&&(l=wC({inputs:{x:s},backend:n,attrs:{perm:u}}),c.push(l),o=g.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],g.assertAxesAreInnerMostDims("argMax",o,l.shape.length);const[d,h]=g.computeOutAndReduceShapes(l.shape,o),p=r.sizeFromShape(d),f=r.makeZerosTypedArray(p,"int32"),m=r.sizeFromShape(h),y=n.data.get(l.dataId).values;for(let r=0;r<f.length;++r){const e=r*m;let t=y[e],n=0;for(let r=0;r<m;++r){const a=y[e+r];a>t&&(t=a,n=r)}f[r]=n}return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(d,"int32",f)}},SC={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i}=a;CS(s,"argMin");let o=r.parseAxisParam(i,s.shape);const u=g.getAxesPermutation(o,s.shape.length);let l=s;const c=[];null!=u&&(l=wC({inputs:{x:s},backend:n,attrs:{perm:u}}),c.push(l),o=g.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],g.assertAxesAreInnerMostDims("argMin",o,l.shape.length);const[d,h]=g.computeOutAndReduceShapes(l.shape,o),p=r.sizeFromShape(d),f=r.makeZerosTypedArray(p,"int32"),m=r.sizeFromShape(h),y=n.data.get(l.dataId).values;for(let r=0;r<f.length;++r){const e=r*m;let t=y[e],n=0;for(let r=0;r<m;++r){const a=y[e+r];a<t&&(t=a,n=r)}f[r]=n}return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(d,"int32",f)}},CC=_S(it,e=>Math.asin(e)),TC={kernelName:it,backendName:"cpu",kernelFunc:CC},EC=_S(ot,e=>Math.asinh(e)),_C={kernelName:ot,backendName:"cpu",kernelFunc:EC},AC=_S(ut,e=>Math.atan(e)),$C={kernelName:ut,backendName:"cpu",kernelFunc:AC},FC=LS((e,t)=>Math.atan2(e,t)),RC=tC(ct,FC),DC={kernelName:ct,backendName:"cpu",kernelFunc:RC},MC=_S(lt,e=>Math.atanh(e)),OC={kernelName:lt,backendName:"cpu",kernelFunc:MC};function LC(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,p=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=yi(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let w=0;w<a.batchSize;++w){const t=w*y,n=w*r[0];for(let m=0;m<a.inChannels;++m)for(let y=0;y<a.outHeight;++y){const w=y*i-h,v=Math.max(0,w),k=Math.min(a.inHeight,c+w),I=t+y*b;for(let t=0;t<a.outWidth;++t){const i=t*o-p,c=Math.max(0,i),h=Math.min(a.inWidth,d+i);let y=f,b=0,w=0;for(let t=v;t<k;t+=u){const a=n+t*r[1];for(let t=c;t<h;t+=l){const n=e[a+t*r[2]+m];"max"===s&&n>y?y=n:"avg"===s&&(b+=n,w++)}if(isNaN(y))break}g[I+t*x+m]="avg"===s?b/w:y}}}return m}function zC(e,t,n,r,a=!1,s=!1){const i=yi(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=yi(t,n,e);for(let g=0;g<r.batchSize;++g)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*o-p;let y=n;for(;y<0;)y+=l;const b=Math.min(r.inHeight,d+n);for(let o=0;o<r.outWidth;++o){const d=o*u-f;let p=d;for(;p<0;)p+=c;const x=Math.min(r.inWidth,h+d);let w=Number.NEGATIVE_INFINITY,v=-1;for(let t=y;t<b;t+=l){const i=t-n;for(let n=p;n<x;n+=c){const o=n-d,u=m.get(g,t,n,e);u>w&&(w=u,v=a?s?((g*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:i*h+o)}}i.set(v,g,t,o,e)}}return i}function PC(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,l=a.dilationDepth,c=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterDepth,p=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=yi(a.outShape,n),w=x.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],N=a.outShape[4];for(let S=0;S<a.batchSize;++S){const t=S*v,n=S*r[0];for(let x=0;x<a.inChannels;++x)for(let v=0;v<a.outDepth;++v){const S=v*i-m;let C=S;for(;C<0;)C+=l;const T=Math.min(a.inDepth,h+S),E=t+v*k;for(let t=0;t<a.outHeight;++t){const i=t*o-g;let h=i;for(;h<0;)h+=c;const m=Math.min(a.inHeight,p+i),v=E+t*I;for(let t=0;t<a.outWidth;++t){const i=t*u-y;let o=i;for(;o<0;)o+=d;const p=Math.min(a.inWidth,f+i),g=v+t*N;let k=b,I=0,S=0;for(let t=C;t<T;t+=l){const a=n+t*r[1];for(let t=h;t<m;t+=c){const n=a+t*r[2];for(let t=o;t<p;t+=d){const a=e[n+t*r[3]+x];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+x]="avg"===s?I/S:k}}}}return x}const BC={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;CS(s,"avgPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=a;r.assert(g.eitherStridesOrDilationsAreOne(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=g.computePool2DInfo(s.shape,i,o,1,u,l);let d;if(1===c.filterWidth&&1===c.filterHeight&&r.arraysEqual(c.inShape,c.outShape))d=RS({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=r.computeStrides(s.shape),a=LC(e,0,s.dtype,t,c,"avg");d=n.makeTensorInfo(c.outShape,s.dtype,a.values)}return d}},WC={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l,dataFormat:c}=a;CS(s,"avgPool3d");const d=g.computePool3DInfo(s.shape,i,o,1,u,l,c),h=PC(n.data.get(s.dataId).values,0,s.dtype,r.computeStrides(s.shape),d,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},VC={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;CS([a,s],"avgPool3DGrad");const c=g.computePool3DInfo(s.shape,i,o,1,u,l),d=c.strideDepth,h=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,y=c.filterWidth,b=c.dilationDepth,x=c.dilationHeight,w=c.dilationWidth,v=c.effectiveFilterDepth,k=c.effectiveFilterHeight,I=c.effectiveFilterWidth,N=v-1-c.padInfo.front,S=I-1-c.padInfo.left,C=k-1-c.padInfo.top,T=yi(s.shape,"float32"),E=1/(f*m*y),_=n.bufferSync(a);for(let g=0;g<c.batchSize;++g)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=t-N,s=n-C,i=r-S;let o=0;for(let t=0;t<v;t+=b){const n=(a+t)/d;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<k;t+=x){const r=(s+t)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let t=0;t<I;t+=w){const a=(i+t)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(o+=_.get(g,n,r,a,e))}}}T.set(o*E,g,t,n,r,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},UC={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;CS([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=g.computePool2DInfo(i.shape,o,u,1,l),d=c.strideHeight,h=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,w=x-1-c.padInfo.left,v=b-1-c.padInfo.top,k=yi(i.shape,"float32"),I=1/(p*f),N=n.data.get(a.dataId).values,S=yi(a.shape,"float32",N);for(let g=0;g<c.batchSize;++g)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const r=t-v,a=n-w;let s=0;for(let t=0;t<b;t+=m){const n=(r+t)/d;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<x;t+=y){const r=(a+t)/h;r<0||r>=c.outWidth||Math.floor(r)!==r||(s+=S.get(g,n,r,e))}}k.set(s*I,g,t,n,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},GC={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,scale:i,offset:o,mean:u,variance:l}=t;r.assert(u.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.assert(null==o||u.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.assert(null==i||u.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),CS([s,u,l,i,o],"batchNorm");let{varianceEpsilon:c}=a;null==c&&(c=.001);const d=n.data.get(s.dataId).values,h=n.data.get(u.dataId).values,p=n.data.get(l.dataId).values,f=i?n.data.get(i.dataId).values:new Float32Array([1]),m=o?n.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(d.length),y=m.length,b=f.length,x=p.length,w=h.length;let v=0,k=0,I=0,N=0;for(let r=0;r<d.length;++r)g[r]=m[v++]+(d[r]-h[k++])*f[I++]/Math.sqrt(p[N++]+c),v>=y&&(v=0),k>=w&&(k=0),I>=b&&(I=0),N>=x&&(N=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};function HC(e,t,n,a,s){const i=d.isSliceContinous(a,t,n),o=r.sizeFromShape(n),u=r.computeStrides(a);if(i){const n=d.computeFlatOffset(t,u);return"string"===s?e.slice(n,n+o):e.subarray(n,n+o)}const l=yi(a,s,"string"===s?g.fromUint8ToStringArray(e):e),c=yi(n,s);for(let r=0;r<c.size;++r){const e=c.indexToLoc(r),n=e.map((e,n)=>e+t[n]);c.set(l.get(...n),...e)}return"string"===s?g.fromStringArrayToUint8(c.values):c.values}function jC(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;CS(a,"slice");const[o,u]=d.parseSliceParams(a,s,i);d.assertParamsValid(a,o,u);const l=HC(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,l)}const qC={kernelName:yr,backendName:"cpu",kernelFunc:jC},KC={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;CS([a],"batchToSpaceND");const o=s.reduce((e,t)=>e*t),u=g.getReshaped(a.shape,s,o),l=g.getPermuted(u.length,s.length),c=g.getReshapedPermuted(a.shape,s,o),d=g.getSliceBeginCoords(i,s.length),h=g.getSliceSize(c,i,s.length),p=oC({inputs:{x:a},backend:n,attrs:{shape:u}}),f=wC({inputs:{x:p},backend:n,attrs:{perm:l}}),m=oC({inputs:{x:f},backend:n,attrs:{shape:c}}),y=jC({inputs:{x:m},backend:n,attrs:{begin:d,size:h}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),y}};function XC(e,t,n,a,s){const i=r.sizeFromShape(a),o=r.makeZerosTypedArray(s,n);for(let r=0;r<e.length;r++){const n=e[r];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(o[n]+=i>0?t[r]:1)}return o}function YC(e,t,n,r=!1){const a=e.shape[0],s=e.shape[1],i=yi([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){const s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||i.set(r?1:t.size>0?i.get(o,s)+t.get(o,a):i.get(o,s)+1,o,s)}return i}const ZC={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=XC(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}};function JC(e){return(t,n,a)=>{const s=r.getTypedArrayFromDType(n,t.length);for(let r=0;r<t.length;++r)s[r]=e(t[r],a);return s}}const QC=JC(e=>Math.ceil(e)),eT=AS(wt,QC),tT={kernelName:wt,backendName:"cpu",kernelFunc:eT},nT=_S(vt,(e,t)=>e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e),rT={kernelName:vt,backendName:"cpu",kernelFunc:nT},aT={kernelName:It,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(r.sizeFromShape(t.shape)),s=n.data.get(t.dataId),i=s.complexTensorInfos.imag,o=n.data.get(s.complexTensorInfos.real.dataId).values,u=n.data.get(i.dataId).values;for(let r=0;r<o.length;r++)a[r]=Math.hypot(o[r],u[r]);return n.makeOutput(a,t.shape,"float32")}};function sT(e,t,n,a){const s=r.getArrayFromDType(n,r.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach(e=>{const n=r.sizeFromShape(e.shape);s.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{const a="string"===n?g.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]})}return s}function iT(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const oT={kernelName:hn,backendName:"cpu",kernelFunc:iT};function uT(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,i=r.parseAxisParam(s,t[0].shape)[0];let o=g.computeOutShape(t.map(e=>e.shape),i);if(0===r.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter(e=>r.sizeFromShape(e.shape)>0);if(1===u.length)return RS({inputs:{x:u[0]},backend:n});const l=u.map(e=>e.shape);if(g.assertParamsConsistent(l,i),"complex64"===u[0].dtype){const e=u.map(e=>ZS({inputs:{input:e},backend:n})),t=u.map(e=>iT({inputs:{input:e},backend:n})),r=uT({inputs:e,backend:n,attrs:{axis:i}}),a=uT({inputs:t,backend:n,attrs:{axis:i}}),s=KS({inputs:{real:r,imag:a},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),s}const c=u.map(e=>{const t=r.sizeFromShape(e.shape.slice(i));return oC({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),d=c.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));o=g.computeOutShape(c.map(e=>e.shape),1);const h=sT(d,o,t[0].dtype,1===c[0].shape[0]),p=g.computeOutShape(u.map(e=>e.shape),i),f=n.makeTensorInfo(p,t[0].dtype,h);return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}const lT={kernelName:Nt,backendName:"cpu",kernelFunc:uT};function cT(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:o,pad:u,dataFormat:l,dilations:c,dimRoundingMode:d}=a;CS([s,i],"conv2d");const h=g.convertConv2DDataFormat(l),p=g.computeConv2DInfo(s.shape,i.shape,o,c,u,d,!1,h),f=p.filterHeight,m=p.filterWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.padInfo.left,w=p.padInfo.top,v="channelsLast"===p.dataFormat,k=new Wa(p.outShape,s.dtype),I=r.computeStrides(s.shape),N=r.computeStrides(i.shape),S=I[0],C=v?I[1]:I[2],T=v?I[2]:1,E=v?1:I[1],_=k.strides[0],A=v?k.strides[1]:k.strides[2],$=v?k.strides[2]:1,F=v?1:k.strides[1],R=n.data.get(s.dataId).values,D=n.data.get(i.dataId).values,M=k.values;for(let r=0;r<p.batchSize;++r){const e=r*S,t=r*_;for(let n=0;n<p.outHeight;++n){const r=t+n*A,a=n*p.strideHeight-w;for(let t=0;t<f;++t){const n=a+t*y;if(n<0||n>=p.inHeight)continue;const s=t*N[0],i=e+n*C;for(let e=0;e<p.outWidth;++e){const t=r+e*$,n=e*p.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*b;if(r<0||r>=p.inWidth)continue;const a=i+r*T;let o=s+e*N[1];for(let e=0;e<p.inChannels;++e){const n=R[a+e*E];for(let e=0;e<p.outChannels;++e)M[t+e*F]+=n*D[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(k.shape,k.dtype,M)}const dT={kernelName:St,backendName:"cpu",kernelFunc:cT},hT={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;CS([a,s],"conv2dBackpropFilter");const d=g.convertConv2DDataFormat(u),h=g.computeConv2DInfo(a.shape,c,i,1,o,l,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:y}=h,b="channelsLast"===h.dataFormat,x=new Wa(h.filterShape,"float32"),w=h.padInfo.left,v=h.padInfo.top,k=n.data.get(a.dataId).values,I=n.data.get(s.dataId).values,N=new Wa(a.shape,a.dtype,k),S=new Wa(s.shape,s.dtype,I);for(let g=0;g<m;++g){const e=Math.max(0,Math.ceil((v-g)/p)),t=Math.min(h.outHeight,(h.inHeight+v-g)/p);for(let n=0;n<y;++n){const r=Math.max(0,Math.ceil((w-n)/f)),a=Math.min(h.outWidth,(h.inWidth+w-n)/f);for(let s=0;s<h.inChannels;++s)for(let i=0;i<h.outChannels;++i){let o=0;for(let u=0;u<h.batchSize;++u)for(let l=e;l<t;++l){const e=g+l*p-v;for(let t=r;t<a;++t){const r=n+t*f-w;o+=b?N.get(u,e,r,s)*S.get(u,l,t,i):N.get(u,s,e,r)*S.get(u,i,l,t)}}x.set(o,g,n,s,i)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},pT={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:i}=t,{inputShape:o,strides:u,pad:l,dataFormat:c,dimRoundingMode:d}=a;CS([s,i],"conv2dBackpropInput");const h=r.computeStrides(i.shape),p=r.computeStrides(s.shape);let f=g.convertConv2DDataFormat(c);const m=g.computeConv2DInfo(o,i.shape,u,1,l,d,!1,f),y=new Wa(m.inShape,"float32"),b=y.values,x=n.data.get(s.dataId).values,w=n.data.get(i.dataId).values,[v,k,I]=h,{batchSize:N,filterHeight:S,filterWidth:C,inChannels:T,inHeight:E,inWidth:_,outChannels:A,outHeight:$,outWidth:F,strideHeight:R,strideWidth:D}=m;f=m.dataFormat;const M=S-1-m.padInfo.top,O=C-1-m.padInfo.left,L="channelsLast"===f,z=y.strides[0],P=L?y.strides[1]:y.strides[2],B=L?y.strides[2]:1,W=L?1:y.strides[1],V=p[0],U=L?p[1]:p[2],G=L?p[2]:1,H=L?1:p[1];for(let r=0;r<N;++r)for(let e=0;e<T;++e)for(let t=0;t<E;++t){const n=t-M,a=Math.max(0,Math.ceil(n/R)),s=Math.min($,(S+n)/R);for(let i=0;i<_;++i){const o=i-O,u=Math.max(0,Math.ceil(o/D)),l=Math.min(F,(C+o)/D);let c=0;for(let t=a;t<s;++t){const a=t*R-n;for(let n=u;n<l;++n){const s=V*r+U*t+G*n,i=v*(S-1-a)+k*(C-1-(n*D-o))+I*e;for(let e=0;e<A;++e)c+=x[s+H*e]*w[i+e]}}b[z*r+P*t+B*i+W*e]=c}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},fT={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:o,pad:u,dilations:l}=a;CS([s,i],"conv3d");const c=g.computeConv3DInfo(s.shape,i.shape,o,l,u),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:y,padInfo:b}=c,x=b.front,w=b.left,v=b.top,k=new Wa(c.outShape,s.dtype),I=n.data.get(s.dataId).values,N=n.data.get(i.dataId).values,S=k.values,C=r.computeStrides(s.shape),T=r.computeStrides(i.shape);for(let r=0;r<c.batchSize;++r){const e=r*C[0],t=r*k.strides[0];for(let n=0;n<c.outDepth;++n){const r=t+n*k.strides[1],a=n*c.strideDepth-x;for(let t=0;t<d;++t){const n=a+t*f;if(n<0||n>=c.inDepth)continue;const s=t*T[0],i=e+n*C[1];for(let e=0;e<c.outHeight;++e){const t=r+e*k.strides[2],n=e*c.strideHeight-v;for(let e=0;e<h;++e){const r=n+e*m;if(r<0||r>=c.inHeight)continue;const a=s+e*T[1],o=i+r*C[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,r=e*c.strideWidth-w;for(let e=0;e<p;++e){const t=r+e*y;if(t<0||t>=c.inWidth)continue;const s=o+t*c.inChannels;let i=a+e*T[2];for(let e=0;e<c.inChannels;++e){const t=I[s+e];for(let e=0;e<c.outChannels;++e)S[n+e]+=t*N[i+e];i+=c.outChannels}}}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},mT={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,dy:i}=t,{strides:o,pad:u,filterShape:l}=a;CS([s,i],"conv3dBackpropFilterV2");const c=r.computeStrides(s.shape),d=r.computeStrides(i.shape),h=g.computeConv3DInfo(s.shape,l,o,1,u),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,y=h.filterDepth,b=h.filterHeight,x=h.filterWidth,w=new Wa(h.filterShape,"float32"),v=w.values,[k,I,N,S]=w.strides,C=n.data.get(i.dataId).values,[T,E,_,A]=d,$=n.data.get(s.dataId).values,[F,R,D,M]=c,O=h.padInfo.front,L=h.padInfo.left,z=h.padInfo.top;for(let r=0;r<y;++r){const e=Math.max(0,Math.ceil((O-r)/p)),t=Math.min(h.outDepth,(h.inDepth+O-r)/p),n=r*k;for(let a=0;a<b;++a){const s=Math.max(0,Math.ceil((z-a)/f)),i=Math.min(h.outHeight,(h.inHeight+z-a)/f),o=a*I+n;for(let n=0;n<x;++n){const u=Math.max(0,Math.ceil((L-n)/m)),l=Math.min(h.outWidth,(h.inWidth+L-n)/m),c=n*N+o;for(let o=0;o<h.inChannels;++o){const d=o*S+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let d=0;d<h.batchSize;++d){const h=d*F,y=d*T;for(let d=e;d<t;++d){const e=(r+d*p-O)*R+h,t=d*E+y;for(let r=s;r<i;++r){const s=(a+r*f-z)*D+e,i=r*_+t;for(let e=u;e<l;++e)g+=$[(n+e*m-L)*M+s+o]*C[e*A+i+c]}}}v[d+c]=g}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},gT={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:i}=t,{pad:o,strides:u,inputShape:l}=a;CS([s],"conv3dBackpropInputV2");const c=r.computeStrides(s.shape),d=r.computeStrides(i.shape),h=g.computeConv3DInfo(l,i.shape,u,1,o),p=new Wa(h.inShape,"float32"),f=p.values,[m,y,b,x]=p.strides,w=n.data.get(s.dataId).values,[v,k,I,N]=c,S=n.data.get(i.dataId).values,[C,T,E,_]=d,{batchSize:A,filterDepth:$,filterHeight:F,filterWidth:R,inChannels:D,inDepth:M,inHeight:O,inWidth:L,outChannels:z,outDepth:P,outHeight:B,outWidth:W,strideDepth:V,strideHeight:U,strideWidth:G}=h,H=$-1-h.padInfo.front,j=F-1-h.padInfo.top,q=R-1-h.padInfo.left;for(let r=0;r<A;++r)for(let e=0;e<D;++e)for(let t=0;t<M;++t){const n=t-H,a=Math.max(0,Math.ceil(n/V)),s=Math.min(P,($+n)/V);for(let i=0;i<O;++i){const o=i-j,u=Math.max(0,Math.ceil(o/U)),l=Math.min(B,(F+o)/U);for(let c=0;c<L;++c){const d=c-q,h=Math.max(0,Math.ceil(d/G)),p=Math.min(W,(R+d)/G);let g=0;for(let t=a;t<s;++t){const a=t*V-n;for(let n=u;n<l;++n){const s=n*U-o;for(let i=h;i<p;++i){const o=v*r+k*t+I*n+N*i,u=C*($-1-a)+T*(F-1-s)+E*(R-1-(i*G-d))+_*e;for(let e=0;e<z;++e)g+=w[o+e]*S[u+e]}}}f[m*r+y*t+b*i+x*c+e]=g}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},yT=_S($t,e=>Math.cos(e)),bT={kernelName:$t,backendName:"cpu",kernelFunc:yT},xT=_S(Ft,e=>Math.cosh(e)),wT={kernelName:Ft,backendName:"cpu",kernelFunc:xT},vT={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:s,boxes:i,boxInd:o}=t,{cropSize:u,method:l,extrapolationValue:c}=a,[d,h,p,f]=s.shape,m=i.shape[0],[g,y]=u,b=yi([m,g,y,f],"float32"),x=n.data.get(i.dataId).values,w=n.data.get(o.dataId).values,v=n.data.get(s.dataId).values,k=r.computeStrides(s.shape),I=r.computeStrides(b.shape);for(let r=0;r<m;r++){const e=4*r,t=x[e],n=x[e+1],a=x[e+2],s=x[e+3],i=w[r];if(i>=d)continue;const o=g>1?(a-t)*(h-1)/(g-1):0,u=y>1?(s-n)*(p-1)/(y-1):0;for(let d=0;d<g;d++){const e=g>1?t*(h-1)+d*o:.5*(t+a)*(h-1);if(e<0||e>h-1)for(let t=0;t<y;t++)for(let e=0;e<f;e++)b.values[e+t*I[2]+d*I[1]+r*I[0]]=c;else if("bilinear"===l){const t=Math.floor(e),a=Math.ceil(e),o=e-t;for(let e=0;e<y;e++){const l=y>1?n*(p-1)+e*u:.5*(n+s)*(p-1);if(l<0||l>p-1){for(let t=0;t<f;t++)b.values[t+e*I[2]+d*I[1]+r*I[0]]=c;continue}const h=Math.floor(l),m=Math.ceil(l),g=l-h;for(let n=0;n<f;n++){let s=n+h*k[2]+t*k[1]+i*k[0];const u=v[s];s=n+m*k[2]+t*k[1]+i*k[0];const l=v[s];s=n+h*k[2]+a*k[1]+i*k[0];const c=v[s];s=n+m*k[2]+a*k[1]+i*k[0];const p=v[s],f=u+(l-u)*g;s=n+e*I[2]+d*I[1]+r*I[0],b.values[s]=f+(c+(p-c)*g-f)*o}}}else for(let t=0;t<y;++t){const a=y>1?n*(p-1)+t*u:.5*(n+s)*(p-1);if(a<0||a>p-1){for(let e=0;e<f;e++)b.values[e+t*I[2]+d*I[1]+r*I[0]]=c;continue}const o=Math.round(a),l=Math.round(e);for(let e=0;e<f;e++)b.values[e+t*I[2]+d*I[1]+r*I[0]]=v[e+o*k[2]+l*k[1]+i*k[0]]}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},kT={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,exclusive:o,reverse:u}=a;CS(s,"cumsum");const l=g.getAxesPermutation([i],s.shape.length);let c=s;null!=l&&(c=wC({inputs:{x:s},backend:n,attrs:{perm:l}}));const d=g.getInnerMostAxes(1,s.shape.length)[0];if(d!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${d}`);const h=es(c.dtype,"int32"),p=r.makeZerosTypedArray(r.sizeFromShape(c.shape),h),f=n.data.get(c.dataId).values,m=c.shape[c.shape.length-1],y=u?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let r=0;r<f.length;r+=m)for(let e=0;e<m;e++){const t=y(r,e);if(0===e)p[t]=o?0:f[t];else{const n=y(r,e-1);p[t]=o?f[n]+p[n]:f[t]+p[n]}}const b=n.makeTensorInfo(c.shape,h,p);if(null!=l){const e=wC({inputs:{x:b},backend:n,attrs:{perm:g.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(c),e}return b}},IT={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=XC(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=YC(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+a.shape.length+".")}},NT={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockSize:i,dataFormat:o}=a;r.assert("NHWC"===o,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+o),r.assert(i>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+i);const u=s.shape[0],l=s.shape[1],c=s.shape[2],d=s.shape[3],h=l*i,p=c*i,f=d/(i*i),m=n.data.get(s.dataId).values,g=new Float32Array(u*h*p*f);let y=0;for(let r=0;r<u;++r)for(let e=0;e<h;++e){const t=Math.floor(e/i),n=e%i;for(let e=0;e<p;++e){const a=Math.floor(e/i),s=(n*i+e%i)*f;for(let e=0;e<f;++e)g[y++]=m[e+s+d*(a+c*(t+l*r))]}}return n.makeTensorInfo([u,h,p,f],s.dtype,g)}};function ST(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:o,pad:u,dilations:l,dimRoundingMode:c}=a;CS([s,i],"depthwiseConv2DNative");const d=r.computeStrides(s.shape),h=r.computeStrides(i.shape);let p=l;null==p&&(p=[1,1]),r.assert(g.eitherStridesOrDilationsAreOne(o,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`);const f=g.computeConv2DInfo(s.shape,i.shape,o,p,u,c,!0),{filterHeight:m,filterWidth:y,dilationHeight:b,dilationWidth:x,padInfo:w}=f,v=w.left,k=w.top,I=f.outChannels/f.inChannels,N=new Wa(f.outShape,s.dtype),S=n.data.get(s.dataId).values,C=n.data.get(i.dataId).values,T=N.values;for(let r=0;r<f.batchSize;++r){const e=r*d[0],t=r*N.strides[0];for(let n=0;n<f.outHeight;++n){const r=t+n*N.strides[1],a=n*f.strideHeight-k;for(let t=0;t<m;++t){const n=a+t*b;if(n<0||n>=f.inHeight)continue;const s=t*h[0],i=e+n*d[1];for(let e=0;e<f.outWidth;++e){const t=r+e*N.strides[2],n=e*f.strideWidth-v;for(let e=0;e<y;++e){const r=n+e*x;if(r<0||r>=f.inWidth)continue;const a=i+r*f.inChannels;let o=t,u=s+e*h[1];for(let e=0;e<f.inChannels;++e){const t=S[a+e];for(let e=0;e<I;++e)T[o+e]+=t*C[u+e];o+=I,u+=I}}}}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}const CT={kernelName:Lt,backendName:"cpu",kernelFunc:ST},TT={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;CS([a,s],"depthwiseConv2dNativeBackpropFilter");const d=g.computeConv2DInfo(a.shape,c,i,o,u,l,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,y=new Wa(d.filterShape,"float32"),b=d.padInfo.left,x=d.padInfo.top,w=d.outChannels/d.inChannels,v=n.data.get(a.dataId).values,k=new Wa(a.shape,a.dtype,v),I=n.data.get(s.dataId).values,N=new Wa(s.shape,s.dtype,I);for(let g=0;g<f;++g){const e=Math.max(0,Math.ceil((x-g)/h)),t=Math.min(d.outHeight,(d.inHeight+x-g)/h);for(let n=0;n<m;++n){const r=Math.max(0,Math.ceil((b-n)/p)),a=Math.min(d.outWidth,(d.inWidth+b-n)/p);for(let s=0;s<d.outChannels;++s){const i=Math.trunc(s/w),o=s%w;let u=0;for(let l=0;l<d.batchSize;++l)for(let o=e;o<t;++o){const e=g+o*h-x;for(let t=r;t<a;++t)u+=k.get(l,e,n+t*p-b,i)*N.get(l,o,t,s)}y.set(u,g,n,i,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},ET={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:s,filter:i}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,inputShape:d}=a;CS([s,i],"depthwiseConv2DNativeBackpropInput");const h=r.computeStrides(s.shape),p=r.computeStrides(i.shape),f=g.computeConv2DInfo(d,i.shape,o,u,l,c,!0),m=new Wa(f.inShape,"float32"),y=m.values,[b,x,w]=m.strides,v=n.data.get(s.dataId).values,[k,I,N]=h,S=n.data.get(i.dataId).values,[C,T,E]=p,{batchSize:_,filterHeight:A,filterWidth:$,inChannels:F,inHeight:R,inWidth:D,outChannels:M,outHeight:O,outWidth:L,strideHeight:z,strideWidth:P}=f,B=A-1-f.padInfo.top,W=$-1-f.padInfo.left,V=M/F;for(let r=0;r<_;++r)for(let e=0;e<F;++e)for(let t=0;t<R;++t){const n=t-B,a=Math.max(0,Math.ceil(n/z)),s=Math.min(O,(A+n)/z);for(let i=0;i<D;++i){const o=i-W,u=Math.max(0,Math.ceil(o/P)),l=Math.min(L,($+o)/P);let c=0;for(let t=a;t<s;++t){const a=t*z-n;for(let n=u;n<l;++n){const s=k*r+I*t+N*n,i=C*(A-1-a)+T*($-1-(n*P-o))+E*e;for(let t=0;t<V;++t)c+=v[s+(e*V+t)]*S[i+t]}}y[b*r+x*t+w*i+e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},_T={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=r.sizeFromShape(a.shape),i=n.data.get(a.dataId).values,o=yi([s,s],a.dtype),u=o.values;for(let r=0;r<i.length;r++)u[r*s+r]=i[r];const l=[...a.shape,...a.shape];return n.makeTensorInfo(l,o.dtype,o.values)}},AT={kernelName:Wt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=l.data.get(a.dataId).values,d=a.shape.length,h=l.data.get(s.dataId).values,p=s.shape.length,{batchSize:f,inHeight:m,inWidth:y,inChannels:b,outHeight:x,outWidth:w,padInfo:v,strideHeight:k,strideWidth:I,filterHeight:N,filterWidth:S,dilationHeight:C,dilationWidth:T,outShape:E}=g.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u),_=r.sizeFromShape(E),A=E.length,$=r.getArrayFromDType(a.dtype,_);for(let g=0;g<f;++g)for(let e=0;e<x;++e){const t=e*k-v.top;for(let n=0;n<w;++n){const i=n*I-v.left;for(let o=0;o<b;++o){let u=Number.MIN_SAFE_INTEGER;for(let e=0;e<N;++e){const n=t+e*C;if(n>=0&&n<m)for(let t=0;t<S;++t){const l=i+t*T;if(l>=0&&l<y){const i=r.locToIndex([g,n,l,o],d,r.computeStrides(a.shape)),f=r.locToIndex([e,t,o],p,r.computeStrides(s.shape)),m=c[i]+h[f];m>u&&(u=m)}}}$[r.locToIndex([g,e,n,o],A,r.computeStrides(E))]=u}}}return{dataId:l.write(r.toTypedArray($,a.dtype),E,a.dtype),shape:E,dtype:a.dtype}}},$T={kernelName:Ut,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:i}=e,{strides:o,pad:u,dilations:l}=n,c=t,d=r.toNestedArray(a.shape,c.data.get(a.dataId).values),h=r.toNestedArray(s.shape,c.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:y,outHeight:b,outWidth:x,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:I,filterWidth:N,dilationHeight:S,dilationWidth:C,outShape:T}=g.computeDilation2DInfo(a.shape,s.shape,o,u,"NHWC",l);r.assert(i.rank===T.length,()=>`Error in ${Ut}, dy must have the same rank as output ${T.length}, but got `+i.rank);const E=r.toNestedArray(T,c.data.get(i.dataId).values),_=r.makeZerosNestedTypedArray(s.shape,s.dtype);for(let r=0;r<p;++r)for(let e=0;e<b;++e){const t=e*v-w.top;for(let n=0;n<x;++n){const a=n*k-w.left;for(let s=0;s<y;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let e=0;e<I;++e){const n=t+e*S;if(n>=0&&n<f)for(let t=0;t<N;++t){const l=a+t*C;if(l>=0&&l<m){const a=d[r][n][l][s]+h[e][t][s];a>i&&(i=a,o=e,u=t)}}}_[o][u][s]+=E[r][e][n][s]}}}return{dataId:c.write(r.toTypedArray(_,a.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},FT={kernelName:Vt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:i}=e,{strides:o,pad:u,dilations:l}=n,c=t,d=r.toNestedArray(a.shape,c.data.get(a.dataId).values),h=r.toNestedArray(s.shape,c.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:y,outHeight:b,outWidth:x,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:I,filterWidth:N,dilationHeight:S,dilationWidth:C,outShape:T}=g.computeDilation2DInfo(a.shape,s.shape,o,u,"NHWC",l);r.assert(i.rank===T.length,()=>`Error in ${Vt}, dy must have the same rank as output ${T.length}, but got `+i.rank);const E=r.toNestedArray(T,c.data.get(i.dataId).values),_=r.makeZerosNestedTypedArray(a.shape,a.dtype);for(let r=0;r<p;++r)for(let e=0;e<b;++e){const t=e*v-w.top;for(let n=0;n<x;++n){const a=n*k-w.left;for(let s=0;s<y;++s){let i=Number.MIN_SAFE_INTEGER,o=t<0?0:t,u=a<0?0:a;for(let e=0;e<I;++e){const n=t+e*S;if(n>=0&&n<f)for(let t=0;t<N;++t){const l=a+t*C;if(l>=0&&l<m){const a=d[r][n][l][s]+h[e][t][s];a>i&&(i=a,o=n,u=l)}}}_[r][o][u][s]+=E[r][e][n][s]}}}return{dataId:c.write(r.toTypedArray(_,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},RT=LS((e,t)=>e*t),DT=nC((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),MT=tC(Wn,RT,DT),OT={kernelName:Wn,backendName:"cpu",kernelFunc:MT};function LT(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a;let u;CS(s,"sum"),u="bool"===s.dtype?QS({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):RS({inputs:{x:s},backend:n});const l=u.shape.length,c=r.parseAxisParam(i,u.shape),d=g.getAxesPermutation(c,l);let h=c,p=u;null!=d&&(p=wC({inputs:{x:u},backend:n,attrs:{perm:d}}),h=g.getInnerMostAxes(h.length,l)),g.assertAxesAreInnerMostDims("sum",h,p.shape.length);const[f,m]=g.computeOutAndReduceShapes(p.shape,h);let y=YS(n,f,g.upcastType(p.dtype,"int32"));const b=r.sizeFromShape(m),x=n.data.get(y.dataId).values,w=n.data.get(p.dataId).values;for(let r=0;r<x.length;++r){const e=r*b;let t=0;for(let n=0;n<b;++n)t+=w[e+n];x[r]=t}if(o){const e=y;y=oC({inputs:{x:y},backend:n,attrs:{shape:g.expandShapeToKeepDim(y.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(u),null!=d&&n.disposeIntermediateTensorInfo(p),y}const zT={kernelName:Nr,backendName:"cpu",kernelFunc:LT},PT={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,i=t,{allDims:o,summedDims:u,idDims:l}=g.decodeEinsumEquation(s,i.length);g.checkEinsumDimSizes(o.length,l,i);const{path:c,steps:d}=g.getEinsumComputePath(u,l),h=d.length;let p=null,f=o.length;const m=[];for(let y=0;y<h;++y){for(const e of d[y]){const{permutationIndices:t,expandDims:a}=g.getEinsumPermutation(f,l[e]);let s;g.isIdentityPermutation(t)?s=i[e]:(s=wC({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),m.push(s));const o=s.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);r.arraysEqual(s.shape,o)||(s=oC({inputs:{x:s},backend:n,attrs:{shape:o}}),m.push(s)),null===p?p=s:(p=MT({inputs:{a:s,b:p},backend:n}),m.push(p))}y<h-1&&(c[y]>=0&&(p=LT({inputs:{x:p},backend:n,attrs:{axis:c[y]-(o.length-f),keepDims:!1}}),m.push(p)),f--)}for(const r of m)r!==p&&n.disposeIntermediateTensorInfo(r);return p}},BT={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:s}=t;CS([a,s],"eluGrad");const i=new Float32Array(r.sizeFromShape(s.shape)),o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values;for(let r=0;r<o.length;++r){const e=o[r];i[r]=e>=1?u[r]:u[r]*(e+1)}return n.makeTensorInfo(s.shape,"float32",i)}},WT=LS((e,t)=>e===t?1:0),VT=tC(Xt,WT,null,"bool"),UT={kernelName:Xt,backendName:"cpu",kernelFunc:VT},GT=g.ERF_P,HT=g.ERF_A1,jT=g.ERF_A2,qT=g.ERF_A3,KT=g.ERF_A4,XT=g.ERF_A5,YT=_S(Kt,e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+GT*n);return t*(1-((((XT*r+KT)*r+qT)*r+jT)*r+HT)*r*Math.exp(-n*n))}),ZT={kernelName:Kt,backendName:"cpu",kernelFunc:YT},JT=JC(e=>Math.exp(e)),QT=AS(Yt,JT),eE={kernelName:Yt,backendName:"cpu",kernelFunc:QT};function tE(e){const{inputs:t,backend:n,attrs:a}=e,{input:s}=t,{dim:i}=a,o=s.shape.length,u=s.shape.slice();let l=i;return i<0&&(r.assert(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+i+1),u.splice(l,0,1),oC({inputs:{x:s},backend:n,attrs:{shape:u}})}const nE={kernelName:Zt,backendName:"cpu",kernelFunc:tE},rE=JC(e=>Math.expm1(e)),aE=AS(Jt,rE),sE={kernelName:Jt,backendName:"cpu",kernelFunc:aE},iE=LS((e,t)=>e/t),oE=tC(Gt,iE),uE={kernelName:Gt,backendName:"cpu",kernelFunc:oE},lE=LS((e,t)=>e-t),cE=nC((e,t,n,r)=>({real:e-n,imag:t-r})),dE=tC(Pr,lE,cE),hE={kernelName:Pr,backendName:"cpu",kernelFunc:dE};function pE(e,t,n){const a=e.shape,s=a[0],i=a[1],o=n.data.get(e.dataId),u=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[s,i],d=r.sizeFromShape(c),h=r.getTypedArrayFromDType("float32",d),p=r.getTypedArrayFromDType("float32",d);for(let r=0;r<s;r++){const e=jC({inputs:{x:u},backend:n,attrs:{begin:[r,0],size:[1,i]}}),a=jC({inputs:{x:l},backend:n,attrs:{begin:[r,0],size:[1,i]}}),s=KS({inputs:{real:e,imag:a},backend:n}),{real:o,imag:c}=fE(s,t,n),d=g.mergeRealAndImagArrays(o,c);for(let t=0;t<i;t++){const e=g.getComplexWithIndex(d,t);h[r*i+t]=e.real,p[r*i+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s)}const f=n.makeTensorInfo(c,"float32",h),m=n.makeTensorInfo(c,"float32",p),y=KS({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),y}function fE(e,t,n){const a=r.sizeFromShape(e.shape),s=n.data.get(e.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((u=a)&u-1)){const s=mE(i,o,a,t,n),u=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(u,"float32",s.real),t=n.makeTensorInfo(u,"float32",s.imag),i=n.makeTensorInfo([],"float32",r.createScalarValue(a,"float32")),o=RS({inputs:{x:i},backend:n}),l=uE.kernelFunc({inputs:{a:e,b:i},backend:n}),c=uE.kernelFunc({inputs:{a:t,b:o},backend:n}),d=n.data.get(l.dataId).values,h=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),{real:d,imag:h}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=g.exponent(a*r,t,n),u=g.getComplexWithIndex(e,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),g.assignToTypedArray(r,s,i,a)}return r}(g.mergeRealAndImagArrays(i,o),a,t);return g.splitRealAndImagArrays(e)}var u}function mE(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=g.mergeRealAndImagArrays(e,t),i=n/2,o=g.complexWithEvenIndex(s),u=o.real,l=o.imag,c=[u.length],d=a.makeTensorInfo(c,"float32",u),h=a.makeTensorInfo(c,"float32",l),p=KS({inputs:{real:d,imag:h},backend:a}),f=g.complexWithOddIndex(s),m=f.real,y=f.imag,b=[m.length],x=a.makeTensorInfo(b,"float32",m),w=a.makeTensorInfo(b,"float32",y),v=KS({inputs:{real:x,imag:w},backend:a}),k=mE(u,l,i,r,a),I=k.real,N=k.imag,S=[I.length],C=a.makeTensorInfo(S,"float32",I),T=a.makeTensorInfo(S,"float32",N),E=KS({inputs:{real:C,imag:T},backend:a}),_=mE(m,y,i,r,a),A=_.real,$=_.imag,F=[A.length],R=a.makeTensorInfo(F,"float32",A),D=a.makeTensorInfo(F,"float32",$),M=KS({inputs:{real:R,imag:D},backend:a}),O=g.exponents(n,r),L=[O.real.length],z=a.makeTensorInfo(L,"float32",O.real),P=a.makeTensorInfo(L,"float32",O.imag),B=KS({inputs:{real:z,imag:P},backend:a}),W=MT({inputs:{a:B,b:M},backend:a}),V=sC({inputs:{a:E,b:W},backend:a}),U=dE({inputs:{a:E,b:W},backend:a}),G=ZS({inputs:{input:V},backend:a}),H=ZS({inputs:{input:U},backend:a}),j=iT({inputs:{input:V},backend:a}),q=iT({inputs:{input:U},backend:a}),K=uT({inputs:[G,H],backend:a,attrs:{axis:0}}),X=uT({inputs:[j,q],backend:a,attrs:{axis:0}}),Y=a.data.get(K.dataId).values,Z=a.data.get(X.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(E),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(M),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(X),{real:Y,imag:Z}}const gE={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=r.sizeFromShape(a.shape),i=a.shape[a.shape.length-1],o=oC({inputs:{x:a},backend:n,attrs:{shape:[s/i,i]}}),u=pE(o,!1,n),l=oC({inputs:{x:u},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}};function yE(e){const{backend:t,attrs:n}=e,{shape:a,value:s,dtype:i}=n,o=i||r.inferDtype(s),u=r.getArrayFromDType(o,r.sizeFromShape(a));return function(e,t,n){e.fill(t)}(u,s),t.makeTensorInfo(a,o,u)}const bE={kernelName:en,backendName:"cpu",kernelFunc:yE},xE={kernelName:tn,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,a=t,s=r.getTypedArrayFromDType(n.dtype,r.sizeFromShape(n.shape)),[i,o,u,l]=n.shape,c=a.data.get(n.dataId).values;for(let r=0;r<i;r++){const e=r*u*o*l;for(let t=0;t<o;t++){const n=t*(u*l);for(let r=0;r<u;r++){const a=r*l;for(let o=0;o<l;o++){const d=Math.round(u-[i,t,r,o][2]),h=e+n+a+o;let p=c[h];d>=0&&d<u&&(p=c[e+n+d*l+o]),s[h]=p}}}}return{dataId:a.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},wE=JC(e=>Math.floor(e)),vE=AS(nn,wE),kE={kernelName:nn,backendName:"cpu",kernelFunc:vE},IE=LS((e,t)=>Math.floor(e/t)),NE=tC(rn,IE,null,"int32"),SE={kernelName:rn,backendName:"cpu",kernelFunc:NE},CE={kernelName:ea,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=cT({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const e=m;m=sC({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=qS(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},TE={kernelName:ta,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=ST({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const e=m;m=sC({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=qS(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function EE(e,t,n,r,a,s,i,o,u){const l=yi([r,s],n);for(let c=0;c<r;c++){const n=[];let r=0;for(let t=0;t<a;t++){const s=e[c*a+t];r+=s*i[t],n.push(s)}if(r<0||r>=u/s)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<s;e++)l.values[c*s+e]=t.get(...t.indexToLoc(r*s+e))}return l}const _E={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,i=r.sizeFromShape(a.shape),o=s.shape,u=o[o.length-1],[l,c,d,h]=g.prepareAndValidate(a,s);if(0===c)return n.makeTensorInfo(l,a.dtype,[]);const p=EE(n.data.get(s.dataId).values,n.bufferSync(a),a.dtype,c,u,d,h,a.shape,i);return n.makeTensorInfo(l,a.dtype,p.values)}};function AE(e,t,n){const r=yi(n,e.dtype);for(let a=0;a<r.size;++a){const n=r.indexToLoc(a).slice(),s=t.locToIndex([n[0],n[2]]);n[2]=t.values[s];const i=e.locToIndex(n);r.values[a]=e.values[i]}return r}const $E={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,indices:i}=t,{axis:o,batchDims:u}=a;CS([s,i],"gatherV2");let l=u;null==u&&(l=0);const c=r.sizeFromShape(i.shape),d=r.parseAxisParam(o,s.shape)[0],h=g.segment_util.collectGatherOpShapeInfo(s,i,d,l),p=oC({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),f=oC({inputs:{x:i},backend:n,attrs:{shape:[h.batchSize,c/h.batchSize]}}),m=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],y=n.bufferSync(f),b=AE(n.bufferSync(p),y,m);return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(h.outputShape,b.dtype,b.values)}},FE=LS((e,t)=>e>t?1:0),RE=tC(un,FE,null,"bool"),DE={kernelName:un,backendName:"cpu",kernelFunc:RE},ME=LS((e,t)=>e>=t?1:0),OE=tC(ln,ME,null,"bool"),LE={kernelName:ln,backendName:"cpu",kernelFunc:OE},zE={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=r.sizeFromShape(a.shape),i=a.shape[a.shape.length-1],o=oC({inputs:{x:a},backend:n,attrs:{shape:[s/i,i]}}),u=pE(o,!0,n),l=oC({inputs:{x:u},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}},PE=_S(pn,e=>Number.isFinite(e)?1:0,"bool"),BE={kernelName:pn,backendName:"cpu",kernelFunc:PE},WE=_S(fn,e=>Math.abs(e)===1/0?1:0,"bool"),VE={kernelName:fn,backendName:"cpu",kernelFunc:WE},UE=_S(mn,e=>Number.isNaN(e)?1:0,"bool"),GE={kernelName:mn,backendName:"cpu",kernelFunc:UE},HE=LS((e,t)=>e<t?1:0),jE=tC(yn,HE,null,"bool"),qE={kernelName:yn,backendName:"cpu",kernelFunc:jE},KE=LS((e,t)=>e<=t?1:0),XE=tC(bn,KE,null,"bool"),YE={kernelName:bn,backendName:"cpu",kernelFunc:XE};function ZE(e,t,n){const a=(t-e)/(n-1),s=r.makeZerosTypedArray(n,"float32");s[0]=e;for(let r=1;r<s.length;r++)s[r]=s[r-1]+a;return s}const JE={kernelName:xn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=ZE(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},QE=JC(e=>Math.log(e)),e_=AS(wn,QE),t_={kernelName:wn,backendName:"cpu",kernelFunc:e_},n_=_S(vn,e=>Math.log1p(e)),r_={kernelName:vn,backendName:"cpu",kernelFunc:n_},a_=LS((e,t)=>e&&t),s_=tC(kn,a_,null,"bool"),i_={kernelName:kn,backendName:"cpu",kernelFunc:s_},o_=_S(In,e=>e?0:1,"bool"),u_={kernelName:In,backendName:"cpu",kernelFunc:o_},l_=LS((e,t)=>e||t),c_=tC(Nn,l_,null,"bool"),d_={kernelName:Nn,backendName:"cpu",kernelFunc:c_},h_={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{depthRadius:i,bias:o,alpha:u,beta:l}=a;CS(s,"LRN");const c=s.shape[3],d=c-1,h=n.data.get(s.dataId).values,p=r.sizeFromShape(s.shape),f=new Float32Array(p);function m(e){const t=e%c;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,d);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let r=0;r<p;r++){const e=m(r),t=h[r]*Math.pow(o+u*e,-l);f[r]=t}return n.makeTensorInfo(s.shape,s.dtype,f)}},p_={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,y:i,dy:o}=t,{depthRadius:u,bias:l,alpha:c,beta:d}=a;CS(o,"LRNGrad");const h=r.sizeFromShape(o.shape),p=o.shape[3],f=n.data.get(o.dataId).values,m=n.data.get(s.dataId).values,g=n.data.get(i.dataId).values,y=new Float32Array(h),b=h;for(let r=0;r<b;r++){const e=r%p,t=r-e+Math.max(0,e-u),n=r-e+Math.min(p,e+u+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(m[r],2);a=c*a+l;for(let s=t;s<n;s++){let e=-2*c*d*m[s]*g[r]/a;r===s&&(e+=Math.pow(a,-d)),e*=f[r],y[s]+=e}}return n.makeTensorInfo(o.shape,s.dtype,y)}};function f_(e,t,n,a){const s=r.getTypedArrayFromDType(a,r.sizeFromShape(n));for(let r=0;r<s.length;++r){const n=r*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}s[r]=a}return s}function m_(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reductionIndices:i,keepDims:o}=a,u=n;let l=s.shape;const c=l.length,d=r.parseAxisParam(i,l);let h=d;const p=g.getAxesPermutation(h,c);let f=u.data.get(s.dataId).values;if(null!=p){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=l[p[t]];f=xC(f,l,s.dtype,p,e),h=g.getInnerMostAxes(h.length,c),l=e}CS(s,"max"),g.assertAxesAreInnerMostDims("max",h,c);const[m,y]=g.computeOutAndReduceShapes(l,h),b=f_(f,r.sizeFromShape(y),m,s.dtype),x=u.write(b,m,s.dtype);let w=m;return o&&(w=g.expandShapeToKeepDim(m,d)),{dataId:x,shape:w,dtype:s.dtype}}const g_={kernelName:En,backendName:"cpu",kernelFunc:m_},y_=LS((e,t)=>Math.max(e,t)),b_=tC(_n,y_),x_={kernelName:_n,backendName:"cpu",kernelFunc:b_},w_={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;CS(s,"maxPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=a;r.assert(g.eitherStridesOrDilationsAreOne(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=g.computePool2DInfo(s.shape,i,o,1,u,l);let d;if(1===c.filterWidth&&1===c.filterHeight&&r.arraysEqual(c.inShape,c.outShape))d=RS({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=r.computeStrides(s.shape),a=LC(e,0,s.dtype,t,c,"max");d=n.makeTensorInfo(c.outShape,s.dtype,a.values)}return d}},v_={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l,dataFormat:c}=a;CS(s,"maxPool3d");const d=g.computePool3DInfo(s.shape,i,o,1,u,l,c),h=PC(n.data.get(s.dataId).values,0,s.dtype,r.computeStrides(s.shape),d,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},k_={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;CS([a,s],"maxPool3DGrad");const c=g.computePool3DInfo(s.shape,i,o,1,u,l),d=function(e,t){const n=yi(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-h;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*a-p;let h=l;for(;h<0;)h+=o;const v=Math.min(t.inHeight,c+l);for(let a=0;a<t.outWidth;++a){const p=a*s-f;let k=p;for(;k<0;)k+=u;const I=Math.min(t.inWidth,d+p);let N=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let r=h;r<v;r+=o){const a=r-l;for(let s=k;s<I;s+=u){const i=s-p,o=e.get(m,t,r,s,g);o>=N&&(N=o,S=n*c*d+a*c+i)}}}n.set(S,m,y,r,a,g)}}}return n}(n.bufferSync(s),c),h=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,y=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,w=c.effectiveFilterHeight,v=c.effectiveFilterWidth,k=x-1-c.padInfo.front,I=v-1-c.padInfo.left,N=w-1-c.padInfo.top,S=yi(s.shape,"float32"),C=n.bufferSync(a);for(let g=0;g<c.batchSize;++g)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=t-k,s=n-N,i=r-I;let o=0;for(let t=0;t<x;t+=m){const n=(a+t)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let r=0;r<w;r+=y){const a=(s+r)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let s=0;s<v;s+=b){const u=(i+s)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const l=x*w*v-1-d.get(g,n,a,u,e)===t*w*v+r*v+s?1:0;0!==l&&(o+=C.get(g,n,a,u,e)*l)}}}S.set(o,g,t,n,r,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},I_={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;CS([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,h=g.computePool2DInfo(o.shape,u,l,1,c,d),p=n.data.get(o.dataId).values,f=yi(h.outShape,o.dtype,zC(p,o.shape,o.dtype,h).values),m=h.strideHeight,y=h.strideWidth,b=h.dilationHeight,x=h.dilationWidth,w=h.effectiveFilterHeight,v=h.effectiveFilterWidth,k=v-1-h.padInfo.left,I=w-1-h.padInfo.top,N=yi(o.shape,"float32"),S=n.data.get(a.dataId).values,C=yi(a.shape,"float32",S);for(let g=0;g<h.batchSize;++g)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inHeight;++t)for(let n=0;n<h.inWidth;++n){const r=t-I,a=n-k;let s=0;for(let t=0;t<w;t+=b){const n=(r+t)/m;if(!(n<0||n>=h.outHeight||Math.floor(n)!==n))for(let r=0;r<v;r+=x){const i=(a+r)/y;if(i<0||i>=h.outWidth||Math.floor(i)!==i)continue;const o=w*v-1-f.get(g,n,i,e)===t*v+r?1:0;0!==o&&(s+=C.get(g,n,i,e)*o)}}N.set(s,g,t,n,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},N_={kernelName:Dn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:s,strides:i,pad:o,includeBatchInIndex:u}=t,l=n;CS(a,"MaxPoolWithArgmax");const c=l.data.get(a.dataId).values,d=g.computePool2DInfo(a.shape,s,i,[1,1],o),[h,p]=function(e,t,n,a,s){const i=LC(e,0,n,r.computeStrides(t),s,"max"),o=zC(e,t,n,s,!0,a);return[i.values,o.values]}(c,a.shape,a.dtype,u,d),f=l.write(h,d.outShape,a.dtype),m=l.write(p,d.outShape,a.dtype);return[{dataId:f,shape:d.outShape,dtype:a.dtype},{dataId:m,shape:d.outShape,dtype:"int32"}]}},S_={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a,u=r.parseAxisParam(i,s.shape),l=g.computeOutAndReduceShapes(s.shape,u),c=r.sizeFromShape(l[1]),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([c]));d.push(h);const p=QS({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});d.push(p);const f=oE({inputs:{a:p,b:h},backend:n});d.push(f);const m=LT({inputs:{x:f},backend:n,attrs:{axis:i,keepDims:o}});return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}},C_={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a;CS(s,"min");const u=r.parseAxisParam(i,s.shape);let l=u;const c=g.getAxesPermutation(l,s.shape.length);let d=s;null!=c&&(d=wC({inputs:{x:s},backend:n,attrs:{perm:c}}),l=g.getInnerMostAxes(l.length,s.shape.length)),g.assertAxesAreInnerMostDims("min",l,d.shape.length);const[h,p]=g.computeOutAndReduceShapes(d.shape,l),f=r.sizeFromShape(p),m=r.makeZerosTypedArray(r.sizeFromShape(h),d.dtype),y=n.data.get(d.dataId).values;for(let r=0;r<m.length;++r){const e=r*f;let t=y[e];for(let n=0;n<f;++n){const r=y[e+n];(Number.isNaN(r)||r<t)&&(t=r)}m[r]=t}null!=c&&n.disposeIntermediateTensorInfo(d);const b=n.makeTensorInfo(h,d.dtype,m);if(o){const e=oC({inputs:{x:b},backend:n,attrs:{shape:g.expandShapeToKeepDim(h,u)}});return n.disposeIntermediateTensorInfo(b),e}return b}},T_=LS((e,t)=>Math.min(e,t)),E_=tC(Ln,T_),__={kernelName:Ln,backendName:"cpu",kernelFunc:E_},A_={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{paddings:i,mode:o}=a;CS(s,"mirrorPad");const u=i.map((e,t)=>e[0]+s.shape[t]+e[1]),l=i.map(e=>e[0]),c=i.map((e,t)=>e[0]+s.shape[t]),d="reflect"===o?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,f=r.computeStrides(s.shape),m=r.sizeFromShape(u),g=u.length,y=r.computeStrides(u),b=r.getTypedArrayFromDType(s.dtype,m);for(let x=0;x<m;x++){let e=r.indexToLoc(x,g,y);for(let n=0;n<g;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-d:e[n]>=c[n]&&(e[n]=2*(c[n]-1)-e[n]+d);e=e.map((e,t)=>e-l[t]);const t=r.locToIndex(e,p,f);b[x]=h[t]}return{dataId:n.write(b,u,s.dtype),shape:u,dtype:s.dtype}}},$_=LS((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),F_=tC(Pn,$_),R_={kernelName:Pn,backendName:"cpu",kernelFunc:F_};function D_(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:i}=a,o=s.shape.length;let u=i;if(-1===u&&(u=o-1),u!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${u}`);const l=r.parseAxisParam([u],s.shape),c=m_({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),d=g.expandShapeToKeepDim(c.shape,l),h=oC({inputs:{x:c},backend:n,attrs:{shape:d}}),p=dE({inputs:{a:s,b:h},backend:n}),f=QT({inputs:{x:p},backend:n}),m=LT({inputs:{x:f},backend:n,attrs:{axis:l,keepDims:!1}}),y=oC({inputs:{x:m},backend:n,attrs:{shape:d}}),b=oE({inputs:{a:f,b:y},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}const M_={kernelName:Tr,backendName:"cpu",kernelFunc:D_},O_={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{numSamples:i,seed:o,normalized:u}=a;CS(s,"multinomial");const l=u?s:D_({inputs:{logits:s},backend:n,attrs:{dim:-1}}),c=l.shape[0],d=l.shape[1],h=n.data.get(l.dataId).values,p=[c,i],f=r.makeZerosTypedArray(r.sizeFromShape(p),"int32");for(let r=0;r<c;++r){const e=r*d,t=new Float32Array(d-1);t[0]=h[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+h[e+r];const n=ed.alea(o.toString()),a=r*i;for(let r=0;r<i;++r){const e=n();f[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){f[a+r]=n;break}}}return u||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",f)}};function L_(e,t,n){const a=r.createScalarValue(-1,n);return RT([],t,a,e,n)}const z_={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;CS(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=L_(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},P_=y.nonMaxSuppressionV3Impl,B_={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;CS(a,"NonMaxSuppression");const l=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:d}=P_(l,c,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},W_=y.nonMaxSuppressionV4Impl,V_={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;CS(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:p}=W_(c,d,i,o,u,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},U_=y.nonMaxSuppressionV5Impl,G_={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;CS(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=U_(c,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},H_=LS((e,t)=>e!==t?1:0),j_=tC(Un,H_,null,"bool"),q_={kernelName:Un,backendName:"cpu",kernelFunc:j_},K_={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s}=t,{depth:i,onValue:o,offValue:u}=a;CS(s,"oneHot");const l=r.sizeFromShape(s.shape),c=new Float32Array(l*i);c.fill(u);const d=n.data.get(s.dataId).values;for(let r=0;r<l;++r)d[r]>=0&&d[r]<i&&(c[r*i+d[r]]=o);return n.makeTensorInfo([...s.shape,i],"int32",c)}};function X_(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=ZS({inputs:{input:r},backend:n}),t=X_({inputs:{x:e},backend:n}),a=iT({inputs:{input:r},backend:n}),s=X_({inputs:{x:a},backend:n}),i=KS({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return yE({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Y_={kernelName:Xr,backendName:"cpu",kernelFunc:X_},Z_={kernelName:qn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=ZS({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=iT({inputs:{input:a},backend:r}),i=X_({inputs:{x:s},backend:r}),o=KS({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return yE({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function J_(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return tE({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,o=t[0].dtype;t.forEach(e=>{r.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.assert(o===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const u=[],l=uT({inputs:t.map(e=>{const t=tE({inputs:{input:e},backend:n,attrs:{dim:s}});return u.push(t),t}),backend:n,attrs:{axis:s}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}const Q_={kernelName:Xn,backendName:"cpu",kernelFunc:J_},eA={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{paddings:i,constantValue:o}=a;CS(s,"pad");const u=i.map((e,t)=>e[0]+s.shape[t]+e[1]),l=i.map(e=>e[0]),c=n.data.get(s.dataId).values,d=r.sizeFromShape(s.shape),h=s.shape.length,p=r.computeStrides(s.shape),f=r.sizeFromShape(u),m=u.length,g=r.computeStrides(u),y=r.getTypedArrayFromDType(s.dtype,f);0!==o&&y.fill(o);for(let b=0;b<d;b++){const e=r.indexToLoc(b,h,p).map((e,t)=>e+l[t]);y[r.locToIndex(e,m,g)]=c[b]}return{dataId:n.write(y,u,s.dtype),shape:u,dtype:s.dtype}}},tA=LS((e,t)=>Math.pow(e,t)),nA=tC(Jn,tA),rA={kernelName:Jn,backendName:"cpu",kernelFunc:nA};function aA(e,t,n,a){const[s,i]=g.computeOutAndReduceShapes(e,a),o=es(t,"int32"),u=r.makeZerosTypedArray(r.sizeFromShape(s),o),l=r.sizeFromShape(i);for(let r=0;r<u.length;++r){const e=r*l;let t=1;for(let r=0;r<l;++r)t*=n[e+r];u[r]=t}return{outVals:u,outShape:s,outDtype:o}}const sA={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a;CS(s,"prod");const u=s.shape.length,l=r.parseAxisParam(i,s.shape),c=g.getAxesPermutation(l,u);let d=l,h=s;const p=[];null!=c&&(h=wC({inputs:{x:s},backend:n,attrs:{perm:c}}),p.push(h),d=g.getInnerMostAxes(d.length,u));const f=n.data.get(h.dataId).values,{outVals:m,outShape:y,outDtype:b}=aA(h.shape,h.dtype,f,d);let x=y;return o&&(x=g.expandShapeToKeepDim(y,l)),p.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(x,b,m)}};function iA(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return r.makeZerosTypedArray(0,a);const s=Math.abs(Math.ceil((t-e)/n)),i=r.makeZerosTypedArray(s,a);t<e&&1===n&&(n=-1),i[0]=e;for(let r=1;r<i.length;r++)i[r]=i[r-1]+n;return i}const oA={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=iA(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},uA=_S(rr,e=>1/e),lA={kernelName:rr,backendName:"cpu",kernelFunc:uA},cA={kernelName:ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:o,size:u}=a;CS(s,"resizeBilinear");const l=r.computeStrides(s.shape),[c,d]=u,[h,p,f,m]=s.shape,g=n.data.get(s.dataId).values,y=new Float32Array(r.sizeFromShape([h,c,d,m])),b=[i&&c>1?p-1:p,i&&d>1?f-1:f],x=[i&&c>1?c-1:c,i&&d>1?d-1:d];let w=0;const v=b[0]/x[0],k=b[1]/x[1];for(let r=0;r<h;r++)for(let e=0;e<c;e++){let t;t=o?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),a=t-n,s=Math.min(p-1,Math.ceil(t)),i=r*l[0]+n*l[1],u=r*l[0]+s*l[1];for(let e=0;e<d;e++){let t;t=o?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(f-1,Math.ceil(t)),c=i+n*l[2],d=u+n*l[2],h=i+s*l[2],p=u+s*l[2];for(let e=0;e<m;e++){const t=g[c+e],n=g[d+e],s=t+(g[h+e]-t)*r;y[w++]=s+(n+(g[p+e]-n)*r-s)*a}}}return n.makeTensorInfo([h,c,d,m],"float32",y)}},dA={kernelName:lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s,dy:i}=t,{alignCorners:o}=a;CS([i,s],"resizeBilinearGrad");const u=r.computeStrides(s.shape),[l,c,d,h]=s.shape,[,p,f]=i.shape,m=new Float32Array(l*c*d*h),g=[o&&p>1?c-1:c,o&&f>1?d-1:d],y=[o&&p>1?p-1:p,o&&f>1?f-1:f],b=g[0]/y[0],x=g[1]/y[1],w=n.data.get(i.dataId).values;let v=0;for(let r=0;r<l;r++){const e=r*u[0];for(let t=0;t<p;t++){const n=t*b,r=Math.floor(n),a=Math.min(Math.ceil(n),c-1),s=e+r*u[1],i=e+a*u[1],o=n-r,l=1-o;for(let e=0;e<f;e++){const t=e*x,n=Math.floor(t),r=Math.min(Math.ceil(t),d-1),a=t-n,c=1-a,p=s+n*u[2],f=s+r*u[2],g=i+n*u[2],y=i+r*u[2],b=l*c,k=l*a,I=o*c,N=o*a;for(let e=0;e<h;e++){const t=w[v++];m[p+e]+=t*b,m[f+e]+=t*k,m[g+e]+=t*I,m[y+e]+=t*N}}}}return n.makeTensorInfo([l,d,c,h],"float32",m)}},hA={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:o,size:u}=a;CS(s,"resizeNearestNeighbor");const l=r.computeStrides(s.shape),[c,d]=u,[h,p,f,m]=s.shape,g=n.data.get(s.dataId).values,y=new Float32Array(h*c*d*m),b=[i&&c>1?p-1:p,i&&d>1?f-1:f],x=[i&&c>1?c-1:c,i&&d>1?d-1:d],w=b[0]/x[0],v=b[1]/x[1];let k=0;for(let r=0;r<h;r++){const e=r*l[0];for(let t=0;t<c;t++){const n=o?w*(t+.5):w*t;let r=Math.min(p-1,i?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const a=e+r*l[1];for(let e=0;e<d;e++){const t=o?v*(e+.5):v*e;let n=Math.min(f-1,i?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const r=a+n*l[2];for(let e=0;e<m;e++)y[k++]=g[r+e]}}}return n.makeTensorInfo([h,c,d,m],s.dtype,y)}},pA={kernelName:or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:s,dy:i}=t,{alignCorners:o}=a;CS([i,s],"resizeNearestNeighborGrad");const u=r.computeStrides(s.shape),l=r.computeStrides(i.shape),[c,d,h,p]=s.shape,[,f,m]=i.shape,g=new Float32Array(c*d*h*p),y=n.data.get(i.dataId).values,b=[o&&f>1?d-1:d,o&&m>1?h-1:h],x=[o&&f>1?f-1:f,o&&m>1?m-1:m],w=b[0]/x[0],v=b[1]/x[1],k=1/w,I=1/v,N=2*Math.ceil(k)+2,S=2*Math.ceil(I)+2;for(let r=0;r<c;r++){const e=r*u[0];for(let t=0;t<d;t++){const n=e+t*u[1],r=Math.floor(t*k),a=Math.floor(r-N/2);for(let s=0;s<h;s++){const r=n+s*u[2],i=Math.floor(s*I),c=Math.floor(i-S/2);for(let n=0;n<p;n++){let i=0;for(let r=0;r<N;r++){const u=r+a;if(u<0||u>=f)continue;const p=e+u*l[1],g=u*w;if(t===Math.min(d-1,o?Math.round(g):Math.floor(g)))for(let e=0;e<S;e++){const t=e+c;if(t<0||t>=m)continue;const r=p+t*l[2],a=t*v;s===Math.min(h-1,o?Math.round(a):Math.floor(a))&&(i+=y[r+n])}}g[r+n]=i}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}},fA={kernelName:dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dims:i}=a;CS(s,"reverse");const o=s.shape.length,u=r.parseAxisParam(i,s.shape);if(0===o)return RS({inputs:{x:s},backend:n});const l=new Wa(s.shape,s.dtype),c=n.bufferSync(s);for(let r=0;r<l.size;r++){const e=l.indexToLoc(r),t=e.slice();u.forEach(e=>t[e]=s.shape[e]-1-t[e]),l.set(c.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},mA={kernelName:Jr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:s,fillValue:i,center:o}=t,u=n,l=r.getTypedArrayFromDType(a.dtype,r.sizeFromShape(a.shape)),[c,d,h,p]=a.shape,[f,m]=g.getImageCenter(o,d,h),y=Math.sin(s),b=Math.cos(s),x=u.data.get(a.dataId).values;for(let r=0;r<c;r++){const e=r*h*d*p;for(let t=0;t<d;t++){const n=t*(h*p);for(let r=0;r<h;r++){const a=r*p;for(let s=0;s<p;s++){const o=[c,t,r,s],u=o[2],g=o[1];let w=(u-f)*b-(g-m)*y,v=(u-f)*y+(g-m)*b;w=Math.round(w+f),v=Math.round(v+m);let k=i;"number"!=typeof i&&(k=3===s?255:i[s]),w>=0&&w<h&&v>=0&&v<d&&(k=x[e+v*(h*p)+w*p+s]),l[e+n+a+s]=k}}}}return{dataId:u.write(l,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},gA=_S(hr,e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),yA={kernelName:hr,backendName:"cpu",kernelFunc:gA},bA=JC(e=>1/Math.sqrt(e)),xA=AS(pr,bA),wA={kernelName:pr,backendName:"cpu",kernelFunc:xA};function vA(e,t,n,r,a,s,i,o,u,l){const c=[r/a,a],d=e.values,h=t.values;if(0===r)return yi(n,t.dtype);const p=yi(c,t.dtype);p.values.fill(u);for(let f=0;f<s;f++){const e=[];let s=0;for(let t=0;t<i;t++){const n=d[f*i+t];e.push(n),s+=n*o[t]}if(s<0||s>=r/a)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<a;n++)l?p.values[s*a+n]+=h[f*a+n]:p.values[s*a+n]=0===t.rank?h[0]:h[f*a+n]}return p}const kA={kernelName:fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=g.calculateShapes(s,a,i),h=vA(n.bufferSync(a),n.bufferSync(s),i,d,l,u,o,c,0,!0);return n.makeTensorInfo(i,h.dtype,h.values)}},IA={kernelName:mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:s,e:i}=t;CS([a,s,i],"select");const o=a.shape.length,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,d=es(s.dtype,i.dtype),h=r.makeZerosTypedArray(r.sizeFromShape(s.shape),d);let p=0;const f=0===o||o>1||1===s.shape.length?1:r.sizeFromShape(s.shape.slice(1));for(let r=0;r<u.length;r++)for(let e=0;e<f;e++)h[p++]=1===u[r]?l[r]:c[r];return n.makeTensorInfo(s.shape,d,h)}},NA=g.SELU_SCALEALPHA,SA=g.SELU_SCALE,CA=_S(gr,e=>e>=0?SA*e:NA*(Math.exp(e)-1)),TA={kernelName:gr,backendName:"cpu",kernelFunc:CA},EA=_S(wr,e=>e<0?-1:e>0?1:0),_A={kernelName:wr,backendName:"cpu",kernelFunc:EA},AA=_S(br,e=>Math.sin(e)),$A={kernelName:br,backendName:"cpu",kernelFunc:AA},FA=_S(xr,e=>Math.sinh(e)),RA={kernelName:xr,backendName:"cpu",kernelFunc:FA},DA=Math.log(1.1920928955078125e-7)+2,MA=_S(kr,e=>{const t=e>-DA,n=e<DA,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a}),OA={kernelName:kr,backendName:"cpu",kernelFunc:MA},LA={kernelName:Sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:i,paddings:o}=a;CS([s],"spaceToBatchND");const u=r.sizeFromShape(i),l=[[0,0]];l.push(...o);for(let r=1+i.length;r<s.shape.length;++r)l.push([0,0]);const c=eA.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),d=g.getReshaped(c.shape,i,u,!1),h=g.getPermuted(d.length,i.length,!1),p=g.getReshapedPermuted(c.shape,i,u,!1),f=oC({inputs:{x:c},backend:n,attrs:{shape:d}}),m=wC({inputs:{x:f},backend:n,attrs:{perm:h}}),y=oC({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),y}};function zA(e,t,n,a,s,i,o){const u=t[0],l=i[0],c=new Array(l),d=new Array(u),h=t[1];if(0===l){if(0!==u)throw new Error("Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = "+u);return[r.getArrayFromDType(n,0),[0,h],r.getArrayFromDType(s,0),c,d]}let p=!0,f=0;const m=new Array(l).fill(0);for(let r=0;r<u;++r){const t=e[r*h];if(t<0)throw new Error(`indices(${r}, 0) is invalid: ${t} < 0`);if(t>=l)throw new Error(`indices(${r}, 0) is invalid: ${t} >= ${l}`);++m[t],p=p&&t>=f,f=t}let g=!0;for(let r=0;r<l;++r){const e=0===m[r];c[r]=e,g=g&&!e,m[r]=Math.max(m[r],1),r>0&&(m[r]+=m[r-1])}if(g&&p){const t=e,n=a;for(let e=0;e<u;++e)d[e]=e;return[t,[u,h],n,c,d]}{const t=m[l-1],i=r.getArrayFromDType(n,t*h),p=r.getArrayFromDType(s,t),f=new Array(l).fill(0);for(let n=0;n<u;++n){const t=e[n*h],r=(0===t?0:m[t-1])+f[t];f[t]++;for(let a=0;a<h;++a)i[r*h+a]=e[n*h+a];p[r]=a[n],d[n]=r}for(let e=0;e<l;++e)if(0===f[e]){const t=0===e?0:m[e-1];i[t*h+0]=e;for(let e=1;e<h;++e)i[t*h+e]=0;p[t]=o}return[i,[t,h],p,c,d]}}const PA={kernelName:Er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n        "+s.shape);if(2!==r.shape.length)throw new Error("Indices must be a matrix, saw:\n        "+r.shape);if(1!==a.shape.length)throw new Error("Values must be a vector, saw:\n        "+a.shape);if(0!==i.shape.length)throw new Error("Default value must be a scalar, saw:\n        "+i.shape);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[d,h,p,f,m]=zA(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function BA(e,t,n,a,s){const i=r.sizeFromShape(a),o=t[0],u=s.length,l=[];let c=1,d=-1;for(let r=0;r<u;++r){const e=s[r];if(-1===e){if(-1!==d)throw new Error(`only one output dimension may be -1, not both ${d} and ${r}`);d=r,l.push(1)}else{if(e<0)throw new Error(`size ${r} must be non-negative, not ${e}`);c*=e,l.push(e)}}if(-1!==d){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(i/c);if(c*e!==i)throw new Error(`Input to reshape is a SparseTensor with ${i}\n          dense values, but the requested shape requires a multiple of ${c}. inputShape=${a} outputShape= ${l}`);l[d]=e}const h=r.sizeFromShape(l);if(h!==i)throw new Error(`Input to reshape is a tensor with ${i} dense values, but the requested shape has ${h}. inputShape=${a} outputShape=${l}`);const p=a.length,f=[];if(p>0){f[p-1]=1;for(let e=p-2;e>=0;--e)f[e]=f[e+1]*a[e+1]}const m=[];if(u>0){m[u-1]=1;for(let e=u-2;e>=0;--e)m[e]=m[e+1]*l[e+1]}const g=r.getArrayFromDType(n,o*u);for(let r=0;r<o;++r){let t=0;for(let n=0;n<p;++n)t+=e[r*p+n]*f[n];for(let e=0;e<u;++e)g[r*u+e]=Math.trunc(t/m[e]),t%=m[e]}return[g,[o,u],l]}const WA={kernelName:_r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape\n        "+r.shape);if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape\n        "+a.shape);if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape "+s.shape);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[l,c,d]=BA(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};function VA(e,t,n,a,s,i=!1,o=0){const u=a.length;if(u!==s.length)throw new Error("segmentIds and indices should have same size.");const l=[t[0],e.length/t[0]],c=l[1],d=u>0?s[u-1]+1:0;if(d<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=d;const p=h.reduce((e,t)=>e*t,1),f=r.getArrayFromDType(n,p);if(0===u)return d>0&&f.fill(o),[f,h];if(d<=0)throw new Error("segment ids must be >= 0");let m=0,g=1,y=0,b=s[m];for(;;){let t=0;if(g<u){if(t=s[g],b===t){++g;continue}if(b>=t)throw new Error("segment ids are not increasing")}if(b<0||b>=d)throw new Error(`Segment id ${b} out of range [0, ${d}), possibly because segmentIds input is not sorted.`);b>y&&f.fill(o,y*c,b*c);for(let n=m;n<g;++n){const t=a[n];if(t<0||t>=l[0])throw new Error(`Bad: indices[${n}] == ${a[n]} out of range [0, ${l[0]})`);for(let n=0;n<c;n++)f[b*c+n]+=e[t*c+n]}if(i)for(let e=0;e<c;e++)f[b*c+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>u)break}return y<d&&f.fill(o,y*c,d*c),[f,h]}const UA={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n          "+a.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n          "+s.shape);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=VA(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},GA={kernelName:$r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n         "+a.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n         "+s.shape);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=VA(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},HA={kernelName:Fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:h}=g.calculateShapes(s,a,o),p=vA(n.bufferSync(a),n.bufferSync(s),o,h,c,l,u,d,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},jA={kernelName:Cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:i,axis:o}=a,u=r.parseAxisParam(o,s.shape)[0],l=g.prepareSplitSize(s,i,u),c=new Array(s.shape.length).fill(0),d=s.shape.slice();return l.map(e=>{const t=[...d];t[u]=e;const r=jC({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[u]+=e,r})}},qA=_S(Ir,e=>Math.sqrt(e)),KA={kernelName:Ir,backendName:"cpu",kernelFunc:qA},XA={kernelName:Dr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;CS(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let i=0;i<a.length;++i){const e=a[i];s[i]=e*e}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},YA=LS((e,t)=>{const n=e-t;return n*n}),ZA=tC(Rr,YA),JA={kernelName:Rr,backendName:"cpu",kernelFunc:ZA},QA=_S(Yr,(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),e$={kernelName:Yr,backendName:"cpu",kernelFunc:QA};function t$(e,t,n,r){const a=yi(e,t.dtype);for(let s=0;s<a.size;s++){const e=a.indexToLoc(s),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+r[t];a.set(t.get(...i),...e)}return a}const n$={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r;CS(a,"stridedSlice");const{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=d.sliceInfo(a.shape,s,i,o,u,l,c,h,p),w=oC({inputs:{x:a},backend:n,attrs:{shape:b}});let v;if(f){const e=jC({inputs:{x:w},backend:n,attrs:{begin:m,size:y}});v=oC({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some(e=>0===e))v=n.makeTensorInfo(x,a.dtype,[]);else{const e=t$(x,n.bufferSync(w),g,m);v=n.makeTensorInfo(e.shape,e.dtype,e.values)}const k=oC({inputs:{x:v},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),k}};class r${constructor(e,t,n,a,s,i){this.separator=r.encodeString(e),this.nGramWidths=t,this.leftPad=r.encodeString(n),this.rightPad=r.encodeString(a),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),l=Math.max(0,o-(a-(i+1))),c=s-(u+l),d=t+(u>0?0:i-o);let h=0;h+=u*this.leftPad.length;for(let t=0;t<c;++t)h+=e[d+t].length;h+=l*this.rightPad.length,h+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(h);const p=n[r+i];let f=0;const m=e=>e.forEach(e=>p[f++]=e);for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[d+t]),m(this.separator);if(c>0){m(e[d+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got "+e);for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=a-1,i=r.getArrayFromDType("int32",a);if(0===n||0===a){const e=new Array(n);for(let t=0;t<=s;++t)i[t]=0;return[e,i]}i[0]=0;for(let r=1;r<=s;++r){const e=t[r]-t[r-1];let n=0;this.nGramWidths.forEach(t=>{n+=this.getNumNGrams(e,t)}),this.preserveShort&&e>0&&0===n&&(n=1),i[r]=i[r-1]+n}const o=new Array(i[s]);for(let r=0;r<s;++r){const n=t[r];let a=i[r];if(this.nGramWidths.forEach(s=>{const i=this.getNumNGrams(t[r+1]-t[r],s);this.createNGrams(e,n,o,a,i,s),a+=i}),this.preserveShort&&a===i[r]){const s=t[r+1]-t[r];if(0===s)continue;this.createNGrams(e,n,o,a,1,s+2*this.padWidth)}}return[o,i]}}function a$(e,t,n,r,a,s,i,o){return new r$(n,r,a,s,i,o).compute(e,t)}const s$={kernelName:Or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=t,h=n.data.get(c.dataId).values,p=n.data.get(d.dataId).values,[f,m]=a$(h,p,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};function i$(e,t,n){if(!e.length)return[];if(0===t.length){const t=new Array(e.length);for(let n=0;n<e.length;++n)t[n]=e.subarray(n,n+1);return t}if(1===t.length){const r=t[0],a=[];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return n&&0===e.length||a.push(e),a}const r=[];let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}return r}function o$(e,t,n){const a=e.length,s=[];let i=0,o=0;const u=new Array(a);for(let r=0;r<a;++r){const a=i$(e[r],t,n),l=a.length;u[r]=l,i+=l,o=Math.max(o,l),s.push(...a)}const l=r.getArrayFromDType("int32",2*i),c=new Array(i),d=[a,o];let h=0;for(let r=0;r<a;++r)for(let e=0;e<u[r];++e)l[2*h]=r,l[2*h+1]=e,c[h]=s[h],++h;return[l,c,d]}const u$={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: "+s.shape);if(0!==i.shape.length)throw new Error("Delimiter must be a scalar, got shape: "+i.shape);const o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,d]=o$(o,u,a),h=c.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};function l$(e,t){const n=r.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=r.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}const c$={kernelName:zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=l$(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},d$=_S(Br,e=>Math.tan(e)),h$={kernelName:Br,backendName:"cpu",kernelFunc:d$},p$=_S(Wr,e=>Math.tanh(e));function f$(e,t){const n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];const r=yi(n,e.dtype);for(let a=0;a<r.values.length;++a){const t=r.indexToLoc(a),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const s=e.locToIndex(n);r.values[a]=e.values[s]}return r}function m$(e,t,n,a,s){const i=t[t.length-1],[o,u]=[e.length/i,i],l=r.getTypedArrayFromDType(n,o*a),c=r.getTypedArrayFromDType("int32",o*a);for(let r=0;r<o;r++){const t=r*u,n=e.subarray(t,t+u),s=[];for(let e=0;e<n.length;e++)s.push({value:n[e],index:e});s.sort((e,t)=>t.value-e.value);const i=r*a,o=l.subarray(i,i+a),d=c.subarray(i,i+a);for(let e=0;e<a;e++)o[e]=s[e].value,d[e]=s[e].index}const d=t.slice();return d[d.length-1]=a,[yi(d,n,l),yi(d,"int32",c)]}function g$(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return r.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;return n<0?t<=1?n=0:n+=t*(Math.trunc(-n/(t-1))+1):n>t-1&&(t<=1?n=0:n-=t*Math.trunc(n/(t-1))),r.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return r.clamp(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function y$(e,t,n,r,a,s,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+l]:c}function b$(e,t,n,r,a,s,i,o,u,l,c){return y$(e,t,n,r,a,s,i,Math.round(o),Math.round(u),l,c)}function x$(e,t,n,r,a,s,i,o,u,l,c){const d=Math.floor(o),h=Math.floor(u),p=d+1,f=h+1;return(p-o)*((f-u)*y$(e,t,n,r,a,s,i,d,h,l,c)+(u-h)*y$(e,t,n,r,a,s,i,d,f,l,c))+(o-d)*((f-u)*y$(e,t,n,r,a,s,i,p,h,l,c)+(u-h)*y$(e,t,n,r,a,s,i,p,f,l,c))}function w$(e,t,n,a){const s=r.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let r=0;r<s;r++)i[0]*=n[r];i[1]=n[s];for(let r=s+1;r<n.length;r++)i[2]*=n[r];const o={},u=new Int32Array(n[s]),l=new Wa(i,a,e),c=[],d=1===i[0]&&1===i[2];for(let r=0;r<n[s];r++){let t;if(d)t=e[r].toString();else{const e=[];for(let t=0;t<i[0];t++)for(let n=0;n<i[2];n++)e.push(l.get(t,r,n));t=e.join(",")}if(void 0!==o[t])u[r]=o[t];else{const e=Object.keys(o).length;o[t]=e,u[r]=e,c.push(r)}}const h=i.slice();h[1]=Object.keys(o).length;const p=new Wa(h,a);c.forEach((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)p.set(l.get(n,e,r),n,t,r)});const f=n.slice();return f[s]=h[1],{outputValues:p.values,outputShape:f,indices:u}}const v$=[dC,pC,mC,yC,iC,bC,kC,IC,NC,SC,TC,_C,$C,DC,OC,BC,WC,VC,UC,cC,GC,KC,ZC,eC,tT,rT,XS,aT,lT,hT,pT,dT,mT,gT,fT,bT,wT,vT,kT,IT,NT,CT,TT,ET,_T,AT,FT,$T,uE,PT,FS,BT,UT,ZT,eE,nE,sE,gE,bE,xE,kE,SE,CE,TE,_E,$E,DE,LE,DS,zE,oT,BE,VE,GE,OS,qE,YE,JE,t_,r_,i_,u_,d_,h_,p_,x_,w_,v_,k_,I_,N_,g_,S_,C_,__,A_,R_,O_,OT,z_,B_,V_,G_,q_,K_,Z_,Q_,eA,rA,BS,sA,oA,JS,lA,VS,GS,uC,cA,dA,hA,pA,fA,mA,yA,wA,kA,IA,TA,jS,_A,$A,RA,qC,M_,OA,LA,PA,WA,UA,GA,HA,jA,KA,XA,JA,e$,n$,s$,u$,c$,hE,zT,h$,{kernelName:Wr,backendName:"cpu",kernelFunc:p$},{kernelName:Vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;CS(a,"tile");const i=f$(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s}=r;CS(a,"topk");const i=n.data.get(a.dataId).values,[o,u]=m$(i,a.shape,a.dtype,s);return[n.makeTensorInfo(o.shape,o.dtype,o.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},vC,{kernelName:Gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:s,transforms:i}=t,{interpolation:o,fillMode:u,fillValue:l,outputShape:c}=n,[d,h,p,f]=s.shape,[m,g]=null!=c?c:[h,p],y=[d,m,g,f],b=r.computeStrides(s.shape),x=b[0],w=b[1],v=b[2],k=r.getTypedArrayFromDType(s.dtype,r.sizeFromShape(y));k.fill(l);const I=a.data.get(s.dataId).values,N=a.data.get(i.dataId).values;for(let r=0;r<d;++r){const e=1===i.shape[0]?N:N.subarray(8*r,8*r+8);for(let t=0;t<m;++t)for(let n=0;n<g;++n)for(let a=0;a<f;++a){let s;const i=e[6]*n+e[7]*t+1;if(0===i)continue;const c=(e[3]*n+e[4]*t+e[5])/i,d=g$((e[0]*n+e[1]*t+e[2])/i,p,u),f=g$(c,h,u);switch(o){case"nearest":s=b$(I,h,p,x,w,v,r,f,d,a,l);break;case"bilinear":s=x$(I,h,p,x,w,v,r,f,d,a,l);break;default:throw new Error("Error in Transform: Expect 'nearest' or 'bilinear', but got "+o)}k[r*x+t*w+n*v+a]=s}return a.makeTensorInfo(y,s.dtype,k)}return{dataId:a.write(k,y,s.dtype),shape:s.shape,dtype:s.dtype}}},{kernelName:jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;CS(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:l}=w$(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:qr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let l=0;for(let p=0;p<i;p++)p!==s&&(u[l++]=a.shape[p]);const c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;const h=new Array(o);for(let p=0;p<h.length;p++){c[s]=p;const e=jC({inputs:{x:a},backend:n,attrs:{begin:c,size:d}});h[p]=oC({inputs:{x:e},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(e)}return h}},{kernelName:Kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,segmentIds:i}=t,{numSegments:o}=a;CS(s,"unsortedSegmentSum");const u=[],l=[],c=s.shape.length-i.shape.length;let d=i;for(let r=0;r<c;++r){const e=tE({inputs:{input:d},backend:n,attrs:{dim:r+1}});d=e,l.push(e)}for(let p=0;p<o;++p){const e=r.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),a=VT({inputs:{a:t,b:d},backend:n}),i=QS({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),o=MT({inputs:{a:i,b:s},backend:n}),c=LT({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});u.push(c),l.push(t),l.push(a),l.push(i),l.push(o),l.push(c)}const h=J_({inputs:u,backend:n,attrs:{axis:0}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},Y_];for(const AH of v$)oa(AH);const k$={},I$={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function N$(e){if(!(e in k$)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete k$[e]},!1),1===e?t.getContext("webgl",I$)||t.getContext("experimental-webgl",I$):t.getContext("webgl2",I$)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;k$[e]=t}const t=k$[e];return t.isContextLost()?(delete k$[e],N$(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),k$[e])}var S$,C$,T$;function E$(e,t){return[t,e]}function _$(e){const t=r.sizeFromShape(e),n=Math.ceil(t/4);return r.sizeToSquarishShape(n)}function A$(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function $$(e,t){const n=e;let r,a,s,i,o,u,l,c,d,h;return 2===je().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,d=n.HALF_FLOAT,h=n.FLOAT):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,d=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:d,textureTypeFloat:h}}function F$(e,t){const n=t();return je().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}(e,t))}(e),n}function R$(e){return!!(je().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function D$(e,t){return W$(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(S$||(S$={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(C$||(C$={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(T$||(T$={}));const M$=/ERROR: [0-9]+:([0-9]+):/g;function O$(e,t){if(F$(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function L$(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(F$(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),F$(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),F$(e,()=>e.enableVertexAttribArray(o)),!0)}function z$(e,t,n){F$(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),F$(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function P$(e,t){F$(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),F$(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function B$(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}(e,t))}function W$(e,t,n){const r=F$(e,()=>t());if(null==r)throw new Error(n);return r}function V$(e,t=2){return r.sizeFromShape(e.slice(0,e.length-t))}function U$(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function G$(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[V$(e),...U$(e)]),t}function H$(e){return e%2==0}function j$(e,t){if(e=e.slice(-2),t=t.slice(-2),r.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(H$(n)&&H$(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&H$(e[0])&&H$(t[0])}let q$,K$;function X$(e,t){return null!=e.getExtension(t)}function Y$(e){try{if(null!=N$(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Z$(e){const t=$$(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function J$(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r.assert("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the WebGL backend.")})}const Q$=je();function eF(){let e,t,n,r,a,s,i,o,u,l;return 2===je().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function tF(e,t,n="index"){const a=r.computeStrides(t);return a.map((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`).join("")}function nF(e){const t=r.computeStrides(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}Q$.registerFlag("HAS_WEBGL",()=>Q$.getNumber("WEBGL_VERSION")>0),Q$.registerFlag("WEBGL_VERSION",()=>Y$(2)?2:Y$(1)?1:0),Q$.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Q$.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Q$.get("WEBGL_VERSION")),Q$.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Q$.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Q$.registerFlag("WEBGL_PACK",()=>Q$.getBool("HAS_WEBGL")),Q$.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Q$.getBool("WEBGL_PACK")),Q$.registerFlag("WEBGL_PACK_CLIP",()=>Q$.getBool("WEBGL_PACK")),Q$.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Q$.getBool("WEBGL_PACK")),Q$.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Q$.getBool("WEBGL_PACK")),Q$.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Q$.getBool("WEBGL_PACK")),Q$.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Q$.getBool("WEBGL_PACK")),Q$.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Q$.getBool("WEBGL_PACK")),Q$.registerFlag("WEBGL_PACK_REDUCE",()=>Q$.getBool("WEBGL_PACK")),Q$.registerFlag("WEBGL_LAZILY_UNPACK",()=>Q$.getBool("WEBGL_PACK")),Q$.registerFlag("WEBGL_CONV_IM2COL",()=>Q$.getBool("WEBGL_PACK")),Q$.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(e){if(null==q$){const t=N$(e);q$=t.getParameter(t.MAX_TEXTURE_SIZE)}return q$}(Q$.getNumber("WEBGL_VERSION"))),Q$.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(e){if(null==K$){const t=N$(e);K$=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,K$)}(Q$.getNumber("WEBGL_VERSION"))),Q$.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=Q$.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=N$(e);return t=X$(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:X$(n,"EXT_disjoint_timer_query")?1:0,t}(e)}),Q$.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Q$.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!s.isMobile()),Q$.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(e){if(0===e)return!1;const t=N$(e);if(1===e){if(!X$(t,"OES_texture_float"))return!1}else if(!X$(t,"EXT_color_buffer_float"))return!1;return Z$(t)}(Q$.getNumber("WEBGL_VERSION"))),Q$.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Q$.getBool("WEBGL_FORCE_F16_TEXTURES")&&Q$.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Q$.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function(e){if(0===e)return!1;const t=N$(e);if(1!==e){if(X$(t,"EXT_color_buffer_float"))return Z$(t);const e="EXT_color_buffer_half_float";if(X$(t,e)){const n=t.getExtension(e);return function(e,t){const n=$$(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!X$(t,"OES_texture_float")&&!!X$(t,"WEBGL_color_buffer_float")&&Z$(t)}(Q$.getNumber("WEBGL_VERSION"))),Q$.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(e=Q$.getNumber("WEBGL_VERSION"))&&null!=N$(e).fenceSync;var e}),Q$.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Q$.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Q$.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),Q$.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>s.isMobile()&&Q$.getBool("IS_CHROME")?1:-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),Q$.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);const rF="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class aF{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=S$.DENSE;const t=_$(e),n=eF();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${tF(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class sF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=S$.DENSE;const t=_$(e),n=eF();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${tF(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class iF{constructor(e){this.variableNames=["A"],this.outTexUsage=C$.DOWNLOAD;const t=eF();this.outputShape=e,this.userCode=`\n      ${rF}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class oF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=C$.DOWNLOAD;const t=eF();this.outputShape=e,this.userCode=`\n      ${rF}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class uF{constructor(e,t,n=!1){this.variableNames=["A"];const r=eF(),[a,s]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${nF(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class lF{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=eF(),[a,s]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let u=0;u<=1;u++)for(let t=0;t<=1;t++){const n=2*u+t;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${e[2]}) {\n            localCoords[2] += ${t};\n            if(localCoords[1] + ${u} < ${e[1]}) {\n              localCoords[1] += ${u};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${nF(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}function cF(e,t,n,r,a,s){!function(e,t){const n=je().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return W$(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return F$(e,()=>e.bindTexture(o,i)),F$(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),F$(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),F$(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),F$(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),F$(e,()=>e.texImage2D(o,0,r,t,n,0,a,s,null)),F$(e,()=>e.bindTexture(e.TEXTURE_2D,null)),i}function dF(e){return e.internalFormatFloat}function hF(e){return e.internalFormatHalfFloat}function pF(e){return e.downloadTextureFormat}function fF(e){return e.internalFormatPackedFloat}function mF(e){return e.internalFormatPackedHalfFloat}class gF{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=je().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){k$[e]=t}(t,e)):this.gl=N$(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===je().getNumber("WEBGL_VERSION")){const e="OES_texture_half_float";if(this.textureFloatExtension=D$(this.gl,"OES_texture_float"),X$(this.gl,e))this.textureHalfFloatExtension=D$(this.gl,e);else if(je().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),X$(this.gl,r))this.colorBufferHalfFloatExtension=D$(this.gl,r);else if(je().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",X$(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!X$(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=W$(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return F$(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),F$(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=W$(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return F$(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),F$(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return W$(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=$$(this.gl,this.textureHalfFloatExtension)}get debug(){return je().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;F$(e,()=>e.finish()),F$(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),F$(e,()=>e.deleteFramebuffer(this.framebuffer)),F$(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),F$(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),F$(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=E$(t,n);return cF(e,a,s,dF(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=E$(t,n);return cF(e,a,s,hF(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=E$(t,n);return cF(e,a,s,pF(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){F$(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?F$(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):F$(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),F$(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let i,o,u;F$(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),F$(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i)),F$(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=A$(t,n);return cF(e,a,s,mF(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=A$(t,n);return cF(e,a,s,fF(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(P$(this.gl,this.framebuffer),this.outputTexture=null),F$(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n,r){const[a,s]=E$(t,n),i=new Uint8Array(t*n*4);return F$(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return function(e,t,n,r,a,s,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=A$(e,t);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,a,s)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();F$(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));const s=16*t*n;return F$(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),F$(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),F$(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}(this.gl,t,n);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(je().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n){const r=new Float32Array(t*n*4);return F$(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=W$(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(F$(e,()=>e.shaderSource(n,t)),F$(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=M$.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);const a=+n[1],s=e.split("\n"),i=s.length.toString().length+2,o=s.map((e,t)=>r.rightPad((t+1).toString(),i)+e);let u=0;for(let r=0;r<o.length;r++)u=Math.max(o[r].length,u);const l=o.slice(0,a-1),c=o.slice(a-1,a),d=o.slice(a);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+r.rightPad(c[0],u),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e);null==this.vertexShader&&(this.vertexShader=function(e){const t=eF();return function(e,t){const n=W$(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(F$(e,()=>e.shaderSource(n,t)),F$(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const a=function(e){return W$(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}(t);return F$(t,()=>t.attachShader(a,this.vertexShader)),F$(t,()=>t.attachShader(a,n)),function(e,t){if(F$(e,()=>e.linkProgram(t)),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,a),this.debug&&O$(t,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=function(e,t,n){return F$(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),L$(e,t,"clipSpacePos",n,3,20,0)&&L$(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),a}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&F$(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&O$(this.gl,this.program),F$(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return W$(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),F$(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(e,t,n,r){F$(e,()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),F$(e,()=>e.activeTexture(e.TEXTURE0+n)),F$(e,()=>e.bindTexture(e.TEXTURE_2D,t))}(e,t,r)),F$(e,()=>e.uniform1i(n,r))}(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=A$(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&O$(this.gl,this.program),B$(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),F$(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),F$(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=D$(this.gl,2===je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await r.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||r.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),z$(this.gl,e,this.framebuffer),this.debug&&B$(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(z$(this.gl,this.outputTexture,this.framebuffer),this.debug&&B$(this.gl)):P$(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;z$(r,e,this.framebuffer),this.debug&&B$(r),this.outputTexture=e,F$(r,()=>r.viewport(0,0,t,n)),F$(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),F$(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:yF}=g;function bF(e,t,n,a){const s=[];e.forEach(e=>{const t=r.sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`))});const i=s.join("\n"),o=e.map(e=>function(e,t,n=!1){let a="";return a+=n?wF(e):xF(e),e.shapeInfo.logicalShape.length<=t.logicalShape.length&&(a+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,u=yF(e.shapeInfo.logicalShape,t.logicalShape),l=TF(o),c=o-i;let d;const h=["x","y","z","w","u","v"];d=0===i?"":o<2&&u.length>=1?"coords = 0;":u.map(e=>`coords.${h[e+c]} = 0;`).join("\n");let p="";p=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+h[t+c]).join(", ");let f="return outputValue;";const m=1===r.sizeFromShape(e.shapeInfo.logicalShape),g=1===r.sizeFromShape(t.logicalShape);if(1!==i||m||g){if(m&&!g)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const e=i-2,t=i-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?f="return vec4(outputValue.x);":u.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${a}(${p});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===o&&null==e.shapeInfo.flatOffset&&r.arraysEqual(e.shapeInfo.texShape,t.texShape))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=TF(o),l=yF(e.shapeInfo.logicalShape,t.logicalShape),c=o-i;let d;const h=["x","y","z","w","u","v"];d=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map(e=>`coords.${h[e+c]} = 0;`).join("\n");let p="";return p=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+h[t+c]).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${a}(${p});\n    }\n  `}(e,t)),a}(e,t,a)).join("\n"),u=t.texShape,l=eF(),c=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let d,h,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${vF}\n    ${kF}\n    ${IF}\n  `}(l);return t.isPacked?(d=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(r.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let s=a,i="",o="b, r, c";for(let u=2;u<e.length-1;u++)s*=e[e.length-u-1],i=`\n      int b${u} = index / ${s};\n      index -= b${u} * ${s};\n    `+i,o=`b${u}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,u),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(l)):(d=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return r.arraysEqual(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=tF(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=tF(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=tF(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=tF(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}var n}(t.logicalShape,u),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),a&&(p+=NF),[p,c,h,i,d,o,n].join("\n")}function xF(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[s,i]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${s}, ${i}, ${SF(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${CF(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],s=r[1];if(1===s&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=SF(t);return 1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${s}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape;if(null!=s&&r.arraysEqual(t,s))return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${s[0]}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const{newShape:i,keptDims:o}=r.squeezeShape(t);if(i.length<t.length){const t=["row","col"];return`\n      ${xF(EF(e,i))}\n      float ${a}(int row, int col) {\n        return ${a}(${_F(t,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${CF(e)}\n      }\n    `;const u=s[0],l=s[1],c=SF(n);return 1===l?`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===u?`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${u}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],i=t[2],{newShape:o,keptDims:u}=r.squeezeShape(t);if(o.length<t.length){const t=["row","col","depth"];return`\n        ${xF(EF(e,o))}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${_F(t,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${CF(e)}\n      }\n    `;const l=e.shapeInfo.texShape,c=l[0],d=l[1],h=e.shapeInfo.flatOffset;return d===s&&null==h?`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `:d===i&&null==h?`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${SF(n)};\n        vec2 uv = uvFromFlat(${c}, ${d}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:l}=r.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${xF(EF(e,u))}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${_F(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${CF(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1];return p===o&&null==c?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:p===s&&null==c?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${SF(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],i=t[3]*s,o=t[2]*i,u=t[1]*o,{newShape:l,keptDims:c}=r.squeezeShape(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${xF(EF(e,l))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${_F(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${o}, ${i}, ${s})) +\n          depth3;\n        ${CF(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];return f===u&&null==d?`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===s&&null==d?`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${SF(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=r.squeezeShape(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${xF(EF(e,s))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${_F(t,i)});\n      }\n    `}const o=t[5],u=t[4]*o,l=t[3]*u,c=t[2]*l,d=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${c}, ${l}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${CF(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],m=p[1];return m===d&&null==h?`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:m===o&&null==h?`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${c} + depth * ${l} +\n          depth2 * ${u} + depth3 * ${o} + depth4 + ${SF(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(t.length+"-D input sampling is not yet supported")}}function wF(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${eF().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=eF();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],u=eF();if(null!=s&&r.arraysEqual(t,s))return`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0]){const n=[1,2],a=["b","row","col"];return`\n        ${wF(EF(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${_F(a,n)});\n        }\n      `}const i=s[0],o=s[1],u=Math.ceil(t[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${u*Math.ceil(t[1]/2)}, ${u}, b, row, col);\n      return ${eF().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=i[0],u=i[1],l=Math.ceil(t[n-1]/2);let c=l*Math.ceil(t[n-2]/2),d="int b, int row, int col",h=`b * ${c} + (row / 2) * ${l} + (col / 2)`;for(let p=2;p<n-1;p++)d=`int b${p}, `+d,c*=t[n-p-1],h=`b${p} * ${c} + `+h;return`\n    vec4 ${a}(${d}) {\n      int index = ${h};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${eF().texture2D}(${r}, uv);\n    }\n  `}(e)}}const vF="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",kF="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",IF="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",NF="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function SF(e){return"offset"+e}function CF(e){const t=e.name,n=r.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function TF(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function EF(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function _F(e,t){return t.map(t=>e[t]).join(", ")}function AF(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{const a=e.logicalShape,s=t[n],i=s.shape;if(!r.arraysEqual(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(e.isUniform&&s.isUniform)return;const o=e.texShape,u=s.isUniform?null:s.texData.texShape;if(!r.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)})}const{addImpl:$F,bincountImpl:FF,bincountReduceImpl:RF,ceilImpl:DF,concatImpl:MF,equalImpl:OF,expImpl:LF,expm1Impl:zF,floorImpl:PF,gatherNdImpl:BF,gatherV2Impl:WF,greaterImpl:VF,greaterEqualImpl:UF,lessImpl:GF,lessEqualImpl:HF,linSpaceImpl:jF,logImpl:qF,maxImpl:KF,maximumImpl:XF,minimumImpl:YF,multiplyImpl:ZF,negImpl:JF,notEqualImpl:QF,prodImpl:eR,rangeImpl:tR,rsqrtImpl:nR,simpleAbsImpl:rR,sliceImpl:aR,sparseFillEmptyRowsImpl:sR,sparseReshapeImpl:iR,sparseSegmentReductionImpl:oR,stridedSliceImpl:uR,stringNGramsImpl:lR,stringSplitImpl:cR,stringToHashBucketFastImpl:dR,subImpl:hR,tileImpl:pR,topKImpl:fR,transposeImpl:mR,uniqueImpl:gR}=G;function yR(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function bR(e,t){return 1===t?[e]:yR(e,t)}class xR{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=bR("rc",t),r=TF(t),a=function(e,t,n){if(1===e)return"rc > "+t[0];let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=t[t.length-1-n]+","+s;n.push(s)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class wR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2==1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${a}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${a>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${tF(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${nF(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class vR{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=IR(t,n),a=NR(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=kR(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===T$.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===T$.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===T$.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===T$.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===T$.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=IR(n,r),s=NR(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=kR(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=je().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function kR(e,t,n,r,a){const s=function(e,t){switch(e){case T$.PACKED_2X2_FLOAT32:return fF(t);case T$.PACKED_2X2_FLOAT16:return mF(t);case T$.UNPACKED_FLOAT32:return dF(t);case T$.UNPACKED_FLOAT16:return hF(t);case T$.PACKED_4X1_UNSIGNED_BYTE:return pF(t);default:throw new Error("Unknown physical texture type "+e)}}(t,r);let i;if(a){const[t,n]=A$(e[0],e[1]);i=t*n}else{const[t,n]=E$(e[0],e[1]);i=t*n}return i*function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;throw new Error("Unknown internal format "+t)}(n,s)}function IR(e,t){if(e===C$.UPLOAD)return T$.PACKED_2X2_FLOAT32;if(e===C$.RENDER||null==e)return function(e){return je().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?T$.PACKED_2X2_FLOAT32:T$.UNPACKED_FLOAT32:e?T$.PACKED_2X2_FLOAT16:T$.UNPACKED_FLOAT16}(t);if(e===C$.DOWNLOAD||e===C$.PIXELS)return T$.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function NR(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class SR{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const CR="return abs(x);",TR="return x;";class ER{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class _R{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=bR("rc",t),r=TF(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const AR=y.whereImpl,$R={},FR=je().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class RR extends X{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!je().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=N$(je().getNumber("WEBGL_VERSION"));this.binaryCache=((t=je().getNumber("WEBGL_VERSION"))in $R||($R[t]={}),$R[t]),this.gpgpu=new gF(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new vR(this.gpgpu),this.numMBBeforeWarning=null==je().global.screen?1024:je().global.screen.height*je().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new K(this,Mo())}nextDataId(){return RR.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((je().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||je().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:C$.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if(je().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:C$.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:s,slice:i,shape:o,isPacked:u}=t;if(null!=i){let t;t=u?new ER(o,TR):new SR(o,TR);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const l=null!=this.activeTimers;let c,d;if(l&&(c=r.now()),"complex64"===a){const e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);d=g.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=r.now()-c),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:a,slice:s,dtype:i,complexTensorInfos:o,isPacked:u}=t;if(null!=s){let t;t=u?new ER(a,TR):new SR(a,TR);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(!je().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===je().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,c,d=null;if("complex64"!==i&&je().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture,..._$(a))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);c=g.mergeRealAndImagArrays(e[0],e[1])}else if(null==d)c=this.getValuesFromTexture(e);else{const e=r.sizeFromShape(a);c=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}null!=l&&this.disposeIntermediateTensorInfo(l);const h=this.convertAndCacheOnCPU(e,c),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(e=>e(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Mo().removeDataId(e,this),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>r.decodeString(e))}catch(a){throw new Error("Failed to decode encoded string bytes into utf-8")}return yi(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!R$(n)){if(je().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),s=r.sizeFromShape(t);if(je().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,..._$(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const i=je().getBool("WEBGL_PACK")&&!0===a,o=i?G$(t):t,u=i?new oF(o):new iF(o),l=this.runWebGLProgram(u,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=r.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),i=r.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);o.kernelMs=r.sum(e),o.getExtraProfileInfo=()=>e.map((e,t)=>({name:i[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.now(),endMs:null}}endTimer(e){return je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=r.now(),e)}async getQueryTime(e){return je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=FR){return je().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&r.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){g.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return AR(e.shape,t)}packedUnaryOp(e,t,n){const r=new ER(e.shape,t),a=this.compileAndRun(r,[e],n);return Mo().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=rR(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(je().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,CR,e.dtype);const t=new SR(e.shape,CR),n=this.compileAndRun(t,[e]);return Mo().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.isString(n[0])){const s=n.map(e=>r.encodeString(e));a=this.write(s,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Mo().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new _R(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new xR(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[V$(e.shape),...U$(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[V$(t),...U$(t)],s=new wR(a,n),i=this.runWebGLProgram(s,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=G$(r);let i;return i=n?new sF(s):new aF(s),{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:e}],a,null,!0).dataId}}runWebGLProgram(e,t,n,a,s=!1){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===S$.DENSE){const t=_$(e.outputShape);o.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===r.sizeFromShape(i.shape))return o.values=r.getTypedArrayFromDType(i.dtype,0),i;const u=[],l=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&r.sizeFromShape(t.shape)<=je().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!j$(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},d=function(e,t,n){let r="";t.concat(n).forEach(e=>{r+=`${e.shape}_${e.isUniform?"uniform":e.texData.texShape}_${null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0}`});let a=e.constructor.name;return a+="_"+r+"_"+e.userCode,a}(e,l,c),h=this.getAndSaveBinary(d,()=>function(e,t,n,r){const a=t.userCode,s=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),i=s.map(e=>e.shapeInfo),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=bF(s,o,a,t.packedInputs),l=e.createProgram(u);let c=null;const d=e.getUniformLocation(l,"NAN",!1);1===je().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));const h={};for(let p=0;p<t.variableNames.length;p++){const n=t.variableNames[p],r=!1;h[n]=e.getUniformLocation(l,n,r),h["offset"+n]=e.getUniformLocation(l,"offset"+n,r)}return{program:t,source:u,webGLProgram:l,uniformLocations:h,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:d}}(this.gpgpu,e,l,c)),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),function(e,t,n,a,s){AF(t.inShapeInfos,n),AF([t.outShapeInfo],[a]);const i=a.texData.texture,o=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(i,o[0],o[1]):e.setOutputMatrixTexture(i,o[0],o[1]),e.setProgram(t.webGLProgram),1===je().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((n,a)=>{const s=t.program.variableNames[a],i=t.uniformLocations[s],o=t.uniformLocations["offset"+s];if(null!=i)if(n.isUniform)if(r.sizeFromShape(n.shape)<2)e.gl.uniform1f(i,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,i,a)}),null!=s&&s(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,h,l,c,a),u.forEach(e=>this.disposeIntermediateTensorInfo(e)),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=je().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=r.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!je().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,a=!1){return this.runWebGLProgram(e,t,n=n||t[0].dtype,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(je().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=zo(()=>{if(!je().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=je().getBool("DEBUG");je().set("DEBUG",!1);const t=this.abs(du(1e-8)).dataSync()[0];if(je().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:s,texture:i,usage:o,isPacked:u}=t;if(null!=i)return;const l=null!=this.activeTimers;let c;l&&(c=r.now());let d=t.texShape;if(null==d&&(d=function(e,t=!1){let n=je().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map((t,n)=>n>=e.length-2?r.nearestLargerEven(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length){const t=r.squeezeShape(e);e=t.newShape}let a=r.sizeFromShape(e);if(e.length<=1&&a<=n)return[1,a];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=V$(e);let n=2,s=2;return e.length&&([n,s]=U$(e)),a=t*(n/2)*(s/2),r.sizeToSquarishShape(a).map(e=>2*e)}return r.sizeToSquarishShape(a)}(n,u),t.texShape=d),null!=s){const e=G$(n);let i,o=d[1],h=d[0];const p=s instanceof Uint8Array;u?([o,h]=A$(d[0],d[1]),i=new lF(e,[h,o],p)):i=new uF(e,[h,o],p);const f=this.makeTensorInfo([h,o],a);this.texData.get(f.dataId).usage=p?C$.PIXELS:C$.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,h,s);const m=this.runWebGLProgram(i,[f],a,null,!0),g=this.texData.get(m.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(m.dataId),t.values=null,l&&(this.uploadWaitMs+=r.now()-c)}else{const e=this.acquireTexture(d,o,a,u);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype "+t)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*r.bytesPerElement(t)}}RR.nextDataId=0,s.isBrowser()&&Ko("webgl",()=>new RR,2);class DR{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=g.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class MR{constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=g.assertAndGetBroadcastShape(t,n);const s=this.outputShape.length;let i="";if(a)if(0===s||1===r.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${TF(s)} coords = getOutputCoords();\n        `,1===s)i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=bR("coords",s);i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function OR(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const LR={kernelName:cn,backendName:"webgl",kernelFunc:OR};function zR(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=OR({inputs:{x:r},backend:n}),u=OR({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}const PR={kernelName:kt,backendName:"webgl",kernelFunc:zR},BR="return (a < 0.) ? b * a : a;",WR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",VR={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{alpha:i}=a,o=n.makeTensorInfo([],"float32",r.createScalarValue(i,"float32")),u=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new MR(WR,s.shape,o.shape):new DR(BR,s.shape,o.shape),l=n.runWebGLProgram(u,[s,o],s.dtype);return n.disposeIntermediateTensorInfo(o),l}},UR="return (a < 0.) ? b * a : a;",GR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",HR={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new MR(GR,r.shape,a.shape):new DR(UR,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}};function jR({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:i}=a,o=s,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=je().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new ER(i.shape,t):new SR(i.shape,e),o.runWebGLProgram(l,[i],u)}}function qR({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new DR(e,u.shape,l.shape);return c.runWebGLProgram(i,[a,s],es(n.dtype,r.dtype))}),s=zR({inputs:{real:r,imag:a},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(a),s}const d=s||es(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=a){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?g.fromUint8ToStringArray(e):e,r="string"===u.dtype?g.fromUint8ToStringArray(t):t,[s,i]=a(u.shape,l.shape,n,r,d),o=c.makeTensorInfo(i,d);return c.texData.get(o.dataId).values=s,o}let h;return h=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new MR(t,u.shape,l.shape,n):new DR(e,u.shape,l.shape),c.runWebGLProgram(h,[u,l],d)}}function KR(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?GR:UR;if("leakyrelu"===e)return t?WR:BR;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class XR{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const l=Math.ceil((r?e[1]:e[2])/2),c=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const g=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",b="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(b=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${f}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${y};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${p[0]});\n          result += (${h[1]} * ${p[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class YR{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=g.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const ZR="return a * b;";function JR(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=g.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new YR("return areal * breal - aimag * bimag;",r.shape,a.shape),i=new YR("return areal * bimag + aimag * breal;",r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=zR({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=ZF(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new MR(ZR,r.shape,a.shape):new DR(ZR,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}const QR={kernelName:Wn,backendName:"webgl",kernelFunc:JR};function eD(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:i}=a,o=n,u=r.sizeFromShape(s.shape),l=r.inferFromImplicitShape(i,u),c=r.sizeFromShape(l);r.assert(u===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${s.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`);const d=o.texData.get(s.dataId);return!d.isPacked||j$(s.shape,l)||null!==d.texture&&j$(d.shape,l)?(o.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[V$(e.shape),...U$(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[V$(t),...U$(t)],i=new wR(s,r),o=n.runWebGLProgram(i,[a],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(s,l,o)}const tD={kernelName:sr,backendName:"webgl",kernelFunc:eD};class nD{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:s,outSize:i}=e;this.outputShape=[a,i];const o=4*Math.floor(n/4),u=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${r.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class rD{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,h="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function aD(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=g.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:l}=a[i];let c,d;c="mean"===n?0===i?new nD({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new nD({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new rD({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),d=s,s=r.runWebGLProgram(c,[s],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return s}class sD{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const r=TF(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class iD{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=TF(this.rank),a=yR("rc",this.rank),s=new Array(this.rank);for(let l=0;l<t.length;l++)s[t[l]]=a[l];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function oD(e,t,n){const r=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iD(e.shape,t):new sD(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function uD(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a;return function(e,t,n,a){const s=e.shape.length,i=r.parseAxisParam(t,e.shape);let o=i;const u=g.getAxesPermutation(o,s),l=null!=u;let c=e;l&&(c=oD(e,u,a),o=g.getInnerMostAxes(o.length,s)),g.assertAxesAreInnerMostDims("sum",o,s);const[d,h]=g.computeOutAndReduceShapes(c.shape,o);let p=d;n&&(p=g.expandShapeToKeepDim(d,i));const f=r.sizeFromShape(h),m=eD({inputs:{x:c},attrs:{shape:[r.sizeFromShape(e.shape)/f,f]},backend:a}),y=aD(m,ts(e.dtype),"sum",a),b=eD({inputs:{x:y},attrs:{shape:p},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(y),l&&a.disposeIntermediateTensorInfo(c),b}(s,i,o,n)}const lD={kernelName:Nr,backendName:"webgl",kernelFunc:uD};function cD(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=new Array(a.shape.length);for(let l=0;l<o.length;l++)o[l]=a.shape[s[l]];let u;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId),t=mR(e.values,a.shape,a.dtype,s,o);u=i.makeTensorInfo(o,a.dtype),i.texData.get(u.dataId).values=t}else u=oD(a,s,i);return u}const dD={kernelName:Hr,backendName:"webgl",kernelFunc:cD};function hD({a:e,b:t,transposeA:n,transposeB:a,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:u=0,activation:l=null}){const c=e.shape.length,d=t.shape.length,h=n?e.shape[c-2]:e.shape[c-1],p=a?t.shape[d-1]:t.shape[d-2],f=n?e.shape[c-1]:e.shape[c-2],m=a?t.shape[d-2]:t.shape[d-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),b=r.sizeFromShape(g),x=r.sizeFromShape(y);r.assert(c>=2&&d>=2&&(b===x||1===b||1===x),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`);const w=(b>x?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);r.assert(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`);const v=n?[b,h,f]:[b,f,h],k=a?[x,m,p]:[x,p,m],I=eD({inputs:{x:e},backend:s,attrs:{shape:v}}),N=eD({inputs:{x:t},backend:s,attrs:{shape:k}}),S=[I,N],C=Math.max(b,x),T=n?I.shape[1]:I.shape[2],E=null!=i,_=null!=o,A="leakyrelu"===l,$=null!=l?KR(l,!0):null;let F;if((1===f||1===m)&&T>1e3&&!1===(E||_||A||null!=$)){let e=I,t=N;n&&(e=cD({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),S.push(e)),a&&(t=cD({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),S.push(t));const r=1===m;let i=e;1!==m&&(i=eD({inputs:{x:e},backend:s,attrs:{shape:[C,T,1]}}),S.push(i));const o=1===m?2:1;let u=t;r&&(u=eD({inputs:{x:t},backend:s,attrs:{shape:[C,1,T]}}),S.push(u));const l=JR({inputs:{a:i,b:u},backend:s});F=uD({inputs:{x:l},backend:s,attrs:{axis:o,keepDims:!0}}),S.push(l)}else{const l=es(e.dtype,t.dtype),c=new XR(v,k,[C,f,m],n,a,E,$,_,A),d=[I,N];if(null!=i&&d.push(i),_&&d.push(o),A){const e=s.makeTensorInfo([],"float32",r.createScalarValue(u,"float32"));d.push(e),S.push(e)}F=s.runWebGLProgram(c,d,l)}const R=eD({inputs:{x:F},backend:s,attrs:{shape:w}});S.push(F);for(const r of S)s.disposeIntermediateTensorInfo(r);return R}const pD={kernelName:Qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;return hD({a:a,b:s,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:c})}},fD="return abs(x);",mD={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=rR(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=je().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ER(r.shape,fD):new SR(r.shape,fD),n.runWebGLProgram(a,[r],r.dtype)}},gD=jR({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),yD={kernelName:Je,backendName:"webgl",kernelFunc:gD},bD=jR({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),xD={kernelName:Qe,backendName:"webgl",kernelFunc:bD},wD="return a + b;",vD=qR({opSnippet:wD,packedOpSnippet:wD,supportsComplex:!0,cpuKernelImpl:$F}),kD={kernelName:et,backendName:"webgl",kernelFunc:vD};class ID{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class ND{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const SD={kernelName:tt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return OR({inputs:{x:a[0]},backend:r});if(a.length>je().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map(e=>e.dtype).reduce((e,t)=>es(e,t)),i=a.map(e=>e.shape),o=je().getBool("WEBGL_PACK")?new ND(a[0].shape,i):new ID(a[0].shape,i);return r.runWebGLProgram(o,a,s)}},CD={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a,u=s.shape.length,l=r.parseAxisParam(i,s.shape);let c=l;const d=g.getAxesPermutation(c,u);let h=s;null!=d&&(h=cD({inputs:{x:s},backend:n,attrs:{perm:d}}),c=g.getInnerMostAxes(c.length,u)),g.assertAxesAreInnerMostDims("all",c,u);const[p,f]=g.computeOutAndReduceShapes(h.shape,c),m=eD({inputs:{x:h},backend:n,attrs:{shape:[-1,r.sizeFromShape(f)]}}),y=aD(m,m.dtype,"all",n);let b;return b=eD(o?{inputs:{x:y},backend:n,attrs:{shape:g.expandShapeToKeepDim(p,l)}}:{inputs:{x:y},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),null!=d&&n.disposeIntermediateTensorInfo(h),b}},TD={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a,u=s.shape.length,l=r.parseAxisParam(i,s.shape);let c=l;const d=g.getAxesPermutation(c,u);let h=s;null!=d&&(h=cD({inputs:{x:s},backend:n,attrs:{perm:d}}),c=g.getInnerMostAxes(c.length,u)),g.assertAxesAreInnerMostDims("any",c,u);const[p,f]=g.computeOutAndReduceShapes(h.shape,c),m=eD({inputs:{x:h},backend:n,attrs:{shape:[-1,r.sizeFromShape(f)]}}),y=aD(m,m.dtype,"any",n);let b;return b=eD(o?{inputs:{x:y},backend:n,attrs:{shape:g.expandShapeToKeepDim(p,l)}}:{inputs:{x:y},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),null!=d&&n.disposeIntermediateTensorInfo(h),b}};class ED{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===t?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class _D{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const s=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=TF(o),l=bR("coords",o);let c,d;if(1===s){d=o+1;const e=TF(d);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else d=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const h=["x","y","z","w","u","v"].slice(0,d),p="."+h[d-1],f=h.map(e=>"int "+e),m=bR("sourceLocR",d-1).concat("inIdx.r"),g=bR("sourceLocG",d-1).concat("inIdx.g"),y=bR("sourceLocB",d-1).concat("inIdx.b"),b=bR("sourceLocA",d-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=a?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function AD(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const i=g.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},u=new ED(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const d=AD(e,t,n,c);return e.disposeIntermediateTensorInfo(c),d}function $D(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=g.computeOptimalWindowSize(a[a.length-1]),i=new _D(a,s,n,null==r),o=e.runWebGLProgram(i,null==r?[t]:[t,r],"int32");if(o.shape.length===t.shape.length){const r=$D(e,t,n,o);return e.disposeIntermediateTensorInfo(o),r}return o}function FD(e,t,n,a){const s=[n];if(g.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),s,t.shape.length),!je().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[i,o]=g.computeOutAndReduceShapes(t.shape,s),u=r.sizeFromShape(o),l=eD({inputs:{x:t},backend:e,attrs:{shape:[-1,u]}});n.push(l);const c=AD(e,l,a);n.push(c);const d=eD({inputs:{x:c},backend:e,attrs:{shape:i}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),d}return $D(e,t,a)}const RD={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i}=a;let o=r.parseAxisParam(i,s.shape);const u=g.getAxesPermutation(o,s.shape.length);let l=s;const c=[];null!=u&&(l=cD({inputs:{x:s},backend:n,attrs:{perm:u}}),c.push(l),o=g.getInnerMostAxes(o.length,l.shape.length)),g.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);const d=FD(n,l,o[0],"max");return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},DD={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i}=a;let o=r.parseAxisParam(i,s.shape);const u=g.getAxesPermutation(o,s.shape.length);let l=s;const c=[];null!=u&&(l=cD({inputs:{x:s},backend:n,attrs:{perm:u}}),c.push(l),o=g.getInnerMostAxes(o.length,l.shape.length)),g.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);const d=FD(n,l,o[0],"min");return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},MD=jR({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),OD={kernelName:it,backendName:"webgl",kernelFunc:MD},LD=jR({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),zD={kernelName:ot,backendName:"webgl",kernelFunc:LD},PD=jR({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),BD={kernelName:ut,backendName:"webgl",kernelFunc:PD},WD=qR({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),VD={kernelName:ct,backendName:"webgl",kernelFunc:WD},UD=jR({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),GD={kernelName:lt,backendName:"webgl",kernelFunc:UD};class HD{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t;let m="0.0";if(f||(m="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`:`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let g=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(g="avgValue / count");const y=4*Math.floor(s/4),b=s%4,x=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${m};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${m});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${x}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${x}\n          }\n        }\n        setOutput(${g});\n      }\n    `}}class jD{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const qD={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;J$(s,"avgPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=a;r.assert(g.eitherStridesOrDilationsAreOne(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=g.computePool2DInfo(s.shape,i,o,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&r.arraysEqual(c.inShape,c.outShape))return OR({inputs:{x:s},backend:n});const d=new HD(c,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}},KD={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=g.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),d=new jD(c,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}};class XD{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.effectiveFilterHeight,n=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t};\n            wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n};\n            wC+= ${e.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class YD{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.effectiveFilterDepth,n=e.effectiveFilterHeight,r=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterDepth*e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${t};\n            wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ZD={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,d=g.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),h=new YD(d);return n.runWebGLProgram(h,[a],i.dtype)}},JD={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;J$([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=g.computePool2DInfo(i.shape,o,u,1,l),d=new XD(c);return n.runWebGLProgram(d,[a],i.dtype)}},QD={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return hD({a:a,b:s,transposeA:i,transposeB:o,backend:n})}};class eM{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],g.assertAndGetBroadcastShape(e,t),g.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(g.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(g.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class tM{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],g.assertAndGetBroadcastShape(e,t),g.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(g.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(g.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const nM={kernelName:an,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,mean:s,variance:i,offset:o,scale:u}=e;r.assert(s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.assert(null==o||s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.assert(null==u||s.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;null==l&&(l=.001);const c=[a,s,i];let d=null;null!=o&&(d=o.shape,c.push(o));let h=null;null!=u&&(h=u.shape,c.push(u));const p=je().getBool("WEBGL_PACK_NORMALIZATION")?new tM(a.shape,s.shape,i.shape,d,h,l):new eM(a.shape,s.shape,i.shape,d,h,l);return t.runWebGLProgram(p,c,c[0].dtype)}};class rM{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=TF(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return aM.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map((e,t)=>`sourceLoc.${aM[t]} = start[${t}] + coords.${aM[t]};`).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const aM=["x","y","z","w","u","v"];class sM{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=TF(this.rank),n=bR("coords",this.rank),r=bR("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function iM(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{begin:i,size:o}=a,[u,l]=d.parseSliceParams(s,i,o);if(d.assertParamsValid(s,u,l),0===r.sizeFromShape(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=aR(e.values,u,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:c}=n.texData.get(s.dataId),h=d.isSliceContinous(s.shape,u,l);if(c||!h){const e=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sM(l):new rM(l),t=e.getCustomSetupFunc(u);return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,a){const s=a.texData.get(e.dataId),i=a.makeTensorInfo(n,e.dtype),o=a.texData.get(i.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=e.dtype;let u=d.computeFlatOffset(t,r.computeStrides(e.shape));s.slice&&(u+=s.slice.flatOffset),o.slice={flatOffset:u,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=a.dataRefCount.get(o.slice.origDataId)||1;return a.dataRefCount.set(o.slice.origDataId,l+1),i}(s,u,l,n)}const oM={kernelName:yr,backendName:"webgl",kernelFunc:iM},uM={kernelName:gt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:i,crops:o}=a;r.assert(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const u=i.reduce((e,t)=>e*t),l=g.getReshaped(s.shape,i,u),c=g.getPermuted(l.length,i.length),d=g.getReshapedPermuted(s.shape,i,u),h=g.getSliceBeginCoords(o,i.length),p=g.getSliceSize(d,o,i.length),f=[],m=eD({inputs:{x:s},backend:n,attrs:{shape:l}}),y=cD({inputs:{x:m},backend:n,attrs:{perm:c}}),b=eD({inputs:{x:y},backend:n,attrs:{shape:d}}),x=iM({inputs:{x:b},backend:n,attrs:{begin:h,size:p}});return f.push(m),f.push(y),f.push(b),f.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}},lM={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),l=FF(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}},cM=qR({opSnippet:"return float(a != b);",cpuKernelImpl:QF,dtype:"bool"}),dM={kernelName:Un,backendName:"webgl",kernelFunc:cM};function hM(e){const{inputs:t,backend:n}=e,{input:r}=t;return OR({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const pM={kernelName:nr,backendName:"webgl",kernelFunc:hM},fM={kernelName:xt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:s}=t,{x:i}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===i.dtype)return OR({inputs:{x:i},backend:a});const t=$c(i.shape),n=e({inputs:{x:i},backend:a,attrs:{dtype:"float32"}}),r=zR({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===i.dtype){const t=hM({inputs:{input:i},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:o}});return a.disposeIntermediateTensorInfo(t),n}if(!r.hasEncodingLoss(i.dtype,o)){const e=OR({inputs:{x:i},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new SR(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,a);if("bool"===o){const e=a.makeTensorInfo([],"bool",r.getTypedArrayFromDType("bool",1)),t=cM({inputs:{a:i,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},mM="return ceil(x);",gM=jR({opSnippet:mM,packedOpSnippet:mM,cpuKernelImpl:DF}),yM={kernelName:wt,backendName:"webgl",kernelFunc:gM};class bM{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class xM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const wM={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r;let o;o=je().getBool("WEBGL_PACK_CLIP")?new xM(a.shape):new bM(a.shape);const u=o.getCustomSetupFunc(s,i);return n.runWebGLProgram(o,[a],a.dtype,u)}};class vM{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function kM(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const IM={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new vM(r.shape),i=[kM(r,a.complexTensorInfos.real),kM(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class NM{constructor(e){this.outputShape=[],this.outputShape=g.computeOutShape(e,1),this.variableNames=e.map((e,t)=>"T"+t);const t=new Array(e.length-1);t[0]=e[0][1];for(let r=1;r<t.length;r++)t[r]=t[r-1]+e[r][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let r=1;r<t.length;r++)n.push(`else if (yC < ${t[r]}) setOutput(getT${r}(yR, yC-${t[r-1]}));`);n.push(`else setOutput(getT${t.length}(yR, yC-${t[t.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class SM{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=g.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=TF(r),s=bR("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>"T"+t);const o=new Array(e.length-1);o[0]=e[0][t];for(let p=1;p<o.length;p++)o[p]=o[p-1]+e[p][t];const u=i[t],l=i.slice(-2),c=i.join();let d=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let p=1;p<o.length;p++){const e=o[p-1];d+=`\n        if (${u} < ${o[p]}  && ${u} >= ${o[p-1]}) {\n          return getChannel(\n            getT${p}(${CM(i,u,e)}),\n            vec2(${CM(l,u,e)}));\n        }`}const h=o[o.length-1];d+=`\n        return getChannel(\n          getT${o.length}(${CM(i,u,h)}),\n          vec2(${CM(l,u,h)}));`,this.userCode=`\n      float getValue(${i.map(e=>"int "+e)}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function CM(e,t,n){const r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}function TM(e){const{inputs:t,backend:n}=e,{input:r}=t;return OR({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const EM={kernelName:hn,backendName:"webgl",kernelFunc:TM};function _M(e,t,n){const a=e[0].dtype;if("complex64"===a){const r=e.map(e=>hM({inputs:{input:e},backend:n})),a=e.map(e=>TM({inputs:{input:e},backend:n})),s=_M(r,t,n),i=_M(a,t,n),o=zR({inputs:{real:s,imag:i},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),a.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===a&&(s=!0),s){const s=e.map(e=>{const a=r.sizeFromShape(e.shape.slice(t));return eD({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})}),i=s.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),o=g.computeOutShape(s.map(e=>e.shape),1),u=MF(i,o,a,1===s[0].shape[0]),l=g.computeOutShape(e.map(e=>e.shape),t),c=n.makeTensorInfo(l,a,u);return s.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}if(e.length>je().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=_M(e.slice(0,r),t,n),s=_M(e.slice(r),t,n),i=_M([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const r=new SM(e.map(e=>e.shape),t);return n.runWebGLProgram(r,e,a)}const{tensors2D:i,outShape:o}=function(e,t,n){const a=g.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>eD({inputs:{x:e},attrs:{shape:[-1,r.sizeFromShape(e.shape.slice(t))]},backend:n})),outShape:a}}(e,t,n),u=new NM(i.map(e=>e.shape)),l=n.runWebGLProgram(u,i,a);i.forEach(e=>n.disposeIntermediateTensorInfo(e));const c=eD({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),c}function AM(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,i=r.parseAxisParam(s,t[0].shape)[0],o=g.computeOutShape(t.map(e=>e.shape),i);if(0===r.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter(e=>r.sizeFromShape(e.shape)>0);if(1===u.length)return OR({inputs:{x:u[0]},backend:n});const l=u.map(e=>e.shape);return g.assertParamsConsistent(l,i),_M(u,i,n)}const $M={kernelName:Nt,backendName:"webgl",kernelFunc:AM};class FM{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class RM{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class DM{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:d}=n,{left:h,top:p}=o,f=a*r,m=eF(),g="channelsLast"===d,y=g?0:1,b=g?1:2;let x="";for(let w=0;w<=1;w++)for(let n=0;n<=1;n++)x+=`\n          blockIndex = rc.y + ${n};\n          pos = rc.x + ${w};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${s}. - ${h}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*w+n}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*w+n}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function MM({x:e,filter:t,convInfo:n,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape,c=a.texData.get(e.dataId),d="channelsLast"===n.dataFormat;let h;const p=[],f=l[2]%2!=0&&!!c.isPacked;if((1!=l[0]*l[1]*l[2]&&1!==n.outChannels||!(n.inChannels>1e3))&&je().getBool("WEBGL_LAZILY_UNPACK")&&je().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&f){const f={dataId:e.dataId,shape:[1,d?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),n.inChannels],dtype:e.dtype},m=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,r.assert(j$(c.shape,f.shape),()=>`packed reshape ${c.shape} to ${f.shape} isn't free`);const g=eD({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});p.push(g);const y=hD({a:f,b:g,backend:a,transposeA:!1,transposeB:!1,bias:s,activation:u,preluActivationWeights:i,leakyreluAlpha:o}),b=a.texData.get(y.dataId);r.assert(b.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=m,b.shape=n.outShape,h=OR({inputs:{x:y},backend:a}),h.shape=n.outShape,p.push(y)}else{const r=eD({inputs:{x:e},backend:a,attrs:{shape:[1,d?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=eD({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),f=hD({a:r,b:c,transposeA:!1,transposeB:!1,backend:a,bias:s,activation:u,preluActivationWeights:i,leakyreluAlpha:o});h=eD({inputs:{x:f},backend:a,attrs:{shape:n.outShape}}),p.push(r),p.push(c),p.push(f)}for(const r of p)a.disposeIntermediateTensorInfo(r);return h}function OM({x:e,filter:t,convInfo:n,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const{filterWidth:l,filterHeight:c,inChannels:d,outWidth:h,outHeight:p,dataFormat:f}=n,m="channelsLast"===f,g=l*c*d,y=p*h,b=[g,y],x=[],w=eD({inputs:{x:e},backend:a,attrs:{shape:e.shape.slice(1)}}),v=eD({inputs:{x:t},backend:a,attrs:{shape:[1,g,r.sizeFromShape(t.shape)/g]}});x.push(w),x.push(v);const k=new DM(b,w.shape,n),I=a.runWebGLProgram(k,[w],"float32"),N=eD({inputs:{x:I},backend:a,attrs:{shape:[1,b[0],b[1]]}});x.push(I),x.push(N);const S=null!=s,C=null!=i,T="leakyrelu"===u,E=u?KR(u,!0):null,_=new XR(N.shape,v.shape,[1,y,n.outChannels],!0,!1,S,E,C,T),A=[N,v];if(s&&A.push(s),C&&A.push(i),T){const e=a.makeTensorInfo([],"float32",r.createScalarValue(o,"float32"));A.push(e),x.push(e)}const $=a.runWebGLProgram(_,A,"float32"),F=eD({inputs:{x:$},backend:a,attrs:{shape:m?[1,p,h,n.outChannels]:[1,n.outChannels,p,h]}});x.push($);for(const r of x)a.disposeIntermediateTensorInfo(r);return F}const LM={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,d=g.convertConv2DDataFormat(u),h=g.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!1,d);let p;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(je().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])p=OM({x:a,filter:s,convInfo:h,backend:n});else{const e=new FM(h);p=n.runWebGLProgram(e,[a,s],"float32")}else p=MM({x:a,filter:s,convInfo:h,backend:n});const f=eD({inputs:{x:p},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class zM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${"channelsLast"===e.dataFormat}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class PM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r="channelsLast"===e.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${r?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${r?1:2}], coords[${r?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${r}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class BM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${e.strideDepth} - ${e.padInfo.front};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class WM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${e.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const VM={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,d=g.convertConv2DDataFormat(u),h=g.computeConv2DInfo(a.shape,c,i,1,o,l,!1,d),p=new zM(h);return n.runWebGLProgram(p,[a,s],"float32")}},UM={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,d=g.convertConv2DDataFormat(l),h=g.computeConv2DInfo(i,s.shape,o,1,u,c,!1,d),p=new PM(h);return n.runWebGLProgram(p,[a,s],"float32")}},GM={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=g.computeConv3DInfo(a.shape,s.shape,i,u,o),c=new RM(l);return n.runWebGLProgram(c,[a,s],"float32")}},HM={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r,l=g.computeConv3DInfo(a.shape,u,i,1,o),c=new BM(l);return n.runWebGLProgram(c,[a,s],"float32")}},jM={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r,l=g.computeConv3DInfo(u,s.shape,o,1,i),c=new WM(l);return n.runWebGLProgram(c,[a,s],"float32")}},qM=jR({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),KM={kernelName:$t,backendName:"webgl",kernelFunc:qM},XM=jR({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),YM={kernelName:Ft,backendName:"webgl",kernelFunc:XM};class ZM{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[l]=t,[c,d]=n;this.outputShape=[l,c,d,u];const h="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+p],[b,x,w]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const JM={kernelName:Dt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new ZM(a.shape,s.shape,o,u,l);return n.runWebGLProgram(c,[a,s,i],"float32")}};class QM{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${eO(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?"end + pow2 < "+s:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${TF(r)} coords = getOutputCoords();\n        int end = ${tO(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${tO(r,"coords")} = idx;\n          val += getX(${eO(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function eO(e,t){if(1===e)return""+t;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function tO(e,t){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const nO={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length,l=g.getAxesPermutation([s],u);let c=a;null!=l&&(c=cD({inputs:{x:a},backend:n,attrs:{perm:l}}));const d=g.getInnerMostAxes(1,u)[0];if(d!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=`+s);const h=c.shape[d];let p=OR({inputs:{x:c},backend:n});for(let f=0;f<=Math.ceil(Math.log2(h))-1;f++){const e=new QM(c.shape,!1,o),t=e.getCustomSetupFunc(f),r=p;p=n.runWebGLProgram(e,[p],p.dtype,t),n.disposeIntermediateTensorInfo(r)}if(i){const e=new QM(c.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=cD({inputs:{x:p},backend:n,attrs:{perm:g.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}},rO={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=FF(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=RF(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+a.shape.length+".")}};class aO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const sO={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockSize:i,dataFormat:o}=a;r.assert(i>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+i);const u=s.shape[0],l=("NHWC"===o?s.shape[1]:s.shape[2])*i,c=("NHWC"===o?s.shape[2]:s.shape[3])*i,d=("NHWC"===o?s.shape[3]:s.shape[1])/(i*i),h=new aO("NHWC"===o?[u,l,c,d]:[u,d,l,c],i,o);return n.runWebGLProgram(h,[s],s.dtype)}};class iO{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.inHeight,i=e.inWidth,o=e.padInfo.top,u=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,d=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",y="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${d};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class oO{constructor(e,t=!1,n=null,a=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const i=e.outChannels/e.inChannels,o=e.inHeight,u=e.inWidth,l=e.padInfo.top,c=e.padInfo.left,d=e.strideHeight,h=e.strideWidth,p=e.dilationHeight,f=e.dilationWidth,m=e.filterHeight,g=e.filterWidth,y=g;let b="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let r=0;r<g;r++)b+=`\n          vec4 xTexelC${2*r};\n          int xTexelC${2*r}Ready;\n          vec4 xC${r};`;for(let k=0;k<m;k++){for(let e=0;e<g;e++)b+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xC${e} = vec4(0.0);`;b+=`\n        xR = xRCorner + ${k*p};\n        if (xR >=0 && xR < ${o}) {\n      `;for(let e=0;e<(y+1)/2;e++){const t=2*e,n=t*f;if(b+=`\n          xC = xCCorner + ${n};\n          `,1===h){if(t<g&&(c%2==1?(b+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${u} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${u}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n              `,b+=1===f&&n>0?`\n                xC${t} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${u}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${u}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${n}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                  }\n                  `):b+=`\n                if (xC >= 0 && xC < ${u} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${u}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xC${t} = xTexelC${n};\n                `,n+1<g)){const e=c%2==0?r.nearestLargerEven(f):f;f%2==0&&c%2==1||f%2!=0&&c%2!=1?(b+=`\n                  xCOffset = xC + ${c%2} + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < ${u} && xTexelC${n+2}Ready == 0) {\n                    xTexelC${n+2} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${u}) {\n                      xTexelC${n+2}.zw = vec2(0.0);\n                    }\n                    xTexelC${n+2}Ready = 1;\n                  }\n                  `,f>1&&(b+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${u} && xTexelC${n}Ready == 0) {\n                      xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${n}Ready = 1;\n                    }\n                    `),b+=`\n                  xC${t+1} = vec4(xTexelC${n}.zw, xTexelC${n+2}.xy);\n                  `):b+=1===e?`\n                    xC${t+1} = xTexelC${n};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < ${u} && xTexelC${n+2}Ready == 0) {\n                      xTexelC${n+2} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${u}) {\n                        xTexelC${n+2}.zw = vec2(0.0);\n                      }\n                      xTexelC${n+2}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${n+2};\n                    `}}else n<g&&(c%2==1?(b+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${u} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${u}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${u} && xTexelC${n+2}Ready == 0) {\n                  xTexelC${n+2} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${u}) {\n                    xTexelC${n+2}.zw = vec2(0.0);\n                  }\n                  xTexelC${n+2}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${n}.zw, xTexelC${n+2}.zw);\n              `,n+1<g&&(b+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${u}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${n+2}.xy, final.xy);\n                `)):(b+=`\n                if(xC >= 0 && xC < ${u} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${u}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${u} && xTexelC${n+2}Ready == 0) {\n                  xTexelC${n+2} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${u}) {\n                    xTexelC${n+2}.zw = vec2(0.);\n                  }\n                  xTexelC${n+2}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${n}.xy, xTexelC${n+2}.xy);\n              `,n+1<g&&(b+=`\n                  xC${t+1} = vec4(xTexelC${n}.zw, xTexelC${n+2}.zw);\n                `)));t<g&&(b+=`\n            wTexel = getW(${k}, ${n}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,n+1<g&&(b+=`\n              wTexel = getW(${k}, ${n+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}b+="\n        }\n      "}let x="",w="";n&&(x=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${d}, ${h});\n      const ivec2 pads = ivec2(${l}, ${c});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${b}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}const uO={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i}=t,{strides:o,pad:u,dilations:l,dimRoundingMode:c}=a;let d=l;null==d&&(d=[1,1]),r.assert(g.eitherStridesOrDilationsAreOne(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const h=g.computeConv2DInfo(s.shape,i.shape,o,d,u,c,!0);let p;return p=je().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new oO(h):new iO(h),n.runWebGLProgram(p,[s,i],"float32")}};class lO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${e.outChannels/e.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class cO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${r}; dm++) {\n              int d2 = d1 * ${r} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const dO={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,d=g.computeConv2DInfo(a.shape,c,i,o,u,l,!0),h=new lO(d);return n.runWebGLProgram(h,[a,s],"float32")}},hO={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,d=g.computeConv2DInfo(c,s.shape,i,o,u,l,!0),h=new cO(d);return n.runWebGLProgram(h,[a,s],"float32")}};class pO{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const fO={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=[...a.shape,...a.shape],i=r.sizeFromShape(a.shape),o=eD({inputs:{x:a},backend:n,attrs:{shape:[i]}}),u=new pO(i),l=n.runWebGLProgram(u,[o],o.dtype),c=eD({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}};class mO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const gO={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=g.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u);let c;const d=new mO(l);c=n.runWebGLProgram(d,[a,s],"float32");const h=eD({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),h}},yO={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,i=t,{allDims:o,summedDims:u,idDims:l}=g.decodeEinsumEquation(s,i.length);g.checkEinsumDimSizes(o.length,l,i);const{path:c,steps:d}=g.getEinsumComputePath(u,l),h=d.length;let p=null,f=o.length;const m=[];for(let y=0;y<h;++y){for(const e of d[y]){const{permutationIndices:t,expandDims:a}=g.getEinsumPermutation(f,l[e]);let s;g.isIdentityPermutation(t)?s=i[e]:(s=cD({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),m.push(s));const o=s.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);r.arraysEqual(s.shape,o)||(s=eD({inputs:{x:s},backend:n,attrs:{shape:o}}),m.push(s)),null===p?p=s:(p=JR({inputs:{a:s,b:p},backend:n}),m.push(p))}y<h-1&&(c[y]>=0&&(p=uD({inputs:{x:p},backend:n,attrs:{axis:c[y]-(o.length-f),keepDims:!1}}),m.push(p)),f--)}for(const r of m)r!==p&&n.disposeIntermediateTensorInfo(r);return p}},bO=jR({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),xO={kernelName:jt,backendName:"webgl",kernelFunc:bO},wO={kernelName:qt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new MR("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new DR("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},vO=qR({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:OF}),kO={kernelName:Xt,backendName:"webgl",kernelFunc:vO},IO=jR({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${g.ERF_P};\n  float a1 = ${g.ERF_A1};\n  float a2 = ${g.ERF_A2};\n  float a3 = ${g.ERF_A3};\n  float a4 = ${g.ERF_A4};\n  float a5 = ${g.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),NO={kernelName:Kt,backendName:"webgl",kernelFunc:IO},SO="return exp(x);",CO=jR({opSnippet:SO,packedOpSnippet:SO,cpuKernelImpl:LF}),TO={kernelName:Yt,backendName:"webgl",kernelFunc:CO};function EO(e){const{inputs:t,attrs:n,backend:a}=e,{dim:s}=n,{input:i}=t,o=i.shape.length,u=i.shape.slice();let l=s;return s<0&&(r.assert(-(o+1)<=s,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+s+1),u.splice(l,0,1),eD({inputs:{x:i},backend:a,attrs:{shape:u}})}const _O={kernelName:Zt,backendName:"webgl",kernelFunc:EO},AO="return exp(x) - 1.0;",$O=jR({opSnippet:AO,packedOpSnippet:AO,cpuKernelImpl:zF}),FO={kernelName:Jt,backendName:"webgl",kernelFunc:$O};class RO{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,s=n?r+".0":"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function DO(e,t,n){const a=n.texData.get(e.dataId),s=r.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],o=eD({inputs:{x:e},backend:n,attrs:{shape:[s/i,i]}}),u=o.shape,l=new RO("real",u,t),c=new RO("imag",u,t),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:u},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:u}],h=n.runWebGLProgram(l,d,"float32"),p=n.runWebGLProgram(c,d,"float32"),f=zR({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const m=eD({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}const MO={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return DO(r,!1,n)}};class OO{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function LO(e){const{backend:t,attrs:n}=e,{shape:a,value:s}=n;let{dtype:i}=n;if(i=i||r.inferDtype(s),"string"===i){const e=r.getArrayFromDType(i,r.sizeFromShape(a));return e.fill(s),t.makeTensorInfo(a,i,e)}{const e=new OO(a,s),n=e.getCustomSetupFunc(s);return t.runWebGLProgram(e,[],i,n)}}const zO={kernelName:en,backendName:"webgl",kernelFunc:LO};class PO{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const BO={kernelName:tn,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new PO(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},WO="return floor(x);",VO=jR({opSnippet:WO,packedOpSnippet:WO,cpuKernelImpl:PF}),UO={kernelName:nn,backendName:"webgl",kernelFunc:VO},GO=qR({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),HO={kernelName:rn,backendName:"webgl",kernelFunc:GO};class jO{constructor(e){this.variableNames=["A"];const t=eF(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class qO{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=eF(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const KO={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[l,u],d=[l,u,s];(o||i)&&(null==XO&&(XO=document.createElement("canvas").getContext("2d")),XO.canvas.width=u,XO.canvas.height=l,XO.drawImage(a,0,0,u,l),a=XO.canvas);const h=n.makeTensorInfo(c,"int32");n.texData.get(h.dataId).usage=C$.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),a);const p=je().getBool("WEBGL_PACK")?new qO(d):new jO(d),f=n.runWebGLProgram(p,[h],"int32");return n.disposeData(h.dataId),f}};let XO;const YO={kernelName:ea,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:u}=t,{strides:l,pad:c,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=a,y=g.convertConv2DDataFormat(d),b=g.computeConv2DInfo(s.shape,i.shape,l,h,c,p,!1,y);let x;const w=[];if(1!==b.filterHeight||1!==b.filterWidth||1!==b.dilationHeight||1!==b.dilationWidth||1!==b.strideHeight||1!==b.strideWidth||"SAME"!==b.padInfo.type&&"VALID"!==b.padInfo.type)if(je().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])x=OM({x:s,filter:i,convInfo:b,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const e=null!=o,t=null!=u,a="leakyrelu"===f,l=f?KR(f,!1):null,c=new FM(b,e,l,t,a),d=[s,i];if(o&&d.push(o),u&&d.push(u),a){const e=n.makeTensorInfo([],"float32",r.createScalarValue(m,"float32"));d.push(e),w.push(e)}x=n.runWebGLProgram(c,d,"float32")}else x=MM({x:s,filter:i,convInfo:b,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const v=eD({inputs:{x:x},backend:n,attrs:{shape:b.outShape}});return w.push(x),w.forEach(e=>n.disposeIntermediateTensorInfo(e)),v}},ZO={kernelName:ta,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:u}=t,{strides:l,pad:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a,m=[];let y=d;null==y&&(y=[1,1]),r.assert(g.eitherStridesOrDilationsAreOne(l,y),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${y}'`);const b=g.computeConv2DInfo(s.shape,i.shape,l,y,c,h,!0),x=je().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,w=p?KR(p,x):null,v=[s,i],k=null!=o,I=null!=u,N="leakyrelu"===p;if(k&&v.push(o),I&&v.push(u),N){const e=n.makeTensorInfo([],"float32",r.createScalarValue(f,"float32"));v.push(e),m.push(e)}let S;S=x?new oO(b,k,w,I,N):new iO(b,k,w,I,N);const C=n.runWebGLProgram(S,v,"float32");return m.forEach(e=>n.disposeIntermediateTensorInfo(e)),C}};class JO{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=TF(t.length),a=TF(n.length);this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${this.sliceDim>1?"strides[j]":"strides"};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const QO={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,i=s.shape,o=i[i.length-1],u=r.sizeFromShape(a.shape),[l,c,d,h]=g.prepareAndValidate(a,s),p=eD({inputs:{x:s},backend:n,attrs:{shape:[c,o]}}),f=eD({inputs:{x:a},backend:n,attrs:{shape:[r.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(a),r=BF(e,t,a.dtype,c,o,d,h,a.shape,u);return n.makeTensorInfo(l,a.dtype,r.values)}const m=new JO(o,h,[c,d]),y=n.runWebGLProgram(m,[f,p],f.dtype),b=eD({inputs:{x:y},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),b}};class eL{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=TF(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)r.push(2===a?"int(getIndices(resRC.x, resRC.z))":""+n[a]);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const tL={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,indices:i}=t,{axis:o,batchDims:u}=a,l=r.parseAxisParam(o,s.shape)[0],c=g.segment_util.collectGatherOpShapeInfo(s,i,l,u),d=r.sizeFromShape(i.shape),h=[],p=eD({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=eD({inputs:{x:i},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}});h.push(p),h.push(f);const m=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const e=n.bufferSync(f),t=n.bufferSync(p),r=WF(t,e,m);return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const y=new eL(p.shape,m),b=n.runWebGLProgram(y,[p,f],p.dtype);h.push(b);const x=eD({inputs:{x:b},backend:n,attrs:{shape:c.outputShape}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}},nL=qR({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:VF,dtype:"bool"}),rL={kernelName:un,backendName:"webgl",kernelFunc:nL},aL=qR({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:UF}),sL={kernelName:ln,backendName:"webgl",kernelFunc:aL},iL={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return DO(r,!0,n)}},oL=jR({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),uL={kernelName:pn,backendName:"webgl",kernelFunc:oL},lL=jR({opSnippet:"return float(isinf(x));",dtype:"bool"}),cL={kernelName:fn,backendName:"webgl",kernelFunc:lL},dL=jR({opSnippet:"return float(isnan(x));",dtype:"bool"}),hL={kernelName:mn,backendName:"webgl",kernelFunc:dL},pL=qR({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:GF,dtype:"bool"}),fL={kernelName:yn,backendName:"webgl",kernelFunc:pL},mL=qR({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:HF,dtype:"bool"}),gL={kernelName:bn,backendName:"webgl",kernelFunc:mL},yL={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=jF(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},bL=jR({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:qF}),xL={kernelName:wn,backendName:"webgl",kernelFunc:bL},wL=jR({opSnippet:"return log(1.0 + x);"}),vL={kernelName:vn,backendName:"webgl",kernelFunc:wL},kL=qR({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),IL={kernelName:kn,backendName:"webgl",kernelFunc:kL},NL=jR({opSnippet:"return float(!(x >= 1.0));"}),SL={kernelName:In,backendName:"webgl",kernelFunc:NL},CL=qR({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),TL={kernelName:Nn,backendName:"webgl",kernelFunc:CL};class EL{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class _L{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const AL={kernelName:Cn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r,l=je().getBool("WEBGL_PACK_NORMALIZATION")?new _L(a.shape,s,i,o,u):new EL(a.shape,s,i,o,u);return n.runWebGLProgram(l,[a],a.dtype)}};class $L{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const FL={kernelName:Tn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,d=new $L(a.shape,o,u,l,c);return n.runWebGLProgram(d,[a,s,i],a.dtype)}};function RL(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reductionIndices:i,keepDims:o}=a,u=s.shape.length,l=r.parseAxisParam(i,s.shape);let c=l;const d=g.getAxesPermutation(c,u),h=null!=d,p=n.shouldExecuteOnCPU([s]);let f=s;if(h){if(p){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let n=0;n<t.length;n++)t[n]=s.shape[d[n]];const r=mR(e,s.shape,s.dtype,d,t);f=n.makeTensorInfo(t,s.dtype),n.texData.get(f.dataId).values=r}else f=oD(s,d,n);c=g.getInnerMostAxes(c.length,u)}g.assertAxesAreInnerMostDims("max",c,u);const[m,y]=g.computeOutAndReduceShapes(f.shape,c);let b,x=m;if(o&&(x=g.expandShapeToKeepDim(m,l)),p){const e=n.texData.get(f.dataId),t=KF(e.values,r.sizeFromShape(y),x,s.dtype);b=n.makeTensorInfo(x,s.dtype),n.texData.get(b.dataId).values=t}else b=function(e,t,n,a){const s=r.sizeFromShape(t),i=eD({inputs:{x:e},attrs:{shape:[r.sizeFromShape(e.shape)/s,s]},backend:a}),o=aD(i,e.dtype,"max",a),u=eD({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),u}(f,y,x,n);return h&&n.disposeIntermediateTensorInfo(f),b}const DL={kernelName:En,backendName:"webgl",kernelFunc:RL},ML=qR({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:XF}),OL={kernelName:_n,backendName:"webgl",kernelFunc:ML},LL={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t;J$(s,"maxPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=a;r.assert(g.eitherStridesOrDilationsAreOne(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=g.computePool2DInfo(s.shape,i,o,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&r.arraysEqual(c.inShape,c.outShape))return OR({inputs:{x:s},backend:n});const d=new HD(c,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}},zL={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=g.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),d=new jD(c,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}};class PL{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.effectiveFilterHeight,n=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t};\n          wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${t*n-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${n} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class BL{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.effectiveFilterDepth,n=e.effectiveFilterHeight,r=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${t};\n           wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${t*n*r-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${n} * ${r} +\n                  wR * ${r} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const WL={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,d=g.computePool3DInfo(i.shape,o,u,[1,1,1],l,c),h=new jD(d,"max",!0),p=n.runWebGLProgram(h,[i],i.dtype),f=new BL(d),m=n.runWebGLProgram(f,[a,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}},VL={kernelName:$n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;J$([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,h=g.computePool2DInfo(o.shape,u,l,1,c,d),p=new HD(h,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new PL(h),y=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),y}},UL={kernelName:Dn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:s,strides:i,pad:o,includeBatchInIndex:u}=t,l=n;r.assert(4===a.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);const c=[1,1];r.assert(g.eitherStridesOrDilationsAreOne(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const d=g.computePool2DInfo(a.shape,s,i,c,o),[h,p]=function(e,t,n,r){let a=new HD(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new HD(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(a,u,d,l);return[h,p]}},GL={kernelName:Mn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{keepDims:s,axis:i}=t,o=n,u=a.shape.length,l=r.parseAxisParam(i,a.shape);let c=l;const d=g.getAxesPermutation(c,u),h=null!=d,p=o.shouldExecuteOnCPU([a]),f=[];let m=a;if(h){if(p){const e=o.texData.get(m.dataId).values,t=new Array(u);for(let r=0;r<t.length;r++)t[r]=a.shape[d[r]];const n=mR(e,a.shape,a.dtype,d,t);m=o.makeTensorInfo(t,a.dtype),o.texData.get(m.dataId).values=n}else m=oD(a,d,o);f.push(m),c=g.getInnerMostAxes(c.length,u)}g.assertAxesAreInnerMostDims("sum",c,u);const[y,b]=g.computeOutAndReduceShapes(m.shape,c);let x=y;s&&(x=g.expandShapeToKeepDim(y,l));const w=function(e,t,n,a){const s=r.sizeFromShape(t),i=eD({inputs:{x:e},attrs:{shape:[r.sizeFromShape(e.shape)/s,s]},backend:a}),o=aD(i,"float32","mean",a),u=eD({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),u}(m,b,x,o);for(const r of f)o.disposeIntermediateTensorInfo(r);return w}},HL={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a,u=s.shape.length,l=r.parseAxisParam(i,s.shape);let c=l;const d=g.getAxesPermutation(c,u);let h=s;null!=d&&(h=cD({inputs:{x:s},backend:n,attrs:{perm:d}}),c=g.getInnerMostAxes(c.length,s.shape.length)),g.assertAxesAreInnerMostDims("min",c,u);const[p,f]=g.computeOutAndReduceShapes(h.shape,c),m=eD({inputs:{x:h},backend:n,attrs:{shape:[-1,r.sizeFromShape(f)]}}),y=aD(m,m.dtype,"min",n);let b;return b=eD(o?{inputs:{x:y},backend:n,attrs:{shape:g.expandShapeToKeepDim(p,l)}}:{inputs:{x:y},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),null!=d&&n.disposeIntermediateTensorInfo(h),b}},jL=qR({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:YF}),qL={kernelName:Ln,backendName:"webgl",kernelFunc:jL};class KL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=TF(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class XL{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=TF(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=bR("rc",r),u=bR("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const YL={kernelName:zn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,i=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new XL(r.shape,a,s):new KL(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},ZL=qR({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),JL={kernelName:Pn,backendName:"webgl",kernelFunc:ZL};class QL{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const ez=qR({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),tz={kernelName:Gt,backendName:"webgl",kernelFunc:ez},nz="return a - b;",rz=qR({opSnippet:nz,packedOpSnippet:nz,supportsComplex:!0,cpuKernelImpl:hR}),az={kernelName:Pr,backendName:"webgl",kernelFunc:rz};function sz(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:i}=a,o=r.parseAxisParam([i],s.shape),u=RL({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=g.expandShapeToKeepDim(u.shape,o),c=eD({inputs:{x:u},backend:n,attrs:{shape:l}}),d=rz({inputs:{a:s,b:c},backend:n}),h=CO({inputs:{x:d},backend:n}),p=uD({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),f=eD({inputs:{x:p},backend:n,attrs:{shape:l}}),m=ez({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const iz={kernelName:Tr,backendName:"webgl",kernelFunc:sz},oz={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:sz({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=new QL(u.shape[0],u.shape[1],s),c=l.getCustomSetupFunc(i),d=n.runWebGLProgram(l,[u],"int32",c);return o||n.disposeIntermediateTensorInfo(u),d}},uz="return -x;",lz={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=JF(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=je().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ER(r.shape,uz):new SR(r.shape,uz),n.runWebGLProgram(a,[r],r.dtype)}},cz=y.nonMaxSuppressionV3Impl,dz={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){g.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(a.dataId),c=n.readSync(s.dataId),{selectedIndices:d}=cz(l,c,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},hz=y.nonMaxSuppressionV4Impl,pz={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){g.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:h,validOutputs:p}=hz(c,d,i,o,u,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},fz=y.nonMaxSuppressionV5Impl,mz={kernelName:jn,backendName:"webgl",kernelFunc:function(e){g.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(a.dataId),d=n.readSync(s.dataId),h=i,p=o,f=u,m=l,{selectedIndices:y,selectedScores:b}=fz(c,d,h,p,f,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class gz{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const yz={kernelName:Kn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:s}=t,{depth:i,onValue:o,offValue:u}=a,l=r.sizeFromShape(s.shape),c=new gz(l,i,o,u),d=eD({inputs:{x:s},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(c,[d],s.dtype);n.disposeIntermediateTensorInfo(d);const p=eD({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(h),p}};function bz(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=hM({inputs:{input:r},backend:n}),t=bz({inputs:{x:e},backend:n}),a=TM({inputs:{input:r},backend:n}),s=bz({inputs:{x:a},backend:n}),i=zR({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return LO({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const xz={kernelName:Xr,backendName:"webgl",kernelFunc:bz},wz={kernelName:qn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=hM({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=TM({inputs:{input:a},backend:r}),i=bz({inputs:{x:s},backend:r}),o=zR({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return LO({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},vz={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return EO({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,o=t[0].dtype;t.forEach(e=>{r.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.assert(o===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const u=[],l=AM({inputs:t.map(e=>{const t=EO({inputs:{input:e},backend:n,attrs:{dim:s}});return u.push(t),t}),backend:n,attrs:{axis:s}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}};class kz{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=TF(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n      uniform float value;\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}class Iz{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=TF(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=bR("rc",r),u=bR("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[a+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+=`\n        ${d[f]}\n        if (${h}) {\n          result[${f}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n      uniform float value;\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}const Nz=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r,o=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Iz(a.shape,s,i):new kz(a.shape,s,i),u=o.getCustomSetupFunc(i);return n.runWebGLProgram(o,[a],a.dtype,u)},Sz={kernelName:Yn,backendName:"webgl",kernelFunc:Nz},Cz=qR({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Tz={kernelName:Jn,backendName:"webgl",kernelFunc:Cz},Ez={kernelName:er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,keepDims:o}=a,u=s.shape.length,l=[],c=r.parseAxisParam(i,s.shape);let d=c;const h=g.getAxesPermutation(d,u);let p,f=s;if(null!=h&&(f=cD({inputs:{x:s},backend:n,attrs:{perm:h}}),d=g.getInnerMostAxes(d.length,u),l.push(f)),g.assertAxesAreInnerMostDims("prod",d,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=eR(f.shape,f.dtype,e,d);p=n.makeTensorInfo(r,a,t)}else{const[e,t]=g.computeOutAndReduceShapes(f.shape,d),a=r.sizeFromShape(t),i=eD({inputs:{x:f},backend:n,attrs:{shape:[-1,a]}}),o=aD(i,ts(s.dtype),"prod",n);p=eD({inputs:{x:o},backend:n,attrs:{shape:e}}),l.push(i),l.push(o)}if(o){l.push(p);const e=g.expandShapeToKeepDim(p.shape,c);p=eD({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},_z=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=tR(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},Az={kernelName:tr,backendName:"webgl",kernelFunc:_z},$z=jR({opSnippet:"return 1.0 / x;"}),Fz={kernelName:rr,backendName:"webgl",kernelFunc:$z},Rz=jR({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Dz={kernelName:ar,backendName:"webgl",kernelFunc:Rz},Mz=jR({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Oz={kernelName:cr,backendName:"webgl",kernelFunc:Mz};class Lz{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class zz{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Pz={kernelName:ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=je().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new zz(a.shape,u,l,s,i):new Lz(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],"float32")}};class Bz{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],d=1/l,h=1/c,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Wz={kernelName:lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Bz(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class Vz{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Uz{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const Gz={kernelName:ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=je().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Uz(a.shape,u,l,s,i):new Vz(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],a.dtype)}};class Hz{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],d=1/l,h=1/c,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const jz={kernelName:or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Hz(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class qz{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),a=TF(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Kz{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=bR("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=TF(n);function o(n){const r=e.map((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:""+r[n]}(a,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Xz={kernelName:dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dims:i}=a,o=s.shape.length,u=r.parseAxisParam(i,s.shape);if(0===o)return OR({inputs:{x:s},backend:n});const l=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Kz(s.shape,u):new qz(s.shape,u);return n.runWebGLProgram(l,[s],s.dtype)}};class Yz{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(e,t,n,r){return(a,s)=>{null==this.paramsLoc&&(this.paramsLoc=a.getUniformLocationNoThrow(s,"params")),a.gl.uniform4f(this.paramsLoc,e,t,n,r)}}}const Zz={kernelName:Jr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=new Yz(r.shape,s),[l,c]=g.getImageCenter(i,r.shape[1],r.shape[2]),d=u.getCustomSetupFunc(l,c,Math.sin(a),Math.cos(a));return o.runWebGLProgram(u,[r],r.dtype,d)}},Jz=jR({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Qz={kernelName:hr,backendName:"webgl",kernelFunc:Jz},eP=jR({opSnippet:"return inversesqrt(x);",cpuKernelImpl:nR}),tP={kernelName:pr,backendName:"webgl",kernelFunc:eP};class nP{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=TF(a.length),u=TF(s.length);let l="";1===n?l="i":2===n&&(l="i, j");let c="";1===r?c="i":2===r&&(c="i, coords[1]"),this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(getIndices(${l}));\n              flattenedIndex += index * ${t>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${c});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const rP={kernelName:fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=g.calculateShapes(s,a,i),h=[d/l,l];if(0===d)return n.makeTensorInfo(i,a.dtype);const p=eD({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=eD({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new nP(u,o,p.shape.length,f.shape.length,c,h),b=n.runWebGLProgram(y,[f,p,m],f.dtype),x=eD({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),x}};class aP{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(""+n[r]),r<e&&s.push(""+n[r]);r=s.join(),a=i.join()}const s=TF(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const sP={kernelName:mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new aP(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],es(a.dtype,s.dtype))}},iP=jR({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${g.SELU_SCALEALPHA};\n  float scale = ${g.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),oP={kernelName:gr,backendName:"webgl",kernelFunc:iP},uP=jR({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),lP={kernelName:vr,backendName:"webgl",kernelFunc:uP},cP=jR({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),dP={kernelName:wr,backendName:"webgl",kernelFunc:cP},hP=jR({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),pP={kernelName:br,backendName:"webgl",kernelFunc:hP},fP=jR({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),mP={kernelName:xr,backendName:"webgl",kernelFunc:fP},gP=jR({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),yP={kernelName:kr,backendName:"webgl",kernelFunc:gP},bP={kernelName:Sr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockShape:i,paddings:o}=a;r.assert(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const u=i.reduce((e,t)=>e*t),l=[[0,0]];l.push(...o);for(let r=1+i.length;r<s.shape.length;++r)l.push([0,0]);const c=[],d=Nz({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=g.getReshaped(d.shape,i,u,!1),p=g.getPermuted(h.length,i.length,!1),f=g.getReshapedPermuted(d.shape,i,u,!1),m=eD({inputs:{x:d},backend:n,attrs:{shape:h}}),y=cD({inputs:{x:m},backend:n,attrs:{perm:p}}),b=eD({inputs:{x:y},backend:n,attrs:{shape:f}});return c.push(d),c.push(m),c.push(y),c.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}},xP={kernelName:Er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         "+s.shape);if(2!==r.shape.length)throw new Error("Indices must be a matrix, saw:\n         "+r.shape);if(1!==a.shape.length)throw new Error("Values must be a vector, saw:\n         "+a.shape);if(0!==i.shape.length)throw new Error("Default value must be a scalar, saw:\n        "+i.shape);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[d,h,p,f,m]=sR(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},wP={kernelName:_r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape "+r.shape);if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape "+a.shape);if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape "+s.shape);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,d]=iR(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}},vP={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n              "+a.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n              "+s.shape);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=oR(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},kP={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n             "+a.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n             "+s.shape);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=oR(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},IP={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,strides:c,outputSize:d}=g.calculateShapes(s,a,o),h=new nP(l,u,a.shape.length,s.shape.length,c,[d,1],!1),p=n.runWebGLProgram(h,[s,a,i],s.dtype),f=eD({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},NP={kernelName:Cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:i,axis:o}=a,u=r.parseAxisParam(o,s.shape)[0],l=g.prepareSplitSize(s,i,u),c=new Array(s.shape.length).fill(0),d=s.shape.slice();return l.map(e=>{const t=[...d];t[u]=e;const r=iM({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[u]+=e,r})}},SP=jR({opSnippet:"return sqrt(x);"}),CP={kernelName:Ir,backendName:"webgl",kernelFunc:SP},TP=jR({opSnippet:"return x * x;"}),EP={kernelName:Dr,backendName:"webgl",kernelFunc:TP},_P="return (a - b) * (a - b);",AP=qR({opSnippet:_P,packedOpSnippet:_P}),$P={kernelName:Rr,backendName:"webgl",kernelFunc:AP},FP={kernelName:Yr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=new SR(r.shape,`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `);return n.runWebGLProgram(a,[r],r.dtype)}};class RP{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=TF(n.length),s=TF(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const DP={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=d.sliceInfo(a.shape,s,i,o,u,l,c,h,p),w=eD({inputs:{x:a},backend:n,attrs:{shape:b}});let v;if(f){const e=iM({inputs:{x:w},backend:n,attrs:{begin:m,size:y}});v=eD({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some(e=>0===e))v=n.makeTensorInfo(x,a.dtype,[]);else if(n.shouldExecuteOnCPU([w])){const e=n.texData.get(w.dataId),t=yi(w.shape,w.dtype,e.values),r=uR(x,t,g,m);v=n.makeTensorInfo(x,w.dtype,r.values)}else{const e=new RP(m,g,x);v=n.runWebGLProgram(e,[w],w.dtype)}const k=eD({inputs:{x:v},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),k}},MP={kernelName:Or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=t,h=n.readSync(c.dataId),p=n.readSync(d.dataId),[f,m]=lR(h,p,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}},OP={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: "+s.shape);if(0!==i.shape.length)throw new Error("Delimiter must be a scalar, got shape: "+i.shape);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[l,c,d]=cR(o,u,a),h=c.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}},LP={kernelName:zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=dR(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},zP=jR({opSnippet:"return tan(x);"}),PP={kernelName:Br,backendName:"webgl",kernelFunc:zP},BP=jR({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),WP={kernelName:Wr,backendName:"webgl",kernelFunc:BP};class VP{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const r=TF(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function UP(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{reps:i}=a;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map(e=>r.decodeString(e)):e,a=yi(s.shape,s.dtype,t),o=pR(a,i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new VP(s.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}const GP={kernelName:Vr,backendName:"webgl",kernelFunc:UP},HP={kernelName:Ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=n.readSync(a.dataId),[u,l]=fR(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};class jP{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const qP={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,d,h,p]=a.shape,[f,m]=null!=l?l:[d,h],g=new jP(d,h,i,o,u,[c,f,m,p]);return n.runWebGLProgram(g,[a,s],"float32")}},KP={kernelName:jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;J$(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:l}=gR(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},XP={kernelName:qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],l=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==s&&(l[c++]=i.shape[m]);const d=[],h=new Array(o).fill(0),p=i.shape.slice();p[s]=1;const f=new Array(u);for(let m=0;m<f.length;m++){h[s]=m;const e=iM({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),t=eD({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,d.push(e)}return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}};class YP{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const ZP=[AL,FL,pD,mD,yD,xD,kD,SD,CD,TD,RD,DD,OD,zD,VD,BD,GD,KD,qD,ZD,JD,QD,nM,uM,lM,fM,yM,wM,IM,PR,$M,VM,UM,LM,HM,jM,GM,KM,YM,JM,nO,rO,sO,dO,hO,uO,fO,gO,yO,xO,wO,kO,NO,TO,_O,FO,MO,zO,BO,UO,HO,KO,YO,ZO,QO,tL,rL,sL,LR,iL,EM,uL,cL,hL,VR,fL,gL,yL,vL,xL,IL,SL,TL,DL,zL,LL,WL,VL,UL,OL,GL,HL,qL,YL,JL,oz,QR,lz,dz,pz,mz,dM,yz,wz,vz,Sz,Tz,HR,Ez,Az,pM,tz,Fz,Oz,Dz,tD,Pz,Wz,Gz,jz,Xz,Zz,Qz,tP,rP,sP,oP,lP,dP,pP,mP,oM,iz,yP,bP,xP,wP,vP,kP,IP,NP,CP,EP,$P,FP,DP,MP,OP,LP,az,lD,PP,WP,GP,HP,qP,dD,KP,XP,{kernelName:Kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s,segmentIds:i}=t,{numSegments:o}=a,u=s.shape.length,l=[];let c=0;const d=g.getAxesPermutation([c],u);let h=s;null!=d&&(h=cD({inputs:{x:s},backend:n,attrs:{perm:d}}),l.push(h),c=g.getInnerMostAxes(1,u)[0]);const p=g.segment_util.computeOutShape(h.shape,c,o),f=r.sizeFromShape([h.shape[c]]),m=eD({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});l.push(m);const y=ts(s.dtype),b=(e,t,r,a,s)=>{const i=e.shape[0],o=e.shape[1],u=g.segment_util.segOpComputeOptimalWindowSize(o,s),c=new YP({windowSize:u,inSize:o,batchSize:i,numSegments:s},t),d=n.compileAndRun(c,[e,r],a);if(l.push(d),d.shape[1]===s)return d;const h=_z({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),p=UP({inputs:{x:h},backend:n,attrs:{reps:[o/u]}});return l.push(h),l.push(p),b(d,t,p,a,s)},x=eD({inputs:{x:b(m,"unsortedSegmentSum",i,y,o)},backend:n,attrs:{shape:p}});let w=x;if(null!=d){l.push(x);const e=g.getUndoAxesPermutation(d);w=cD({inputs:{x:w},backend:n,attrs:{perm:e}})}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),w}},xz];for(const AH of ZP)oa(AH);const JP={"tfjs-core":_o,"tfjs-backend-cpu":"3.7.0","tfjs-backend-webgl":"3.7.0","tfjs-data":SS,"tfjs-layers":Db,"tfjs-converter":bN,tfjs:"3.7.0"};var QP,eB;let tB;!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(QP||(QP={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid"}(eB||(eB={}));const nB={kernelName:Qr,backendName:"wasm",setupFunc:function(e){tB=e.wasm.cwrap(Qr,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r,h=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(s.dataId).id;let f=0;if(null!=i){const e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}const m=null==o?0:n.dataIdMap.get(o.dataId).id,g=eB[c];if(null==g)throw new Error(c+" activation not yet supported for FusedConv2D in the wasm backend.");const y=n.makeOutput([a.shape[0],u?a.shape[2]:a.shape[1],l?s.shape[1]:s.shape[2]],a.dtype),b=n.dataIdMap.get(y.dataId).id,x=new Uint8Array(new Int32Array(a.shape).buffer),w=new Uint8Array(new Int32Array(s.shape).buffer);return tB(h,x,a.shape.length,p,w,s.shape.length,u,l,g,f,m,d||0,b),y}};function rB(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number"])},kernelFunc:function(e){const{backend:n,inputs:{x:a}}=e,s=n.dataIdMap.get(a.dataId).id,i=n.makeOutput(a.shape,a.dtype),o=n.dataIdMap.get(i.dataId).id;return 0===r.sizeFromShape(i.shape)||t(s,o),i}}}const aB=rB(Ze);function sB(e,t,n){let a;return{kernelName:e,backendName:"wasm",setupFunc:function(t){a=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(s){const{backend:i,inputs:o}=s,{a:u,b:l}=o,c=i.dataIdMap.get(u.dataId).id,d=i.dataIdMap.get(l.dataId).id,h=null!=n?n:u.dtype,p=g.assertAndGetBroadcastShape(u.shape,l.shape),f=i.makeOutput(p,h);if(0===r.sizeFromShape(p))return f;const m=new Uint8Array(new Int32Array(u.shape).buffer),y=new Uint8Array(new Int32Array(l.shape).buffer),b=i.dataIdMap.get(f.dataId).id,x=()=>a(c,m,u.shape.length,d,y,l.shape.length,QP[u.dtype],b);if(t&&"float32"===u.dtype)return x(),f;const w=g.getBroadcastDims(u.shape,p),v=g.getBroadcastDims(l.shape,p),k=w.every((e,t)=>e===t),I=v.every((e,t)=>e===t);if(k&&I)return x(),f;throw new Error(`Broadcasting along outer dims is not yet supported for ${u.dtype} ${e}.`)}}}const iB=sB(et,!0);let oB;const uB={kernelName:tt,backendName:"wasm",setupFunc:function(e){oB=e.wasm.cwrap(tt,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,a=n.makeOutput(t[0].shape,t[0].dtype);if(0===r.sizeFromShape(a.shape))return a;const s=t.map(e=>n.dataIdMap.get(e.dataId).id),i=new Uint8Array(new Int32Array(s).buffer),o=n.dataIdMap.get(a.dataId).id;return oB(i,s.length,QP[a.dtype],o),a}};function lB(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}const cB={kernelName:cn,backendName:"wasm",kernelFunc:lB};let dB;function hB(e){const{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let a=0;a<r.length;++a){let e=-1;for(let t=0;t<r.length;++t)r[t]>=a&&(-1===e||r[e]>r[t])&&(e=t);r[e]=a}return[n,r]}(t.x.shape,r.perm);let i=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(i=!1);const o=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),u={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){const e=lB({inputs:t,backend:n});return e.shape=o,e}const l=n.makeOutput(o,u.dtype),c=n.dataIdMap.get(u.dataId).id,d=n.dataIdMap.get(l.dataId).id,h=new Uint8Array(new Int32Array(s).buffer),p=new Uint8Array(new Int32Array(u.shape).buffer);return dB(c,p,u.shape.length,QP[u.dtype],d,h,s.length),l}const pB={kernelName:Hr,backendName:"wasm",kernelFunc:hB,setupFunc:function(e){dB=e.wasm.cwrap(Hr,null,["number","array","number","number","number","array","number"])}};function fB(e,t,n){const a=e.shape,s=e.shape.length,i=r.parseAxisParam(t,a);let o=i;const u=g.getAxesPermutation(o,s);let l=null,c=!1;if(null!=u){const t=new Array(s);for(let e=0;e<t.length;e++)t[e]=a[u[e]];o=g.getInnerMostAxes(o.length,s),l=hB({inputs:{x:e},attrs:{perm:u},backend:n});const r=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==r&&(c=!0)}return{transposed:l,originalAxes:i,axes:o,inputWasTransposed:c}}let mB;const gB={kernelName:nt,backendName:"wasm",setupFunc:function(e){mB=e.wasm.cwrap(nt,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:s,keepDims:i}=a,{x:o}=n;let u=t.dataIdMap.get(o.dataId).id,l=o;const{transposed:c,axes:d,originalAxes:h,inputWasTransposed:p}=fB(o,s,t);p&&(l=c,u=t.dataIdMap.get(c.dataId).id),g.assertAxesAreInnerMostDims("all",d,l.shape.length);const[f,m]=g.computeOutAndReduceShapes(l.shape,d),y=r.sizeFromShape(m),b=t.makeOutput(f,o.dtype);if(0!==r.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;mB(u,y,e)}if(p&&t.disposeData(c.dataId),i){const e=g.expandShapeToKeepDim(b.shape,h);b.shape=e}return b}};let yB;const bB={kernelName:rt,backendName:"wasm",setupFunc:function(e){yB=e.wasm.cwrap(rt,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:s,keepDims:i}=a,{x:o}=n;let u=t.dataIdMap.get(o.dataId).id,l=o;const{transposed:c,axes:d,originalAxes:h,inputWasTransposed:p}=fB(o,s,t);p&&(l=c,u=t.dataIdMap.get(c.dataId).id),g.assertAxesAreInnerMostDims("any",d,l.shape.length);const[f,m]=g.computeOutAndReduceShapes(l.shape,d),y=r.sizeFromShape(m),b=t.makeOutput(f,o.dtype);if(0!==r.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;yB(u,y,e)}if(p&&t.disposeData(c.dataId),i){const e=g.expandShapeToKeepDim(b.shape,h);b.shape=e}return b}};let xB;const wB={kernelName:at,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:d,inputWasTransposed:h}=fB(i,s,t);if(h){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e)}const p=l.shape.slice(0,-1),f=t.makeOutput(p,"int32"),m=t.dataIdMap.get(f.dataId).id,g=r.sizeFromShape(f.shape);return xB(u,QP[l.dtype],g,l.shape[d[0]],m),h&&t.disposeData(c.dataId),f},setupFunc:function(e){xB=e.wasm.cwrap(at,null,["number","number","number","number","number"])}};let vB;const kB={kernelName:dt,backendName:"wasm",setupFunc:function(e){vB=e.wasm.cwrap(dt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=g.computePool2DInfo(a.shape,i,o,1,u,l),d=c.filterHeight,h=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,y=c.padInfo.left,b=c.strideHeight,x=c.strideWidth,w=c.inChannels;if("channelsLast"!==c.dataFormat)throw new Error("wasm backend does not support dataFormat:'"+c.dataFormat+"'. Please use 'channelsLast'.");if(1!==c.dilationWidth||1!==c.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);const v=r.makeOutput(c.outShape,"float32"),k=r.dataIdMap.get(v.dataId).id;return vB(s,a.shape[0],a.shape[1],a.shape[2],d,h,p,f,m,y,b,x,w,k),v}};function IB(e){const{inputs:t,attrs:n}=e,{x:a}=t,{shape:s}=n,i=r.sizeFromShape(a.shape),o=r.inferFromImplicitShape(s,i);return r.assert(i===r.sizeFromShape(o),()=>`new shape: ${o}, old shape: ${a.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:o,dtype:a.dtype}}const NB={kernelName:sr,backendName:"wasm",kernelFunc:IB};let SB;const CB={kernelName:mt,backendName:"wasm",setupFunc:function(e){SB=e.wasm.cwrap(mt,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:s,b:i}=t,{transposeA:o,transposeB:u}=a;if("float32"!==s.dtype||"float32"!==i.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const l=s.shape.length,c=i.shape.length,d=o?s.shape[l-2]:s.shape[l-1],h=u?i.shape[c-1]:i.shape[c-2],p=o?s.shape[l-1]:s.shape[l-2],f=u?i.shape[c-2]:i.shape[c-1],m=s.shape.slice(0,-2),g=i.shape.slice(0,-2),y=r.sizeFromShape(m),b=r.sizeFromShape(g);r.assert(l>=2&&c>=2&&(y===b||1===y||1===b),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`);const x=(y>b?s.shape.slice(0,-2):i.shape.slice(0,-2)).concat([p,f]);r.assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${o} and transposeB=${u} must match.`);const w=u?[b,f,h]:[b,h,f],v=IB({inputs:{x:s},backend:n,attrs:{shape:o?[y,d,p]:[y,p,d]}}),k=IB({inputs:{x:i},backend:n,attrs:{shape:w}}),I=n.dataIdMap.get(v.dataId).id,N=n.dataIdMap.get(k.dataId).id,S=o?v.shape[2]:v.shape[1],C=u?k.shape[1]:k.shape[2],T=Math.max(y,b),E=n.makeOutput([T,S,C],v.dtype),_=n.dataIdMap.get(E.dataId).id,A=new Uint8Array(new Int32Array(v.shape).buffer),$=new Uint8Array(new Int32Array(k.shape).buffer);return SB(I,A,v.shape.length,N,$,k.shape.length,o,u,_),n.disposeData(v.dataId),n.disposeData(k.dataId),E.shape=x,E}};function TB(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}const EB={kernelName:xt,backendName:"wasm",kernelFunc:TB},_B=rB(wt);let AB;const $B={kernelName:vt,backendName:"wasm",setupFunc:function(e){AB=e.wasm.cwrap(vt,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(u.dataId).id;return AB(o,s,i,l),u}};function FB(e){const{inputs:t,backend:n}=e,a=r.parseAxisParam(e.attrs.axis,t[0].shape)[0];let s=g.computeOutShape(t.map(e=>e.shape),a);const i=t.filter(e=>r.sizeFromShape(e.shape)>0);if(1===i.length)return lB({inputs:{x:i[0]},backend:n});const o=n.makeOutput(s,t[0].dtype);if(0===r.sizeFromShape(s))return o;const u=i.map(e=>e.shape);if(g.assertParamsConsistent(u,a),"string"===i[0].dtype){const e=i.map(e=>{const t=r.sizeFromShape(e.shape.slice(a));return IB({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),u=e.map(e=>({vals:n.readSync(e.dataId),shape:e.shape}));s=g.computeOutShape(e.map(e=>e.shape),1);const l=sT(u,s,t[0].dtype,1===e[0].shape[0]),c=g.computeOutShape(i.map(e=>e.shape),a);return o.shape=c,n.dataIdMap.get(o.dataId).stringBytes=g.fromStringArrayToUint8(l),e.forEach(e=>n.disposeData(e.dataId)),o}const l=r.sizeFromShape(i[0].shape.slice(0,a));let c=0;const d=i.map(e=>{const t=r.sizeFromShape(e.shape.slice(a));return c+=t,t}),h=i.map(e=>n.typedArrayFromHeap(e)),p=n.typedArrayFromHeap(o);for(let r=0;r<l;r++){let e=r*c;for(let t=0;t<h.length;t++){const n=d[t],a=r*n,s=h[t].subarray(a,a+n);p.set(s,e),e+=n}}return o}const RB={kernelName:Nt,backendName:"wasm",kernelFunc:FB};let DB;const MB={kernelName:St,backendName:"wasm",setupFunc:function(e){DB=e.wasm.cwrap(St,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:d,dataFormat:h}=n,p=g.convertConv2DDataFormat(h),f=g.computeConv2DInfo(a.shape,s.shape,u,l,c,d,!1,p),m=f.filterHeight,y=f.filterWidth,b=f.padInfo.top,x=f.padInfo.right,w=f.padInfo.bottom,v=f.padInfo.left,k=f.dilationHeight,I=f.dilationWidth,N=f.strideHeight,S=f.strideWidth,C=f.inChannels,T=f.outChannels,E="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error("wasm backend Conv2D does not support dataFormat:'"+f.dataFormat+"'. Please use 'channelsLast'.");const _=r.makeOutput(f.outShape,"float32"),A=r.dataIdMap.get(_.dataId).id;return DB(i,a.shape[0],a.shape[1],a.shape[2],o,m,y,b,x,w,v,E,k,I,N,S,C,T,A),_}};let OB;const LB={kernelName:Tt,backendName:"wasm",setupFunc:function(e){OB=e.wasm.cwrap(Tt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{dy:s,filter:i}=n,{strides:o,pad:u,dataFormat:l,dimRoundingMode:c,inputShape:d}=a,h=g.convertConv2DDataFormat(l),p=g.computeConv2DInfo(d,i.shape,o,1,u,c,!1,h),{batchSize:f,filterHeight:m,filterWidth:y,inChannels:b,inHeight:x,inWidth:w,outChannels:v,outHeight:k,outWidth:I,strideHeight:N,strideWidth:S}=p,C=m-1-p.padInfo.top,T=y-1-p.padInfo.left,E="channelsLast"===p.dataFormat,_=r.computeStrides(p.inShape),A=r.computeStrides(s.shape),[$,F,R]=r.computeStrides(i.shape),D=_[0],M=E?_[1]:_[2],O=E?_[2]:1,L=E?1:_[1],z=A[0],P=E?A[1]:A[2],B=E?A[2]:1,W=E?1:A[1],V=t.makeOutput(p.inShape,"float32"),U=t.dataIdMap.get(V.dataId).id,G=t.dataIdMap.get(s.dataId).id,H=t.dataIdMap.get(i.dataId).id;return OB(G,H,f,m,y,x,w,b,k,I,v,N,S,C,T,$,F,R,D,M,O,L,z,P,B,W,U),V}},zB=rB($t);var PB;let BB;!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(PB||(PB={}));const WB={kernelName:Dt,backendName:"wasm",setupFunc:function(e){BB=e.wasm.cwrap(Dt,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[d,h]=i,p=[c,d,h,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=TB({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(l.dataId).id,x=t.makeOutput(p,"float32"),w=t.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return BB(g,y,b,c,v,d,h,PB[a],s,w),null!=f&&t.disposeData(f.dataId),x}};let VB;const UB={kernelName:Rt,backendName:"wasm",setupFunc:function(e){VB=e.wasm.cwrap(Rt,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:i,exclusive:o,reverse:u}=a,l=s.shape.length;r.assert("float32"===s.dtype||"int32"===s.dtype,()=>`cumsum does not support ${s.dtype} tensors in the WASM backend`);const c=g.getAxesPermutation([i],l);let d=s;null!==c&&(d=hB({inputs:{x:s},attrs:{perm:c},backend:n}));const h=g.getInnerMostAxes(1,l)[0];g.assertAxesAreInnerMostDims("cumsum",[h],l);const p=n.makeOutput(d.shape,d.dtype),f=d.shape[h],m=n.dataIdMap.get(d.dataId).id,y=n.dataIdMap.get(p.dataId).id;VB(m,o?1:0,u?1:0,f,y,QP[s.dtype]);let b=p;return null!==c&&(b=hB({inputs:{x:p},attrs:{perm:g.getUndoAxesPermutation(c)},backend:n}),n.disposeData(d.dataId),n.disposeData(p.dataId)),b}};let GB;const HB={kernelName:Ot,backendName:"wasm",setupFunc:function(e){GB=e.wasm.cwrap(Ot,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:s}=n,{blockSize:i,dataFormat:o}=a;r.assert(i>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+i);const u=s.shape[0],l=("NHWC"===o?s.shape[1]:s.shape[2])*i,c=("NHWC"===o?s.shape[2]:s.shape[3])*i,d=("NHWC"===o?s.shape[3]:s.shape[1])/(i*i),h="NHWC"===o?[u,l,c,d]:[u,d,l,c],p=t.makeOutput(h,"float32"),f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(r.computeStrides(s.shape)).buffer),g=new Uint8Array(new Int32Array(h).buffer),y=new Uint8Array(new Int32Array(r.computeStrides(h)).buffer),b=t.dataIdMap.get(p.dataId).id;return GB(f,i,"NHWC"===o?1:0,m,s.shape.length-1,g,y,h.length,b),p}};let jB;const qB={kernelName:Lt,backendName:"wasm",setupFunc:function(e){jB=e.wasm.cwrap(Lt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:d}=n,h=g.computeConv2DInfo(a.shape,s.shape,u,null==l?[1,1]:l,c,d,!0),p=h.filterHeight,f=h.filterWidth,m=h.padInfo.top,y=h.padInfo.right,b=h.padInfo.bottom,x=h.padInfo.left,w=h.dilationHeight,v=h.dilationWidth,k=h.strideHeight,I=h.strideWidth,N=h.inChannels,S=h.outChannels,C="SAME"===h.padInfo.type?1:0;if("channelsLast"!==h.dataFormat)throw new Error("wasm backend DepthwiseConv2dNative does not support dataFormat:'"+h.dataFormat+"'. Please use 'channelsLast'.");const T=r.makeOutput(h.outShape,"float32"),E=r.dataIdMap.get(T.dataId).id;return jB(i,a.shape[0],a.shape[1],a.shape[2],o,p,f,m,y,b,x,C,w,v,k,I,N,S,E),T}},KB=sB(Xt,!1,"bool"),XB=rB(Yt);function YB(e){const{inputs:t,attrs:n,backend:a}=e,{input:s}=t,{dim:i}=n,o=s.shape.length,u=s.shape.slice();let l=i;return i<0&&(r.assert(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+i+1),u.splice(l,0,1),IB({inputs:{x:s},backend:a,attrs:{shape:u}})}const ZB={kernelName:Zt,backendName:"wasm",kernelFunc:YB},JB={kernelName:en,backendName:"wasm",kernelFunc:function(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}};let QB;const eW={kernelName:tn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,u,l,c]=r.shape;return QB(s,o,u,l,c,i),a},setupFunc:function(e){QB=e.wasm.cwrap(tn,null,["number","number","number","number","number","number"])}},tW=rB(nn),nW=sB(rn,!1);let rW;const aW={kernelName:an,backendName:"wasm",setupFunc:function(e){rW=e.wasm.cwrap(an,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{varianceEpsilon:s}=a,{x:i,mean:o,variance:u,offset:l,scale:c}=n,d=t.dataIdMap.get(i.dataId).id,h=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(u.dataId).id,f=null!=l?t.dataIdMap.get(l.dataId).id:0,m=null!=c?t.dataIdMap.get(c.dataId).id:0,g=t.makeOutput(i.shape,i.dtype);if(0===r.sizeFromShape(i.shape))return g;const y=t.dataIdMap.get(g.dataId).id;return rW(d,h,p,f,m,s,y),g}};let sW;const iW={kernelName:ea,backendName:"wasm",setupFunc:function(e){sW=e.wasm.cwrap(ea,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=n,m=g.computeConv2DInfo(a.shape,s.shape,u,c,l,h),y=eB[p];if(null==y)throw new Error(p+" activation not yet supported for FusedConv2D in the wasm backend.");const b=r.dataIdMap.get(a.dataId).id,x=r.dataIdMap.get(s.dataId).id,w=m.outChannels;let v=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==w)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${w})`);v=e.id}const k=m.filterHeight,I=m.filterWidth,N=m.padInfo.top,S=m.padInfo.right,C=m.padInfo.bottom,T=m.padInfo.left,E=m.dilationHeight,_=m.dilationWidth,A=m.strideHeight,$=m.strideWidth,F=m.inChannels,R="SAME"===m.padInfo.type?1:0,D=m.batchSize,M=m.inHeight,O=m.inWidth;if("NHWC"!==d)throw new Error("wasm backend FusedConv2D does not support dataFormat:'"+d+"'. Please use 'NHWC'.");const L=r.makeOutput(m.outShape,"float32"),z=r.dataIdMap.get(L.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return sW(b,D,M,O,x,k,I,v,N,S,C,T,R,E,_,A,$,F,w,y,P,f||0,z),L}};let oW;const uW={kernelName:ta,backendName:"wasm",setupFunc:function(e){oW=e.wasm.cwrap(ta,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=n,m=g.computeConv2DInfo(a.shape,s.shape,u,c,l,h,!0),y=eB[p];if(null==y)throw new Error(p+" activation not yet supported for FusedDepthwiseConv2D in the wasm backend.");const b=r.dataIdMap.get(a.dataId).id,x=r.dataIdMap.get(s.dataId).id,w=m.outChannels;let v=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==w)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${w})`);v=e.id}const k=m.filterHeight,I=m.filterWidth,N=m.padInfo.top,S=m.padInfo.right,C=m.padInfo.bottom,T=m.padInfo.left,E=m.dilationHeight,_=m.dilationWidth,A=m.strideHeight,$=m.strideWidth,F=m.inChannels,R="SAME"===m.padInfo.type?1:0,D=m.batchSize,M=m.inHeight,O=m.inWidth;if("NHWC"!==d)throw new Error("wasm backend FusedDepthwiseConv2D does not support dataFormat:'"+d+"'. Please use 'NHWC'.");const L=r.makeOutput(m.outShape,"float32"),z=r.dataIdMap.get(L.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return oW(b,D,M,O,x,k,I,v,N,S,C,T,R,E,_,A,$,F,w,y,P,f||0,z),L}};let lW;const cW={kernelName:on,backendName:"wasm",setupFunc:function(e){lW=e.wasm.cwrap(on,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,u]=l.prepareAndValidate(r,a),c=t.makeOutput(s,r.dtype);if(0===i)return c;const d=a.shape,h=d[d.length-1],p=t.dataIdMap.get(r.dataId).id,f=t.dataIdMap.get(a.dataId).id,m=new Uint8Array(new Int32Array(u).buffer),g=t.dataIdMap.get(c.dataId).id;return lW(p,QP[r.dtype],f,i,h,o,m,g),c}};let dW;const hW={kernelName:sn,backendName:"wasm",setupFunc:function(e){dW=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:s,indices:i}=n,{axis:o,batchDims:u}=a,l=r.parseAxisParam(o,s.shape)[0],c=g.segment_util.collectGatherOpShapeInfo(s,i,l,u),d=IB({inputs:{x:s},attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]},backend:t}),h=r.sizeFromShape(i.shape),p=IB({inputs:{x:i},attrs:{shape:[c.batchSize,h/c.batchSize]},backend:t}),f=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize],m=t.makeOutput(f,s.dtype);if(0===r.sizeFromShape(s.shape))return m;const y=d.shape.length-1,b=t.dataIdMap.get(d.dataId).id,x=t.dataIdMap.get(p.dataId).id,w=t.dataIdMap.get(m.dataId).id,v=new Uint8Array(new Int32Array(r.computeStrides(d.shape)).buffer),k=new Uint8Array(new Int32Array(r.computeStrides(f)).buffer);return dW(b,QP[s.dtype],v,y,x,c.batchSize,k,w),t.disposeData(d.dataId),t.disposeData(p.dataId),m.shape=c.outputShape,m}},pW=sB(un,!1,"bool"),fW=sB(ln,!1,"bool");let mW;const gW={kernelName:gn,backendName:"wasm",setupFunc:function(e){mW=e.wasm.cwrap(gn,null,["number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:a}=e,s=a.dataIdMap.get(t.dataId).id,i=a.makeOutput(t.shape,t.dtype);if(0!==r.sizeFromShape(t.shape)){const e=a.dataIdMap.get(i.dataId).id;mW(s,n,e)}return i}},yW=sB(yn,!1,"bool"),bW=sB(bn,!1,"bool"),xW=rB(wn),wW=sB(kn,!1,"bool");let vW;const kW={kernelName:En,backendName:"wasm",setupFunc:function(e){vW=e.wasm.cwrap(En,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{reductionIndices:s,keepDims:i}=a,{x:o}=n;let u=t.dataIdMap.get(o.dataId).id,l=o;const{transposed:c,axes:d,originalAxes:h,inputWasTransposed:p}=fB(o,s,t);p&&(l=c,u=t.dataIdMap.get(c.dataId).id),g.assertAxesAreInnerMostDims("max",d,l.shape.length);const[f,m]=g.computeOutAndReduceShapes(l.shape,d),y=r.sizeFromShape(m),b=t.makeOutput(f,o.dtype);if(0!==r.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;vW(u,y,e)}if(p&&t.disposeData(c.dataId),i){const e=g.expandShapeToKeepDim(b.shape,h);b.shape=e}return b}},IW=sB(_n,!1);let NW;const SW={kernelName:An,backendName:"wasm",setupFunc:function(e){NW=e.wasm.cwrap(An,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=g.computePool2DInfo(a.shape,i,o,1,u,l),d=c.filterHeight,h=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,y=c.padInfo.left,b=c.dilationHeight,x=c.dilationWidth,w=c.strideHeight,v=c.strideWidth,k=c.inChannels,I=c.outChannels;if("channelsLast"!==c.dataFormat)throw new Error("wasm backend does not support dataFormat:'"+c.dataFormat+"'. Please use 'channelsLast'.");const N=r.makeOutput(c.outShape,"float32"),S=r.dataIdMap.get(N.dataId).id;return NW(s,a.shape[0],a.shape[1],a.shape[2],d,h,p,f,m,y,b,x,w,v,k,I,S),N}};let CW;const TW={kernelName:Mn,backendName:"wasm",setupFunc:function(e){CW=e.wasm.cwrap(Mn,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:s,keepDims:i}=a,{x:o}=n,u=t.dataIdMap.get(o.dataId).id;let l=u,c=o;const{transposed:d,axes:h,originalAxes:p,inputWasTransposed:f}=fB(o,s,t);let m=h;if(f){const e=t.dataIdMap.get(d.dataId).id;e!==u&&(c=d,l=e,m=g.getInnerMostAxes(m.length,c.shape.length))}g.assertAxesAreInnerMostDims("mean",m,c.shape.length);const[y,b]=g.computeOutAndReduceShapes(c.shape,m),x=r.sizeFromShape(b);let w=c;"float32"!==c.dtype&&(w=TB({backend:t,inputs:{x:c},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(w.dataId).id);const v=t.makeOutput(y,"float32");if(0!==r.sizeFromShape(c.shape)){const e=t.dataIdMap.get(v.dataId).id;CW(l,x,e)}if(f&&t.disposeData(d.dataId),i){const e=g.expandShapeToKeepDim(v.shape,p);v.shape=e}return"float32"!==c.dtype&&t.disposeData(w.dataId),v}};let EW;const _W={kernelName:On,backendName:"wasm",setupFunc:function(e){EW=e.wasm.cwrap(On,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:s,keepDims:i}=a,{x:o}=n,u=t.dataIdMap.get(o.dataId).id;let l=u,c=o;const{transposed:d,axes:h,originalAxes:p,inputWasTransposed:f}=fB(o,s,t);if(f){const e=t.dataIdMap.get(d.dataId).id;e!==u&&(c=d,l=e)}g.assertAxesAreInnerMostDims("min",h,c.shape.length);const[m,y]=g.computeOutAndReduceShapes(c.shape,h),b=r.sizeFromShape(y),x=t.makeOutput(m,c.dtype);if(0!==r.sizeFromShape(c.shape)){const e=t.dataIdMap.get(x.dataId).id;EW(l,b,e)}if(f&&t.disposeData(d.dataId),i){const e=g.expandShapeToKeepDim(x.shape,p);x.shape=e}return x}},AW=sB(Ln,!1);var $W;let FW;!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}($W||($W={}));const RW={kernelName:zn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map((e,n)=>e[0]+t.shape[n]+e[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map(e=>e[0]),d=r.map(e=>e[1]),h=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(d).buffer);return FW(i,l,t.shape.length,QP[t.dtype],h,p,$W[a],u),o},setupFunc:function(e){FW=e.wasm.cwrap(zn,null,["number","array","number","number","array","array","number","number"])}},DW=sB(Wn,!0),MW=rB(Vn);function OW(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}let LW;const zW={kernelName:Gn,backendName:"wasm",setupFunc:function(e){LW=e.wasm.cwrap(Gn,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,d=LW(l,c,s,a,i),{pSelectedIndices:h,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=OW(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([p],"int32",h)}};let PW;const BW={kernelName:Hn,backendName:"wasm",setupFunc:function(e){PW=e.wasm.cwrap(Hn,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=PW(c,d,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=OW(t,h);return t.wasm._free(m),[t.makeOutput([f],"int32",p),t.makeOutput([],"int32",g)]}};let WW;const VW={kernelName:jn,backendName:"wasm",setupFunc:function(e){WW=e.wasm.cwrap(jn,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=WW(c,d,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=OW(t,h);return t.wasm._free(g),[t.makeOutput([f],"int32",p),t.makeOutput([f],"float32",m)]}},UW=sB(Un,!1,"bool");let GW;const HW={kernelName:Kn,backendName:"wasm",setupFunc:function(e){GW=e.wasm.cwrap(Kn,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=n.makeOutput([...a.shape,s],"int32"),l=n.dataIdMap.get(u.dataId).id,c=n.dataIdMap.get(a.dataId);return GW(c.id,s,i,o,l),u}},jW={kernelName:qn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},qW={kernelName:Xn,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return YB({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,o=t[0].dtype;t.forEach(e=>{r.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.assert(o===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const u=[],l=FB({inputs:t.map(e=>{const t=YB({inputs:{input:e},backend:n,attrs:{dim:s}});return u.push(t),t}),backend:n,attrs:{axis:s}});return u.forEach(e=>n.disposeData(e.dataId)),l}};let KW;const XW={kernelName:Yn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map((e,n)=>e[0]+t.shape[n]+e[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map(e=>e[0]),d=r.map(e=>e[1]),h=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(d).buffer);return KW(i,l,t.shape.length,QP[t.dtype],h,p,a,u),o},setupFunc:function(e){KW=e.wasm.cwrap(Yn,null,["number","array","number","number","array","array","number","number"])}},YW=sB(Jn,!1);let ZW;const JW={kernelName:Qn,backendName:"wasm",setupFunc:function(e){ZW=e.wasm.cwrap(Qn,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=n.makeOutput(r.shape,"float32"),u=n.dataIdMap.get(o.dataId).id;return ZW(s,i,u),o}};let QW;const eV={kernelName:er,backendName:"wasm",setupFunc:function(e){QW=e.wasm.cwrap(er,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:s,keepDims:i}=a,{x:o}=n,u=t.dataIdMap.get(o.dataId).id;let l=u,c=o;const{transposed:d,axes:h,originalAxes:p,inputWasTransposed:f}=fB(o,s,t);let m=h;if(f){const e=t.dataIdMap.get(d.dataId).id;e!==u&&(c=d,l=e,m=g.getInnerMostAxes(m.length,c.shape.length))}g.assertAxesAreInnerMostDims("prod",m,c.shape.length);const[y,b]=g.computeOutAndReduceShapes(c.shape,m),x=r.sizeFromShape(b),w=t.makeOutput(y,c.dtype);if(0!==r.sizeFromShape(c.shape)){const e=t.dataIdMap.get(w.dataId).id;QW(l,x,QP[w.dtype],e)}if(f&&t.disposeData(d.dataId),i){const e=g.expandShapeToKeepDim(w.shape,p);w.shape=e}return w}},tV={kernelName:tr,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=iA(r,a,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u}},nV=sB(Gt,!0),rV=rB(ar),aV=rB(cr);let sV;const iV={kernelName:ur,backendName:"wasm",setupFunc:function(e){sV=e.wasm.cwrap(ur,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{images:s}=n,{alignCorners:i,halfPixelCenters:o,size:u}=a,[l,c]=u,[d,h,p,f]=s.shape,m=[d,l,c,f];let g,y=t.dataIdMap.get(s.dataId);"float32"!==y.dtype&&(g=TB({backend:t,inputs:{x:s},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(g.dataId));const b=y.id,x=t.makeOutput(m,"float32");if(0===r.sizeFromShape(s.shape))return x;const w=t.dataIdMap.get(x.dataId).id;return sV(b,d,h,p,f,l,c,i?1:0,o?1:0,w),null!=g&&t.disposeData(g.dataId),x}};let oV;const uV={kernelName:dr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{dims:i}=a,o=r.parseAxisParam(i,s.shape);if(0===s.shape.length)return lB({inputs:{x:s},backend:n});const u=n.makeOutput(s.shape,s.dtype),l=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(o).buffer),h=new Uint8Array(new Int32Array(s.shape).buffer);oV(l,d,o.length,h,s.shape.length,c);const p=IB({inputs:{x:u},attrs:{shape:s.shape},backend:n});return n.disposeData(u.dataId),p},setupFunc:function(e){oV=e.wasm.cwrap(dr,null,["number","array","number","array","number","number"])}};let lV;const cV={kernelName:Jr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(u.dataId).id,[d,h,p,f]=a.shape,[m,y]=g.getImageCenter(o,h,p),b="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],x=new Uint8Array(new Int32Array(b).buffer);return lV(l,d,h,p,f,s,m,y,x,b.length,c),u},setupFunc:function(e){lV=e.wasm.cwrap(Jr,null,["number","number","number","number","number","number","number","number","array","number","number"])}},dV=rB(hr);let hV,pV,fV,mV,gV,yV,bV,xV,wV,vV;function kV(e){const{inputs:{x:t},attrs:{begin:n,size:a},backend:s}=e,[i,o]=d.parseSliceParams(t,n,a),u=d.isSliceContinous(t.shape,i,o),l=s.readSync(t.dataId),c=s.makeOutput(o,t.dtype),h=r.computeStrides(t.shape),p=s.dataIdMap.get(c.dataId);if(u){const e=d.computeFlatOffset(i,h);return"string"===t.dtype?p.stringBytes=l.slice(e,e+r.sizeFromShape(o)):s.typedArrayFromHeap(c).set(l.subarray(e,e+r.sizeFromShape(o))),c}if("string"===t.dtype){const e=HC(l,i,o,t.shape,t.dtype);return p.stringBytes=e,c}const f=s.typedArrayFromHeap(c),m=t.shape.length;if(2===m)!function(e,t,n,r,a){let s=0;const i=r[0],o=r[1],u=i+a[0];for(let l=i;l<u;l++){const r=l*t+o;n.set(e.subarray(r,r+a[1]),s),s+=a[1]}}(l,h[0],f,i,o);else if(3===m)!function(e,t,n,r,a,s){let i=0;const o=a[0],u=a[1],l=a[2],c=o+s[0],d=u+s[1];for(let h=o;h<c;h++)for(let a=u;a<d;a++){const o=h*t+a*n+l;r.set(e.subarray(o,o+s[2]),i),i+=s[2]}}(l,h[0],h[1],f,i,o);else if(4===m)!function(e,t,n,r,a,s,i){let o=0;const u=s[0],l=s[1],c=s[2],d=u+i[0],h=l+i[1],p=c+i[2],f=s[3];for(let m=u;m<d;m++)for(let s=l;s<h;s++)for(let u=c;u<p;u++){const l=m*t+s*n+u*r+f;a.set(e.subarray(l,l+i[3]),o),o+=i[3]}}(l,h[0],h[1],h[2],f,i,o);else{const e=HC(l,i,o,t.shape,t.dtype);f.set(e)}return c}const IV=[aB,iB,uB,gB,bB,wB,kB,CB,EB,_B,$B,RB,MB,LB,zB,WB,UB,HB,qB,KB,XB,ZB,JB,eW,tW,nW,nB,aW,iW,uW,cW,hW,pW,fW,cB,gW,yW,bW,xW,wW,kW,IW,SW,TW,_W,AW,RW,DW,MW,zW,BW,VW,UW,HW,jW,qW,XW,YW,JW,eV,tV,nV,rV,aV,NB,iV,uV,cV,rB(pr),dV,{kernelName:fr,backendName:"wasm",setupFunc:function(e){hV=e.wasm.cwrap(fr,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{indices:s,updates:i}=n,{shape:o}=a,u=t.makeOutput(o,i.dtype);if(0===r.sizeFromShape(o))return u;const{sliceRank:l,numUpdates:d,sliceSize:h,strides:p,outputSize:f}=c.calculateShapes(i,s,o),m=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(i.dataId).id,y=new Uint8Array(new Int32Array(p).buffer),b=t.dataIdMap.get(u.dataId).id;return hV(m,g,QP[i.dtype],l,d,h,y,f,b),u}},{kernelName:mr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:s,e:i}=t,o=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(s.dataId).id,l=n.dataIdMap.get(i.dataId).id,c=n.makeOutput(s.shape,s.dtype),d=n.dataIdMap.get(c.dataId).id,h=a.shape.length,p=0===h||h>1||1===s.shape.length?1:r.sizeFromShape(s.shape.slice(1));return pV(o,u,l,p,d),c},setupFunc:function(e){pV=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},{kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){fV=e.wasm.cwrap(vr,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id;return 0===r.sizeFromShape(s.shape)||fV(a,i),s}},rB(br),{kernelName:yr,backendName:"wasm",kernelFunc:kV},{kernelName:Tr,backendName:"wasm",setupFunc:function(e){mV=e.wasm.cwrap(Tr,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:a}}=e,s=t.dataIdMap.get(n.dataId).id,i=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(i.dataId).id,u=n.shape[a],l=r.sizeFromShape(n.shape)/u;return 0===r.sizeFromShape(i.shape)||mV(s,o,u,l),i}},{kernelName:Cr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:s}=t,{numOrSizeSplits:i,axis:o}=n,u=r.parseAxisParam(o,s.shape)[0],l=g.prepareSplitSize(s,i,u),c=new Array(s.shape.length).fill(0),d=s.shape.slice();return l.map(e=>{const t=[...d];t[u]=e;const n=kV({inputs:{x:s},attrs:{begin:c,size:t},backend:a});return c[u]+=e,n})}},rB(Ir),rB(Dr),sB(Rr,!0),{kernelName:Yr,backendName:"wasm",setupFunc:function(e){gV=e.wasm.cwrap(Yr,null,["number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(o.dataId).id;return gV(i,a,u),o}},{kernelName:Mr,backendName:"wasm",setupFunc:function(e){yV=e.wasm.cwrap(Mr,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:s}=n;let{begin:i,end:o,strides:u}=a;null==u&&(u=new Array(i.length));const{beginMask:l,endMask:c,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=a,f=g.slice_util.maskToAxes(d);if(f.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==d&&0!==h)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==d&&0!==p)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const m=s.shape.length-i.length,y=g.slice_util.maskToAxes(h),b=s.shape.slice();y.forEach(e=>{i[e]=0,o[e]=1,b.splice(e,0,1)});const x=IB({inputs:{x:s},attrs:{shape:b},backend:t}),{begin:w,end:v,strides:k}=g.slice_util.getNormalizedAxes(x.shape,f,m,i,o,u,l,c,d);i=w,o=v,u=k;const I=g.slice_util.maskToAxes(p);I.forEach(e=>{o[e]=i[e]+1,u[e]=1});const N=g.slice_util.computeOutShape(i,o,u),S=N.filter((e,t)=>-1===I.indexOf(t));if(u.every(e=>1===e)){const e=kV({inputs:{x:x},attrs:{begin:i,size:N},backend:t});t.disposeData(x.dataId);const n=IB({inputs:{x:e},attrs:{shape:S},backend:t});return t.disposeData(e.dataId),n}const C=t.makeOutput(S,"float32");if(!S.some(e=>0===e)){const e=t.dataIdMap.get(x.dataId).id,n=new Uint8Array(new Int32Array(r.computeStrides(x.shape)).buffer),a=new Uint8Array(new Int32Array(i).buffer),s=new Uint8Array(new Int32Array(o).buffer),l=new Uint8Array(new Int32Array(u).buffer),c=new Uint8Array(new Int32Array(S).buffer),d=new Uint8Array(new Int32Array(r.computeStrides(S)).buffer),h=t.dataIdMap.get(C.dataId).id;yV(e,n,x.shape.length,a,s,l,c,d,S.length,h)}t.disposeData(x.dataId);const T=IB({inputs:{x:C},attrs:{shape:S},backend:t});return t.disposeData(C.dataId),T}},sB(Pr,!0),{kernelName:Nr,backendName:"wasm",setupFunc:function(e){bV=e.wasm.cwrap(Nr,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:s,keepDims:i}=a,{x:o}=n,u=t.dataIdMap.get(o.dataId).id;let l=u,c=o;const{transposed:d,axes:h,originalAxes:p,inputWasTransposed:f}=fB(o,s,t);let m=h;if(f){const e=t.dataIdMap.get(d.dataId).id;e!==u&&(c=d,l=e,m=g.getInnerMostAxes(m.length,c.shape.length))}g.assertAxesAreInnerMostDims("sum",m,c.shape.length);const[y,b]=g.computeOutAndReduceShapes(c.shape,m),x=r.sizeFromShape(b),w=t.makeOutput(y,c.dtype);if(0!==r.sizeFromShape(c.shape)){const e=t.dataIdMap.get(w.dataId).id;bV(l,x,e)}if(f&&t.disposeData(d.dataId),i){const e=g.expandShapeToKeepDim(w.shape,p);w.shape=e}return w}},rB(Br),rB(Wr),{kernelName:Vr,backendName:"wasm",setupFunc:function(e){xV=e.wasm.cwrap(Vr,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let h=0;h<o.length;h++)o[h]=a.shape[h]*i[h];const u=new Uint8Array(new Int32Array(a.shape).buffer),l=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,a.dtype),d=n.dataIdMap.get(c.dataId).id;return xV(s,u,a.shape.length,l,o.length,QP[c.dtype],d),c}},{kernelName:Ur,backendName:"wasm",setupFunc:function(e){wV=e.wasm.cwrap(Ur,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),u=r.shape.slice();u[u.length-1]=a;const l=t.makeOutput(u,r.dtype),c=t.dataIdMap.get(l.dataId).id,d=t.makeOutput(u,"int32"),h=t.dataIdMap.get(d.dataId).id;return wV(i,o,r.shape.length,QP[r.dtype],a,s,c,h),[l,d]}},{kernelName:Gr,backendName:"wasm",setupFunc:function(e){vV=e.wasm.cwrap(Gr,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{image:s,transforms:i}=n,{interpolation:o,fillMode:u,fillValue:l,outputShape:c}=a,[d,h,p,f]=s.shape,[m,g]=null!=c?c:[h,p],y=[d,m,g,f],b=new Uint8Array(new Int32Array(r.computeStrides(s.shape)).buffer),x=t.makeOutput(y,s.dtype),w=t.dataIdMap.get(x.dataId).id,v=t.dataIdMap.get(s.dataId).id,k=t.dataIdMap.get(i.dataId).id,I="nearest"===o?1:2;let N;switch(u){case"constant":N=1;break;case"reflect":N=2;break;case"wrap":N=3;break;case"nearest":N=4;break;default:N=1}return vV(v,k,i.shape[0]>1,d,m,g,f,p,h,b,s.shape.length-1,I,N,l,w),x}},pB,{kernelName:qr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape[s],o=a.shape.length,u=new Array(o-1);let l=0;for(let p=0;p<o;p++)p!==s&&(u[l++]=a.shape[p]);const c=new Array(i),d=new Array(o).fill(0),h=a.shape.slice();h[s]=1;for(let p=0;p<c.length;p++)d[s]=p,c[p]=kV({inputs:{x:a},attrs:{begin:d,size:h},backend:n});return c.map(({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:u}))}},{kernelName:Xr,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const AH of IV)oa(AH);const NV=je();NV.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))),NV.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(NV.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var SV=n("VYYE"),CV=n.n(SV),TV=n("0I5M"),EV=n.n(TV);class _V extends X{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new K(this,Mo())}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=r.now();return e(),{kernelMs:r.now()-t}}move(e,t,n,a,s){const i=this.dataIdNextNumber++;if("string"===a)return void this.dataIdMap.set(e,{id:i,stringBytes:t,shape:n,dtype:a,memoryOffset:null,refCount:s});const o=r.sizeFromShape(n),u=o*r.bytesPerElement(a),l=this.wasm._malloc(u);this.dataIdMap.set(e,{id:i,memoryOffset:l,shape:n,dtype:a,refCount:s}),this.wasm.tfjs.registerTensor(i,o,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,u),l)}async read(e){return this.readSync(e)}readSync(e){const{memoryOffset:t,dtype:n,shape:a,stringBytes:s}=this.dataIdMap.get(e);return"string"===n?s:function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error("Unknown dtype "+t)}}(this.wasm.HEAPU8.slice(t,t+r.sizeFromShape(a)*r.bytesPerElement(n)).buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let a;if(null==n)a=this.write(null,e,t);else{const s=this.dataIdNextNumber++;a={id:s},this.dataIdMap.set(a,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});const i=r.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,i,n)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const a=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),i=r.sizeFromShape(e);switch(t){case"float32":return new Float32Array(a,s,i);case"int32":return new Int32Array(a,s,i);case"bool":return new Uint8Array(a,s,i);default:throw new Error("Unknown dtype "+t)}}}function AV(e,t,n){if(null!=FV)return FV;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=DV&&null!=DV[r]?DV[r]:n+r}const $V=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let FV=null,RV=null,DV={},MV=!1,OV=!1;function LV(e,t=!1){if(Ro("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),MV)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");FV=e,OV=t}function zV(e,t=!1){if(MV)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)RV=e;else{DV=e;const t=$V.filter(e=>null==DV[e]);if(t.length>0)throw new Error("There were no entries found for the following binaries: "+t.join(",")+". Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.")}OV=t}const PV="3.7.0";Ko("wasm",async()=>{const{wasm:e}=await async function(){const[e,t]=await Promise.all([je().getAsync("WASM_HAS_SIMD_SUPPORT"),je().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,a)=>{const s={};var i;s.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?AV(e,t,null!=RV?RV:r):r+n},OV&&(s.instantiateWasm=(i=AV(e,t,null!=RV?RV:""),(e,t)=>(r.fetch(i,{credentials:"same-origin"}).then(n=>{n.ok||e.env.a(`failed to load wasm binary file at '${i}'`),n.arrayBuffer().then(n=>{WebAssembly.instantiate(n,e).then(e=>{t(e.instance,e.module)})})}),{})));let o,u=!1;s.onAbort=()=>{u||MV||(MV=!0,a({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==FV?(s.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+CV.a.toString()],{type:"text/javascript"}),o=CV()(s)):o=EV()(s),o.then(e=>{u=!0,MV=!1,e.tfjs={init:e.cwrap("init",null,[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})})})}();return new _V(e)},2);var BV=Object.defineProperty,WV=Object.getOwnPropertyDescriptor,VV=Object.getOwnPropertyNames,UV=Object.prototype.hasOwnProperty,GV=e=>BV(e,"__esModule",{value:!0}),HV=(e,t)=>{for(var n in GV(e),t)BV(e,n,{get:t[n],enumerable:!0})},jV=(e,t,n)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let r of VV(t))UV.call(e,r)||"default"===r||BV(e,r,{get:()=>t[r],enumerable:!(n=WV(t,r))||n.enumerable});return e},qV={};function KV(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach(({x:n,y:r},a)=>{const s=t[a];e.moveTo(s.x,s.y),e.lineTo(n,r)}),n){const n=t[t.length-1],r=t[0];if(!n||!r)return;e.moveTo(n.x,n.y),e.lineTo(r.x,r.y)}e.stroke()}GV(qV),jV(qV,H),jV(qV,j),HV({},{AnchorPosition:()=>$U,DrawBox:()=>PU,DrawBoxOptions:()=>zU,DrawFaceLandmarks:()=>NG,DrawFaceLandmarksOptions:()=>IG,DrawTextField:()=>LU,DrawTextFieldOptions:()=>OU,drawContour:()=>KV,drawDetections:()=>BU,drawFaceExpressions:()=>wG,drawFaceLandmarks:()=>SG}),HV({},{computeReshapedDimensions:()=>sU,getCenterPoint:()=>iU,isDimensions:()=>aU,isEven:()=>nU,isFloat:()=>tU,isTensor:()=>YV,isTensor1D:()=>ZV,isTensor2D:()=>JV,isTensor3D:()=>QV,isTensor4D:()=>eU,isValidNumber:()=>uU,isValidProbablitiy:()=>lU,range:()=>oU,round:()=>rU});var XV=class{constructor(e,t){if(!uU(e)||!uU(t))throw new Error("Dimensions.constructor - expected width and height to be valid numbers, instead have "+JSON.stringify({width:e,height:t}));this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new XV(1/this.width,1/this.height)}};function YV(e,t){return e instanceof qV.Tensor&&e.shape.length===t}function ZV(e){return YV(e,1)}function JV(e){return YV(e,2)}function QV(e){return YV(e,3)}function eU(e){return YV(e,4)}function tU(e){return e%1!=0}function nU(e){return e%2==0}function rU(e,t=2){const n=10**t;return Math.floor(e*n)/n}function aU(e){return e&&e.width&&e.height}function sU({width:e,height:t},n){const r=n/Math.max(t,e);return new XV(Math.round(e*r),Math.round(t*r))}function iU(e){return e.reduce((e,t)=>e.add(t),new cU(0,0)).div(new cU(e.length,e.length))}function oU(e,t,n){return Array(e).fill(0).map((e,r)=>t+r*n)}function uU(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||0===e}function lU(e){return uU(e)&&e>=0&&e<=1}var cU=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new cU(this.x+e.x,this.y+e.y)}sub(e){return new cU(this.x-e.x,this.y-e.y)}mul(e){return new cU(this.x*e.x,this.y*e.y)}div(e){return new cU(this.x/e.x,this.y/e.y)}abs(){return new cU(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new cU(Math.floor(this.x),Math.floor(this.y))}},dU=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(uU)}static assertIsValidBox(e,t,n=!1){if(!dU.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e,t=!0){const n=e||{},r=[n.left,n.top,n.right,n.bottom].every(uU),a=[n.x,n.y,n.width,n.height].every(uU);if(!a&&!r)throw new Error("Box.constructor - expected box to be IBoundingBox | IRect, instead have "+JSON.stringify(n));const[s,i,o,u]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];dU.assertIsValidBox({x:s,y:i,width:o,height:u},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=u}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new cU(this.left,this.top)}get topRight(){return new cU(this.right,this.top)}get bottomLeft(){return new cU(this.left,this.bottom)}get bottomRight(){return new cU(this.right,this.bottom)}round(){const[e,t,n,r]=[this.x,this.y,this.width,this.height].map(e=>Math.round(e));return new dU({x:e,y:t,width:n,height:r})}floor(){const[e,t,n,r]=[this.x,this.y,this.width,this.height].map(e=>Math.floor(e));return new dU({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this;const a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new dU({x:e,y:t,width:n,height:r})}rescale(e){const t=aU(e)?e.width:e,n=aU(e)?e.height:e;return new dU({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){const[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new dU({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){const{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),u=s-o,l=Math.min(a-i,e-i),c=Math.min(u,t-o);return new dU({x:i,y:o,width:l,height:c}).floor()}shift(e,t){const{width:n,height:r}=this;return new dU({x:this.x+e,y:this.y+t,width:n,height:r})}padAtBorders(e,t){const n=this.width+1,r=this.height+1;let a=n,s=r,i=this.left,o=this.top,u=this.right,l=this.bottom;return u>t&&(a=-u+t+n,u=t),l>e&&(s=-l+e+r,l=e),i<1&&(s=2-i,i=1),o<1&&(s=2-o,o=1),{dy:1,edy:s,dx:1,edx:a,y:o,ey:l,x:i,ex:u,w:n,h:r}}calibrate(e){return new dU({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},hU=class extends dU{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},pU=class{constructor(e,t,n,r,a){this._imageDims=new XV(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new dU(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new dU(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new pU(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},fU=class extends pU{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){const{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new fU(n,r,a)}};function mU(e,t,n=!0){const r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left))*Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top));return n?r/(e.area+t.area-r):r/Math.min(e.area,t.area)}function gU(e,t){return qV.tidy(()=>{const[n,r,a]=t,s=qV.fill([...e.shape.slice(0,3),1],n,"float32"),i=qV.fill([...e.shape.slice(0,3),1],r,"float32"),o=qV.fill([...e.shape.slice(0,3),1],a,"float32"),u=qV.concat([s,i,o],3);return qV.sub(e,u)})}function yU(e){return 1/(1+Math.exp(-e))}var bU,xU=class extends dU{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},wU=class{constructor(e,t,n=new cU(0,0)){const{width:r,height:a}=t;this._imgDims=new XV(r,a),this._shift=n,this._positions=e.map(e=>e.mul(new cU(r,a)).add(n))}get shift(){return new cU(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(e=>e.sub(this._shift).div(new cU(this.imageWidth,this.imageHeight)))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new cU(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){const n=e instanceof fU?e.box.floor():new dU(e);return this.shiftBy(n.x,n.y).align(null,t)}const{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){const e=this.getRefPointsForAlignment(),[t,n,r]=e,a=e=>r.sub(e).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/.45),o=iU(e),u=Math.floor(Math.max(0,o.x-.5*i)),l=Math.floor(Math.max(0,o.y-.43*i));return new xU(u,l,Math.min(i,this.imageWidth+u),Math.min(i,this.imageHeight+l))}alignMinBbox(e){const t=function(e){const t=e.map(e=>e.x),n=e.map(e=>e.y),r=t.reduce((e,t)=>t<e?t:e,1/0),a=n.reduce((e,t)=>t<e?t:e,1/0),s=t.reduce((e,t)=>e<t?t:e,0),i=n.reduce((e,t)=>e<t?t:e,0);return new hU(r,a,s,i)}(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},vU=class extends wU{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(iU)}};function kU(e){return e.detection instanceof fU}function IU(e,t){return{...e,detection:t}}function NU(){const e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D:CanvasRenderingContext2D,Image:HTMLImageElement,ImageData:ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function SU(e){let t="";if(!e)try{"fs",e=n("AfPn")("fs")}catch(_H){t=_H.toString()}return{readFile:e?t=>new Promise((n,r)=>{e.readFile(t,(e,t)=>e?r(e):n(t))}):()=>{throw new Error("readFile - failed to require fs in nodejs environment with error: "+t)}}}function CU(){const e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=global.Video||global.HTMLVideoElement,r=global.fetch,a=SU();return{Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},createImageElement:()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},createVideoElement:()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},fetch:r,...a}}function TU(){return"object"==typeof window&&"undefined"!=typeof document&&"undefined"!=typeof HTMLImageElement&&"undefined"!=typeof HTMLCanvasElement&&"undefined"!=typeof HTMLVideoElement&&"undefined"!=typeof ImageData&&"undefined"!=typeof CanvasRenderingContext2D}function EU(){return"object"==typeof global&&void 0!==e&&"undefined"!=typeof process&&!!process.version}function _U(e){bU=e}function AU(){return TU()?_U(NU()):EU()?_U(CU()):null}var $U,FU,RU={getEnv:function(){if(!bU)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return bU},setEnv:_U,initialize:AU,createBrowserEnv:NU,createFileSystem:SU,createNodejsEnv:CU,monkeyPatch:function(e){if(bU||AU(),!bU)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");const{Canvas:t=bU.Canvas,Image:n=bU.Image}=e;bU.Canvas=t,bU.Image=n,bU.createCanvasElement=e.createCanvasElement||(()=>new t),bU.createImageElement=e.createImageElement||(()=>new n),bU.ImageData=e.ImageData||bU.ImageData,bU.Video=e.Video||bU.Video,bU.fetch=e.fetch||bU.fetch,bU.readFile=e.readFile||bU.readFile},isBrowser:TU,isNodejs:EU};function DU(e){return RU.isNodejs()||"string"!=typeof e?e:document.getElementById(e)}function MU(e){const{Canvas:t,CanvasRenderingContext2D:n}=RU.getEnv();if(e instanceof n)return e;const r=DU(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");const a=r.getContext("2d");if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}AU(),(FU=$U||($U={})).TOP_LEFT="TOP_LEFT",FU.TOP_RIGHT="TOP_RIGHT",FU.BOTTOM_LEFT="BOTTOM_LEFT",FU.BOTTOM_RIGHT="BOTTOM_RIGHT";var OU=class{constructor(e={}){const{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||$U.TOP_LEFT,this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},LU=class{constructor(e,t,n={}){this.text="string"==typeof e?[e]:e instanceof LU?e.text:e,this.anchor=t,this.options=new OU(n)}measureWidth(e){const{padding:t}=this.options;return this.text.map(t=>e.measureText(t).width).reduce((e,t)=>e<t?t:e,0)+2*t}measureHeight(){const{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){const{anchorPosition:n}=this.options,r=n===$U.BOTTOM_RIGHT||n===$U.TOP_RIGHT,a=n===$U.BOTTOM_LEFT||n===$U.BOTTOM_RIGHT,s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,u=a?this.anchor.y-i:this.anchor.y;if(t){const{width:e,height:n}=t;return{x:Math.max(Math.min(o,e-s),0),y:Math.max(Math.min(u,n-i),0)}}return{x:o,y:u}}draw(e){const t=DU(e),n=MU(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;const u=this.measureWidth(n),l=this.measureHeight();n.fillStyle=r;const c=this.getUpperLeft(n,t);n.fillRect(c.x,c.y,u,l),n.fillStyle=a,this.text.forEach((e,t)=>{n.fillText(e,o+c.x,o+c.y+(t+1)*s)})}},zU=class{constructor(e={}){const{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r,this.drawLabelOptions=new OU({anchorPosition:$U.BOTTOM_LEFT,backgroundColor:this.boxColor,...a})}},PU=class{constructor(e,t={}){this.box=new dU(e),this.options=new zU(t)}draw(e){const t=MU(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);const{label:u}=this.options;u&&new LU([u],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function BU(e,t){(Array.isArray(t)?t:[t]).forEach(t=>{const n=t instanceof fU?t.score:kU(t)?t.detection.score:void 0,r=t instanceof fU?t.box:kU(t)?t.detection.box:new dU(t),a=n?""+rU(n):void 0;new PU(r,{label:a}).draw(e)})}function WU(e){const{Image:t,Video:n}=RU.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function VU(e){const{Image:t,Video:n}=RU.getEnv();return e instanceof t?new XV(e.naturalWidth,e.naturalHeight):e instanceof n?new XV(e.videoWidth,e.videoHeight):new XV(e.width,e.height)}function UU({width:e,height:t}){const{createCanvasElement:n}=RU.getEnv(),r=n();return r.width=e,r.height=t,r}function GU(e,t){const{ImageData:n}=RU.getEnv();if(!(e instanceof n||WU(e)))throw new Error("createCanvasFromMedia - media has not finished loading yet");const{width:r,height:a}=t||VU(e),s=UU({width:r,height:a});return e instanceof n?MU(s).putImageData(e,0,0):MU(s).drawImage(e,0,0,r,a),s}function HU(e){const{Image:t,Canvas:n,Video:r}=RU.getEnv();return e instanceof t||e instanceof n||e instanceof r}var jU=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],!Array.isArray(e))throw new Error("NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have "+e);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach((e,t)=>{if(QV(e))return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape);if(eU(e)){const n=e.shape[0];if(1!==n)throw new Error(`NetInput - tf.Tensor4D with batchSize ${n} passed, but not supported in input array`);return this._imageTensors[t]=e,void(this._inputDimensions[t]=e.shape.slice(1))}const n=e instanceof RU.getEnv().Canvas?e:GU(e);this._canvases[t]=n,this._inputDimensions[t]=[n.height,n.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return oU(this.batchSize,0,1).map((e,t)=>this.getReshapedInputDimensions(t))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");return sU({width:this.getInputWidth(e),height:this.getInputHeight(e)},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,qV.tidy(()=>{const n=oU(this.batchSize,0,1).map(n=>{const r=this.getInput(n);if(r instanceof qV.Tensor){let n=eU(r)?r:qV.expandDims(r);return n=function(e,t=!1){return qV.tidy(()=>{const[n,r]=e.shape.slice(1);if(n===r)return e;const a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=t=>{const n=e.shape.slice();return n[i]=t,qV.fill(n,0,"float32")},u=o(s),l=a-u.shape[i],c=[t&&l?o(l):null,e,u].filter(e=>!!e).map(e=>qV.cast(e,"float32"));return qV.concat(c,i)})}(n,t),n.shape[1]===e&&n.shape[2]===e||(n=qV.image.resizeBilinear(n,[e,e],!1,!1)),n.as3D(e,e,3)}if(r instanceof RU.getEnv().Canvas)return qV.browser.fromPixels(function(e,t,n=!1){const{Image:r,Canvas:a}=RU.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return UU({width:1,height:1});const s=VU(e),i=t/Math.max(s.height,s.width),o=i*s.width,u=i*s.height,l=UU({width:t,height:t}),c=e instanceof a?e:GU(e),d=Math.abs(o-u)/2,h=n&&o<u?d:0,p=n&&u<o?d:0;return c.width>0&&c.height>0&&MU(l).drawImage(c,h,p,o,u),l}(r,e,t));throw new Error(`toBatchTensor - at batchIdx ${n}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${r}`)});return qV.stack(n.map(e=>qV.cast(e,"float32"))).as4D(this.batchSize,e,e,3)})}};async function qU(e){if(e instanceof jU)return e;const t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");const n=t=>Array.isArray(e)?` at input index ${t}:`:"",r=t.map(DU);return r.forEach((e,r)=>{if(!HU(e)&&!QV(e)&&!eU(e)){if("string"==typeof t[r])throw new Error(`toNetInput -${n(r)} string passed, but could not resolve HTMLElement for element id ${t[r]}`);throw new Error(`toNetInput -${n(r)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`)}if(eU(e)){const t=e.shape[0];if(1!==t)throw new Error(`toNetInput -${n(r)} tf.Tensor4D with batchSize ${t} passed, but not supported in input array`)}}),await Promise.all(r.map(e=>{return HU(e)&&(t=e,new Promise((e,n)=>{if(t instanceof RU.getEnv().Canvas||WU(t))return e(null);function r(e){e.currentTarget&&(e.currentTarget.removeEventListener("load",a),e.currentTarget.removeEventListener("error",r),n(e))}function a(t){t.currentTarget&&(t.currentTarget.removeEventListener("load",a),t.currentTarget.removeEventListener("error",r),e(t))}t.addEventListener("load",a),t.addEventListener("error",r)}));var t})),new jU(r,Array.isArray(e))}async function KU(e,t){const{Canvas:n}=RU.getEnv();let r=e;if(!(e instanceof n)){const t=await qU(e);if(t.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");const a=t.getInput(0);r=a instanceof n?a:await async function(e,t){const n=RU.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(eU(e)?1:0),i=qV.tidy(()=>e.as3D(r,a,s).toInt());return await qV.browser.toPixels(i,n),i.dispose(),n}(a)}const a=MU(r);return t.map(e=>e instanceof fU?e.forSize(r.width,r.height).box.floor():e).map(e=>e.clipAtImageBorders(r.width,r.height)).map(({x:e,y:t,width:n,height:r})=>{const s=UU({width:n,height:r});return n>0&&r>0&&MU(s).putImageData(a.getImageData(e,t,n,r),0,0),s})}async function XU(e,t){if(!QV(e)&&!eU(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(eU(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return qV.tidy(()=>{const[n,r,a]=e.shape.slice(eU(e)?1:0);return t.map(e=>e instanceof fU?e.forSize(r,n).box:e).map(e=>e.clipAtImageBorders(r,n)).map(({x:t,y:s,width:i,height:o})=>qV.slice3d(e.as3D(n,r,a),[s,t,0],[o,i,a]))})}function YU(e,t){const n=t+"-weights_manifest.json";if(!e)return{modelBaseUri:"",manifestUri:n};if("/"===e)return{modelBaseUri:"/",manifestUri:"/"+n};const r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"",a=(e=e.replace(r,"")).split("/").filter(e=>e),s=e.endsWith(".json")?a[a.length-1]:n;let i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?"/"+i:i,{modelBaseUri:i,manifestUri:"/"===i?"/"+s:`${i}/${s}`}}var ZU=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){const{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){const{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map(({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)}))}getTrainableParams(){return this.getParamList().filter(e=>e.tensor instanceof qV.Variable)}getFrozenParams(){return this.getParamList().filter(e=>!(e.tensor instanceof qV.Variable))}variable(){this.getFrozenParams().forEach(({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())})}freeze(){this.getTrainableParams().forEach(({path:e,tensor:t})=>{const n=qV.tensor(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)})}dispose(e=!0){this.getParamList().forEach(t=>{if(e&&t.tensor.isDisposed)throw new Error("param tensor has already been disposed for path "+t.path);t.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:e})=>Array.from(e.dataSync())).reduce((e,t)=>e.concat(t)))}async load(e){e instanceof Float32Array?this.extractWeights(e):await this.loadFromUri(e)}async loadFromUri(e){if(e&&"string"!=typeof e)throw new Error(this._name+".loadFromUri - expected model uri");const t=await async function(e,t){const{manifestUri:n,modelBaseUri:r}=YU(e,t),a=await async function(e){return(await async function(e,t){const{fetch:n}=RU.getEnv(),r=await n(e,void 0);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}(e)).json()}(n);return qV.io.loadWeights(a,r)}(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&"string"!=typeof e)throw new Error(this._name+".loadFromDisk - expected model file path");const{readFile:t}=RU.getEnv(),{manifestUri:n,modelBaseUri:r}=YU(e,this.getDefaultModelName()),a=qV.io.weightsLoaderFactory(e=>Promise.all(e.map(e=>t(e).then(e=>e.buffer)))),s=JSON.parse((await t(n)).toString()),i=await a(s,r);this.loadFromWeightMap(i)}loadFromWeightMap(e){const{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){const{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");const t=e.split("/").reduce((t,n)=>{if(!t.nextObj.hasOwnProperty(n))throw new Error(`traversePropertyPath - object does not have property ${n}, for path ${e}`);return{obj:t.nextObj,objProp:n,nextObj:t.nextObj[n]}},{nextObj:this.params}),{obj:n,objProp:r}=t;if(!(n&&r&&n[r]instanceof qV.Tensor))throw new Error("traversePropertyPath - parameter is not a tensor, for path "+e);return{obj:n,objProp:r}}};function JU(e,t,n){return qV.tidy(()=>{let r=qV.separableConv2d(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=qV.add(r,t.bias),r})}function QU(e,t,n=!1){return qV.tidy(()=>{const r=qV.relu(n?qV.add(qV.conv2d(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):JU(e,t.conv0,[2,2])),a=JU(r,t.conv1,[1,1]),s=JU(qV.relu(qV.add(r,a)),t.conv2,[1,1]);return qV.relu(qV.add(r,qV.add(a,s)))})}function eG(e,t,n=!1,r=!0){return qV.tidy(()=>{const a=qV.relu(n?qV.add(qV.conv2d(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):JU(e,t.conv0,r?[2,2]:[1,1])),s=JU(a,t.conv1,[1,1]),i=JU(qV.relu(qV.add(a,s)),t.conv2,[1,1]),o=JU(qV.relu(qV.add(a,qV.add(s,i))),t.conv3,[1,1]);return qV.relu(qV.add(a,qV.add(s,qV.add(i,o))))})}function tG(e,t,n="same",r=!1){return qV.tidy(()=>{const a=qV.add(qV.conv2d(e,t.filters,[1,1],n),t.bias);return r?qV.relu(a):a})}function nG(e,t){Object.keys(e).forEach(n=>{t.some(e=>e.originalPath===n)||e[n].dispose()})}function rG(e,t){return(n,r,a,s)=>{const i=qV.tensor4d(e(n*r*a*a),[a,a,n,r]),o=qV.tensor1d(e(r));return t.push({paramPath:s+"/filters"},{paramPath:s+"/bias"}),{filters:i,bias:o}}}function aG(e,t){return(n,r,a)=>{const s=qV.tensor2d(e(n*r),[n,r]),i=qV.tensor1d(e(r));return t.push({paramPath:a+"/weights"},{paramPath:a+"/bias"}),{weights:s,bias:i}}}var sG=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function iG(e,t){return(n,r,a)=>{const s=qV.tensor4d(e(9*n),[3,3,n,1]),i=qV.tensor4d(e(n*r),[1,1,n,r]),o=qV.tensor1d(e(r));return t.push({paramPath:a+"/depthwise_filter"},{paramPath:a+"/pointwise_filter"},{paramPath:a+"/bias"}),new sG(s,i,o)}}function oG(e){return t=>{const n=e(t+"/depthwise_filter",4),r=e(t+"/pointwise_filter",4),a=e(t+"/bias",1);return new sG(n,r,a)}}function uG(e,t){return(n,r,a)=>{const s=e[n];if(!YV(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function lG(e){let t=e;return{extractWeights:function(e){const n=t.slice(0,e);return t=t.slice(e),n},getRemainingWeights:function(){return t}}}function cG(e,t){const n=rG(e,t),r=iG(e,t);function a(e,t,a,s=!1){return{conv0:s?n(e,t,3,a+"/conv0"):r(e,t,a+"/conv0"),conv1:r(t,t,a+"/conv1"),conv2:r(t,t,a+"/conv2")}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:function(e,t,n,s=!1){const{conv0:i,conv1:o,conv2:u}=a(e,t,n,s);return{conv0:i,conv1:o,conv2:u,conv3:r(t,t,n+"/conv3")}}}}function dG(e){return t=>({filters:e(t+"/filters",4),bias:e(t+"/bias",1)})}function hG(e,t){const n=uG(e,t),r=dG(n),a=oG(n);return{extractDenseBlock3Params:function(e,t=!1){return{conv0:t?r(e+"/conv0"):a(e+"/conv0"),conv1:a(e+"/conv1"),conv2:a(e+"/conv2")}},extractDenseBlock4Params:function(e,t=!1){return{conv0:t?r(e+"/conv0"):a(e+"/conv0"),conv1:a(e+"/conv1"),conv2:a(e+"/conv2"),conv3:a(e+"/conv3")}}}}var pG=class extends ZU{constructor(){super("FaceFeatureExtractor")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return qV.tidy(()=>{let n=eG(gU(qV.cast(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=eG(n,t.dense1),n=eG(n,t.dense2),n=eG(n,t.dense3),n=qV.avgPool(n,[7,7],[2,2],"valid"),n})}async forward(e){return this.forwardInput(await qU(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractDenseBlock4Params:n}=hG(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return nG(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=lG(e),{extractDenseBlock4Params:a}=cG(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),u=a(128,256,"dense3");if(0!==r().length)throw new Error("weights remaing after extract: "+r().length);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:u}}}(e)}};function fG(e,t){return qV.tidy(()=>qV.add(qV.matMul(e,t.weights),t.bias))}function mG(e){const t={},n={};return Object.keys(e).forEach(r=>{(r.startsWith("fc")?n:t)[r]=e[r]}),{featureExtractorMap:t,classifierMap:n}}var gG=class extends ZU{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){const{params:t}=this;if(!t)throw new Error(this._name+" - load model before inference");return qV.tidy(()=>{const n=e instanceof jU?this.faceFeatureExtractor.forwardInput(e):e;return fG(n.as2D(n.shape[0],-1),t.fc)})}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){const{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e,t,n){const r=[],{extractWeights:a,getRemainingWeights:s}=lG(e),i=aG(a,r)(t,n,"fc");if(0!==s().length)throw new Error("weights remaing after extract: "+s().length);return{paramMappings:r,params:{fc:i}}}(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){const{featureExtractorMap:t,classifierMap:n}=mG(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){const t=[],n=uG(e,t),r={fc:{weights:n("fc/weights",2),bias:n("fc/bias",1)}};return nG(e,t),{params:r,paramMappings:t}}(n)}extractParams(e){const t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},yG=["neutral","happy","sad","angry","fearful","disgusted","surprised"],bG=class{constructor(e){if(7!==e.length)throw new Error("FaceExpressions.constructor - expected probabilities.length to be 7, have: "+e.length);yG.forEach((t,n)=>{this[t]=e[n]})}asSortedArray(){return yG.map(e=>({expression:e,probability:this[e]})).sort((e,t)=>t.probability-e.probability)}};function xG(e,t){return{...e,expressions:t}}function wG(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach(t=>{const a=t instanceof bG?t:t.expressions instanceof bG?t.expressions:void 0;if(!a)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");const s=a.asSortedArray().filter(e=>e.probability>n),i=kU(t)?t.detection.box.bottomLeft:r||new cU(0,0);new LU(s.map(e=>`${e.expression} (${rU(e.probability)})`),i).draw(e)})}function vG(e){return kU(e)&&e.landmarks instanceof wU&&e.unshiftedLandmarks instanceof wU&&e.alignedRect instanceof fU}function kG(e,t){const{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i={landmarks:r,unshiftedLandmarks:t,alignedRect:new fU(e.detection.score,a.rescale(s.reverse()),s),angle:function(e){const t=(e,t,n,r)=>Math.atan2(r-t,n-e)%Math.PI,n={roll:void 0,pitch:void 0,yaw:void 0};if(!e||!e._positions||68!==e._positions.length)return n;const r=e._positions;n.roll=-t(r[36]._x,r[36]._y,r[45]._x,r[45]._y),n.pitch=t(0,Math.abs(r[0]._x-r[30]._x)/r[30]._x,Math.PI,Math.abs(r[16]._x-r[30]._x)/r[30]._x);const a=r.reduce((e,t)=>e<t._y?e:t._y,1/0),s=r.reduce((e,t)=>e>t._y?e:t._y,-1/0);return n.yaw=Math.PI*(e._imgDims._height/(s-a)/1.4-1),n}(t)};return{...e,...i}}var IG=class{constructor(e={}){const{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},NG=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new IG(t)}draw(e){const t=MU(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;n&&this.faceLandmarks instanceof vU&&(t.strokeStyle=s,t.lineWidth=a,KV(t,this.faceLandmarks.getJawOutline()),KV(t,this.faceLandmarks.getLeftEyeBrow()),KV(t,this.faceLandmarks.getRightEyeBrow()),KV(t,this.faceLandmarks.getNose()),KV(t,this.faceLandmarks.getLeftEye(),!0),KV(t,this.faceLandmarks.getRightEye(),!0),KV(t,this.faceLandmarks.getMouth(),!0)),r&&(t.strokeStyle=o,t.fillStyle=o,this.faceLandmarks.positions.forEach(e=>{t.beginPath(),t.arc(e.x,e.y,i,0,2*Math.PI),t.fill()}))}};function SG(e,t){(Array.isArray(t)?t:[t]).forEach(t=>{const n=t instanceof wU?t:vG(t)?t.landmarks:void 0;if(!n)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new NG(n).draw(e)})}function CG(e,t,n){return qV.add(qV.conv2d(e,t.filters,n,"same"),t.bias)}function TG(e,t,n=!0){let r=n?qV.relu(e):e;return r=JU(r,t.separable_conv0,[1,1]),r=JU(qV.relu(r),t.separable_conv1,[1,1]),r=qV.maxPool(r,[3,3],[2,2],"same"),r=qV.add(r,CG(e,t.expansion_conv,[2,2])),r}var EG,_G,AG=class extends ZU{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){const{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return qV.tidy(()=>{const n=gU(qV.cast(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255);let r=qV.relu(CG(n,t.entry_flow.conv_in,[2,2]));return r=TG(r,t.entry_flow.reduction_block_0,!1),r=TG(r,t.entry_flow.reduction_block_1),oU(this._numMainBlocks,0,1).forEach(e=>{r=function(e,t){let n=JU(qV.relu(e),t.separable_conv0,[1,1]);return n=JU(qV.relu(n),t.separable_conv1,[1,1]),n=JU(qV.relu(n),t.separable_conv2,[1,1]),n=qV.add(n,e),n}(r,t.middle_flow["main_block_"+e])}),r=TG(r,t.exit_flow.reduction_block),r=qV.relu(JU(r,t.exit_flow.separable_conv,[1,1])),r})}async forward(e){return this.forwardInput(await qU(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return function(e,t){const n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=function(e,t){const n=uG(e,t),r=dG(n),a=oG(n);return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:function(e){return{separable_conv0:a(e+"/separable_conv0"),separable_conv1:a(e+"/separable_conv1"),expansion_conv:r(e+"/expansion_conv")}},extractMainBlockParams:function(e){return{separable_conv0:a(e+"/separable_conv0"),separable_conv1:a(e+"/separable_conv1"),separable_conv2:a(e+"/separable_conv2")}}}}(e,n),o={conv_in:r("entry_flow/conv_in"),reduction_block_0:s("entry_flow/reduction_block_0"),reduction_block_1:s("entry_flow/reduction_block_1")},u={};oU(t,0,1).forEach(e=>{u["main_block_"+e]=i("middle_flow/main_block_"+e)});const l={reduction_block:s("exit_flow/reduction_block"),separable_conv:a("exit_flow/separable_conv")};return nG(e,n),{params:{entry_flow:o,middle_flow:u,exit_flow:l},paramMappings:n}}(e,this._numMainBlocks)}extractParams(e){return function(e,t){const n=[],{extractWeights:r,getRemainingWeights:a}=lG(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:u}=function(e,t){const n=rG(e,t),r=iG(e,t);return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:function(e,t,a){return{separable_conv0:r(e,t,a+"/separable_conv0"),separable_conv1:r(t,t,a+"/separable_conv1"),expansion_conv:n(e,t,1,a+"/expansion_conv")}},extractMainBlockParams:function(e,t){return{separable_conv0:r(e,e,t+"/separable_conv0"),separable_conv1:r(e,e,t+"/separable_conv1"),separable_conv2:r(e,e,t+"/separable_conv2")}}}}(r,n),l={conv_in:s(3,32,3,"entry_flow/conv_in"),reduction_block_0:o(32,64,"entry_flow/reduction_block_0"),reduction_block_1:o(64,128,"entry_flow/reduction_block_1")},c={};oU(t,0,1).forEach(e=>{c["main_block_"+e]=u(128,"middle_flow/main_block_"+e)});const d={reduction_block:o(128,256,"exit_flow/reduction_block"),separable_conv:i(256,512,"exit_flow/separable_conv")};if(0!==a().length)throw new Error("weights remaing after extract: "+a().length);return{paramMappings:n,params:{entry_flow:l,middle_flow:c,exit_flow:d}}}(e,this._numMainBlocks)}};(_G=EG||(EG={})).FEMALE="female",_G.MALE="male";var $G=class extends gG{postProcess(e,t,n){const r=n.map(({width:e,height:n})=>{const r=t/Math.max(n,e);return{width:e*r,height:n*r}}),a=r.length;return qV.tidy(()=>{const n=(e,t)=>qV.stack([qV.fill([68],e,"float32"),qV.fill([68],t,"float32")],1).as2D(1,136).as1D(),s=(e,t)=>{const{width:n,height:a}=r[e];return t(n,a)?Math.abs(n-a)/2:0};return e.mul(qV.fill([a,136],t,"float32")).sub(qV.stack(Array.from(Array(a),(e,t)=>n((e=>s(e,(e,t)=>e<t))(t),(e=>s(e,(e,t)=>t<e))(t))))).div(qV.stack(Array.from(Array(a),(e,t)=>n(r[t].width,r[t].height))))})}forwardInput(e){return qV.tidy(()=>{const t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map(([e,t])=>({height:e,width:t})))})}async forward(e){return this.forwardInput(await qU(e))}async detectLandmarks(e){const t=await qU(e),n=qV.tidy(()=>qV.unstack(this.forwardInput(t))),r=await Promise.all(n.map(async(e,n)=>{const r=Array.from(e.dataSync()),a=r.filter((e,t)=>nU(t)),s=r.filter((e,t)=>!nU(t));return new vU(Array(68).fill(0).map((e,t)=>new cU(a[t],s[t])),{height:t.getInputHeight(n),width:t.getInputWidth(n)})}));return n.forEach(e=>e.dispose()),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},FG=class extends ZU{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return qV.tidy(()=>{let n=QU(gU(qV.cast(e.toBatchTensor(112,!0),"float32"),[122.782,117.001,104.298]).div(255),t.dense0,!0);return n=QU(n,t.dense1),n=QU(n,t.dense2),n=qV.avgPool(n,[14,14],[2,2],"valid"),n})}async forward(e){return this.forwardInput(await qU(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractDenseBlock3Params:n}=hG(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return nG(e,t),{params:r,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=lG(e),{extractDenseBlock3Params:a}=cG(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(0!==r().length)throw new Error("weights remaing after extract: "+r().length);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}(e)}};function RG(e,t,n,r,a="same"){const{filters:s,bias:i}=t.conv;let o=qV.conv2d(e,s,n,a);return o=qV.add(o,i),o=function(e,t){return qV.add(qV.mul(e,t.weights),t.biases)}(o,t.scale),r?qV.relu(o):o}function DG(e,t){return RG(e,t,[1,1],!1)}function MG(e,t){return RG(e,t,[2,2],!0,"valid")}function OG(e,t){let n=function(e,t){return RG(e,t,[1,1],!0)}(e,t.conv1);return n=DG(n,t.conv2),n=qV.add(n,e),n=qV.relu(n),n}function LG(e,t){let n=MG(e,t.conv1);n=DG(n,t.conv2);let r=qV.avgPool(e,2,2,"valid");const a=qV.zeros(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){const e=[...n.shape];e[1]=1;const t=qV.zeros(e);n=qV.concat([n,t],1);const r=[...n.shape];r[2]=1;const a=qV.zeros(r);n=qV.concat([n,a],2)}return r=s?qV.concat([r,a],3):r,n=qV.add(r,n),n=qV.relu(n),n}function zG(e,t){return{...e,descriptor:t}}function PG(e,t){return{...e,age:t}}function BG(e,t,n){return{...e,gender:t,genderProbability:n}}function WG(e,t,n){return qV.tidy(()=>{let r=qV.conv2d(e,t.filters,n,"same");return r=qV.add(r,t.batch_norm_offset),qV.clipByValue(r,0,6)})}function VG(e,t,n){const r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),u=Math.min(r[n][0],r[n][2]),l=Math.min(r[n][1],r[n][3]),c=Math.max(r[n][0],r[n][2]),d=Math.max(r[n][1],r[n][3]),h=(i-a)*(o-s),p=(c-u)*(d-l);if(h<=0||p<=0)return 0;const f=Math.max(a,u),m=Math.max(s,l),g=Math.min(i,c),y=Math.min(o,d),b=Math.max(g-f,0)*Math.max(y-m,0);return b/(h+p-b)}function UG(e,t){return qV.tidy(()=>{const n=e.shape[0];return{boxPredictionEncoding:qV.reshape(tG(e,t.box_encoding_predictor),[n,-1,1,4]),classPrediction:qV.reshape(tG(e,t.class_predictor),[n,-1,3])}})}var GG=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||this._minConfidence>=1)throw new Error(this._name+" - expected minConfidence to be a number between 0 and 1");if("number"!=typeof this._maxResults)throw new Error(this._name+" - expected maxResults to be a number")}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},HG=[new cU(.738768,.874946),new cU(2.42204,2.65704),new cU(4.30971,7.04493),new cU(10.246,4.59428),new cU(12.6868,11.8741)],jG=[new cU(1.603231,2.094468),new cU(6.041143,7.080126),new cU(2.882459,3.518061),new cU(4.266906,5.178857),new cU(9.041765,10.66308)],qG=[117.001,114.697,97.404],KG=e=>"number"==typeof e;function XG(e){return qV.tidy(()=>{const t=qV.mul(e,qV.scalar(.10000000149011612));return qV.add(qV.relu(qV.sub(e,t)),t)})}function YG(e,t){return qV.tidy(()=>{let n=qV.pad(e,[[0,0],[1,1],[1,1],[0,0]]);return n=qV.conv2d(n,t.conv.filters,[1,1],"valid"),n=qV.sub(n,t.bn.sub),n=qV.mul(n,t.bn.truediv),n=qV.add(n,t.conv.bias),XG(n)})}function ZG(e,t){return qV.tidy(()=>{let n=qV.pad(e,[[0,0],[1,1],[1,1],[0,0]]);return n=qV.separableConv2d(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=qV.add(n,t.bias),XG(n)})}var JG=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,"number"!=typeof this._inputSize||this._inputSize%32!=0)throw new Error(this._name+" - expected inputSize to be a number divisible by 32");if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(this._name+" - expected scoreThreshold to be a number between 0 and 1")}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},QG=class extends ZU{constructor(e){super("TinyYolov2"),function(e){if(!e)throw new Error("invalid config: "+e);if("boolean"!=typeof e.withSeparableConvs)throw new Error("config.withSeparableConvs has to be a boolean, have: "+e.withSeparableConvs);if(!KG(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error("config.iouThreshold has to be a number between [0, 1], have: "+e.iouThreshold);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(e=>"string"==typeof e))throw new Error("config.classes has to be an array class names: string[], have: "+JSON.stringify(e.classes));if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(e=>e||{}).every(e=>KG(e.x)&&KG(e.y)))throw new Error("config.anchors has to be an array of { x: number, y: number }, have: "+JSON.stringify(e.anchors));if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(KG)))throw new Error("config.meanRgb has to be an array of shape [number, number, number], have: "+JSON.stringify(e.meanRgb))}(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=YG(e,t.conv0);return n=qV.maxPool(n,[2,2],[2,2],"same"),n=YG(n,t.conv1),n=qV.maxPool(n,[2,2],[2,2],"same"),n=YG(n,t.conv2),n=qV.maxPool(n,[2,2],[2,2],"same"),n=YG(n,t.conv3),n=qV.maxPool(n,[2,2],[2,2],"same"),n=YG(n,t.conv4),n=qV.maxPool(n,[2,2],[2,2],"same"),n=YG(n,t.conv5),n=qV.maxPool(n,[2,2],[1,1],"same"),n=YG(n,t.conv6),n=YG(n,t.conv7),tG(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?XG(tG(e,t.conv0,"valid",!1)):ZG(e,t.conv0);return n=qV.maxPool(n,[2,2],[2,2],"same"),n=ZG(n,t.conv1),n=qV.maxPool(n,[2,2],[2,2],"same"),n=ZG(n,t.conv2),n=qV.maxPool(n,[2,2],[2,2],"same"),n=ZG(n,t.conv3),n=qV.maxPool(n,[2,2],[2,2],"same"),n=ZG(n,t.conv4),n=qV.maxPool(n,[2,2],[2,2],"same"),n=ZG(n,t.conv5),n=qV.maxPool(n,[2,2],[1,1],"same"),n=t.conv6?ZG(n,t.conv6):n,n=t.conv7?ZG(n,t.conv7):n,tG(n,t.conv8,"valid",!1)}forwardInput(e,t){const{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return qV.tidy(()=>{let r=qV.cast(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?gU(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)})}async forward(e,t){return this.forwardInput(await qU(e),t)}async detect(e,t={}){const{inputSize:n,scoreThreshold:r}=new JG(t),a=await qU(e),s=await this.forwardInput(a,n),i=qV.tidy(()=>qV.unstack(s)[0].expandDims()),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},u=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();const l=u.map(e=>e.box),c=u.map(e=>e.score),d=u.map(e=>e.classScore),h=u.map(e=>this.config.classes[e.label]);return function(e,t,n,r=!0){let a=t.map((e,t)=>({score:e,boxIndex:t})).sort((e,t)=>e.score-t.score).map(e=>e.boxIndex);const s=[];for(;a.length>0;){const t=a.pop();s.push(t);const i=a,o=[];for(let n=0;n<i.length;n++)o.push(mU(e[t],e[i[n]],r));a=a.filter((e,t)=>o[t]<=n)}return s}(l.map(e=>e.rescale(n)),c,this.config.iouThreshold,!0).map(e=>new pU(c[e],d[e],h[e],l[e],o))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return function(e,t){const n=[],{extractConvParams:r,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}=function(e,t){const n=uG(e,t);function r(e){return{filters:n(e+"/filters",4),bias:n(e+"/bias",1)}}return{extractConvParams:r,extractConvWithBatchNormParams:function(e){return{conv:r(e+"/conv"),bn:function(e){return{sub:n(e+"/sub",1),truediv:n(e+"/truediv",1)}}(e+"/bn")}},extractSeparableConvParams:oG(n)}}(e,n);let i;if(t.withSeparableConvs){const e=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?r("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:e>7?s("conv6"):void 0,conv7:e>8?s("conv7"):void 0,conv8:r("conv8")}}else i={conv0:a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:a("conv6"),conv7:a("conv7"),conv8:r("conv8")};return nG(e,n),{params:i,paramMappings:n}}(e,this.config)}extractParams(e){const t=this.config.filterSizes||QG.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(7!==n&&8!==n&&9!==n)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return function(e,t,n,r){const{extractWeights:a,getRemainingWeights:s}=lG(e),i=[],{extractConvParams:o,extractConvWithBatchNormParams:u,extractSeparableConvParams:l}=function(e,t){const n=rG(e,t),r=iG(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:function(r,a,s){return{conv:n(r,a,3,s+"/conv"),bn:function(n,r){const a=qV.tensor1d(e(n)),s=qV.tensor1d(e(n));return t.push({paramPath:r+"/sub"},{paramPath:r+"/truediv"}),{sub:a,truediv:s}}(a,s+"/bn")}},extractSeparableConvParams:r}}(a,i);let c;if(t.withSeparableConvs){const[e,a,s,i,u,d,h,p,f]=r;c={conv0:t.isFirstLayerConv2d?o(e,a,3,"conv0"):l(e,a,"conv0"),conv1:l(a,s,"conv1"),conv2:l(s,i,"conv2"),conv3:l(i,u,"conv3"),conv4:l(u,d,"conv4"),conv5:l(d,h,"conv5"),conv6:p?l(h,p,"conv6"):void 0,conv7:f?l(p,f,"conv7"):void 0,conv8:o(f||p||h,5*n,1,"conv8")}}else{const[e,t,a,s,i,l,d,h,p]=r;c={conv0:u(e,t,"conv0"),conv1:u(t,a,"conv1"),conv2:u(a,s,"conv2"),conv3:u(s,i,"conv3"),conv4:u(i,l,"conv4"),conv5:u(l,d,"conv5"),conv6:u(d,h,"conv6"),conv7:u(h,p,"conv7"),conv8:o(p,5*n,1,"conv8")}}if(0!==s().length)throw new Error("weights remaing after extract: "+s().length);return{params:c,paramMappings:i}}(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,n){const{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,u=e.shape[1],l=this.config.anchors.length,[c,d,h]=qV.tidy(()=>{const t=e.reshape([u,u,l,this.boxEncodingSize]);return[t.slice([0,0,0,0],[u,u,l,4]),t.slice([0,0,0,4],[u,u,l,1]),this.withClassScores?qV.softmax(t.slice([0,0,0,5],[u,u,l,this.config.classes.length]),3):qV.scalar(0)]}),p=[],f=await d.array(),m=await c.array();for(let g=0;g<u;g++)for(let e=0;e<u;e++)for(let t=0;t<l;t++){const r=yU(f[g][e][t][0]);if(!n||r>n){const n=(e+yU(m[g][e][t][0]))/u*i,a=(g+yU(m[g][e][t][1]))/u*o,s=Math.exp(m[g][e][t][2])*this.config.anchors[t].x/u*i,l=Math.exp(m[g][e][t][3])*this.config.anchors[t].y/u*o,c=n-s/2,d=a-l/2,f={row:g,col:e,anchor:t},{classScore:y,label:b}=this.withClassScores?await this.extractPredictedClass(h,f):{classScore:1,label:0};p.push({box:new hU(c,d,c+s,d+l),score:r,classScore:r*y,label:b,...f})}}return c.dispose(),d.dispose(),h.dispose(),p}async extractPredictedClass(e,t){const{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map((e,t)=>s[n][r][a][t]).map((e,t)=>({classScore:e,label:t})).reduce((e,t)=>e.classScore>t.classScore?e:t)}},eH=QG;eH.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var tH=class extends JG{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},nH=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function rH(e,t,n,r,a=(({alignedRect:e})=>e)){const s=e.map(e=>vG(e)?a(e):e.detection),i=r||(t instanceof qV.Tensor?await XU(t,s):await KU(t,s)),o=await n(i);return i.forEach(e=>e instanceof qV.Tensor&&e.dispose()),o}async function aH(e,t,n,r,a){return rH([e],t,async e=>n(e[0]),r,a)}var sH=[new cU(1.603231,2.094468),new cU(6.041143,7.080126),new cU(2.882459,3.518061),new cU(4.266906,5.178857),new cU(9.041765,10.66308)],iH=[117.001,114.697,97.404],oH={ssdMobilenetv1:new class extends ZU{constructor(){super("SsdMobilenetv1")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return qV.tidy(()=>{const n=qV.cast(e.toBatchTensor(512,!1),"float32"),r=function(e,t){return qV.tidy(()=>{let n,r=WG(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach((e,t)=>{const a=t+1,s=function(e){return[2,4,6,12].some(t=>t===e)?[2,2]:[1,1]}(a);r=function(e,t,n){return qV.tidy(()=>{let r=qV.depthwiseConv2d(e,t.filters,n,"same");return r=qV.batchNorm(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,.0010000000474974513),qV.clipByValue(r,0,6)})}(r,e.depthwise_conv,s),r=WG(r,e.pointwise_conv,[1,1]),11===a&&(n=r)}),null===n)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}})}(qV.sub(qV.div(n,127.5),1),t.mobilenetv1),{boxPredictions:a,classPredictions:s}=function(e,t,n){return qV.tidy(()=>{const r=WG(e,n.conv_0,[1,1]),a=WG(r,n.conv_1,[2,2]),s=WG(a,n.conv_2,[1,1]),i=WG(s,n.conv_3,[2,2]),o=WG(i,n.conv_4,[1,1]),u=WG(o,n.conv_5,[2,2]),l=WG(u,n.conv_6,[1,1]),c=WG(l,n.conv_7,[2,2]),d=UG(t,n.box_predictor_0),h=UG(e,n.box_predictor_1),p=UG(a,n.box_predictor_2),f=UG(i,n.box_predictor_3),m=UG(u,n.box_predictor_4),g=UG(c,n.box_predictor_5);return{boxPredictions:qV.concat([d.boxPredictionEncoding,h.boxPredictionEncoding,p.boxPredictionEncoding,f.boxPredictionEncoding,m.boxPredictionEncoding,g.boxPredictionEncoding],1),classPredictions:qV.concat([d.classPrediction,h.classPrediction,p.classPrediction,f.classPrediction,m.classPrediction,g.classPrediction],1)}})}(r.out,r.conv11,t.prediction_layer);return function(e,t,n){return qV.tidy(()=>{const r=e.shape[0];let a=function(e,t){const{sizes:n,centers:r}=function(e){const t=qV.unstack(qV.transpose(e,[1,0])),n=[qV.sub(t[2],t[0]),qV.sub(t[3],t[1])];return{sizes:n,centers:[qV.add(t[0],qV.div(n[0],2)),qV.add(t[1],qV.div(n[1],2))]}}(e),a=qV.unstack(qV.transpose(t,[1,0])),s=qV.div(qV.mul(qV.exp(qV.div(a[2],5)),n[0]),2),i=qV.add(qV.mul(qV.div(a[0],10),n[0]),r[0]),o=qV.div(qV.mul(qV.exp(qV.div(a[3],5)),n[1]),2),u=qV.add(qV.mul(qV.div(a[1],10),n[1]),r[1]);return qV.transpose(qV.stack([qV.sub(i,s),qV.sub(u,o),qV.add(i,s),qV.add(u,o)]),[1,0])}(qV.reshape(qV.tile(n.extra_dim,[r,1,1]),[-1,4]),qV.reshape(e,[-1,4]));a=qV.reshape(a,[r,a.shape[0]/r,4]);const s=qV.sigmoid(qV.slice(t,[0,0,1],[-1,-1,-1]));let i=qV.slice(s,[0,0,0],[-1,-1,1]);return i=qV.reshape(i,[r,i.shape[1]]),{boxes:qV.unstack(a),scores:qV.unstack(i)}})}(a,s,t.output_layer)})}async forward(e){return this.forwardInput(await qU(e))}async locateFaces(e,t={}){const{maxResults:n,minConfidence:r}=new GG(t),a=await qU(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],u=i[0];for(let y=1;y<s.length;y++)s[y].dispose(),i[y].dispose();const l=Array.from(u.dataSync()),c=function(e,t,n,r,a){const s=Math.min(n,e.shape[0]),i=t.map((e,t)=>({score:e,boxIndex:t})).filter(e=>e.score>a).sort((e,t)=>t.score-e.score),o=[];return i.forEach(t=>{if(o.length>=s)return;const n=t.score;for(let r=o.length-1;r>=0;--r){const n=VG(e,t.boxIndex,o[r]);if(0!==n&&(t.score*=n<=.5?1:0,t.score<=a))break}n===t.score&&o.push(t.boxIndex)}),o}(o,l,n,0,r),d=a.getReshapedInputDimensions(0),h=a.inputSize,p=h/d.width,f=h/d.height,m=o.arraySync(),g=c.map(e=>{const[t,n]=[Math.max(0,m[e][0]),Math.min(1,m[e][2])].map(e=>e*f),[r,s]=[Math.max(0,m[e][1]),Math.min(1,m[e][3])].map(e=>e*p);return new fU(l[e],new xU(r,t,s-r,n-t),{height:a.getInputHeight(0),width:a.getInputWidth(0)})});return o.dispose(),u.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=function(e,t){const n=uG(e,t);function r(e,t,r){return{filters:n(`${e}/Conv2d_${t}_pointwise/weights`,4,r+"/filters"),batch_norm_offset:n(`${e}/Conv2d_${t}_pointwise/convolution_bn_offset`,1,r+"/batch_norm_offset")}}function a(e){const t="mobilenetv1/conv_"+e,a=`MobilenetV1/Conv2d_${e}_depthwise`,s=t+"/depthwise_conv",i=t+"/pointwise_conv";return{depthwise_conv:{filters:n(a+"/depthwise_weights",4,s+"/filters"),batch_norm_scale:n(a+"/BatchNorm/gamma",1,s+"/batch_norm_scale"),batch_norm_offset:n(a+"/BatchNorm/beta",1,s+"/batch_norm_offset"),batch_norm_mean:n(a+"/BatchNorm/moving_mean",1,s+"/batch_norm_mean"),batch_norm_variance:n(a+"/BatchNorm/moving_variance",1,s+"/batch_norm_variance")},pointwise_conv:r("MobilenetV1",e,i)}}function s(e,t){return{filters:n(e+"/weights",4,t+"/filters"),bias:n(e+"/biases",1,t+"/bias")}}function i(e){return{box_encoding_predictor:s(`Prediction/BoxPredictor_${e}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${e}/box_encoding_predictor`),class_predictor:s(`Prediction/BoxPredictor_${e}/ClassPredictor`,`prediction_layer/box_predictor_${e}/class_predictor`)}}return{extractMobilenetV1Params:function(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}},extractPredictionLayerParams:function(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:i(0),box_predictor_1:i(1),box_predictor_2:i(2),box_predictor_3:i(3),box_predictor_4:i(4),box_predictor_5:i(5)}}}}(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!QV(a))throw new Error("expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have "+a);const s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return nG(e,t),{params:s,paramMappings:t}}(e)}extractParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=lG(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=function(e,t){function n(n,r,a,s,i){const o=qV.tensor4d(e(n*r*a*a),[a,a,n,r]),u=qV.tensor1d(e(r));return t.push({paramPath:s+"/filters"},{paramPath:`${s}/${i?"batch_norm_offset":"bias"}`}),{filters:o,bias:u}}function r(e,t,r,a){const{filters:s,bias:i}=n(e,t,r,a,!0);return{filters:s,batch_norm_offset:i}}function a(n,a,s){return{depthwise_conv:function(n,r){const a=qV.tensor4d(e(9*n),[3,3,n,1]),s=qV.tensor1d(e(n)),i=qV.tensor1d(e(n)),o=qV.tensor1d(e(n)),u=qV.tensor1d(e(n));return t.push({paramPath:r+"/filters"},{paramPath:r+"/batch_norm_scale"},{paramPath:r+"/batch_norm_offset"},{paramPath:r+"/batch_norm_mean"},{paramPath:r+"/batch_norm_variance"}),{filters:a,batch_norm_scale:s,batch_norm_offset:i,batch_norm_mean:o,batch_norm_variance:u}}(n,s+"/depthwise_conv"),pointwise_conv:r(n,a,1,s+"/pointwise_conv")}}return{extractMobilenetV1Params:function(){return{conv_0:r(3,32,3,"mobilenetv1/conv_0"),conv_1:a(32,64,"mobilenetv1/conv_1"),conv_2:a(64,128,"mobilenetv1/conv_2"),conv_3:a(128,128,"mobilenetv1/conv_3"),conv_4:a(128,256,"mobilenetv1/conv_4"),conv_5:a(256,256,"mobilenetv1/conv_5"),conv_6:a(256,512,"mobilenetv1/conv_6"),conv_7:a(512,512,"mobilenetv1/conv_7"),conv_8:a(512,512,"mobilenetv1/conv_8"),conv_9:a(512,512,"mobilenetv1/conv_9"),conv_10:a(512,512,"mobilenetv1/conv_10"),conv_11:a(512,512,"mobilenetv1/conv_11"),conv_12:a(512,1024,"mobilenetv1/conv_12"),conv_13:a(1024,1024,"mobilenetv1/conv_13")}},extractPredictionLayerParams:function(){return{conv_0:r(1024,256,1,"prediction_layer/conv_0"),conv_1:r(256,512,3,"prediction_layer/conv_1"),conv_2:r(512,128,1,"prediction_layer/conv_2"),conv_3:r(128,256,3,"prediction_layer/conv_3"),conv_4:r(256,128,1,"prediction_layer/conv_4"),conv_5:r(128,256,3,"prediction_layer/conv_5"),conv_6:r(256,64,1,"prediction_layer/conv_6"),conv_7:r(64,128,3,"prediction_layer/conv_7"),box_predictor_0:{box_encoding_predictor:n(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),class_predictor:n(512,9,1,"prediction_layer/box_predictor_0/class_predictor")},box_predictor_1:{box_encoding_predictor:n(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),class_predictor:n(1024,18,1,"prediction_layer/box_predictor_1/class_predictor")},box_predictor_2:{box_encoding_predictor:n(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),class_predictor:n(512,18,1,"prediction_layer/box_predictor_2/class_predictor")},box_predictor_3:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_3/class_predictor")},box_predictor_4:{box_encoding_predictor:n(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),class_predictor:n(256,18,1,"prediction_layer/box_predictor_4/class_predictor")},box_predictor_5:{box_encoding_predictor:n(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),class_predictor:n(128,18,1,"prediction_layer/box_predictor_5/class_predictor")}}}}}(n,t),i=a(),o=s(),u={extra_dim:qV.tensor3d(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==r().length)throw new Error("weights remaing after extract: "+r().length);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:u},paramMappings:t}}(e)}},tinyFaceDetector:new class extends eH{constructor(){super({withSeparableConvs:!0,iouThreshold:.4,classes:["face"],anchors:sH,meanRgb:iH,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]})}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(e=>new fU(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight}))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},tinyYolov2:new class extends eH{constructor(e=!0){super({withSeparableConvs:e,iouThreshold:.4,classes:["face"],...e?{anchors:jG,meanRgb:qG}:{anchors:HG,withClassScores:!0}})}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(e=>new fU(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight}))}getDefaultModelName(){return this.withSeparableConvs?"tiny_yolov2_separable_conv_model":"tiny_yolov2_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},faceLandmark68Net:new class extends $G{constructor(e=new pG){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}},faceLandmark68TinyNet:new class extends $G{constructor(e=new FG){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}},faceRecognitionNet:new class extends ZU{constructor(){super("FaceRecognitionNet")}forwardInput(e){const{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return qV.tidy(()=>{let n=MG(gU(qV.cast(e.toBatchTensor(150,!0),"float32"),[122.782,117.001,104.298]).div(255),t.conv32_down);n=qV.maxPool(n,3,2,"valid"),n=OG(n,t.conv32_1),n=OG(n,t.conv32_2),n=OG(n,t.conv32_3),n=LG(n,t.conv64_down),n=OG(n,t.conv64_1),n=OG(n,t.conv64_2),n=OG(n,t.conv64_3),n=LG(n,t.conv128_down),n=OG(n,t.conv128_1),n=OG(n,t.conv128_2),n=LG(n,t.conv256_down),n=OG(n,t.conv256_1),n=OG(n,t.conv256_2),n=LG(n,t.conv256_down_out);const r=n.mean([1,2]);return qV.matMul(r,t.fc)})}async forward(e){return this.forwardInput(await qU(e))}async computeFaceDescriptor(e){var t;if(null==(t=null==e?void 0:e.shape)?void 0:t.some(e=>e<=0))return new Float32Array(128);const n=await qU(e),r=qV.tidy(()=>qV.unstack(this.forwardInput(n))),a=await Promise.all(r.map(e=>e.data()));return r.forEach(e=>e.dispose()),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return function(e){const t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=function(e,t){const n=uG(e,t);function r(e){return{conv:{filters:n(e+"/conv/filters",4),bias:n(e+"/conv/bias",1)},scale:function(e){return{weights:n(e+"/scale/weights",1),biases:n(e+"/scale/biases",1)}}(e)}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e){return{conv1:r(e+"/conv1"),conv2:r(e+"/conv2")}}}}(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),u=r("conv64_down"),l=r("conv64_1"),c=r("conv64_2"),d=r("conv64_3"),h=r("conv128_down"),p=r("conv128_1"),f=r("conv128_2"),m=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!JV(x))throw new Error("expected weightMap[fc] to be a Tensor2D, instead have "+x);const w={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:u,conv64_1:l,conv64_2:c,conv64_3:d,conv128_down:h,conv128_1:p,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return nG(e,t),{params:w,paramMappings:t}}(e)}extractParams(e){return function(e){const{extractWeights:t,getRemainingWeights:n}=lG(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=function(e,t){function n(n,r,a,s){const i=function(t,n,r){const a=e(t),s=a.length/(n*r*r);if(tU(s))throw new Error(`depth has to be an integer: ${s}, weights.length: ${a.length}, numFilters: ${n}, filterSize: ${r}`);return qV.tidy(()=>qV.transpose(qV.tensor4d(a,[n,s,r,r]),[2,3,1,0]))}(n,r,a),o=qV.tensor1d(e(r));return t.push({paramPath:s+"/filters"},{paramPath:s+"/bias"}),{filters:i,bias:o}}function r(r,a,s,i){return{conv:n(r,a,s,i+"/conv"),scale:function(n,r){const a=qV.tensor1d(e(n)),s=qV.tensor1d(e(n));return t.push({paramPath:r+"/weights"},{paramPath:r+"/biases"}),{weights:a,biases:s}}(a,i+"/scale")}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e,t,n,a,s=!1){return{conv1:r((s?.5:1)*e,t,n,a+"/conv1"),conv2:r(e,t,n,a+"/conv2")}}}}(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),u=s(9216,32,3,"conv32_2"),l=s(9216,32,3,"conv32_3"),c=s(36864,64,3,"conv64_down",!0),d=s(36864,64,3,"conv64_1"),h=s(36864,64,3,"conv64_2"),p=s(36864,64,3,"conv64_3"),f=s(147456,128,3,"conv128_down",!0),m=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),w=s(589824,256,3,"conv256_down_out"),v=qV.tidy(()=>qV.transpose(qV.tensor2d(t(32768),[128,256]),[1,0]));if(r.push({paramPath:"fc"}),0!==n().length)throw new Error("weights remaing after extract: "+n().length);return{params:{conv32_down:i,conv32_1:o,conv32_2:u,conv32_3:l,conv64_down:c,conv64_1:d,conv64_2:h,conv64_3:p,conv128_down:f,conv128_1:m,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:w,fc:v},paramMappings:r}}(e)}},faceExpressionNet:new class extends gG{constructor(e=new pG){super("FaceExpressionNet",e)}forwardInput(e){return qV.tidy(()=>qV.softmax(this.runNet(e)))}async forward(e){return this.forwardInput(await qU(e))}async predictExpressions(e){const t=await qU(e),n=await this.forwardInput(t),r=await Promise.all(qV.unstack(n).map(async e=>{const t=e.dataSync();return e.dispose(),t}));n.dispose();const a=r.map(e=>new bG(e));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}},ageGenderNet:new class extends ZU{constructor(e=new AG(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){const{params:t}=this;if(!t)throw new Error(this._name+" - load model before inference");return qV.tidy(()=>{const n=e instanceof jU?this.faceFeatureExtractor.forwardInput(e):e,r=qV.avgPool(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1);return{age:fG(r,t.fc.age).as1D(),gender:fG(r,t.fc.gender)}})}forwardInput(e){return qV.tidy(()=>{const{age:t,gender:n}=this.runNet(e);return{age:t,gender:qV.softmax(n)}})}async forward(e){return this.forwardInput(await qU(e))}async predictAgeAndGender(e){const t=await qU(e),n=await this.forwardInput(t),r=qV.unstack(n.age),a=qV.unstack(n.gender),s=r.map((e,t)=>({ageTensor:e,genderTensor:a[t]})),i=await Promise.all(s.map(async({ageTensor:e,genderTensor:t})=>{const n=e.dataSync()[0],r=t.dataSync()[0],a=r>.5,s=a?EG.MALE:EG.FEMALE,i=a?r:1-r;return e.dispose(),t.dispose(),{age:n,gender:s,genderProbability:i}}));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){const{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return function(e){const t=[],{extractWeights:n,getRemainingWeights:r}=lG(e),a=aG(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(0!==r().length)throw new Error("weights remaing after extract: "+r().length);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}(e)}extractParamsFromWeightMap(e){const{featureExtractorMap:t,classifierMap:n}=mG(e);return this.faceFeatureExtractor.loadFromWeightMap(t),function(e){const t=[],n=uG(e,t);function r(e){return{weights:n(e+"/weights",2),bias:n(e+"/bias",1)}}const a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return nG(e,t),{params:a,paramMappings:t}}(n)}extractParams(e){const t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}}},uH=class extends nH{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},lH=class extends uH{async run(){const e=await this.parentTask,t=await rH(e,this.input,async e=>Promise.all(e.map(e=>oH.faceExpressionNet.predictExpressions(e))),this.extractedFaces);return e.map((e,n)=>xG(e,t[n]))}withAgeAndGender(){return new fH(this,this.input)}},cH=class extends uH{async run(){const e=await this.parentTask;if(e)return xG(e,await aH(e,this.input,e=>oH.faceExpressionNet.predictExpressions(e),this.extractedFaces))}withAgeAndGender(){return new mH(this,this.input)}},dH=class extends lH{withAgeAndGender(){return new gH(this,this.input)}withFaceDescriptors(){return new xH(this,this.input)}},hH=class extends cH{withAgeAndGender(){return new yH(this,this.input)}withFaceDescriptor(){return new wH(this,this.input)}},pH=class extends nH{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},fH=class extends pH{async run(){const e=await this.parentTask,t=await rH(e,this.input,async e=>Promise.all(e.map(e=>oH.ageGenderNet.predictAgeAndGender(e))),this.extractedFaces);return e.map((e,n)=>{const{age:r,gender:a,genderProbability:s}=t[n];return PG(BG(e,a,s),r)})}withFaceExpressions(){return new lH(this,this.input)}},mH=class extends pH{async run(){const e=await this.parentTask;if(!e)return;const{age:t,gender:n,genderProbability:r}=await aH(e,this.input,e=>oH.ageGenderNet.predictAgeAndGender(e),this.extractedFaces);return PG(BG(e,n,r),t)}withFaceExpressions(){return new cH(this,this.input)}},gH=class extends fH{withFaceExpressions(){return new dH(this,this.input)}withFaceDescriptors(){return new xH(this,this.input)}},yH=class extends mH{withFaceExpressions(){return new hH(this,this.input)}withFaceDescriptor(){return new wH(this,this.input)}},bH=class extends nH{constructor(e,t){super(),this.parentTask=e,this.input=t}},xH=class extends bH{async run(){const e=await this.parentTask;return(await rH(e,this.input,e=>Promise.all(e.map(e=>oH.faceRecognitionNet.computeFaceDescriptor(e))),null,e=>e.landmarks.align(null,{useDlibAlignment:!0}))).map((t,n)=>zG(e[n],t))}withFaceExpressions(){return new dH(this,this.input)}withAgeAndGender(){return new gH(this,this.input)}},wH=class extends bH{async run(){const e=await this.parentTask;if(e)return zG(e,await aH(e,this.input,e=>oH.faceRecognitionNet.computeFaceDescriptor(e),null,e=>e.landmarks.align(null,{useDlibAlignment:!0})))}withFaceExpressions(){return new hH(this,this.input)}withAgeAndGender(){return new yH(this,this.input)}},vH=class extends nH{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?oH.faceLandmark68TinyNet:oH.faceLandmark68Net}},kH=class extends vH{async run(){const e=await this.parentTask,t=e.map(e=>e.detection),n=this.input instanceof qV.Tensor?await XU(this.input,t):await KU(this.input,t),r=await Promise.all(n.map(e=>this.landmarkNet.detectLandmarks(e)));return n.forEach(e=>e instanceof qV.Tensor&&e.dispose()),e.map((e,t)=>kG(e,r[t]))}withFaceExpressions(){return new dH(this,this.input)}withAgeAndGender(){return new gH(this,this.input)}withFaceDescriptors(){return new xH(this,this.input)}},IH=class extends vH{async run(){const e=await this.parentTask;if(!e)return;const{detection:t}=e,n=this.input instanceof qV.Tensor?await XU(this.input,[t]):await KU(this.input,[t]),r=await this.landmarkNet.detectLandmarks(n[0]);return n.forEach(e=>e instanceof qV.Tensor&&e.dispose()),kG(e,r)}withFaceExpressions(){return new hH(this,this.input)}withAgeAndGender(){return new yH(this,this.input)}withFaceDescriptor(){return new wH(this,this.input)}},NH=class extends nH{constructor(e,t=new GG){super(),this.input=e,this.options=t}},SH=class extends NH{async run(){const{input:e,options:t}=this;let n;if(t instanceof tH)n=oH.tinyFaceDetector.locateFaces(e,t);else if(t instanceof GG)n=oH.ssdMobilenetv1.locateFaces(e,t);else{if(!(t instanceof JG))throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");n=oH.tinyYolov2.locateFaces(e,t)}return n}runAndExtendWithFaceDetections(){return new Promise((e,t)=>{this.run().then(t=>e(t.map(e=>IU({},e)))).catch(e=>t(e))})}withFaceLandmarks(e=!1){return new kH(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new lH(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new fH(this.runAndExtendWithFaceDetections(),this.input)}},CH=class extends NH{async run(){const e=await new SH(this.input,this.options);let t=e[0];return e.forEach(e=>{e.score>t.score&&(t=e)}),t}runAndExtendWithFaceDetection(){return new Promise(async e=>{const t=await this.run();e(t?IU({},t):void 0)})}withFaceLandmarks(e=!1){return new IH(this.runAndExtendWithFaceDetection(),this.input,e)}withFaceExpressions(){return new cH(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new mH(this.runAndExtendWithFaceDetection(),this.input)}};"undefined"!=typeof navigator&&navigator;let TH={};TH=Object.assign({},console),["log","debug","warn","info","error","assert","dir","profile"].forEach(e=>console[e]=()=>{});let EH=!1;addEventListener("message",({data:e})=>q(void 0,void 0,void 0,function*(){EH||(yield function(){return q(this,void 0,void 0,function*(){yield oH.tinyFaceDetector.load("./face-models"),yield oH.faceLandmark68TinyNet.load("./face-models"),yield oH.faceRecognitionNet.load("./face-models")})}(),EH=!0);const t=new ImageData(new Uint8ClampedArray(e.image),e.width,e.height),n=new OffscreenCanvas(e.width,e.height);n.width=e.width,n.height=e.height;const r=n.getContext("2d");null==r||r.putImageData(t,0,0);let a=yield function(e,t=new GG){return new CH(e,t)}(n,new tH({inputSize:192,scoreThreshold:.4})).withFaceLandmarks(!0).withFaceDescriptor();a?a.config="faceApi":a={config:"faceApi"},postMessage(Object.assign({},a))}))},0:function(e,t){},"0I5M":function(e,t,n){var r,a=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(r=r||__filename),function(e){var t,a,s=void 0!==(e=e||{})?e:{};s.ready=new Promise(function(e,n){t=e,a=n});var i,o={};for(i in s)s.hasOwnProperty(i)&&(o[i]=s[i]);var u=[],l=!1,c=!1,d=!1,h=!1;l="object"==typeof window,c="function"==typeof importScripts,d="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,h=!l&&!d&&!c;var p,f,m,g,y,b="";function x(e){return s.locateFile?s.locateFile(e,b):b+e}d?(b=c?n(5).dirname(b)+"/":__dirname+"/",p=function(e,t){return g||(g=n(6)),y||(y=n(5)),e=y.normalize(e),g.readFileSync(e,t?null:"utf8")},m=function(e){var t=p(e,!0);return t.buffer||(t=new Uint8Array(t)),S(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),u=process.argv.slice(2),process.on("uncaughtException",function(e){if(!(e instanceof Re))throw e}),process.on("unhandledRejection",re),s.inspect=function(){return"[Emscripten Module object]"}):h?("undefined"!=typeof read&&(p=function(e){return read(e)}),m=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(S("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?u=scriptArgs:void 0!==arguments&&(u=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(l||c)&&(c?b=self.location.href:"undefined"!=typeof document&&document.currentScript&&(b=document.currentScript.src),r&&(b=r),b=0!==b.indexOf("blob:")?b.substr(0,b.lastIndexOf("/")+1):"",p=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},c&&(m=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),f=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var w,v,k=s.print||console.log.bind(console),I=s.printErr||console.warn.bind(console);for(i in o)o.hasOwnProperty(i)&&(s[i]=o[i]);o=null,s.arguments&&(u=s.arguments),s.wasmBinary&&(w=s.wasmBinary),"object"!=typeof WebAssembly&&re("no native wasm support detected");var N=!1;function S(e,t){e||re("Assertion failed: "+t)}function C(e){var t=s["_"+e];return S(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function T(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);L(e,t=Fe(n),n)}return t},array:function(e){var t=Fe(e.length);return z(e,t),t}},i=C(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=Ae()),o[l]=c(r[l])):o[l]=r[l]}var d=i.apply(null,o);return d=function(e){return"string"===t?M(e):"boolean"===t?Boolean(e):e}(d),0!==u&&$e(u),d}function E(e,t,n,r){var a=(n=n||[]).every(function(e){return"number"===e});return"string"!==t&&a&&!r?C(e):function(){return T(e,t,n,arguments)}}var _,A,$,F,R="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function D(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&R)return R.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function M(e,t){return e?D($,e,t):""}function O(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function L(e,t,n){return O(e,$,t,n)}function z(e,t){A.set(e,t)}function P(e,t){return e%t>0&&(e+=t-e%t),e}function B(e){_=e,s.HEAP8=A=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=F=new Int32Array(e),s.HEAPU8=$=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}var W,V=[],U=[],G=[],H=[];function j(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)Y(s.preRun.shift());pe(V)}function q(){pe(U)}function K(){pe(G)}function X(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)Z(s.postRun.shift());pe(H)}function Y(e){V.unshift(e)}function Z(e){H.unshift(e)}U.push({func:function(){Ee()}});var J=0,Q=null,ee=null;function te(e){J++,s.monitorRunDependencies&&s.monitorRunDependencies(J)}function ne(e){if(J--,s.monitorRunDependencies&&s.monitorRunDependencies(J),0==J&&(null!==Q&&(clearInterval(Q),Q=null),ee)){var t=ee;ee=null,t()}}function re(e){s.onAbort&&s.onAbort(e),I(e+=""),N=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw a(t),t}function ae(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}s.preloadedImages={},s.preloadedAudios={};var se="data:application/octet-stream;base64,";function ie(e){return ae(e,se)}var oe="file://";function ue(e){return ae(e,oe)}var le="tfjs-backend-wasm.wasm";function ce(e){try{if(e==le&&w)return new Uint8Array(w);if(m)return m(e);throw"both async and sync fetching of the wasm failed"}catch(I){re(I)}}function de(){if(!w&&(l||c)){if("function"==typeof fetch&&!ue(le))return fetch(le,{credentials:"same-origin"}).then(function(e){if(!e.ok)throw"failed to load wasm binary file at '"+le+"'";return e.arrayBuffer()}).catch(function(){return ce(le)});if(f)return new Promise(function(e,t){f(le,function(t){e(new Uint8Array(t))},t)})}return Promise.resolve().then(function(){return ce(le)})}function he(){var e={a:Te};function t(e,t){s.asm=e.exports,B((v=s.asm.i).buffer),W=s.asm.o,ne()}function n(e){t(e.instance)}function r(t){return de().then(function(t){return WebAssembly.instantiate(t,e)}).then(t,function(e){I("failed to asynchronously prepare wasm: "+e),re(e)})}if(te(),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(i){return I("Module.instantiateWasm callback failed with error: "+i),!1}return(w||"function"!=typeof WebAssembly.instantiateStreaming||ie(le)||ue(le)||"function"!=typeof fetch?r(n):fetch(le,{credentials:"same-origin"}).then(function(t){return WebAssembly.instantiateStreaming(t,e).then(n,function(e){return I("wasm streaming compile failed: "+e),I("falling back to ArrayBuffer instantiation"),r(n)})})).catch(a),{}}function pe(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?W.get(n)():W.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}function fe(){re()}function me(e,t,n){$.copyWithin(e,t,t+n)}function ge(){return $.length}function ye(e){try{return v.grow(e-_.byteLength+65535>>>16),B(v.buffer),1}catch(t){}}function be(e){var t=ge(),n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),ye(Math.min(n,P(Math.max(e,a),65536))))return!0}return!1}ie(le)||(le=x(le));var xe={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=xe.buffers[e];0===t||10===t?((1===e?k:I)(D(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return xe.varargs+=4,F[xe.varargs-4>>2]},getStr:function(e){return M(e)},get64:function(e,t){return e}};function we(e){return 0}function ve(e,t,n,r,a){}function ke(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=F[t+8*s>>2],o=F[t+(8*s+4)>>2],u=0;u<o;u++)xe.printChar(e,$[i+u]);a+=o}return F[r>>2]=a,0}function Ie(){return 6}function Ne(e){return F[_e()>>2]=e,e}function Se(e){switch(e){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ne(28),-1}var Ce,Te={a:fe,d:me,e:be,f:we,c:ve,b:ke,g:Ie,h:Se},Ee=(he(),s.___wasm_call_ctors=function(){return(Ee=s.___wasm_call_ctors=s.asm.j).apply(null,arguments)}),_e=(s._init=function(){return(s._init=s.asm.k).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.l).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.m).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.n).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.p).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.q).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.r).apply(null,arguments)},s._All=function(){return(s._All=s.asm.s).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.t).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.u).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.v).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.w).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.x).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.y).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.z).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.A).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.B).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.C).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.D).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.E).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.F).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.G).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.H).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.I).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.J).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.K).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.L).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.M).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.N).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.O).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.P).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Q).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.R).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.S).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.T).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.U).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.V).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.W).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.X).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.Y).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Z).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm._).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.$).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.aa).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.ba).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.ca).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.da).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.ea).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.fa).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.ga).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.ha).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.ia).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.ja).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.ka).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.la).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.ma).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.na).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.oa).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.pa).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.qa).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.ra).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.sa).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.ta).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.ua).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.va).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.wa).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.xa).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.ya).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.za).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Aa).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Ba).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.Ca).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Da).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.Ea).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Fa).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Ga).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Ha).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Ia).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Ja).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.Ka).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.La).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Ma).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm.Na).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.Oa).apply(null,arguments)},s._free=function(){return(s._free=s.asm.Pa).apply(null,arguments)},s.___errno_location=function(){return(_e=s.___errno_location=s.asm.Qa).apply(null,arguments)}),Ae=s.stackSave=function(){return(Ae=s.stackSave=s.asm.Ra).apply(null,arguments)},$e=s.stackRestore=function(){return($e=s.stackRestore=s.asm.Sa).apply(null,arguments)},Fe=s.stackAlloc=function(){return(Fe=s.stackAlloc=s.asm.Ta).apply(null,arguments)};function Re(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function De(e){function n(){Ce||(Ce=!0,s.calledRun=!0,N||(q(),K(),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),X()))}e=e||u,J>0||(j(),J>0||(s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),n()},1)):n()))}if(s.cwrap=E,ee=function e(){Ce||De(),Ce||(ee=e)},s.run=De,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();return De(),e.ready});e.exports=a},1:function(e,t){},2:function(e,t){},"2lpH":function(e,t){e.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(C){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=l(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function u(e,t){if(isNaN(e))return t?b:y;if(t){if(e<0)return b;if(e>=f)return I}else{if(e<=-m)return N;if(e+1>=m)return k}return e<0?u(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=u,r.fromBits=l;var c=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return d(e.substring(1),t,n).neg();for(var a=u(c(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),l=parseInt(e.substring(i,i+o),n);if(o<8){var h=u(c(n,o));s=s.mul(h).add(u(l))}else s=(s=s.mul(a)).add(u(l))}return s.unsigned=t,s}function h(e,t){return"number"==typeof e?u(e,t):"string"==typeof e?d(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=d,r.fromValue=h;var p=4294967296,f=p*p,m=f/2,g=o(1<<24),y=o(0);r.ZERO=y;var b=o(0,!0);r.UZERO=b;var x=o(1);r.ONE=x;var w=o(1,!0);r.UONE=w;var v=o(-1);r.NEG_ONE=v;var k=l(-1,2147483647,!1);r.MAX_VALUE=k;var I=l(-1,-1,!0);r.MAX_UNSIGNED_VALUE=I;var N=l(0,-2147483648,!1);r.MIN_VALUE=N;var S=r.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(N)){var t=u(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=u(c(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),l=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(N)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return a(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(a(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(N)?N:this.not().add(x)},S.neg=S.negate,S.add=function(e){a(e)||(e=h(e));var t=0,n=0,r=0,s=0;return r+=(s+=(65535&this.low)+(65535&e.low))>>>16,n+=(r+=(this.low>>>16)+(e.low>>>16))>>>16,t+=(n+=(65535&this.high)+(65535&e.high))>>>16,t+=(this.high>>>16)+(e.high>>>16),l((r&=65535)<<16|(s&=65535),(t&=65535)<<16|(n&=65535),this.unsigned)},S.subtract=function(e){return a(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return y;if(a(e)||(e=h(e)),n)return l(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(N))return e.isOdd()?N:y;if(e.eq(N))return this.isOdd()?N:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return u(this.toNumber()*e.toNumber(),this.unsigned);var t=65535&this.high,r=this.low>>>16,s=65535&this.low,i=65535&e.high,o=e.low>>>16,c=65535&e.low,d=0,p=0,f=0,m=0;return f+=(m+=s*c)>>>16,p+=(f+=r*c)>>>16,f&=65535,p+=(f+=s*o)>>>16,d+=(p+=t*c)>>>16,p&=65535,d+=(p+=r*o)>>>16,p&=65535,d+=(p+=s*i)>>>16,d+=(this.high>>>16)*c+t*o+r*i+s*(e.high>>>16),l((f&=65535)<<16|(m&=65535),(d&=65535)<<16|(p&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(a(e)||(e=h(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return w;s=b}else{if(this.eq(N))return e.eq(x)||e.eq(v)?N:e.eq(N)?x:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?x:v:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(N))return this.unsigned?b:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:c(2,i-48),d=u(t),p=d.mul(e);p.isNegative()||p.gt(r);)p=(d=u(t-=o,this.unsigned)).mul(e);d.isZero()&&(d=x),s=s.add(d),r=r.sub(p)}return s},S.div=S.divide,S.modulo=function(e){return a(e)||(e=h(e)),n?l((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return l(~this.low,~this.high,this.unsigned)},S.and=function(e){return a(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return a(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return a(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},3:function(e,t){},4:function(e,t){},5:function(e,t){},6:function(e,t){},7:function(e,t){},8:function(e,t){},9:function(e,t){},AfPn:function(e,t){function n(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id="AfPn"},B9Yq:function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},EhIR:function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return u}).call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},PDX0:function(e,t){(function(t){e.exports=t}).call(this,{})},VYYE:function(e,t,n){var r,a=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(r=r||__filename),function(e){function t(){return $.buffer!=D&&J($.buffer),M}function a(){return $.buffer!=D&&J($.buffer),O}function s(){return $.buffer!=D&&J($.buffer),L}function i(){return $.buffer!=D&&J($.buffer),z}function o(){return $.buffer!=D&&J($.buffer),P}var u,l,c=void 0!==(e=e||{})?e:{};c.ready=new Promise(function(e,t){u=e,l=t});var d,h={};for(d in c)c.hasOwnProperty(d)&&(h[d]=c[d]);var p=[],f=function(e,t){throw t},m=!1,g=!1,y=!1,b=!1;m="object"==typeof window,g="function"==typeof importScripts,y="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,b=!m&&!y&&!g;var x=c.ENVIRONMENT_IS_PTHREAD||!1;x&&(D=c.buffer);var w,v,k,I,N,S="";function C(e){return c.locateFile?c.locateFile(e,S):S+e}if(y){var T;S=g?n(5).dirname(S)+"/":__dirname+"/",w=function(e,t){return I||(I=n(6)),N||(N=n(5)),e=N.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),W(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),p=process.argv.slice(2),process.on("uncaughtException",function(e){if(!(e instanceof sn))throw e}),process.on("unhandledRejection",ye),f=function(e){process.exit(e)},c.inspect=function(){return"[Emscripten Module object]"};try{T=n(7)}catch(ln){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),ln}global.Worker=T.Worker}else b?("undefined"!=typeof read&&(w=function(e){return read(e)}),k=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(W("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?p=scriptArgs:void 0!==arguments&&(p=arguments),"function"==typeof quit&&(f=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(m||g)&&(g?S=self.location.href:"undefined"!=typeof document&&document.currentScript&&(S=document.currentScript.src),void 0!==r&&r&&(S=r),S=0!==S.indexOf("blob:")?S.substr(0,S.lastIndexOf("/")+1):"",y?(w=function(e,t){return I||(I=n(6)),N||(N=n(5)),e=N.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),W(t.buffer),t}):(w=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},g&&(k=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),v=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));y&&"undefined"==typeof performance&&(global.performance=n(8).performance);var E,_=c.print||console.log.bind(console),A=c.printErr||console.warn.bind(console);for(d in h)h.hasOwnProperty(d)&&(c[d]=h[d]);h=null,c.arguments&&(p=c.arguments),c.quit&&(f=c.quit),Atomics,Atomics,Atomics,c.wasmBinary&&(E=c.wasmBinary);var $,F,R=c.noExitRuntime||!0;"object"!=typeof WebAssembly&&ye("no native wasm support detected");var D,M,O,L,z,P,B=!1;function W(e,t){e||ye("Assertion failed: "+t)}function V(e){var t=c["_"+e];return W(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function U(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);K(e,t=en(n),n)}return t},array:function(e){var t=en(e.length);return Y(e,t),t}},i=V(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=Jt()),o[l]=c(r[l])):o[l]=r[l]}var d=i.apply(null,o);return d=function(e){return"string"===t?j(e):"boolean"===t?Boolean(e):e}(d),0!==u&&Qt(u),d}function G(e,t,n,r){var a=(n=n||[]).every(function(e){return"number"===e});return"string"!==t&&a&&!r?V(e):function(){return U(e,t,n,arguments)}}function H(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var u=s-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&s)<<6|i)}else a+=String.fromCharCode(s)}return a}function j(e,t){return e?H(a(),e,t):""}function q(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function K(e,t,n){return q(e,a(),t,n)}function X(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}function Y(e,n){t().set(e,n)}function Z(e,t){return e%t>0&&(e+=t-e%t),e}function J(e){D=e,c.HEAP8=M=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=L=new Int32Array(e),c.HEAPU8=O=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=z=new Uint32Array(e),c.HEAPF32=new Float32Array(e),c.HEAPF64=P=new Float64Array(e)}var Q,ee=c.INITIAL_MEMORY||16777216;if(x)$=c.wasmMemory,D=c.buffer;else if(c.wasmMemory)$=c.wasmMemory;else if(!(($=new WebAssembly.Memory({initial:ee/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw A("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),y&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");$&&(D=$.buffer),ee=D.byteLength,J(D);var te=[],ne=[],re=[],ae=[],se=[];function ie(){if(!x){if(c.preRun)for("function"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)ce(c.preRun.shift());_e(te)}}function oe(){x||_e(ne)}function ue(){x||_e(re)}function le(){if(!x){if(c.postRun)for("function"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;)de(c.postRun.shift());_e(se)}}function ce(e){te.unshift(e)}function de(e){se.unshift(e)}x||ne.push({func:function(){zt()}});var he=0,pe=null,fe=null;function me(e){W(!x,"addRunDependency cannot be used in a pthread worker"),he++,c.monitorRunDependencies&&c.monitorRunDependencies(he)}function ge(e){if(he--,c.monitorRunDependencies&&c.monitorRunDependencies(he),0==he&&(null!==pe&&(clearInterval(pe),pe=null),fe)){var t=fe;fe=null,t()}}function ye(e){c.onAbort&&c.onAbort(e),x&&console.error("Pthread aborting at "+(new Error).stack),A(e+=""),B=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function be(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}c.preloadedImages={},c.preloadedAudios={};var xe="data:application/octet-stream;base64,";function we(e){return be(e,xe)}var ve="file://";function ke(e){return be(e,ve)}var Ie="tfjs-backend-wasm-threaded-simd.wasm";function Ne(e){try{if(e==Ie&&E)return new Uint8Array(E);if(k)return k(e);throw"both async and sync fetching of the wasm failed"}catch(A){ye(A)}}function Se(){if(!E&&(m||g)){if("function"==typeof fetch&&!ke(Ie))return fetch(Ie,{credentials:"same-origin"}).then(function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Ie+"'";return e.arrayBuffer()}).catch(function(){return Ne(Ie)});if(v)return new Promise(function(e,t){v(Ie,function(t){e(new Uint8Array(t))},t)})}return Promise.resolve().then(function(){return Ne(Ie)})}function Ce(){var e={a:Lt};function t(e,t){if(c.asm=e.exports,Q=c.asm.F,F=t,!x){var n=Me.unusedWorkers.length;Me.unusedWorkers.forEach(function(e){Me.loadWasmModuleToWorker(e,function(){--n||ge()})})}}function n(e){t(e.instance,e.module)}function r(t){return Se().then(function(t){return WebAssembly.instantiate(t,e)}).then(t,function(e){A("failed to asynchronously prepare wasm: "+e),ye(e)})}if(x||me(),c.instantiateWasm)try{return c.instantiateWasm(e,t)}catch(ln){return A("Module.instantiateWasm callback failed with error: "+ln),!1}return(E||"function"!=typeof WebAssembly.instantiateStreaming||we(Ie)||ke(Ie)||"function"!=typeof fetch?r(n):fetch(Ie,{credentials:"same-origin"}).then(function(t){return WebAssembly.instantiateStreaming(t,e).then(n,function(e){return A("wasm streaming compile failed: "+e),A("falling back to ArrayBuffer instantiation"),r(n)})})).catch(l),{}}we(Ie)||(Ie=C(Ie));var Te={9816:function(){throw"Canceled!"},9834:function(e,t){setTimeout(function(){qt(e,t)},0)}};function Ee(){Me.initRuntime()}function _e(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?Q.get(n)():Q.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(c)}}function Ae(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(s(),an>>2),a=0;if(r==e&&Atomics.compareExchange(s(),an>>2,r,0)==r&&(a=1,--n<=0))return 1;var i=Atomics.notify(s(),e>>2,n);if(i>=0)return i+a;throw"Atomics.notify returned an unexpected value "+i}function $e(e){if(x)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";s()[e+12>>2]=0;var t=Me.pthreads[e];t.worker.terminate(),Me.freeThreadData(t),Me.runningWorkers.splice(Me.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function Fe(e){if(x)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";Me.pthreads[e].worker.postMessage({cmd:"cancel"})}function Re(e){if(x)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";var t=Me.pthreads[e];t&&(s()[e+12>>2]=0,Me.returnWorkerToPool(t.worker))}c._emscripten_futex_wake=Ae;var De,Me={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=Math.min(4,Math.max(1,(navigator.hardwareConcurrency||1)/2)),t=0;t<e;++t)Me.allocateUnusedWorker()},initRuntime:function(){for(var e=Pt(228),t=0;t<57;++t)i()[e/4+t]=0;s()[e+12>>2]=e;var n=e+152;s()[n>>2]=n;var r=Pt(512);for(t=0;t<128;++t)i()[r/4+t]=0;Atomics.store(i(),e+100>>2,r),Atomics.store(i(),e+40>>2,e),Zt(e,!g,1),jt(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Me.threadExitHandlers.length>0;)Me.threadExitHandlers.pop()();x&&Ut()&&Gt()},runExitHandlersAndDeinitThread:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),Me.runExitHandlers(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),Ae(e+0,2147483647),Zt(0,0,0)},threadExit:function(e){var t=Ut();t&&(Me.runExitHandlersAndDeinitThread(t,e),x&&postMessage({cmd:"exit"}))},threadCancel:function(){Me.runExitHandlersAndDeinitThread(Ut(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in Me.pthreads)(r=Me.pthreads[e])&&r.worker&&Me.returnWorkerToPool(r.worker);Me.pthreads={};for(var t=0;t<Me.unusedWorkers.length;++t)(n=Me.unusedWorkers[t]).terminate();for(Me.unusedWorkers=[],t=0;t<Me.runningWorkers.length;++t){var n,r;Me.freeThreadData(r=(n=Me.runningWorkers[t]).pthread),n.terminate()}Me.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=s()[e.threadInfoStruct+100>>2];s()[e.threadInfoStruct+100>>2]=0,Bt(t),Bt(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&Bt(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){Me.runWithoutMainThreadQueuedCalls(function(){delete Me.pthreads[e.pthread.threadInfoStruct],Me.unusedWorkers.push(e),Me.runningWorkers.splice(Me.runningWorkers.indexOf(e),1),Me.freeThreadData(e.pthread),e.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(e){s()[rn>>2]=0;try{e()}finally{s()[rn>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(Me.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=Ut()){var s=Me.pthreads[r.targetThread];return s?s.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Me.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===a)Ht();else if("spawnThread"===a)Ft(n.data);else if("cleanupThread"===a)Re(r.thread);else if("killThread"===a)$e(r.thread);else if("cancelThread"===a)Fe(r.thread);else if("loaded"===a)e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread);else if("print"===a)_("Thread "+r.threadId+": "+r.text);else if("printErr"===a)A("Thread "+r.threadId+": "+r.text);else if("alert"===a)alert("Thread "+r.threadId+": "+r.text);else if("exit"===a)e.pthread&&Atomics.load(i(),e.pthread.threadInfoStruct+64>>2)&&Me.returnWorkerToPool(e);else if("exitProcess"===a)try{un(r.returnCode)}catch(n){if(n instanceof sn)return;throw n}else"cancelDone"===a?Me.returnWorkerToPool(e):"objectTransfer"===a?Me.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):A("worker sent an unknown command "+a);Me.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){A("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},y&&(e.on("message",function(t){e.onmessage({data:t})}),e.on("error",function(t){e.onerror(t)}),e.on("exit",function(e){})),e.postMessage({cmd:"load",urlOrBlob:c.mainScriptUrlOrBlob||r,wasmMemory:$,wasmModule:F})},allocateUnusedWorker:function(){var e=C("tfjs-backend-wasm-threaded-simd.worker.js");Me.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Me.unusedWorkers.length&&(Me.allocateUnusedWorker(),Me.loadWasmModuleToWorker(Me.unusedWorkers[0])),Me.unusedWorkers.length>0?Me.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function Oe(e,t){tn(e,t),Qt(e)}function Le(){return R}function ze(e,t){return Q.get(e)(t)}function Pe(e,t,n,r){ye("Assertion failed: "+j(e)+", at: "+[t?j(t):"unknown filename",n,r?j(r):"unknown function"])}function Be(e,t){_main(e,t)}function We(e){return s()[Wt()>>2]=e,e}function Ve(e,t){if(x)return Ye(1,1,e,t)}function Ue(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(x)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Me.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1}function Ge(){ye()}function He(e,t,n){var r=Qe(t,n);return Te[e].apply(null,r)}function je(e,t){}function qe(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(m){if(Atomics.load(s(),e>>2)!=n)return-6;var a=performance.now(),i=a+r;for(Atomics.exchange(s(),an>>2,e);;){if((a=performance.now())>i)return Atomics.exchange(s(),an>>2,0),-73;if(0==Atomics.exchange(s(),an>>2,0))break;if(Ht(),Atomics.load(s(),e>>2)!=n)return-6;Atomics.exchange(s(),an>>2,e)}return 0}var o=Atomics.wait(s(),e>>2,n,r);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o}function Ke(e,t,n){a().copyWithin(e,t,t+n)}function Xe(){return y?n(9).cpus().length:navigator.hardwareConcurrency}function Ye(e,t){for(var n=arguments.length-2,r=Jt(),a=n,s=en(8*a),i=s>>3,u=0;u<n;u++){var l=arguments[2+u];o()[i+u]=l}var c=Xt(e,a,s,t);return Qt(r),c}c.establishStackSpace=Oe,c.getNoExitRuntime=Le,c.invokeEntryPoint=ze,De=y?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:x?function(){return performance.now()-c.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var Ze=[],Je=[];function Qe(e,t){var n;for(Je.length=0,t>>=2;n=a()[e++];){var r=n<105;r&&1&t&&t++,Je.push(r?o()[t++>>1]:s()[t]),++t}return Je}function et(e,t,n){Ze.length=t;for(var r=n>>3,a=0;a<t;a++)Ze[a]=o()[r+a];return(e<0?Te[-e-1]:Ot[e]).apply(null,Ze)}function tt(){return a().length}function nt(e){try{return $.grow(e-D.byteLength+65535>>>16),J($.buffer),1}catch(ln){}}function rt(e){var t=tt();if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),nt(Math.min(n,Z(Math.max(e,a),65536))))return!0}return!1}var at={inEventHandler:0,removeAllEventListeners:function(){for(var e=at.eventHandlers.length-1;e>=0;--e)at._removeHandler(e);at.eventHandlers=[],at.deferredCalls=[]},registerRemoveEventListeners:function(){at.removeEventListenersRegistered||(ae.push(at.removeAllEventListeners),at.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in at.deferredCalls){var s=at.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}at.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),at.deferredCalls.sort(function(e,t){return e.precedence<t.precedence})},removeDeferredCalls:function(e){for(var t=0;t<at.deferredCalls.length;++t)at.deferredCalls[t].targetFunction==e&&(at.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return at.inEventHandler&&at.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(at.canPerformEventHandlerRequests())for(var e=0;e<at.deferredCalls.length;++e){var t=at.deferredCalls[e];at.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<at.eventHandlers.length;++n)at.eventHandlers[n].target!=e||t&&t!=at.eventHandlers[n].eventTypeString||at._removeHandler(n--)},_removeHandler:function(e){var t=at.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),at.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++at.inEventHandler,at.currentEventHandler=e,at.runDeferredCalls(),e.handlerFunc(t),at.runDeferredCalls(),--at.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),at.eventHandlers.push(e),at.registerRemoveEventListeners();else for(var n=0;n<at.eventHandlers.length;++n)at.eventHandlers[n].target==e.target&&at.eventHandlers[n].eventTypeString==e.eventTypeString&&at._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){var i=Jt(),o=en(12);s()[o>>2]=n,s()[o+4>>2]=r,s()[o+8>>2]=a,Yt(0,e,637534208,t,r,o),Qt(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Me.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function st(e){var t=X(e)+1,n=Pt(t);return K(e,n,t),n}function it(e,t,n,r){var a=Jt(),i=en(12),o=0;t&&(o=st(t)),s()[i>>2]=o,s()[i+4>>2]=n,s()[i+8>>2]=r,Yt(0,e,657457152,0,o,i),Qt(a)}function ot(e,t,n,r){it(e,t=t?j(t):"",n,r)}function ut(e){return e>2?j(e):e}var lt=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function ct(e){return e=ut(e),lt[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function dt(e){return ct(e)}function ht(e,t,n){var r=dt(e);if(!r)return-4;if(r.canvasSharedPtr&&(s()[r.canvasSharedPtr>>2]=t,s()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(ot(s()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);a=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function pt(e,t,n){return x?Ye(2,1,e,t,n):ht(e,t,n)}function ft(e,t,n){return dt(e)?ht(e,t,n):pt(e,t,n)}function mt(e){}function gt(e,t){}function yt(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)return e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)},1}function bt(e){var t=e.getExtension("OES_vertex_array_object");if(t)return e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)},1}function xt(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)return e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)},1}function wt(e){return!!(e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw"))}var vt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){vt.lastError||(vt.lastError=e)},getNewId:function(e){for(var t=vt.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",i=0;i<t;++i){var o=r?s()[r+4*i>>2]:-1;a+=j(s()[n+4*i>>2],o<0?void 0:o)}return a},createContext:function(e,t){var n=e.getContext("webgl",t);return n?vt.registerContext(n,t):0},registerContext:function(e,t){var n=Pt(8);s()[n+4>>2]=Ut();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),vt.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&vt.initExtensions(r),n},makeContextCurrent:function(e){return vt.currentContext=vt.contexts[e],c.ctx=St=vt.currentContext&&vt.currentContext.GLctx,!(e&&!St)},getContext:function(e){return vt.contexts[e]},deleteContext:function(e){vt.currentContext===vt.contexts[e]&&(vt.currentContext=null),"object"==typeof at&&at.removeAllHandlersOnTarget(vt.contexts[e].GLctx.canvas),vt.contexts[e]&&vt.contexts[e].GLctx.canvas&&(vt.contexts[e].GLctx.canvas.GLctxObject=void 0),Bt(vt.contexts[e].handle),vt.contexts[e]=null},initExtensions:function(e){if(e||(e=vt.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;yt(t),bt(t),xt(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),wt(t),(t.getSupportedExtensions()||[]).forEach(function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&t.getExtension(e)})}},populateUniformTable:function(e){for(var t=vt.programs[e],n=vt.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=St.getProgramParameter(t,35718),s=0;s<a;++s){var i=St.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var u=St.getUniformLocation(t,o);if(u){var l=vt.getNewId(vt.uniforms);r[o]=[i.size,l],vt.uniforms[l]=u;for(var c=1;c<i.size;++c)u=St.getUniformLocation(t,o+"["+c+"]"),l=vt.getNewId(vt.uniforms),vt.uniforms[l]=u}}}},kt=["default","low-power","high-performance"];function It(e,t){var n=t>>2,r=s()[n+6],a={alpha:!!s()[n+0],depth:!!s()[n+1],stencil:!!s()[n+2],antialias:!!s()[n+3],premultipliedAlpha:!!s()[n+4],preserveDrawingBuffer:!!s()[n+5],powerPreference:kt[r],failIfMajorPerformanceCaveat:!!s()[n+7],majorVersion:s()[n+8],minorVersion:s()[n+9],enableExtensionsByDefault:s()[n+10],explicitSwapControl:s()[n+11],proxyContextToMainThread:s()[n+12],renderViaOffscreenBackBuffer:s()[n+13]},i=dt(e);return i?a.explicitSwapControl?0:vt.createContext(i,a):0}function Nt(e,t){return It(e,t)}var St,Ct={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Ct.buffers[e];0===t||10===t?((1===e?_:A)(H(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Ct.varargs+=4,s()[Ct.varargs-4>>2]},getStr:function(e){return j(e)},get64:function(e,t){return e}};function Tt(e){return x?Ye(3,1,e):0}function Et(e,t,n,r,a){if(x)return Ye(4,1,e,t,n,r,a)}function _t(e,t,n,r){if(x)return Ye(5,1,e,t,n,r);for(var i=0,o=0;o<n;o++){for(var u=s()[t+8*o>>2],l=s()[t+(8*o+4)>>2],c=0;c<l;c++)Ct.printChar(e,a()[u+c]);i+=l}return s()[r>>2]=i,0}function At(e){var t=Me.threadExitHandlers.pop();e&&t()}function $t(e,t){Me.threadExitHandlers.push(function(){Q.get(e)(t)})}function Ft(e){if(x)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=Me.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";Me.runningWorkers.push(t);for(var n=Pt(512),r=0;r<128;++r)s()[n+4*r>>2]=0;var a=e.stackBase+e.stackSize,o=Me.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},u=o.threadInfoStruct>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,n),Atomics.store(i(),u+10,o.threadInfoStruct),Atomics.store(i(),u+20,e.stackSize),Atomics.store(i(),u+19,a),Atomics.store(i(),u+26,e.stackSize),Atomics.store(i(),u+28,a),Atomics.store(i(),u+29,e.detached);var l=Vt()+40;Atomics.store(i(),u+43,l),t.pthread=o;var c={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){c.time=performance.now(),t.postMessage(c,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function Rt(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return A("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return A("pthread_create called with a null thread pointer!"),28;var a=[];if(x&&0===a.length)return Kt(687865856,e,t,n,r);var o=0,u=0,l=0;t&&-1!=t?(o=s()[t>>2],o+=81920,u=s()[t+8>>2],l=0!==s()[t+12>>2]):o=2097152;var c=0==u;c?u=nn(16,o):W((u-=o)>0);for(var d=Pt(228),h=0;h<57;++h)i()[(d>>2)+h]=0;s()[e>>2]=d,s()[d+12>>2]=d;var p=d+152;s()[p>>2]=p;var f={stackBase:u,stackSize:o,allocatedOwnStack:c,detached:l,startRoutine:n,pthread_ptr:d,arg:r,transferList:a};return x?(f.cmd="spawnThread",postMessage(f,a)):Ft(f),0}function Dt(e){if(x)return Ye(6,1,e);switch(e){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return We(28),-1}x||Me.initMainThreadBlock();var Mt,Ot=[null,Ve,pt,Tt,Et,_t,Dt],Lt={e:Pe,r:Be,x:Ue,b:Ge,y:He,j:je,c:qe,d:Ae,f:De,p:Ke,z:Xe,u:et,q:rt,v:ft,i:mt,t:gt,w:Nt,m:Tt,n:Et,g:_t,o:Ee,a:$||c.wasmMemory,k:At,l:$t,h:Rt,s:Dt},zt=(Ce(),c.___wasm_call_ctors=function(){return(zt=c.___wasm_call_ctors=c.asm.A).apply(null,arguments)}),Pt=(c._init=function(){return(c._init=c.asm.B).apply(null,arguments)},c._register_tensor=function(){return(c._register_tensor=c.asm.C).apply(null,arguments)},c._dispose_data=function(){return(c._dispose_data=c.asm.D).apply(null,arguments)},c._dispose=function(){return(c._dispose=c.asm.E).apply(null,arguments)},c._Abs=function(){return(c._Abs=c.asm.G).apply(null,arguments)},c._Add=function(){return(c._Add=c.asm.H).apply(null,arguments)},c._AddN=function(){return(c._AddN=c.asm.I).apply(null,arguments)},c._All=function(){return(c._All=c.asm.J).apply(null,arguments)},c._Any=function(){return(c._Any=c.asm.K).apply(null,arguments)},c._ArgMax=function(){return(c._ArgMax=c.asm.L).apply(null,arguments)},c._AvgPool=function(){return(c._AvgPool=c.asm.M).apply(null,arguments)},c._BatchMatMul=function(){return(c._BatchMatMul=c.asm.N).apply(null,arguments)},c._Ceil=function(){return(c._Ceil=c.asm.O).apply(null,arguments)},c._ClipByValue=function(){return(c._ClipByValue=c.asm.P).apply(null,arguments)},c._Conv2D=function(){return(c._Conv2D=c.asm.Q).apply(null,arguments)},c._Conv2DBackpropInput=function(){return(c._Conv2DBackpropInput=c.asm.R).apply(null,arguments)},c._Cos=function(){return(c._Cos=c.asm.S).apply(null,arguments)},c._CropAndResize=function(){return(c._CropAndResize=c.asm.T).apply(null,arguments)},c._Cumsum=function(){return(c._Cumsum=c.asm.U).apply(null,arguments)},c._DepthToSpace=function(){return(c._DepthToSpace=c.asm.V).apply(null,arguments)},c._DepthwiseConv2dNative=function(){return(c._DepthwiseConv2dNative=c.asm.W).apply(null,arguments)},c._Equal=function(){return(c._Equal=c.asm.X).apply(null,arguments)},c._Exp=function(){return(c._Exp=c.asm.Y).apply(null,arguments)},c._FlipLeftRight=function(){return(c._FlipLeftRight=c.asm.Z).apply(null,arguments)},c._Floor=function(){return(c._Floor=c.asm._).apply(null,arguments)},c._FloorDiv=function(){return(c._FloorDiv=c.asm.$).apply(null,arguments)},c._FusedBatchNorm=function(){return(c._FusedBatchNorm=c.asm.aa).apply(null,arguments)},c._FusedConv2D=function(){return(c._FusedConv2D=c.asm.ba).apply(null,arguments)},c._FusedDepthwiseConv2D=function(){return(c._FusedDepthwiseConv2D=c.asm.ca).apply(null,arguments)},c._Gather=function(){return(c._Gather=c.asm.da).apply(null,arguments)},c._GatherNd=function(){return(c._GatherNd=c.asm.ea).apply(null,arguments)},c._Greater=function(){return(c._Greater=c.asm.fa).apply(null,arguments)},c._GreaterEqual=function(){return(c._GreaterEqual=c.asm.ga).apply(null,arguments)},c._LeakyRelu=function(){return(c._LeakyRelu=c.asm.ha).apply(null,arguments)},c._Less=function(){return(c._Less=c.asm.ia).apply(null,arguments)},c._LessEqual=function(){return(c._LessEqual=c.asm.ja).apply(null,arguments)},c._Log=function(){return(c._Log=c.asm.ka).apply(null,arguments)},c._LogicalAnd=function(){return(c._LogicalAnd=c.asm.la).apply(null,arguments)},c._Max=function(){return(c._Max=c.asm.ma).apply(null,arguments)},c._MaxPool=function(){return(c._MaxPool=c.asm.na).apply(null,arguments)},c._Maximum=function(){return(c._Maximum=c.asm.oa).apply(null,arguments)},c._Mean=function(){return(c._Mean=c.asm.pa).apply(null,arguments)},c._Min=function(){return(c._Min=c.asm.qa).apply(null,arguments)},c._Minimum=function(){return(c._Minimum=c.asm.ra).apply(null,arguments)},c._MirrorPad=function(){return(c._MirrorPad=c.asm.sa).apply(null,arguments)},c._Multiply=function(){return(c._Multiply=c.asm.ta).apply(null,arguments)},c._Neg=function(){return(c._Neg=c.asm.ua).apply(null,arguments)},c._NonMaxSuppressionV3=function(){return(c._NonMaxSuppressionV3=c.asm.va).apply(null,arguments)},c._NonMaxSuppressionV4=function(){return(c._NonMaxSuppressionV4=c.asm.wa).apply(null,arguments)},c._NonMaxSuppressionV5=function(){return(c._NonMaxSuppressionV5=c.asm.xa).apply(null,arguments)},c._NotEqual=function(){return(c._NotEqual=c.asm.ya).apply(null,arguments)},c._OneHot=function(){return(c._OneHot=c.asm.za).apply(null,arguments)},c._PadV2=function(){return(c._PadV2=c.asm.Aa).apply(null,arguments)},c._Pow=function(){return(c._Pow=c.asm.Ba).apply(null,arguments)},c._Prelu=function(){return(c._Prelu=c.asm.Ca).apply(null,arguments)},c._Prod=function(){return(c._Prod=c.asm.Da).apply(null,arguments)},c._RealDiv=function(){return(c._RealDiv=c.asm.Ea).apply(null,arguments)},c._Relu=function(){return(c._Relu=c.asm.Fa).apply(null,arguments)},c._Relu6=function(){return(c._Relu6=c.asm.Ga).apply(null,arguments)},c._ResizeBilinear=function(){return(c._ResizeBilinear=c.asm.Ha).apply(null,arguments)},c._Reverse=function(){return(c._Reverse=c.asm.Ia).apply(null,arguments)},c._RotateWithOffset=function(){return(c._RotateWithOffset=c.asm.Ja).apply(null,arguments)},c._Round=function(){return(c._Round=c.asm.Ka).apply(null,arguments)},c._Rsqrt=function(){return(c._Rsqrt=c.asm.La).apply(null,arguments)},c._ScatterNd=function(){return(c._ScatterNd=c.asm.Ma).apply(null,arguments)},c._SelectV2=function(){return(c._SelectV2=c.asm.Na).apply(null,arguments)},c._Sigmoid=function(){return(c._Sigmoid=c.asm.Oa).apply(null,arguments)},c._Sin=function(){return(c._Sin=c.asm.Pa).apply(null,arguments)},c._Softmax=function(){return(c._Softmax=c.asm.Qa).apply(null,arguments)},c._Sqrt=function(){return(c._Sqrt=c.asm.Ra).apply(null,arguments)},c._Square=function(){return(c._Square=c.asm.Sa).apply(null,arguments)},c._SquaredDifference=function(){return(c._SquaredDifference=c.asm.Ta).apply(null,arguments)},c._Step=function(){return(c._Step=c.asm.Ua).apply(null,arguments)},c._StridedSlice=function(){return(c._StridedSlice=c.asm.Va).apply(null,arguments)},c._Sub=function(){return(c._Sub=c.asm.Wa).apply(null,arguments)},c._Sum=function(){return(c._Sum=c.asm.Xa).apply(null,arguments)},c._Tan=function(){return(c._Tan=c.asm.Ya).apply(null,arguments)},c._Tanh=function(){return(c._Tanh=c.asm.Za).apply(null,arguments)},c._Tile=function(){return(c._Tile=c.asm._a).apply(null,arguments)},c._TopK=function(){return(c._TopK=c.asm.$a).apply(null,arguments)},c._Transform=function(){return(c._Transform=c.asm.ab).apply(null,arguments)},c._Transpose=function(){return(c._Transpose=c.asm.bb).apply(null,arguments)},c.__FusedMatMul=function(){return(c.__FusedMatMul=c.asm.cb).apply(null,arguments)},c._malloc=function(){return(Pt=c._malloc=c.asm.db).apply(null,arguments)}),Bt=c._free=function(){return(Bt=c._free=c.asm.eb).apply(null,arguments)},Wt=c.___errno_location=function(){return(Wt=c.___errno_location=c.asm.fb).apply(null,arguments)},Vt=c._emscripten_get_global_libc=function(){return(Vt=c._emscripten_get_global_libc=c.asm.gb).apply(null,arguments)},Ut=c._pthread_self=function(){return(Ut=c._pthread_self=c.asm.hb).apply(null,arguments)},Gt=c.___pthread_tsd_run_dtors=function(){return(Gt=c.___pthread_tsd_run_dtors=c.asm.ib).apply(null,arguments)},Ht=c._emscripten_main_thread_process_queued_calls=function(){return(Ht=c._emscripten_main_thread_process_queued_calls=c.asm.jb).apply(null,arguments)},jt=(c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.kb).apply(null,arguments)},c._emscripten_register_main_browser_thread_id=function(){return(jt=c._emscripten_register_main_browser_thread_id=c.asm.lb).apply(null,arguments)}),qt=c.__emscripten_do_dispatch_to_thread=function(){return(qt=c.__emscripten_do_dispatch_to_thread=c.asm.mb).apply(null,arguments)},Kt=c._emscripten_sync_run_in_main_thread_4=function(){return(Kt=c._emscripten_sync_run_in_main_thread_4=c.asm.nb).apply(null,arguments)},Xt=c._emscripten_run_in_main_runtime_thread_js=function(){return(Xt=c._emscripten_run_in_main_runtime_thread_js=c.asm.ob).apply(null,arguments)},Yt=c.__emscripten_call_on_thread=function(){return(Yt=c.__emscripten_call_on_thread=c.asm.pb).apply(null,arguments)},Zt=(c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.qb).apply(null,arguments)},c.__emscripten_thread_init=function(){return(Zt=c.__emscripten_thread_init=c.asm.rb).apply(null,arguments)}),Jt=c.stackSave=function(){return(Jt=c.stackSave=c.asm.sb).apply(null,arguments)},Qt=c.stackRestore=function(){return(Qt=c.stackRestore=c.asm.tb).apply(null,arguments)},en=c.stackAlloc=function(){return(en=c.stackAlloc=c.asm.ub).apply(null,arguments)},tn=c._emscripten_stack_set_limits=function(){return(tn=c._emscripten_stack_set_limits=c.asm.vb).apply(null,arguments)},nn=c._memalign=function(){return(nn=c._memalign=c.asm.wb).apply(null,arguments)},rn=c.__emscripten_allow_main_runtime_queued_calls=9808,an=c.__emscripten_main_thread_futex=11432;function sn(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function on(e){if(e=e||p,!(he>0)){if(x)return u(c),oe(),void postMessage({cmd:"loaded"});ie(),he>0||(c.setStatus?(c.setStatus("Running..."),setTimeout(function(){setTimeout(function(){c.setStatus("")},1),t()},1)):t())}function t(){Mt||(Mt=!0,c.calledRun=!0,B||(oe(),ue(),u(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),le()))}}function un(e,t){if(!t||!R||0!==e){if(!t&&x)throw postMessage({cmd:"exitProcess",returnCode:e}),new sn(e);R||(Me.terminateAllThreads(),c.onExit&&c.onExit(e),B=!0),f(e,new sn(e))}}if(c.cwrap=G,c.PThread=Me,c.PThread=Me,c.wasmMemory=$,c.ExitStatus=sn,fe=function e(){Mt||on(),Mt||(fe=e)},c.run=on,c.preInit)for("function"==typeof c.preInit&&(c.preInit=[c.preInit]);c.preInit.length>0;)c.preInit.pop()();return x&&(R=!1,Me.initWorker()),on(),e.ready});e.exports=a},YSVl:function(e,t,n){var r=n("EhIR"),a=n("uDiL"),s=n("pJ6O"),i=n("yuCN"),o=n("euyF"),u=n("ie1u"),l=n("pJ3+");l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},YuTi:function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},caHf:function(e,t){function n(){}function r(){}self.Canvas=self.HTMLCanvasElement=OffscreenCanvas,self.CanvasRenderingContext2D=OffscreenCanvasRenderingContext2D,self.Image=n,self.Video=r;class a extends EventTarget{}if(self.document=new a,self.window=self.Window=self,self.localStorage=new function(){let e={};this.clear=function(){return e={}},this.getItem=function(t){return e.hasOwnProperty(t)?e[t]:void 0},this.removeItem=function(t){return delete e[t]},this.setItem=function(t,n){return e[t]=String(n)}},document.createElement=function(e){switch(e){case"canvas":let t=new Canvas(1,1);return t.localName="canvas",t.nodeName="CANVAS",t.tagName="CANVAS",t.nodeType=1,t.innerHTML="",t.remove=()=>{console.log("nope")},t;default:console.log("arg",e)}},document.location=self.location,"undefined"==typeof document&&console.warn("Check failed: document"),"undefined"==typeof HTMLCanvasElement&&console.warn("Check failed: HTMLCanvasElement"),"undefined"==typeof ImageData&&console.warn("Check failed: ImageData"),"undefined"==typeof CanvasRenderingContext2D&&console.warn("Check failed: CanvasRenderingContext2D"),self.window=window,self.document=document,self.HTMLImageElement=n,self.HTMLVideoElement=r,"object"!=typeof window||"undefined"==typeof document||"undefined"==typeof HTMLCanvasElement||"undefined"==typeof ImageData||"undefined"==typeof CanvasRenderingContext2D)throw new Error("Failed to monkey patch for face-api, face-api will fail")},euyF:function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n=a[s]=(n^=n>>>15)^(e^=e>>>12),t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(a=0==(n=o[127&s]^=r+(i=i+1640531527|0))?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,o[a]=(r^=r>>>15)^(n^=n>>>12);e.w=i,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return u}).call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},ie1u:function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return u}).call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},"pJ3+":function(e,t,n){var r;!function(a,s){var i,o=this,u=256,l=s.pow(u,6),c=s.pow(2,52),d=2*c,h=255;function p(e,t,n){var r=[],h=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(r){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(a)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,y(b(p.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(s.random=e,t):e})(x,h,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=h&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=h&a+1],n=n*u+i[h&(i[a]=i[s=h&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(s){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=p,y(s.random(),a),e.exports){e.exports=p;try{i=n(2)}catch(x){}}else void 0===(r=(function(){return p}).call(t,n,t,e))||(e.exports=r)}([],Math)},pJ6O:function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return u}).call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},uDiL:function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return u}).call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},yuCN:function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],r[a]=n^=(e^=e<<13)^e<<9,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n&&(r[7]=-1),e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return u}).call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))}});